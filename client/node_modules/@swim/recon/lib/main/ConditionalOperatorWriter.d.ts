import { Output, Writer } from "@swim/codec";
import { ReconWriter } from "./ReconWriter";
export declare class ConditionalOperatorWriter<I, V> extends Writer {
    private readonly _recon;
    private readonly _ifTerm;
    private readonly _thenTerm;
    private readonly _elseTerm;
    private readonly _precedence;
    private readonly _part;
    private readonly _step;
    constructor(recon: ReconWriter<I, V>, ifTerm: I, thenTerm: I, elseTerm: I, precedence: number, part?: Writer, step?: number);
    pull(output: Output): Writer;
    static sizeOf<I, V>(recon: ReconWriter<I, V>, ifTerm: I, thenTerm: I, elseTerm: I, precedence: number): number;
    static write<I, V>(output: Output, recon: ReconWriter<I, V>, ifTerm: I, thenTerm: I, elseTerm: I, precedence: number, part?: Writer, step?: number): Writer;
}
//# sourceMappingURL=ConditionalOperatorWriter.d.ts.map