import { Output, Parser, Writer } from "@swim/codec";
import { Item, Value, Data } from "@swim/structure";
import { ReconParser } from "./ReconParser";
import { ReconWriter } from "./ReconWriter";
export declare class Recon {
    private constructor();
    static isSpace(c: number): boolean;
    static isNewline(c: number): boolean;
    static isWhitespace(c: number): boolean;
    static isIdentStartChar(c: number): boolean;
    static isIdentChar(c: number): boolean;
    private static _structureParser;
    private static _structureWriter;
    static structureParser(): ReconParser<Item, Value>;
    static structureWriter(): ReconWriter<Item, Value>;
    static parse(recon: string): Value;
    static parser(): Parser<Value>;
    static sizeOf(item: Item): number;
    static sizeOfBlock(item: Item): number;
    static write(item: Item, output: Output): Writer;
    static writeBlock(item: Item, output: Output): Writer;
    static toString(item: Item): string;
    static toBlockString(item: Item): string;
    static toData(item: Item): Data;
    static toBlockData(item: Item): Data;
}
//# sourceMappingURL=Recon.d.ts.map