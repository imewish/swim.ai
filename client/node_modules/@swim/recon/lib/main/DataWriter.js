import { __extends } from "tslib";
import { WriterException, Writer, Base64 } from "@swim/codec";
var DataWriter = (function (_super) {
    __extends(DataWriter, _super);
    function DataWriter(array, part, step) {
        var _this = _super.call(this) || this;
        _this._array = array;
        _this._part = part;
        _this._step = step;
        return _this;
    }
    DataWriter.prototype.pull = function (output) {
        return DataWriter.write(output, this._array, this._part, this._step);
    };
    DataWriter.sizeOf = function (length) {
        return 1 + ((Math.floor(length * 4 / 3) + 3) & ~3);
    };
    DataWriter.write = function (output, array, part, step) {
        if (step === void 0) { step = 1; }
        if (step === 1 && output.isCont()) {
            output = output.write(37);
            step = 2;
        }
        if (step === 2) {
            if (!part) {
                part = Base64.standard().writeUint8Array(array, output);
            }
            else {
                part = part.pull(output);
            }
            if (part.isDone()) {
                part = void 0;
                return Writer.done();
            }
            else if (part.isError()) {
                return part.asError();
            }
        }
        if (output.isDone()) {
            return Writer.error(new WriterException("truncated"));
        }
        else if (output.isError()) {
            return Writer.error(output.trap());
        }
        return new DataWriter(array, part, step);
    };
    return DataWriter;
}(Writer));
export { DataWriter };
//# sourceMappingURL=DataWriter.js.map