import { Unicode, Utf8 } from "@swim/codec";
import { Item, Value, Data } from "@swim/structure";
import { ReconStructureParser } from "./ReconStructureParser";
import { ReconStructureWriter } from "./ReconStructureWriter";
var Recon = (function () {
    function Recon() {
    }
    Recon.isSpace = function (c) {
        return c === 0x20 || c === 0x9;
    };
    Recon.isNewline = function (c) {
        return c === 0xa || c === 0xd;
    };
    Recon.isWhitespace = function (c) {
        return Recon.isSpace(c) || Recon.isNewline(c);
    };
    Recon.isIdentStartChar = function (c) {
        return c >= 65 && c <= 90
            || c === 95
            || c >= 97 && c <= 122
            || c >= 0xc0 && c <= 0xd6
            || c >= 0xd8 && c <= 0xf6
            || c >= 0xf8 && c <= 0x2ff
            || c >= 0x370 && c <= 0x37d
            || c >= 0x37f && c <= 0x1fff
            || c >= 0x200c && c <= 0x200d
            || c >= 0x2070 && c <= 0x218f
            || c >= 0x2c00 && c <= 0x2fef
            || c >= 0x3001 && c <= 0xd7ff
            || c >= 0xf900 && c <= 0xfdcf
            || c >= 0xfdf0 && c <= 0xfffd
            || c >= 0x10000 && c <= 0xeffff;
    };
    Recon.isIdentChar = function (c) {
        return c === 45
            || c >= 48 && c <= 57
            || c >= 65 && c <= 90
            || c === 95
            || c >= 97 && c <= 122
            || c === 0xb7
            || c >= 0xc0 && c <= 0xd6
            || c >= 0xd8 && c <= 0xf6
            || c >= 0xf8 && c <= 0x37d
            || c >= 0x37f && c <= 0x1fff
            || c >= 0x200c && c <= 0x200d
            || c >= 0x203f && c <= 0x2040
            || c >= 0x2070 && c <= 0x218f
            || c >= 0x2c00 && c <= 0x2fef
            || c >= 0x3001 && c <= 0xd7ff
            || c >= 0xf900 && c <= 0xfdcf
            || c >= 0xfdf0 && c <= 0xfffd
            || c >= 0x10000 && c <= 0xeffff;
    };
    Recon.structureParser = function () {
        if (!Recon._structureParser) {
            Recon._structureParser = new ReconStructureParser();
        }
        return Recon._structureParser;
    };
    Recon.structureWriter = function () {
        if (!Recon._structureWriter) {
            Recon._structureWriter = new ReconStructureWriter();
        }
        return Recon._structureWriter;
    };
    Recon.parse = function (recon) {
        return Recon.structureParser().parseBlockString(recon);
    };
    Recon.parser = function () {
        return Recon.structureParser().blockParser();
    };
    Recon.sizeOf = function (item) {
        return Recon.structureWriter().sizeOfItem(item);
    };
    Recon.sizeOfBlock = function (item) {
        return Recon.structureWriter().sizeOfBlockItem(item);
    };
    Recon.write = function (item, output) {
        return Recon.structureWriter().writeItem(item, output);
    };
    Recon.writeBlock = function (item, output) {
        return Recon.structureWriter().writeBlockItem(item, output);
    };
    Recon.toString = function (item) {
        var output = Unicode.stringOutput();
        Recon.write(item, output);
        return output.bind();
    };
    Recon.toBlockString = function (item) {
        var output = Unicode.stringOutput();
        Recon.writeBlock(item, output);
        return output.bind();
    };
    Recon.toData = function (item) {
        var output = Utf8.encodedOutput(Data.output());
        Recon.write(item, output);
        return output.bind();
    };
    Recon.toBlockData = function (item) {
        var output = Utf8.encodedOutput(Data.output());
        Recon.writeBlock(item, output);
        return output.bind();
    };
    return Recon;
}());
export { Recon };
Item.prototype.toRecon = function () {
    return Recon.toString(this);
};
Item.prototype.toReconBlock = function () {
    return Recon.toBlockString(this);
};
Value.parseRecon = function (recon) {
    return Recon.parse(recon);
};
//# sourceMappingURL=Recon.js.map