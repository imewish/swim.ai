import { __extends } from "tslib";
import { WriterException, Writer } from "@swim/codec";
var GetAttrSelectorWriter = (function (_super) {
    __extends(GetAttrSelectorWriter, _super);
    function GetAttrSelectorWriter(recon, key, then, part, step) {
        var _this = _super.call(this) || this;
        _this._recon = recon;
        _this._key = key;
        _this._then = then;
        _this._part = part;
        _this._step = step;
        return _this;
    }
    GetAttrSelectorWriter.prototype.pull = function (output) {
        return GetAttrSelectorWriter.write(output, this._recon, this._key, this._then, this._part, this._step);
    };
    GetAttrSelectorWriter.sizeOf = function (recon, key, then) {
        var size = 2;
        size += recon.sizeOfValue(key);
        size += recon.sizeOfThen(then);
        return size;
    };
    GetAttrSelectorWriter.write = function (output, recon, key, then, part, step) {
        if (step === void 0) { step = 1; }
        if (step === 1 && output.isCont()) {
            output = output.write(36);
            step = 3;
        }
        else if (step === 2 && output.isCont()) {
            output = output.write(46);
            step = 3;
        }
        if (step === 3 && output.isCont()) {
            output = output.write(64);
            step = 4;
        }
        if (step === 4) {
            if (!part) {
                part = recon.writeValue(key, output);
            }
            else {
                part = part.pull(output);
            }
            if (part.isDone()) {
                return recon.writeThen(then, output);
            }
            else if (part.isError()) {
                return part.asError();
            }
        }
        if (output.isDone()) {
            return Writer.error(new WriterException("truncated"));
        }
        else if (output.isError()) {
            return Writer.error(output.trap());
        }
        return new GetAttrSelectorWriter(recon, key, then, part, step);
    };
    GetAttrSelectorWriter.writeThen = function (output, recon, key, then) {
        return GetAttrSelectorWriter.write(output, recon, key, then, void 0, 2);
    };
    return GetAttrSelectorWriter;
}(Writer));
export { GetAttrSelectorWriter };
//# sourceMappingURL=GetAttrSelectorWriter.js.map