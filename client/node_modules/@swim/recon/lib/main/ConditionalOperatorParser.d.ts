import { Builder } from "@swim/util";
import { Input, Parser } from "@swim/codec";
import { ReconParser } from "./ReconParser";
export declare class ConditionalOperatorParser<I, V> extends Parser<V> {
    private readonly _recon;
    private readonly _builder;
    private readonly _ifParser;
    private readonly _thenParser;
    private readonly _elseParser;
    private readonly _step;
    constructor(recon: ReconParser<I, V>, builder?: Builder<I, V>, ifParser?: Parser<V>, thenParser?: Parser<V>, elseParser?: Parser<V>, step?: number);
    feed(input: Input): Parser<V>;
    static parse<I, V>(input: Input, recon: ReconParser<I, V>, builder?: Builder<I, V>, ifParser?: Parser<V>, thenParser?: Parser<V>, elseParser?: Parser<V>, step?: number): Parser<V>;
}
//# sourceMappingURL=ConditionalOperatorParser.d.ts.map