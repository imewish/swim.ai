import { Cursor } from "@swim/util";
import { Output, Writer } from "@swim/codec";
import { Item, Value, Operator, Selector, Func } from "@swim/structure";
import { ReconWriter } from "./ReconWriter";
export declare class ReconStructureWriter extends ReconWriter<Item, Value> {
    isField(item: Item): boolean;
    isAttr(item: Item): boolean;
    isSlot(item: Item): boolean;
    isValue(item: Item): boolean;
    isRecord(item: Item): boolean;
    isText(item: Item): boolean;
    isNum(item: Item): boolean;
    isBool(item: Item): boolean;
    isExpression(item: Item): boolean;
    isExtant(item: Item): boolean;
    items(item: Item): Cursor<Item>;
    item(value: Value): Item;
    key(item: Item): Value;
    value(item: Item): Value;
    string(item: Item): string;
    precedence(item: Item): number;
    sizeOfItem(item: Item): number;
    writeItem(item: Item, output: Output): Writer;
    sizeOfValue(value: Value): number;
    writeValue(value: Value, output: Output): Writer;
    sizeOfSelector(selector: Selector): number;
    writeSelector(selector: Selector, output: Output): Writer;
    sizeOfOperator(operator: Operator): number;
    writeOperator(operator: Operator, output: Output): Writer;
    sizeOfFunc(func: Func): number;
    writeFunc(func: Func, output: Output): Writer;
    sizeOfBlockItem(item: Item): number;
    writeBlockItem(item: Item, output: Output): Writer;
    sizeOfBlockValue(value: Value): number;
    writeBlockValue(value: Value, output: Output): Writer;
    sizeOfThen(then: Value): number;
    writeThen(then: Value, output: Output): Writer;
}
//# sourceMappingURL=ReconStructureWriter.d.ts.map