{"version":3,"file":"swim-codec.js","sources":["../../main/Tag.ts","../../../../../node_modules/tslib/tslib.es6.js","../../main/Mark.ts","../../main/Span.ts","../../main/InputException.ts","../../main/OutputSettings.ts","../../main/OutputException.ts","../../main/Output.ts","../../main/Input.ts","../../main/StringInput.ts","../../main/StringOutput.ts","../../main/WriterException.ts","../../main/Writer.ts","../../main/StringWriter.ts","../../main/Unicode.ts","../../main/Format.ts","../../main/InputSettings.ts","../../main/InputBuffer.ts","../../main/OutputBuffer.ts","../../main/OutputStyle.ts","../../main/Base10.ts","../../main/Diagnostic.ts","../../main/ParserException.ts","../../main/Parser.ts","../../main/UtfErrorMode.ts","../../main/Uint8ArrayOutput.ts","../../main/ByteOutput.ts","../../main/ByteOutputUint8Array.ts","../../main/Binary.ts","../../main/Base16.ts","../../main/Utf8DecodedOutput.ts","../../main/Utf8EncodedOutput.ts","../../main/Utf8.ts","../../main/Base10NumberParser.ts","../../main/Base10IntegerWriter.ts","../../main/Base16Parser.ts","../../main/Base16Writer.ts","../../main/Base16IntegerWriter.ts","../../main/Base64.ts","../../main/Base64Parser.ts","../../main/Base64Writer.ts"],"sourcesContent":["// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashCode} from \"@swim/util\";\nimport {Mark} from \"./Mark\";\nimport {Span} from \"./Span\";\nimport {Output} from \"./Output\";\nimport {Display} from \"./Display\";\nimport {Debug} from \"./Debug\";\nimport {Format} from \"./Format\";\n\n/**\n * Description of a source location.  Tags are used to annotate input sources,\n * particularly for [[Diagnostic diagnostic]] purposes.  A [[Mark]] tag\n * annotates a source position.  A [[Span]] tag annotate a source range.\n *\n * @see [[Diagnostic]]\n */\nexport abstract class Tag implements Display, Debug, HashCode {\n  /**\n   * Returns the first source position covered by this `Tag`.\n   */\n  abstract start(): Mark;\n\n  /**\n   * Returns the last source position covered by this `Tag`.\n   */\n  abstract end(): Mark;\n\n  /**\n   * Returns a `Tag` that includes all source locations covered by\n   * both this tag, and `that` tag.\n   */\n  abstract union(that: Tag): Tag;\n\n  /**\n   * Returns the position of this `Tag` relative to the given `mark`.\n   */\n  abstract shift(mark: Mark): Tag;\n\n  abstract display(output: Output): void;\n\n  abstract debug(output: Output): void;\n\n  abstract equals(that: unknown): boolean;\n\n  abstract hashCode(): number;\n\n  // Forward type declarations\n  /** @hidden */\n  static Mark: typeof Mark; // defined by Mark\n  /** @hidden */\n  static Span: typeof Span; // defined by Span\n  /** @hidden */\n  static Format: typeof Format; // defined by Format\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3} from \"@swim/util\";\nimport {Tag} from \"./Tag\";\nimport {Output} from \"./Output\";\n\n/**\n * Description of a source position, identified by byte offset, line, and\n * column number, with an optional note.\n */\nexport class Mark extends Tag {\n  /** @hidden */\n  readonly _offset: number;\n  /** @hidden */\n  readonly _line: number;\n  /** @hidden */\n  readonly _column: number;\n  /** @hidden */\n  readonly _note: string | null;\n\n  /** @hidden */\n  constructor(offset: number, line: number, column: number, note: string | null) {\n    super();\n    this._offset = offset;\n    this._line = line;\n    this._column = column;\n    this._note = note;\n  }\n\n  /**\n   * Returns the zero-based byte offset of this position.\n   */\n  offset(): number {\n    return this._offset;\n  }\n\n  /**\n   * Returns the one-based line number of this position.\n   */\n  line(): number {\n    return this._line;\n  }\n\n  /**\n   * Returns the one-based column number of this position.\n   */\n  column(): number {\n    return this._column;\n  }\n\n  /**\n   * Returns the note attached to the marked position, or `null` if this\n   * position has no attached note.\n   */\n  note(): string | null {\n    return this._note;\n  }\n\n  /**\n   * Returns `this` position, if its byte offset is less than or equal to\n   * `that` position; otherwise returns `that` position.\n   */\n  min(that: Mark): Mark {\n    if (this._offset <= that._offset) {\n      return this;\n    } else {\n      return that;\n    }\n  }\n\n  /**\n   * Returns `this` position, if its byte offset is greater than or equal to\n   * `that` position; otherwise returns `that` position.\n   */\n  max(that: Mark): Mark {\n    if (this._offset >= that._offset) {\n      return this;\n    } else {\n      return that;\n    }\n  }\n\n  start(): Mark {\n    return this;\n  }\n\n  end(): Mark {\n    return this;\n  }\n\n  union(that: Tag): Tag {\n    if (that instanceof Mark) {\n      if (this._offset === that._offset && this._line === that._line\n          && this._column === that._column) {\n        return this;\n      } else {\n        return Tag.Span.from(this, that);\n      }\n    } else if (that instanceof Tag.Span) {\n      const start = this.min(that._start);\n      const end = this.max(that._end);\n      if (start === that._start && end === that._end) {\n        return that;\n      } else {\n        return Tag.Span.from(start, end);\n      }\n    }\n    throw new Error(that.toString());\n  }\n\n  shift(mark: Mark): Mark {\n    const offset = this._offset + (this._offset - mark._offset);\n    const line = this._line + (this._line - mark._line);\n    let column = this._column;\n    if (line === 1) {\n      column += (this._column - mark._column);\n    }\n    if (offset === this._offset && line === this._line && column === this._column) {\n      return this;\n    } else {\n      return Mark.at(offset, line, column, this._note);\n    }\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Mark) {\n      return this._offset === that._offset && this._line === that._line\n          && this._column === that._column && this._note === that._note;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (Mark._hashSeed === void 0) {\n      Mark._hashSeed = Murmur3.seed(Mark);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Murmur3.mix(Murmur3.mix(Mark._hashSeed,\n        this._offset), this._line), this._column), Murmur3.hash(this._note)));\n  }\n\n  display(output: Output): void {\n    Tag.Format.displayNumber(this._line, output);\n    output = output.write(58/*':'*/);\n    Tag.Format.displayNumber(this._column, output);\n    if (this._note !== null) {\n      output = output.write(58/*':'*/).write(32/*' '*/).write(this._note);\n    }\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"Mark\").write(\".\").write(\"at\").write(\"(\");\n    Tag.Format.debugNumber(this._offset, output);\n    output = output.write(\", \");\n    Tag.Format.debugNumber(this._line, output);\n    output = output.write(\", \");\n    Tag.Format.debugNumber(this._column, output);\n    if (this._note !== null) {\n      output = output.write(\", \");\n      Tag.Format.debugString(this._note, output);\n    }\n    output = output.write(\")\");\n  }\n\n  toString(): string {\n    return Tag.Format.display(this);\n  }\n\n  private static _hashSeed?: number;\n  private static _zero?: Mark;\n\n  /**\n   * Returns a `Mark` at byte offset `0`, line `1`, and column `1`, with no\n   * attached note.\n   */\n  static zero(): Mark {\n    if (!Mark._zero) {\n      Mark._zero = new Mark(0, 1, 1, null);\n    }\n    return Mark._zero;\n  }\n\n  /**\n   * Returns a new `Mark` at the given zero-based byte `offset`, one-based\n   * `line` number, and one-based `column` number, with an optionally attached\n   * `note`.\n   */\n  static at(offset: number, line: number, column: number, note: string | null = null): Mark {\n    return new Mark(offset, line, column, note);\n  }\n}\nTag.Mark = Mark;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3} from \"@swim/util\";\nimport {Tag} from \"./Tag\";\nimport {Mark} from \"./Mark\";\nimport {Output} from \"./Output\";\n\n/**\n * Description of a source range, identified by a closed interval between start\n * and end [[Mark marks]].\n */\nexport class Span extends Tag {\n  /** @hidden */\n  readonly _start: Mark;\n  /** @hidden */\n  readonly _end: Mark;\n\n  /** @hidden */\n  constructor(start: Mark, end: Mark) {\n    super();\n    this._start = start;\n    this._end = end;\n  }\n\n  start(): Mark {\n    return this._start;\n  }\n\n  end(): Mark {\n    return this._end;\n  }\n\n  union(that: Tag): Tag {\n    if (that instanceof Tag.Mark) {\n      const start = this._start.min(that);\n      const end = this._end.max(that);\n      if (start === this._start && end === this._end) {\n        return this;\n      } else {\n        return Span.from(start, end);\n      }\n    } else if (that instanceof Span) {\n      const start = this._start.min(that._start);\n      const end = this._end.max(that._end);\n      if (start === this._start && end === this._end) {\n        return this;\n      } else {\n        return Span.from(start, end);\n      }\n    }\n    throw new Error(that.toString());\n  }\n\n  shift(mark: Mark): Span {\n    const start = this._start.shift(mark);\n    const end = this._end.shift(mark);\n    if (start === this._start && end === this._end) {\n      return this;\n    } else {\n      return Span.from(start, end);\n    }\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Span) {\n      return this._start.equals(that._start) && this._end.equals(that._end);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (Span._hashSeed === void 0) {\n      Span._hashSeed = Murmur3.seed(Span);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Span._hashSeed,\n        this._start.hashCode()), this._end.hashCode()));\n  }\n\n  display(output: Output): void {\n    if (this._start._note !== null) {\n      output = output.write(this._start._note).write(58/*':'*/).write(32/*' '*/);\n    }\n    Tag.Format.displayNumber(this._start._line, output);\n    output = output.write(58/*':'*/);\n    Tag.Format.displayNumber(this._start._column, output);\n    output = output.write(45/*'-'*/);\n    Tag.Format.displayNumber(this._end._line, output);\n    output = output.write(58/*':'*/);\n    Tag.Format.displayNumber(this._end._column, output);\n    if (this._end._note !== null) {\n      output = output.write(58/*':'*/).write(32/*' '*/).write(this._end._note);\n    }\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"Span\").write(\".\").write(\"from\").write(\"(\");\n    this._start.debug(output);\n    output = output.write(\", \");\n    this._end.debug(output);\n    output = output.write(\")\");\n  }\n\n  toString(): string {\n    return Tag.Format.display(this);\n  }\n\n  private static _hashSeed?: number;\n\n  /**\n   * Returns a new `Span` representing the closed interval between the given\n   * `start` and `end` marks.\n   */\n  static from(start: Mark, end: Mark): Span {\n    if (start._offset > end._offset) {\n      const tmp = start;\n      start = end;\n      end = tmp;\n    }\n    return new Span(start, end);\n  }\n}\nTag.Span = Span;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Thrown when reading invalid [[Input]].\n */\nexport class InputException extends Error {\n  constructor(message?: string) {\n    super(message);\n    (this as any).__proto__ = InputException.prototype;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashCode, Murmur3} from \"@swim/util\";\nimport {Output} from \"./Output\";\nimport {Format} from \"./Format\";\nimport {Debug} from \"./Debug\";\n\n/**\n * Either an [[OutputSettings]] instance, or an [[OutputSettingsInit]] object\n * initializer.\n */\nexport type AnyOutputSettings = OutputSettings | OutputSettingsInit;\n\n/**\n * [[OutputSettings]] object initializer.\n */\nexport interface OutputSettingsInit {\n  lineSeparator?: string | null;\n  isPretty?: boolean;\n  isStyled?: boolean;\n}\n\n/**\n * [[Output]] production parameters.  `OutputSettings` provide contextual\n * configuration parameters to output producers, such as [[Writer Writers]].\n * Uses include enabling pretty printing and styling generated output.\n * Subclasses can provide additional parameters understood by specialized\n * output producers.\n */\nexport class OutputSettings implements Debug, HashCode {\n  /** @hidden */\n  readonly _lineSeparator: string;\n  /** @hidden */\n  readonly _isPretty: boolean;\n  /** @hidden */\n  readonly _isStyled: boolean;\n\n  protected constructor(lineSeparator: string, isPretty: boolean, isStyled: boolean) {\n    this._lineSeparator = lineSeparator;\n    this._isPretty = isPretty;\n    this._isStyled = isStyled;\n  }\n\n  /**\n   * Returns the code point sequence used to separate lines of text.\n   * Defaults to the operating system's line separator.\n   */\n  lineSeparator(): string;\n\n  /**\n   * Returns a copy of these settings with the given `lineSeparator`.\n   */\n  lineSeparator(lineSeparator: string | null): OutputSettings;\n\n  lineSeparator(lineSeparator?: string | null): string | OutputSettings {\n    if (lineSeparator === void 0) {\n      return this._lineSeparator;\n    } else {\n      return this.copy(lineSeparator, this._isPretty, this._isStyled);\n    }\n  }\n\n  /**\n   * Returns `true` if output producers should pretty print their output,\n   * when possible.\n   */\n  isPretty(): boolean;\n\n  /**\n   * Returns a copy of these settings with the given `isPretty` flag.\n   */\n  isPretty(isPretty: boolean): OutputSettings;\n\n  isPretty(isPretty?: boolean): boolean | OutputSettings {\n    if (isPretty === void 0) {\n      return this._isPretty;\n    } else {\n      return this.copy(this._lineSeparator, isPretty, this._isStyled);\n    }\n  }\n\n  /**\n   * Returns `true` if output producers should style their output,\n   * when possible.\n   */\n  isStyled(): boolean;\n\n  /**\n   * Returns a copy of these settings with the given `isStyled` flag.\n   */\n  isStyled(isStyled: boolean): OutputSettings;\n\n  isStyled(isStyled?: boolean): boolean | OutputSettings {\n    if (isStyled === void 0) {\n      return this._isStyled;\n    } else {\n      return this.copy(this._lineSeparator, this._isPretty, isStyled);\n    }\n  }\n\n  protected copy(lineSeparator: string | null, isPretty: boolean, isStyled: boolean): OutputSettings {\n    return OutputSettings.create(lineSeparator, isPretty, isStyled);\n  }\n\n  protected canEqual(that: unknown): boolean {\n    return that instanceof OutputSettings;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof OutputSettings) {\n      return that.canEqual(this) && this._lineSeparator === that._lineSeparator\n          && this._isPretty === that._isPretty && this._isStyled === that._isStyled;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (OutputSettings._hashSeed === void 0) {\n      OutputSettings._hashSeed = Murmur3.seed(OutputSettings);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Murmur3.mix(OutputSettings._hashSeed,\n        Murmur3.hash(this._lineSeparator)), Murmur3.hash(this._isPretty)),\n        Murmur3.hash(this._isStyled)));\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"OutputSettings\").write(46/*'.'*/);\n    if (!this._isPretty && !this._isStyled) {\n      output = output.write(\"standard\");\n    } else if (this._isPretty && !this._isStyled) {\n      output = output.write(\"pretty\");\n    } else if (!this._isPretty && this._isStyled) {\n      output = output.write(\"styled\");\n    } else {\n      output = output.write(\"prettyStyled\");\n    }\n    output = output.write(40/*'('*/).write(41/*')'*/);\n    if (Format.lineSeparator() !== this._lineSeparator) {\n      output = output.write(46/*'.'*/).write(\"lineSeparator\").write(40/*'('*/)\n          .display(this._lineSeparator).write(41/*')'*/);\n    }\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  private static _hashSeed?: number;\n  private static _standard?: OutputSettings;\n  private static _pretty?: OutputSettings;\n  private static _styled?: OutputSettings;\n  private static _prettyStyled?: OutputSettings;\n\n  /**\n   * Returns `OutputSettings` configured with the system line separator,\n   * pretty printing disabled, and styling disabled.\n   */\n  static standard(): OutputSettings {\n    if (!OutputSettings._standard) {\n      OutputSettings._standard = new OutputSettings(Format.lineSeparator(), false, false);\n    }\n    return OutputSettings._standard;\n  }\n\n  /**\n   * Returns `OutputSettings` configured with the system line separator,\n   * pretty printing enabled, and styling disabled.\n   */\n  static pretty(): OutputSettings {\n    if (!OutputSettings._pretty) {\n      OutputSettings._pretty = new OutputSettings(Format.lineSeparator(), true, false);\n    }\n    return OutputSettings._pretty;\n  }\n\n  /**\n   * Returns `OutputSettings` configured with the system line separator,\n   * pretty printing disabled, and styling enabled.\n   */\n  static styled(): OutputSettings {\n    if (!OutputSettings._styled) {\n      OutputSettings._styled = new OutputSettings(Format.lineSeparator(), false, true);\n    }\n    return OutputSettings._styled;\n  }\n\n  /**\n   * Returns `OutputSettings` configured with the system line separator,\n   * pretty printing enabled, and styling enabled.\n   */\n  static prettyStyled(): OutputSettings {\n    if (!OutputSettings._prettyStyled) {\n      OutputSettings._prettyStyled = new OutputSettings(Format.lineSeparator(), true, true);\n    }\n    return OutputSettings._prettyStyled;\n  }\n\n  /**\n   * Returns `OutputSettings` configured with the given `lineSeparator`, pretty\n   * rinting enabled if `isPretty` is `true`, and styling enabled if `isStyled`\n   * is `true`.\n   */\n  static create(lineSeparator?: string | null, isPretty?: boolean, isStyled?: boolean): OutputSettings {\n    if (typeof lineSeparator !== \"string\") {\n      lineSeparator = Format.lineSeparator();\n    }\n    if (typeof isPretty !== \"boolean\") {\n      isPretty = false;\n    }\n    if (typeof isStyled !== \"boolean\") {\n      isStyled = false;\n    }\n    if (Format.lineSeparator() === lineSeparator) {\n      if (!isPretty && !isStyled) {\n        return OutputSettings.standard();\n      } else if (isPretty && !isStyled) {\n        return OutputSettings.pretty();\n      } else if (!isPretty && isStyled) {\n        return OutputSettings.styled();\n      } else {\n        return OutputSettings.prettyStyled();\n      }\n    }\n    return new OutputSettings(lineSeparator, isPretty, isStyled);\n  }\n\n  /**\n   * Converts the loosely typed `settings` to an instance of `OutputSettings`.\n   */\n  static fromAny(settings: AnyOutputSettings | undefined): OutputSettings {\n    if (settings instanceof OutputSettings) {\n      return settings;\n    } else if (typeof settings === \"object\" && settings) {\n      return OutputSettings.create(settings.lineSeparator, settings.isPretty, settings.isStyled);\n    }\n    return OutputSettings.standard();\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Thrown when writing invalid [[Output]].\n */\nexport class OutputException extends Error {\n  constructor(message?: string) {\n    super(message);\n    (this as any).__proto__ = OutputException.prototype;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Builder} from \"@swim/util\";\nimport {AnyOutputSettings, OutputSettings} from \"./OutputSettings\";\nimport {Format} from \"./Format\";\nimport {OutputException} from \"./OutputException\";\n\n/**\n * Non-blocking token stream writer.  `Output` enables incremental,\n * interruptible writing of network protocols and data formats.\n *\n * ### Output tokens\n * Output tokens are modeled as primitive numbers, commonly representing\n * Unicode code points, or raw octets; each `Output` implementation specifies\n * the semantic type of its tokens.\n *\n * ### Output states\n * An `Output` writer is always in one of three states: _cont_​inue, _full_,\n * or _done_.  The _cont_ state indicates that the stream is ready to write a\n * single token; the _full_ state indicates that the stream is unable to write\n * additional tokens at this time, but that the stream may logically resume at\n * some point in the future; and the _done_ state indicates that the stream has\n * terminated, and that [[bind]] will return the output result.  [[isCont]]\n * returns `true` when in the _cont_ state; [[isFull]] returns `true` when in\n * the _full_ state; and [[isDone]] returns `true` when in the _done_ state.\n *\n * ### Output results\n * An `Output` writer yields a value of type `T`, obtained via the [[bind]]\n * method, representing some implementation defined result of writing the\n * output.  For example, an `Output<string>` implementation may–but is not\n * required to–yield a `string` containing all code points written to the\n * output.\n *\n * ### Non-blocking behavior\n * `Output` writers never block.  An `Output` writer that would otherwise block\n * writing additional output instead enters the _full_ state, signaling the\n * output generator to back off producing the output, but to remain prepared to\n * produce additional output in the future.  An `Output` writer enters the\n * _done_ state when it encounters the final end of its output, signaling to\n * the output generator to stop producing.\n *\n * ### Output settings\n * An output generator may alter the tokens it produces based on its `Output`\n * writer's [[settings]].  Uses include pretty printing and styling generated\n * output.  [[OutputSettings]] subclasses can provide additional parameters\n * understood by specialized output producers.\n *\n * ### Cloning\n * An `Output` writer may be [[clone cloned]] to branch the token stream in an\n * implementation specified manner.  Not all `Output` implementations support\n * cloning.\n *\n * @see [[OutputSettings]]\n * @see [[Writer]]\n */\nexport abstract class Output<T = unknown> implements Builder<number, T> {\n  /**\n   * Returns `true` when the next [[write write(number)]] will succeed.\n   * i.e. this `Output` is in the _cont_ state.\n   */\n  abstract isCont(): boolean;\n\n  /**\n   * Returns `true` when an immediate `write` will fail, but writes may succeed\n   * at some point in the future.  i.e. this `Output` is in the _full_ state.\n   */\n  abstract isFull(): boolean;\n\n  /**\n   * Returns `true` when no `write` will ever again suucced.\n   * i.e. this `Output` is in the _done_ state.\n   */\n  abstract isDone(): boolean;\n\n  /**\n   * Returns `true` when an immediate `write` will fail due to an\n   * error with the token stream. i.e. this `Output` is in the `error` state.\n   * When `true`, `trap()` will return the output error.\n   */\n  abstract isError(): boolean;\n\n  /**\n   * Returns `true` if this is a partial `Output` that will enter\n   * the `full` state when it is unable to write additional tokens.\n   */\n  abstract isPart(): boolean;\n\n  /**\n   * Returns a partial `Output` equivalent to this `Output`, if\n   * `isPart` is `true`; returns a final `Output` equivalent\n   * to this `Output` if `isPart` is `false`. The caller's reference\n   * to `this` `Output` should be replaced by the returned `Output`.\n   */\n  abstract isPart(isPart: boolean): Output<T>;\n\n  /**\n   * Writes a single `token` to the stream, if this `Output` is in the\n   * _cont_ state.\n   *\n   * @return `this`\n   * @throws [[OutputException]] if this `Output` is not in the _cont_ state.\n   */\n  abstract write(token: number): Output<T>;\n\n  /**\n   * Writes the code points of the given `string`.  Assumes this is a Unicode\n   * `Output` writer with sufficient capacity.\n   *\n   * @return `this`\n   * @throws [[OutputException]] if this `Output` exits the _cont_ state before\n   *         the full `string` has been written.\n   */\n  abstract write(string: string): Output<T>;\n\n  /**\n   * Writes the code points of the given `string`, followed by the code points\n   * of the `settings`' [[OutputSettings.lineSeparator line separator].\n   * Assumes this is a Unicode `Output` writer with sufficient capacity.\n   *\n   * @return `this`\n   * @throws [[OutputException]] if this `Output` exits the _cont_ state before\n   *         the full `string` and line separator has been written.\n   */\n  writeln(string?: string): Output<T> {\n    if (typeof string === \"string\") {\n      this.write(string);\n    }\n    return this.write(this.settings().lineSeparator());\n  }\n\n  /**\n   * Writes the code points of the human-readable [[Display]] string of the\n   * given `object`.  Assumes this is a Unicode `Output` writer with sufficient\n   * capacity.\n   *\n   * @return `this`\n   * @throws [[OutputException]] if this `Output` exits the _cont_ state before\n   *         the full display string has been written.\n   */\n  display(object: unknown): Output<T> {\n    Format.display(object, this);\n    return this;\n  }\n\n  /**\n   * Writes the code points of the developer-readable [[Debug]] string of the\n   * given `object`.  Assumes this is a Unicode `Output` writer with sufficient\n   * capacity.\n   *\n   * @return `this`\n   * @throws [[OutputException]] if this `Output` exits the _cont_ state before\n   *         the full debug string has been written.\n   */\n  debug(object: unknown): Output<T> {\n    Format.debug(object, this);\n    return this;\n  }\n\n  /**\n   * Writes any internally buffered state to the underlying output stream.\n   */\n  flush(): Output<T> {\n    return this;\n  }\n\n  push(...tokens: number[]): void {\n    const n = tokens.length;\n    for (let i = 0; i < n; i += 1) {\n      this.write(tokens[i]);\n    }\n  }\n\n  /**\n   * Returns the `OutputSettings` used to configure the behavior of output\n   * producers that write to this `Output`.\n   */\n  abstract settings(): OutputSettings;\n\n  /**\n   * Updates the `settings` associated with this `Output`.\n   *\n   * @return `this`\n   */\n  abstract settings(settings: AnyOutputSettings): Output<T>;\n\n  /**\n   * Returns the implementation-defined result of writing the output.\n   */\n  abstract bind(): T;\n\n  /**\n   * Returns the output error. Only guaranteed to return an error when in the\n   * _error_ state.\n   *\n   * @throws OutputException if this `Output` is not in the _error_ state.\n   */\n  trap(): Error {\n    throw new OutputException();\n  }\n\n  /**\n   * Returns an implementation-defined branch of the token stream.\n   *\n   * @throws `Error` if this `Output` writer cannot be cloned.\n   */\n  clone(): Output<T> {\n    throw new Error();\n  }\n\n  private static _full: Output<any>;\n\n  private static _done: Output<any>;\n\n  /**\n   * Return an `Output` in the _full_ state, that binds the given `value`,\n   * with the given `settings`.\n   */\n  static full<T>(value: T | null = null, settings: OutputSettings = OutputSettings.standard()): Output<T> {\n    if (value === null && settings === OutputSettings.standard()) {\n      if (!Output._full) {\n        Output._full = new OutputFull(value, OutputSettings.standard());\n      }\n      return Output._full;\n    }\n    return new OutputFull<T>(value!, settings);\n\n  }\n\n  /**\n   * Returns an `Output` in the _done_ state, that binds the given `value`,\n   * with the given `settings`.\n   */\n  static done<T>(value: T | null = null, settings: OutputSettings = OutputSettings.standard()): Output<T> {\n    if (value === null && settings === OutputSettings.standard()) {\n      if (!Output._done) {\n        Output._done = new OutputDone(value, OutputSettings.standard());\n      }\n      return Output._done;\n    }\n    return new OutputDone<T>(value!, settings);\n  }\n\n  /**\n   * Return an `Output` in the _error_ state, that binds the given `value`,\n   * with the given `settings`.\n   */\n  static error<T>(error: Error, settings: OutputSettings = OutputSettings.standard()): Output<T> {\n    return new OutputError<T>(error, settings);\n  }\n}\n\n/** @hidden */\nclass OutputFull<T> extends Output<T> {\n  /** @hidden */\n  readonly _value: T;\n  /** @hidden */\n  readonly _settings: OutputSettings;\n\n  constructor(value: T, settings: OutputSettings) {\n    super();\n    this._value = value;\n    this._settings = settings;\n  }\n\n  isCont(): boolean {\n    return false;\n  }\n\n  isFull(): boolean {\n    return true;\n  }\n\n  isDone(): boolean {\n    return false;\n  }\n\n  isError(): boolean {\n    return false;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): Output<T>;\n  isPart(isPart?: boolean): boolean | Output<T> {\n    if (isPart === void 0) {\n      return true;\n    } else if (isPart) {\n      return Output.done(this._value, this._settings);\n    } else {\n      return this;\n    }\n  }\n\n  write(token: number): Output<T>;\n  write(string: string): Output<T>;\n  write(tokenOrString: number | string): Output<T> {\n    return Output.error(new OutputException(\"full\"), this._settings);\n  }\n\n  writeln(string?: string): Output<T> {\n    return Output.error(new OutputException(\"full\"), this._settings);\n  }\n\n  bind(): T {\n    return this._value;\n  }\n\n  settings(): OutputSettings;\n  settings(settings: OutputSettings): Output<T>;\n  settings(settings?: OutputSettings): OutputSettings | Output<T> {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      return Output.full(this._value, settings);\n    }\n  }\n\n  clone(): Output<T> {\n    return this;\n  }\n}\n\n/** @hidden */\nclass OutputDone<T> extends Output<T> {\n  /** @hidden */\n  readonly _value: T;\n  /** @hidden */\n  readonly _settings: OutputSettings;\n\n  constructor(value: T, settings: OutputSettings) {\n    super();\n    this._value = value;\n    this._settings = settings;\n  }\n\n  isCont(): boolean {\n    return false;\n  }\n\n  isFull(): boolean {\n    return false;\n  }\n\n  isDone(): boolean {\n    return true;\n  }\n\n  isError(): boolean {\n    return false;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): Output<T>;\n  isPart(isPart?: boolean): boolean | Output<T> {\n    if (isPart === void 0) {\n      return false;\n    } else if (isPart) {\n      return this;\n    } else {\n      return Output.full(this._value, this._settings);\n    }\n  }\n\n  write(token: number): Output<T>;\n  write(string: string): Output<T>;\n  write(tokenOrString: number | string): Output<T> {\n    return Output.error(new OutputException(\"done\"), this._settings);\n  }\n\n  writeln(string?: string): Output<T> {\n    return Output.error(new OutputException(\"done\"), this._settings);\n  }\n\n  bind(): T {\n    return this._value;\n  }\n\n  settings(): OutputSettings;\n  settings(settings: OutputSettings): Output<T>;\n  settings(settings?: OutputSettings): OutputSettings | Output<T> {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      return Output.done(this._value, settings);\n    }\n  }\n\n  clone(): Output<T> {\n    return this;\n  }\n}\n\n/** @hidden */\nclass OutputError<T> extends Output<T> {\n  /** @hidden */\n  readonly _error: Error;\n  /** @hidden */\n  readonly _settings: OutputSettings;\n\n  constructor(error: Error, settings: OutputSettings) {\n    super();\n    this._error = error;\n    this._settings = settings;\n  }\n\n  isCont(): boolean {\n    return false;\n  }\n\n  isFull(): boolean {\n    return false;\n  }\n\n  isDone(): boolean {\n    return false;\n  }\n\n  isError(): boolean {\n    return true;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): Output<T>;\n  isPart(isPart?: boolean): boolean | Output<T> {\n    if (isPart === void 0) {\n      return false;\n    } else {\n      return this;\n    }\n  }\n\n  write(token: number): Output<T>;\n  write(string: string): Output<T>;\n  write(tokenOrString: number | string): Output<T> {\n    return this;\n  }\n\n  writeln(string?: string): Output<T> {\n    return this;\n  }\n\n  bind(): T {\n    throw new OutputException();\n  }\n\n  trap(): Error {\n    return this._error;\n  }\n\n  settings(): OutputSettings;\n  settings(settings: OutputSettings): Output<T>;\n  settings(settings?: OutputSettings): OutputSettings | Output<T> {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      return Output.error(this._error, settings);\n    }\n  }\n\n  clone(): Output<T> {\n    return this;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mark} from \"./Mark\";\nimport {InputException} from \"./InputException\";\nimport {AnyInputSettings, InputSettings} from \"./InputSettings\";\n\n/**\n * Non-blocking token stream reader, with single token lookahead.\n * `Input` enables incremental, interruptible parsing of network protocols and\n * data formats.\n *\n * ### Input tokens\n * Input tokens are modeled as primitive numbers, commonly representing Unicode\n * code points, or raw octets; each `Input` implementation specifies the\n * semantic type of its tokens.  The [[head]]  method peeks at the lookahead\n * token, without consuming it, and the [[step]] method advances the input to\n * the next token.\n *\n * ### Input states\n * An `Input` reader is always in one of three states: _cont_​inue, _empty_, or\n * _done_.  The _cont_ state indicates that a lookahead token is immediately\n * available; the _empty_ state indicates that no additional tokens are\n * available at this time, but that the stream may logically resume at some\n * point in the future; and the _done_ state indicates that the stream has\n * terminated.  [[isCont]] returns `true` when in the _cont_ state; [[isEmpty]]\n * returns `true` when in the _empty_ state; and [[isDone]] returns `true` when\n * in the _done_ state.\n *\n * ### Non-blocking behavior\n * `Input` readers never block.  An `Input` reader that would otherwise block\n * awaiting additional input instead enters the _empty_ state, signaling the\n * input consumer to back off processing the input, but to remain prepared to\n * process additional input in the future.  An `Input` reader enters the _done_\n * state when it encounters the final end of its input, signaling the input\n * consumer to stop processing.  [[Input.empty]] returns an `Input` reader in\n * the _empty_ state.  [[Input.done]] returns an `Input` reader in the _done_\n * state.\n *\n * ### Position tracking\n * The logical position of the lookahead token is made available via the\n * [[mark]] method, with optimized callouts for the byte [[offset]], one-based\n * [[line]] number, and one-based [[column]] in the current line.  The [[id]]\n * method returns a diagnostic identifier for the token stream.\n *\n * ### Cloning\n * An `Input` reader may be [[clone cloned]] to provide an indepently mutable\n * position into a shared token stream.  Not all `Input` implementations\n * support cloning.\n *\n * @see [[InputSettings]]\n * @see [[Parser]]\n */\nexport abstract class Input {\n  /**\n   * Returns `true` when a [[head lookahead]] token is immediately available.\n   * i.e. this `Input` is in the _cont_ state.\n   */\n  abstract isCont(): boolean;\n\n  /**\n   * Returns `true` when no lookahead token is currently available, but\n   * additional input may be available at some point in the future.  i.e. this\n   * `Input` is in the _empty_ state.\n   */\n  abstract isEmpty(): boolean;\n\n  /**\n   * Returns `true` when no lookahead token is currently available, and\n   * no additional input will ever become available.  i.e. this `Input` is in\n   * the _done_ state.\n   */\n  abstract isDone(): boolean;\n\n  /**\n   * Returns `true` when no lookahead token is currently available due to\n   * an error with the token stream. i.e. this `Input` is in the `error` state.\n   * When `true`, `trap()` will return the input error\n   */\n  abstract isError(): boolean;\n\n  /**\n   * Returns `true` if this is a partial `Input` will that enter\n   * the `empty` state after it consumes the last available input token.\n   */\n  abstract isPart(): boolean;\n\n   /**\n    * Returns a partial `Input` equivalent to this `Input`, if\n    * `isPart` is `true`; returns a final `Input` equivalent\n    * to this `Input` if `isPart` is `false`. The caller's reference\n    * to `this` `Input` should be replaced by the returned `Input`\n    */\n  abstract isPart(isPart: boolean): Input;\n\n  /**\n   * Returns the current lookahead token, if this `Input` is in the\n   * _cont_ state.\n   *\n   * @throws [[InputException]] if this `Input` is not in the _cont_ state.\n   */\n  abstract head(): number;\n\n  /**\n   * Advances to the next token, if this `Input` is in the _cont_ state.\n   *\n   * @throws `Error` if this `Input` is not in the _cont_ state.\n   */\n  abstract step(): Input;\n\n  /**\n   * Sets the position of this `Input` to the given `mark`.  Rewinds to the\n   * start of this `Input`, if `mark` is `undefined`.\n   *\n   * @throws [[InputException]] if this `Input` does not support seeking,\n   *         or is unable to reposition to the `mark`.\n   */\n  abstract seek(mark?: Mark): Input;\n\n  /**\n   * Returns the input error. Only guaranteed to return an error when in the\n   * _ error_ state\n   *\n   * @throws InputException if the `Input` is not the _error_state\n   */\n  trap(): Error {\n    throw new InputException();\n  }\n\n  /**\n   * Returns an object that identifies the token stream, or `null` if the\n   * stream is unidentified.\n   */\n  abstract id(): unknown | null;\n\n  /**\n   * Returns an `Input` equivalent to this `Input`, but logically identified by\n   * the given–possibly `null`–`id`.  The caller's reference to `this` `Input}`\n   * should be replaced by the returned `Input}`.\n   */\n  abstract id(id: unknown | null): Input;\n\n  /**\n   * Returns the position of the current lookahead token, relative to the start\n   * of the stream.\n   */\n  abstract mark(): Mark;\n\n  /**\n   * Returns an `Input` equivalent to this `Input`, but logically positioned at\n   * the given `mark`.  The physical position in the input stream is not\n   * modified.  The caller's reference to `this` `Input` should be replaced by\n   * the returned `Input`.\n   */\n  abstract mark(mark: Mark): Input;\n\n  /**\n   * Returns the byte offset of the current lookahead token, relative to the\n   * start of the stream.\n   */\n  offset(): number {\n    return this.mark()._offset;\n  }\n\n  /**\n   * Returns the one-based line number of the current lookahead token, relative\n   * to the start of the stream.\n   */\n  line(): number {\n    return this.mark()._line;\n  }\n\n  /**\n   * Returns the one-based column number of the current lookahead token,\n   * relative to the current line in the stream.\n   */\n  column(): number {\n    return this.mark()._column;\n  }\n\n  /**\n   * Returns the `InputSettings` used to configure the behavior of input\n   * consumers that read from this `Input`.\n   */\n  abstract settings(): InputSettings;\n\n  /**\n   * Returns a clone of this `Input` with the given `settings`.\n   *\n   * @throws `Error` if this `Input` reader cannot be cloned.\n   */\n  abstract settings(settings: AnyInputSettings): Input;\n\n  /**\n   * Returns an independently positioned view into the token stream,\n   * initialized with identical state to this `Input`.\n   *\n   * @throws `Error` if this `Input` reader cannot be cloned.\n   */\n  abstract clone(): Input;\n\n  private static _empty: Input;\n\n  private static _done: Input;\n\n  /**\n   * Returns an `Input` reader in the _empty_ state, with the given `settings`,\n   * at the `mark` position of a token stream logically identified by `id`.\n   */\n  static empty(id: unknown | null = null, mark: Mark = Mark.zero(),\n               settings: InputSettings = InputSettings.standard()): Input {\n    if (id === null && mark === Mark.zero() && settings === InputSettings.standard()) {\n      if (!Input._empty) {\n        Input._empty = new InputEmpty(null, Mark.zero(), InputSettings.standard());\n      }\n      return Input._empty;\n    }\n    return new InputEmpty(id, mark, settings);\n  }\n\n  /**\n   * Returns an `Input` reader in the _done_ state, with the given `settings`,\n   * at the `mark` position of a token stream logically identified by `id`.\n   */\n  static done(id: unknown | null = null, mark: Mark = Mark.zero(),\n              settings: InputSettings = InputSettings.standard()): Input {\n    if (id === null && mark === Mark.zero() && settings === InputSettings.standard()) {\n      if (!Input._done) {\n        Input._done = new InputDone(null, Mark.zero(), InputSettings.standard());\n      }\n      return Input._done;\n    }\n    return new InputDone(id, mark, settings);\n  }\n\n  /**\n   * Returns an `Input` in the _error_ state, with the given `settings`,\n   * at the `mark` position of a token stream logically identified by `id`.\n   */\n  static error(error: Error, id: unknown | null = null, mark: Mark = Mark.zero(),\n               settings: InputSettings = InputSettings.standard()): Input {\n    return new InputError(error, id, mark, settings);\n  }\n}\n\n/** @hidden */\nclass InputEmpty extends Input {\n  /** @hidden */\n  readonly _id: unknown | null;\n  /** @hidden */\n  readonly _mark: Mark;\n  /** @hidden */\n  readonly _settings: InputSettings;\n\n  constructor(id: unknown | null, mark: Mark, settings: InputSettings) {\n    super();\n    this._id = id;\n    this._mark = mark;\n    this._settings = settings;\n  }\n\n  isCont(): boolean {\n    return false;\n  }\n\n  isEmpty(): boolean {\n    return true;\n  }\n\n  isDone(): boolean {\n    return false;\n  }\n\n  isError(): boolean {\n    return false;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): Input;\n  isPart(isPart?: boolean): boolean | Input {\n    if (isPart === void 0) {\n      return true;\n    } else if (isPart) {\n      return this;\n    } else {\n      return Input.done(this._id, this._mark, this._settings);\n    }\n  }\n\n  head(): number {\n    throw new InputException();\n  }\n\n  step(): Input {\n    const error = new InputException(\"empty step\");\n    return Input.error(error, this._id, this._mark, this._settings);\n  }\n\n  seek(mark?: Mark): Input {\n    const error = new InputException(\"empty seek\");\n    return Input.error(error, this._id, this._mark, this._settings);\n  }\n\n  id(): unknown | null;\n  id(id: unknown | null): Input;\n  id(id?: unknown | null): unknown | null | Input {\n    if (id === void 0) {\n      return this._id;\n    } else {\n      return Input.empty(id, this._mark, this._settings);\n    }\n  }\n\n  mark(): Mark;\n  mark(mark: Mark): Input;\n  mark(mark?: Mark): Mark | Input {\n    if (mark === void 0) {\n      return this._mark;\n    } else {\n      return Input.empty(this._id, mark, this._settings);\n    }\n  }\n\n  settings(): InputSettings;\n  settings(settings: InputSettings): Input;\n  settings(settings?: InputSettings): InputSettings | Input {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      return Input.empty(this._id, this._mark, settings);\n    }\n  }\n\n  clone(): Input {\n    return this;\n  }\n}\n\n/** @hidden */\nclass InputDone extends Input {\n  /** @hidden */\n  readonly _id: unknown | null;\n  /** @hidden */\n  readonly _mark: Mark;\n  /** @hidden */\n  readonly _settings: InputSettings;\n\n  constructor(id: unknown | null, mark: Mark, settings: InputSettings) {\n    super();\n    this._id = id;\n    this._mark = mark;\n    this._settings = settings;\n  }\n\n  isCont(): boolean {\n    return false;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n\n  isDone(): boolean {\n    return true;\n  }\n\n  isError(): boolean {\n    return false;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): Input;\n  isPart(isPart?: boolean): boolean | Input {\n    if (isPart === void 0) {\n      return false;\n    } else if (isPart) {\n      return Input.empty(this._id, this._mark, this._settings);\n    } else {\n      return this;\n    }\n  }\n\n  head(): number {\n    throw new InputException();\n  }\n\n  step(): Input {\n    const error = new InputException(\"done step\");\n    return Input.error(error, this._id, this._mark, this._settings);\n  }\n\n  seek(mark?: Mark): Input {\n    const error = new InputException(\"empty seek\");\n    return Input.error(error, this._id, this._mark, this._settings);\n  }\n\n  id(): unknown | null;\n  id(id: unknown | null): Input;\n  id(id?: unknown | null): unknown | null | Input {\n    if (id === void 0) {\n      return this._id;\n    } else {\n      return Input.done(id, this._mark, this._settings);\n    }\n  }\n\n  mark(): Mark;\n  mark(mark: Mark): Input;\n  mark(mark?: Mark): Mark | Input {\n    if (mark === void 0) {\n      return this._mark;\n    } else {\n      return Input.done(this._id, mark, this._settings);\n    }\n  }\n\n  settings(): InputSettings;\n  settings(settings: InputSettings): Input;\n  settings(settings?: InputSettings): InputSettings | Input {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      return Input.done(this._id, this._mark, settings);\n    }\n  }\n\n  clone(): Input {\n    return this;\n  }\n}\n\n/** @hidden */\nclass InputError extends Input {\n  /** @hidden */\n  readonly _id: unknown | null;\n  /** @hidden */\n  readonly _mark: Mark;\n  /** @hidden */\n  readonly _settings: InputSettings;\n  /** @hidden */\n  readonly _error: Error;\n\n  constructor(error: Error, id: unknown | null, mark: Mark, settings: InputSettings) {\n    super();\n    this._error = error;\n    this._id = id;\n    this._mark = mark;\n    this._settings = settings;\n  }\n\n  isCont(): boolean {\n    return false;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n\n  isDone(): boolean {\n    return false;\n  }\n\n  isError(): boolean {\n    return true;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): Input;\n  isPart(isPart?: boolean): boolean | Input {\n    if (isPart === void 0) {\n      return false;\n    } else {\n      return this;\n    }\n  }\n\n  head(): number {\n    throw new InputException();\n  }\n\n  step(): Input {\n    const error = new InputException(\"error step\");\n    return Input.error(error, this._id, this._mark, this._settings);\n  }\n\n  trap(): Error {\n    return this._error;\n  }\n\n  seek(mark?: Mark): Input {\n    const error = new InputException(\"error seek\");\n    return Input.error(error, this._id, this._mark, this._settings);\n  }\n\n  id(): unknown | null;\n  id(id: unknown | null): Input;\n  id(id?: unknown | null): unknown | null | Input {\n    if (id === void 0) {\n      return this._id;\n    } else {\n      return Input.error(this._error, id, this._mark, this._settings);\n    }\n  }\n\n  mark(): Mark;\n  mark(mark: Mark): Input;\n  mark(mark?: Mark): Mark | Input {\n    if (mark === void 0) {\n      return this._mark;\n    } else {\n      return Input.error(this._error, this._id, mark, this._settings);\n    }\n  }\n\n  settings(): InputSettings;\n  settings(settings: InputSettings): Input;\n  settings(settings?: InputSettings): InputSettings | Input {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      return Input.error(this._error, this._id, this._mark, settings);\n    }\n  }\n\n  clone(): Input {\n    return this;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mark} from \"./Mark\";\nimport {InputException} from \"./InputException\";\nimport {AnyInputSettings, InputSettings} from \"./InputSettings\";\nimport {Input} from \"./Input\";\n\n/** @hidden */\nexport class StringInput extends Input {\n  /** @hidden */\n  readonly _string: string;\n  /** @hidden */\n  _id: unknown | null;\n  /** @hidden */\n  _offset: number;\n  /** @hidden */\n  _line: number;\n  /** @hidden */\n  _column: number;\n  /** @hidden */\n  _settings: InputSettings;\n  /** @hidden */\n  _index: number;\n  /** @hidden */\n  _isPart: boolean;\n\n  constructor(string: string, id: unknown | null = null, offset: number = 0,\n              line: number = 1, column: number = 1, settings: InputSettings = InputSettings.standard(),\n              index: number = 0, isPart: boolean = false) {\n    super();\n    this._string = string;\n    this._id = id;\n    this._offset = offset;\n    this._line = line;\n    this._column = column;\n    this._settings = settings;\n    this._index = index;\n    this._isPart = isPart;\n  }\n\n  isCont(): boolean {\n    return this._index < this._string.length;\n  }\n\n  isEmpty(): boolean {\n    return this._isPart && this._index >= this._string.length;\n  }\n\n  isDone(): boolean {\n    return !this._isPart && this._index >= this._string.length;\n  }\n\n  isError(): boolean {\n    return false;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): Input;\n  isPart(isPart?: boolean): boolean | Input {\n    if (isPart === void 0) {\n      return this._isPart;\n    } else {\n      this._isPart = isPart;\n      return this;\n    }\n  }\n\n  head(): number {\n    if (this._index < this._string.length) {\n      const c = this._string.codePointAt(this._index);\n      if (c !== void 0) {\n        return c;\n      } else {\n        return this._string.charCodeAt(this._index);\n      }\n    }\n    throw new InputException();\n  }\n\n  step(): Input {\n    const index = this._index;\n    if (index < this._string.length) {\n      const c = this._string.codePointAt(index);\n      this._index = this._string.offsetByCodePoints(index, 1);\n      this._offset += this._index - index;\n      if (c === 10/*'\\n'*/) {\n        this._line += 1;\n        this._column = 1;\n      } else {\n        this._column += 1;\n      }\n      return this;\n    } else {\n      const error = new InputException(\"invalid step\");\n      return Input.error(error, this._id, this.mark(), this._settings);\n    }\n  }\n\n  seek(mark?: Mark): Input {\n    if (mark !== void 0) {\n      const index = this._index + (mark._offset - this._offset);\n      if (0 <= index && index <= this._string.length) {\n        this._offset = mark._offset;\n        this._line = mark._line;\n        this._column = mark._column;\n        this._index = index;\n        return this;\n      } else {\n        const error = new InputException(\"invalid seek to \" + mark);\n        return Input.error(error, this._id, this.mark(), this._settings);\n      }\n    } else {\n      this._offset = 0;\n      this._line = 1;\n      this._column = 1;\n      this._index = 0;\n      return this;\n    }\n  }\n\n  id(): unknown | null;\n  id(id: unknown | null): Input;\n  id(id?: unknown | null): unknown | null | Input {\n    if (id === void 0) {\n      return this._id;\n    } else {\n      this._id = id;\n      return this;\n    }\n  }\n\n  mark(): Mark;\n  mark(mark: Mark): Input;\n  mark(mark?: Mark): Mark | Input {\n    if (mark === void 0) {\n      return Mark.at(this._offset, this._line, this._column);\n    } else {\n      this._offset = mark._offset;\n      this._line = mark._line;\n      this._column = mark._column;\n      return this;\n    }\n  }\n\n  offset(): number {\n    return this._offset;\n  }\n\n  line(): number {\n    return this._line;\n  }\n\n  column(): number {\n    return this._column;\n  }\n\n  settings(): InputSettings;\n  settings(settings: AnyInputSettings): Input;\n  settings(settings?: AnyInputSettings): InputSettings | Input {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      this._settings = InputSettings.fromAny(settings);\n      return this;\n    }\n  }\n\n  clone(): Input {\n    return new StringInput(this._string, this._id, this._offset, this._line,\n                           this._column, this._settings, this._index, this._isPart);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyOutputSettings, OutputSettings} from \"./OutputSettings\";\nimport {Output} from \"./Output\";\n\n/** @hidden */\nexport class StringOutput extends Output<string> {\n  /** @hidden */\n  _string: string;\n  /** @hidden */\n  _settings: OutputSettings;\n\n  constructor(string: string, settings: OutputSettings) {\n    super();\n    this._string = string;\n    this._settings = settings;\n  }\n\n  isCont(): boolean {\n    return true;\n  }\n\n  isFull(): boolean {\n    return false;\n  }\n\n  isDone(): boolean {\n    return false;\n  }\n\n  isError(): boolean {\n    return false;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): Output<string>;\n  isPart(isPart?: boolean): boolean | Output<string> {\n    if (isPart === void 0) {\n      return false;\n    } else {\n      return this;\n    }\n  }\n\n  write(token: number | string): Output<string> {\n    if (typeof token === \"number\") {\n      if ((token >= 0x0000 && token <= 0xd7ff)\n          || (token >= 0xe000 && token <= 0xffff)) { // U+0000..U+D7FF | U+E000..U+FFFF\n        token = String.fromCharCode(token);\n      } else if (token >= 0x10000 && token <= 0x10ffff) { // U+10000..U+10FFFF\n        const u = token - 0x10000;\n        token = String.fromCharCode(0xd800 | (u >>> 10), 0xdc00 | (u & 0x3ff));\n      } else { // invalid code point\n        token = \"\\ufffd\";\n      }\n    }\n    this._string += token;\n    return this;\n  }\n\n  writeln(string?: string): Output<string> {\n    if (string === void 0) {\n      this._string = this._string.concat(this._settings._lineSeparator);\n      return this;\n    } else {\n      this._string = this._string.concat(string).concat(this._settings._lineSeparator);\n      return this;\n    }\n  }\n\n  settings(): OutputSettings;\n  settings(settings: AnyOutputSettings): Output<string>;\n  settings(settings?: AnyOutputSettings): OutputSettings | Output<string> {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      this._settings = OutputSettings.fromAny(settings);\n      return this;\n    }\n  }\n\n  bind(): string {\n    return this._string;\n  }\n\n  clone(): Output<string> {\n    return new StringOutput(this._string, this._settings);\n  }\n\n  toString(): string {\n    return this._string;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Thrown when a [[Writer]] attempts to write invalid syntax.\n */\nexport class WriterException extends Error {\n  constructor(message?: string) {\n    super(message);\n    (this as any).__proto__ = WriterException.prototype;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output} from \"./Output\";\n\n/**\n * Continuation of how to write subsequent [[Output]] tokens to a stream.\n * `Writer` enables efficient, interruptible writing of network protocols and\n * data formats, without intermediate buffering.\n *\n * ### Output tokens\n * A `Writer` writes tokens to an `Output` writer.  Output tokens are modeled\n * as primitive numbers, commonly representing Unicode code points, or raw\n * octets.  Each `Writer` implementation specifies the semantic type of output\n * tokens it produces.\n *\n * ### Writer states\n * A `Writer` is always in one of three states: _cont_​inue, _done_, or _error_.\n * The _cont_ state indicates that [[pull]] is ready to produce `Output`; the\n * _done_ state indicates that writing terminated successfully, and that\n * [[bind]] will return the written result; the _error_ state indicates that\n * writing terminated in failure, and that [[trap]] will return the write error.\n * `Writer` subclasses default to the _cont_ state.\n *\n * ### Feeding input\n * The [[feed]] method returns a `Writer` that represents the continuation\n * of how to write the given input object to subsequent `Output` writers.\n * `feed` can be used to specify an initial object to write, or to change\n * the object to be written.\n *\n * ### Pulling output\n * The [[pull]] method incrementally writes as much `Output` as it can, before\n * returning another `Writer` that represents the continuation of how to write\n * additional `Output`.  The `Output` passed to `pull` is only guaranteed to be\n * valid for the duration of the method call; references to the provided\n * `Output` instance must not be stored.\n *\n * ### Writer results\n * A `Writer` produces a written result of type `O`, obtained via the [[bind]]\n * method.  `bind` is only guaranteed to return a result when in the _done_\n * state; though `bind` may optionally make available partial results in other\n * states.  A failed `Writer` provides a write error via the [[trap]] method.\n * `trap` is only guaranteed to return an error when in the _error_ state.\n *\n * ### Continuations\n * A `Writer` instance represents a continuation of how to write remaining\n * `Output`.  Rather than writing a complete output in one go, a `Writer` takes\n * an `Output` chunk and returns another `Writer` instance that knows how to\n * write subsequent `Output` chunks.  This enables non-blocking, incremental\n * writing that can be interrupted whenever an `Output` writer runs out of\n * space.  A `Writer` terminates by returning a continuation in either the\n * _done_ state, or the _error_ state.  [[Writer.done]] returns a `Writer` in\n * the _done_ state.  [[Writer.error]] returns a `Writer` in the _error_ state.\n *\n * ### Forking\n * The [[fork]] method passes an out-of-band condition to a `Writer`, yielding\n * a `Writer` continuation whose behavior may be altered by the given condition.\n * For example, a console `Writer` might support a `fork` condition that changes\n * the color and style of printed text.  The types of conditions accepted by\n * `fork`, and their intended semantics, are implementation defined.\n */\nexport abstract class Writer<I = unknown, O = unknown> {\n  /**\n   * Returns `true` when [[pull]] is able to produce `Output`.  i.e. this\n   * `Writer` is in the _cont_ state.\n   */\n  isCont(): boolean {\n    return true;\n  }\n\n  /**\n   * Returns `true` when writing has terminated successfully, and [[bind]] will\n   * return the written result.  i.e. this `Writer` is in the _done_ state.\n   */\n  isDone(): boolean {\n    return false;\n  }\n\n  /**\n   * Returns `true` when writing has terminated in failure, and [[trap]] will\n   * return the write error.  i.e. this `Writer` is in the _error_ state.\n   */\n  isError(): boolean {\n    return false;\n  }\n\n  /**\n   * Returns a `Writer` that represents the continuation of how to write the\n   * given `input` object.\n   *\n   * @throws `Error` if this `Writer` does not know how to write the given\n   *         `input` object.\n   */\n  feed(input: I): Writer<I, O> {\n    throw new Error();\n  }\n\n  /**\n   * Incrementally writes as much `output` as possible, and returns another\n   * `Writer` that represents the continuation of how to write additional\n   * `Output`.  If `output` enters the _done_ state, `pull` _must_ return a\n   * terminated `Writer`, i.e. a `Writer` in the _done_ state, or in the\n   * _error_ state.  The given `output` is only guaranteed to be valid for the\n   * duration of the method call; references to `output` must not be stored.\n   */\n  abstract pull(output: Output): Writer<I, O>;\n\n  /**\n   * Returns a `Writer` continuation whose behavior may be altered by the given\n   * out-of-band `condition`.\n   */\n  fork(condition: unknown): Writer<I, O> {\n    return this;\n  }\n\n  /**\n   * Returns the written result.  Only guaranteed to return a result when in\n   * the _done_ state.\n   *\n   * @throws `Error` if this `Writer` is not in the _done_ state.\n   */\n  bind(): O {\n    throw new Error();\n  }\n\n  /**\n   * Returns the write error.  Only guaranteed to return an error when in the\n   * _error_ state.\n   *\n   * @throws `Error` if this `Writer` is not in the _error_ state.\n   */\n  trap(): Error {\n    throw new Error();\n  }\n\n  /**\n   * Casts a done `Writer` to a different input type.  A `Writer` in the _done_\n   * state can have any input type.\n   *\n   * @throws `Error` if this `Writer` is not in the _done_ state.\n   */\n  asDone<I2>(): Writer<I2, O> {\n    throw new Error();\n  }\n\n  /**\n   * Casts an errored `Writer` to different input and output types.  A `Writer`\n   * in the _error_ state can have any input type, and any output type.\n   *\n   * @throws `Error` if this `Writer` is not in the _error_ state.\n   */\n  asError<I2, O2>(): Writer<I2, O2> {\n    throw new Error();\n  }\n\n  /**\n   * Returns a `Writer` that continues writing `that` `Writer`, after it\n   * finishes writing `this` `Writer`.\n   */\n  andThen<O2>(that: Writer<I, O2>): Writer<I, O2> {\n    return new WriterAndThen<I, O2>(this, that);\n  }\n\n  private static _done?: Writer<any, any>;\n\n  /**\n   * Returns a `Writer` in the _done_ state that `bind`s an `undefined`\n   * writtern result.\n   */\n  static done<I, O>(): Writer<I, O>;\n\n  /**\n   * Returns a `Writer` in the _done_ state that `bind`s the given\n   * written `output`.\n   */\n  static done<I, O>(output: O): Writer<I, O>;\n\n  static done<I, O>(output?: O): Writer<I, O> {\n    if (output === void 0) {\n      if (!Writer._done) {\n        Writer._done = new WriterDone<any, any>(void 0);\n      }\n      return Writer._done;\n    } else {\n      return new WriterDone<I, O>(output);\n    }\n  }\n\n  /**\n   * Returns a `Writer` in the _error_ state that `trap`s the given\n   * write `error`.\n   */\n  static error<I, O>(error: Error): Writer<I, O> {\n    return new WriterError<I, O>(error);\n  }\n}\n\n/** @hidden */\nclass WriterDone<I, O> extends Writer<I, O> {\n  /** @hidden */\n  readonly _output: O;\n\n  constructor(output: O) {\n    super();\n    this._output = output;\n  }\n\n  isCont(): boolean {\n    return false;\n  }\n\n  isDone(): boolean {\n    return true;\n  }\n\n  pull(output: Output): Writer<I, O> {\n    return this;\n  }\n\n  bind(): O {\n    return this._output;\n  }\n\n  asDone<I2>(): Writer<I2, O> {\n    return this as any;\n  }\n\n  andThen<O2>(that: Writer<I, O2>): Writer<I, O2> {\n    return that;\n  }\n}\n\n/** @hidden */\nclass WriterError<I, O> extends Writer<I, O> {\n  /** @hidden */\n  readonly _error: Error;\n\n  constructor(error: Error) {\n    super();\n    this._error = error;\n  }\n\n  isCont(): boolean {\n    return false;\n  }\n\n  isError(): boolean {\n    return true;\n  }\n\n  pull(output: Output): Writer<I, O> {\n    return this;\n  }\n\n  bind(): O {\n    throw this._error;\n  }\n\n  trap(): Error {\n    return this._error;\n  }\n\n  asError<I2, O2>(): Writer<I2, O2> {\n    return this as any;\n  }\n\n  andThen<O2>(that: Writer<I, O2>): Writer<I, O2> {\n    return this as any;\n  }\n}\n\n/** @hidden */\nclass WriterAndThen<I, O> extends Writer<I, O> {\n  /** @hidden */\n  readonly _head: Writer<I, any>;\n  /** @hidden */\n  readonly _tail: Writer<I, O>;\n\n  constructor(head: Writer<I, any>, tail: Writer<I, O>) {\n    super();\n    this._head = head;\n    this._tail = tail;\n  }\n\n  pull(output: Output): Writer<I, O> {\n    let head = this._head;\n    if (head.isCont()) {\n      head = head.pull(output);\n    }\n    if (head.isError()) {\n      return head.asError();\n    } else if (head.isDone()) {\n      return this._tail.pull(output);\n    } else {\n      return new WriterAndThen<I, O>(head, this._tail);\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output} from \"./Output\";\nimport {WriterException} from \"./WriterException\";\nimport {Writer} from \"./Writer\";\n\n/** @hidden */\nexport class StringWriter<I> extends Writer<I, unknown> {\n  private readonly _value: unknown;\n  private readonly _input: string;\n  private readonly _index: number;\n\n  constructor(value: unknown, input: string, index: number = 0) {\n    super();\n    this._value = value;\n    this._input = input;\n    this._index = index;\n  }\n\n  feed(input: unknown): Writer<I, unknown> {\n    return new StringWriter(input, \"\" + input);\n  }\n\n  pull(output: Output): Writer<I, unknown> {\n    return StringWriter.write(output, this._value, this._input, this._index);\n  }\n\n  static write<I>(output: Output, value: unknown, input: string, index: number = 0): Writer<I, unknown> {\n    const length = input.length;\n    while (index < length && output.isCont()) {\n      let c = input.codePointAt(index);\n      if (c === void 0) {\n        c = input.charCodeAt(index);\n      }\n      output = output.write(c);\n      index = input.offsetByCodePoints(index, 1);\n    }\n    if (index === length) {\n      return Writer.done(value);\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new StringWriter(value, input, index);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input} from \"./Input\";\nimport {AnyOutputSettings, OutputSettings} from \"./OutputSettings\";\nimport {Output} from \"./Output\";\nimport {Writer} from \"./Writer\";\nimport {StringInput} from \"./StringInput\";\nimport {StringOutput} from \"./StringOutput\";\nimport {StringWriter} from \"./StringWriter\";\n\n/**\n * Unicode code point [[Input]]/[[Output]]/[[Writer]] factory.\n *\n * The `Unicode.stringInput(...)` function returns an `Input` that reads the\n * Unicode code points of a `string`.\n *\n * The `Unicode.stringOutput(...)}` function returns an `Output` that writes\n * Unicode code points to an internal buffer, and [[Output.bind binds]] a\n * `string` containing all written code points.\n */\nexport class Unicode {\n  private constructor() {\n    // nop\n  }\n\n  static stringInput(string: string): Input {\n    return new StringInput(string);\n  }\n\n  /**\n   * Returns a new `Output` that appends Unicode code points to the given\n   * `string`, using the given output `settings`.  The returned `Output`\n   * accepts an unbounded number of code points, remaining permanently in the\n   * _cont_ state, and [[Output.bind binds]] a `string` containing the given\n   * `string`, and all appended code points.\n   */\n  static stringOutput(string?: string, settings?: AnyOutputSettings): Output<string>;\n  /**\n   * Returns a new `Output` that buffers Unicode code points, using the given\n   * output `settings`.  The returned `Output` accepts an unbounded number of\n   * code points, remaining permanently in the _cont_ state, and [[Output.bind\n   * binds]] a `string` containing all written code points.\n   */\n  static stringOutput(settings?: AnyOutputSettings): Output<string>;\n  static stringOutput(string?: string | AnyOutputSettings, settings?: AnyOutputSettings): Output<string> {\n    if (settings === void 0 && typeof string !== \"string\") {\n      settings = string;\n      string = \"\";\n    } else if (typeof string !== \"string\") {\n      string = \"\";\n    }\n    settings = OutputSettings.fromAny(settings);\n    return new StringOutput(string, settings);\n  }\n\n  static stringWriter<I>(): Writer<I, unknown>;\n  static stringWriter<I, O>(input: O): Writer<I, O>;\n  static stringWriter<I, O>(input?: O): Writer<I, unknown> {\n    if (input === void 0) {\n      return new StringWriter(void 0, \"\");\n    } else {\n      return new StringWriter(input, \"\" + input);\n    }\n  }\n\n  static writeString<I>(input: unknown, output: Output): Writer<I, unknown> {\n    return StringWriter.write(output, void 0, \"\" + input);\n  }\n\n  /** @hidden */\n  static isAlpha(c: number): boolean {\n    return c >= 65/*'A'*/ && c <= 90/*'Z'*/\n        || c >= 97/*'a'*/ && c <= 122/*'z'*/;\n  }\n\n  /** @hidden */\n  static isSpace(c: number): boolean {\n    return c === 0x20 || c === 0x9;\n  }\n\n  /** @hidden */\n  static isNewline(c: number): boolean {\n    return c === 0xa || c === 0xd;\n  }\n\n  /** @hidden */\n  static isWhitespace(c: number): boolean {\n    return Unicode.isSpace(c) || Unicode.isNewline(c);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Tag} from \"./Tag\";\nimport {AnyOutputSettings} from \"./OutputSettings\";\nimport {Output} from \"./Output\";\nimport {Display} from \"./Display\";\nimport {Debug} from \"./Debug\";\nimport {Unicode} from \"./Unicode\";\n\n/**\n * Text format utility functions.\n */\nexport class Format {\n  private constructor() {\n  }\n\n  /**\n   * Writes the code points of the human-readable [[Display]] string for the\n   * given `object` to `output`.  Assumes `output` is a Unicode `Output` writer\n   * with sufficient capacity.  Delegates to [[Display.display]], if `object`\n   * implements `Display`; otherwise writes the result of `Object.toString`.\n   *\n   * @throws [[OutputException]] if the `output` exits the _cont_ state before\n   *         the full display string has been written.\n   */\n  static display(object: unknown, output: Output): void;\n\n  /**\n   * Returns the human-readable [[Display]] string for the givem `object`,\n   * output using the given `settings`.  Delegates to [[Display.displa]],\n   * if `object` implements `Display`; otherwise returns the result of\n   * `Object.toString`.\n   */\n  static display(object: unknown, settings?: AnyOutputSettings): string;\n\n  static display(object: unknown, output?: Output | AnyOutputSettings): void | string {\n    const notOutput = !(output instanceof Output);\n    if (object === void 0) {\n      if (output === void 0) {\n        return \"undefined\";\n      } else {\n        if (!(output instanceof Output)) {\n          output = Unicode.stringOutput(output);\n        }\n        output = output.write(\"undefined\");\n      }\n    } else if (object === null) {\n      if (output === void 0) {\n        return \"null\";\n      } else {\n        if (!(output instanceof Output)) {\n          output = Unicode.stringOutput(output);\n        }\n        output = output.write(\"null\");\n      }\n    } else if (typeof object === \"number\") {\n      if (output === void 0) {\n        return \"\" + object;\n      } else {\n        if (!(output instanceof Output)) {\n          output = Unicode.stringOutput(output);\n        }\n        Format.displayNumber(object, output);\n      }\n    } else if (typeof object === \"string\") {\n      if (output === void 0) {\n        return object;\n      } else {\n        if (!(output instanceof Output)) {\n          output = Unicode.stringOutput(output);\n        }\n        output = output.write(object);\n      }\n    } else if (object && typeof (object as any).display === \"function\") {\n      if (!(output instanceof Output)) {\n        output = Unicode.stringOutput(output);\n      }\n      (object as Display).display(output);\n    } else {\n      if (output === void 0) {\n        return \"\" + object;\n      } else {\n        if (!(output instanceof Output)) {\n          output = Unicode.stringOutput(output);\n        }\n        output = output.write(\"\" + object);\n      }\n    }\n    if (notOutput) {\n      return output.toString();\n    }\n  }\n\n  /**\n   * Writes the code points of the developer-readable [[Debug]] string for the\n   * given `object` to `output`.  Assumes `output` is a Unicode `Output` writer\n   * with sufficient capacity.  Delegates to [[Debug.debug]], if `object`\n   * implements `Debug`; writes a JavaScript string literal, if `object` is a\n   * `string`, and writes a JavaScript number literal, if `object` is a\n   * `number`; otherwise writes the result of `Object.toString`.\n   *\n   * @throws [[OutputException]] if the `output` exits the _cont_ state before\n   *         the full debug string has been written.\n   */\n  static debug(object: unknown, output: Output): void;\n\n  /**\n   * Returns the developer-readable [[Debug]] string for the givem `object`,\n   * output using the given `settings`.  Delegates to [[Debug.debug]], if\n   * `object` implements `Debug`; returns a JavaScript string literal, if\n   * `object` is a `string`, and returns a JavaScript number literal, if\n   * `object` is a `number`; otherwise returns the result of `Object.toString`.\n   */\n  static debug(object: unknown, settings?: AnyOutputSettings): string;\n\n  static debug(object: unknown, output?: Output | AnyOutputSettings): void | string {\n    const notOutput = !(output instanceof Output);\n    if (object === void 0) {\n      if (output === void 0) {\n        return \"undefined\";\n      } else {\n        if (!(output instanceof Output)) {\n          output = Unicode.stringOutput(output);\n        }\n        output = output.write(\"undefined\");\n      }\n    } else if (object === null) {\n      if (output === void 0) {\n        return \"null\";\n      } else {\n        if (!(output instanceof Output)) {\n          output = Unicode.stringOutput(output);\n        }\n        output = output.write(\"null\");\n      }\n    } else if (typeof object === \"number\") {\n      if (output === void 0) {\n        return \"\" + object;\n      } else {\n        if (!(output instanceof Output)) {\n          output = Unicode.stringOutput(output);\n        }\n        Format.debugNumber(object, output);\n      }\n    } else if (typeof object === \"string\") {\n      if (!(output instanceof Output)) {\n        output = Unicode.stringOutput(output);\n      }\n      Format.debugString(object, output);\n    } else if (typeof (object as any).debug === \"function\") {\n      if (!(output instanceof Output)) {\n        output = Unicode.stringOutput(output);\n      }\n      (object as Debug).debug(output);\n    } else {\n      if (output === void 0) {\n        return \"\" + object;\n      } else {\n        if (!(output instanceof Output)) {\n          output = Unicode.stringOutput(output);\n        }\n        output = output.write(\"\" + object);\n      }\n    }\n    if (notOutput) {\n      return output.toString();\n    }\n  }\n\n  /**\n   * Writes the code points of the numeric string for the given `value`\n   * to `output`.\n   *\n   * @throws [[OutputException]] if the `output` exits the _cont_ state before\n   *         the full numeric string has been written.\n   */\n  static displayNumber(value: number, output: Output): void {\n    if (isFinite(value) && Math.floor(value) === value && Math.abs(value) < 2147483648) {\n      if (value < 0) {\n        output = output.write(45/*'-'*/);\n      }\n      if (value > -10 && value < 10) {\n        output = output.write(48/*'0'*/ + Math.abs(value));\n      } else {\n        const digits = new Array<number>(19);\n        let x = value;\n        let i = 18;\n        while (x) {\n          digits[i] = Math.abs((x % 10) | 0);\n          x = (x / 10) | 0;\n          i -= 1;\n        }\n        i += 1;\n        while (i < 19) {\n          output = output.write(48/*'0'*/ + digits[i]);\n          i += 1;\n        }\n      }\n    } else {\n      output = output.write(\"\" + value);\n    }\n  }\n\n  /**\n   * Writes the code points of the JavaScript numeric literal for the given\n   * `value` to `output`.\n   *\n   * @throws [[OutputException]] if the `output` exits the _cont_ state before\n   *         the full numeric literal has been written.\n   */\n  static debugNumber(value: number, output: Output): void {\n    Format.displayNumber(value, output);\n  }\n\n  /**\n   * Writes the code points of the JavaScript character literal for the given\n   * `character` to `output`.\n   *\n   * @throws [[OutputException]] if the `output` exits the _cont_ state before\n   *         the full character literal has been written.\n   */\n  static debugChar(character: number, output: Output): void {\n    output = output.write(39/*'\\''*/);\n    switch (character) {\n        case 8/*'\\b'*/: output.write(92/*'\\\\'*/).write(98/*'b'*/); break;\n        case 9/*'\\t'*/: output.write(92/*'\\\\'*/).write(116/*'t'*/); break;\n        case 10/*'\\n'*/: output.write(92/*'\\\\'*/).write(110/*'n'*/); break;\n        case 12/*'\\f'*/: output.write(92/*'\\\\'*/).write(102/*'f'*/); break;\n        case 13/*'\\r'*/: output.write(92/*'\\\\'*/).write(114/*'r'*/); break;\n        case 34/*'\\\"'*/: output.write(92/*'\\\\'*/).write(34/*'\\\"'*/); break;\n        case 39/*'\\\"'*/: output.write(92/*'\\\\'*/).write(39/*'\\''*/); break;\n        case 92/*'\\\\'*/: output.write(92/*'\\\\'*/).write(92/*'\\\\'*/); break;\n      default:\n        if (character >= 0x0000 && character <= 0x001f\n            || character >= 0x007f && character <= 0x009f) {\n          output = output.write(92/*'\\\\'*/).write(117/*'u'*/)\n            .write(Format.encodeHex(character >>> 12 & 0xf))\n            .write(Format.encodeHex(character >>>  8 & 0xf))\n            .write(Format.encodeHex(character >>>  4 & 0xf))\n            .write(Format.encodeHex(character        & 0xf));\n        } else {\n          output = output.write(character);\n        }\n    }\n    output = output.write(39/*'\\''*/);\n  }\n\n  /**\n   * Writes the code points of the JavaScript string literal for the given\n   * `string` to `output`.\n   *\n   * @throws [[OutputException]] if the `output` exits the _cont_ state before\n   *         the full string literal has been written.\n   */\n  static debugString(string: string, output: Output): void {\n    output = output.write(34/*'\\\"'*/);\n    let input = Unicode.stringInput(string);\n    while (input.isCont()) {\n      const c = input.head();\n      switch (c) {\n        case 8/*'\\b'*/: output.write(92/*'\\\\'*/).write(98/*'b'*/); break;\n        case 9/*'\\t'*/: output.write(92/*'\\\\'*/).write(116/*'t'*/); break;\n        case 10/*'\\n'*/: output.write(92/*'\\\\'*/).write(110/*'n'*/); break;\n        case 12/*'\\f'*/: output.write(92/*'\\\\'*/).write(102/*'f'*/); break;\n        case 13/*'\\r'*/: output.write(92/*'\\\\'*/).write(114/*'r'*/); break;\n        case 34/*'\\\"'*/: output.write(92/*'\\\\'*/).write(34/*'\\\"'*/); break;\n        case 92/*'\\\\'*/: output.write(92/*'\\\\'*/).write(92/*'\\\\'*/); break;\n        default:\n          if (c >= 0x0000 && c <= 0x001f || c >= 0x007f && c <= 0x009f) {\n            output = output.write(92/*'\\\\'*/).write(117/*'u'*/)\n              .write(Format.encodeHex(c >>> 12 & 0xf))\n              .write(Format.encodeHex(c >>>  8 & 0xf))\n              .write(Format.encodeHex(c >>>  4 & 0xf))\n              .write(Format.encodeHex(c        & 0xf));\n          } else {\n            output = output.write(c);\n          }\n      }\n      input = input.step();\n    }\n    output = output.write(34/*'\\\"'*/);\n  }\n\n  private static encodeHex(x: number): number {\n    if (x < 10) {\n      return 48/*'0'*/ + x;\n    } else {\n      return 65/*'A'*/ + (x - 10);\n    }\n  }\n\n  private static _lineSeparator?: string;\n\n  /**\n   * Returns the operting system specific string used to separate lines of text.\n   */\n  static lineSeparator(): string {\n    if (!Format._lineSeparator) {\n      if (typeof require === \"function\") {\n        const os = require(\"os\");\n        if (os) {\n          Format._lineSeparator = os.EOL;\n        }\n      }\n      if (!Format._lineSeparator) {\n        Format._lineSeparator = \"\\n\";\n      }\n    }\n    return Format._lineSeparator;\n  }\n\n  /** @hidden */\n  static readonly Prefixes: ReadonlyArray<string> = [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\",\" Z\", \"Y\"];\n\n  /**\n   * Returns a string representation of `value` scaled by its SI magnitude,\n   * keeping at most `precision` digits past the decimal place, appended with\n   * the appropriate SI prefix.\n   */\n  static prefix(value: number, precision: number = 1): string {\n    if (isFinite(value)) {\n      const exponential = Math.abs(value).toExponential();\n      const exponentIndex = exponential.indexOf(\"e\");\n      const exponent = exponentIndex >= 0 ? +exponential.slice(exponentIndex + 1) : NaN;\n      const power = Math.min(Math.max(-8, Math.floor(exponent / 3)), 8) * 3;\n      const scaled = Math.pow(10, -power) * value;\n      let s = Format.trimTrailingZeros(Math.abs(scaled).toFixed(precision));\n      if (scaled < 0 && +s !== 0) {\n        s = \"-\" + s;\n      }\n      s += Format.Prefixes[8 + power / 3];\n      return s;\n    } else {\n      return \"\" + value;\n    }\n  }\n\n  /** @hidden */\n  static trimTrailingZeros(s: string): string {\n    let i0 = -1;\n    let i1: number | undefined;\n    for (let i = 1, n = s.length; i < n; i += 1) {\n      const c = s.charCodeAt(i);\n      if (c === 46/*'.'*/) {\n        i0 = i; // candidate start of trailing zeros\n        i1 = i; // candidate end of trailing zeros\n      } else if (c === 48/*'0'*/) {\n        if (i0 === 0) { // if after decimal\n          i0 = i; // new candidate start of trailing zeros\n        }\n        i1 = i; // new candidate end of trailing zeros\n      } else if (c >= 49/*'1'*/ && c <= 57/*'9'*/) {\n        if (i0 > 0) { // if non-zero digit after decimal\n          i0 = 0; // no candidate start of trailing zeros\n        }\n      } else if (i0 > 0) { // if non-numeric character after decimal\n        break; // accept current range of trailing zeros\n      }\n    }\n    if (i0 > 0) {\n      s = s.slice(0, i0) + s.slice(i1! + 1); // cut out trailing zeros\n    }\n    return s;\n  }\n\n  /**\n   * Returns a string representation of the duration represented by the given\n   * number of milliseconds.\n   */\n  static duration(millis: number, separator: string = \" \"): string {\n    if (isFinite(millis)) {\n      const SECOND = 1000;\n      const MINUTE = 60 * SECOND;\n      const HOUR = 60 * MINUTE;\n      const DAY = 24 * HOUR;\n      const WEEK = 7 * DAY;\n      let weeks: number | undefined;\n      if (millis > WEEK) {\n        weeks = Math.floor(millis / WEEK);\n        millis %= WEEK;\n      }\n      let days: number | undefined;\n      if (millis > DAY) {\n        days = Math.floor(millis / DAY);\n        millis %= DAY;\n      }\n      let hours: number | undefined;\n      if (millis > HOUR) {\n        hours = Math.floor(millis / HOUR);\n        millis %= HOUR;\n      }\n      let minutes: number | undefined;\n      if (millis > MINUTE) {\n        minutes = Math.floor(millis / MINUTE);\n        millis %= MINUTE;\n      }\n      let seconds: number | undefined;\n      if (millis > SECOND) {\n        seconds = Math.floor(millis / SECOND);\n        millis %= SECOND;\n      }\n      let s = \"\";\n      if (weeks !== void 0) {\n        s += weeks + \"w\";\n      }\n      if (days !== void 0) {\n        s += (s ? separator : \"\") + days + \"d\";\n      }\n      if (hours !== void 0) {\n        s += (s ? separator : \"\") + hours + \"h\";\n      }\n      if (minutes !== void 0) {\n        s += (s ? separator : \"\") + minutes + \"m\";\n      }\n      if (seconds !== void 0 || !millis) {\n        s += (s ? separator : \"\") + (seconds || 0) + \"s\";\n      }\n      if (millis && !s) {\n        s += millis + \"ms\";\n      }\n      return s;\n    } else {\n      return \"\" + millis;\n    }\n  }\n}\nTag.Format = Format;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashCode, Murmur3} from \"@swim/util\";\nimport {Output} from \"./Output\";\nimport {Format} from \"./Format\";\nimport {Debug} from \"./Debug\";\n\n/**\n * Either an [[InputSettings]] instance, or an [[InputSettingsInit]] object\n * initializer.\n */\nexport type AnyInputSettings = InputSettings | InputSettingsInit;\n\nexport interface InputSettingsInit {\n  isStripped?: boolean;\n}\n\n/**\n * [[Input]] consumption parameters.  `InputSettings` provide contextual\n * configuration parameters to input consumers, such as [[Parser Parsers]].\n */\nexport class InputSettings implements Debug, HashCode {\n  /** @hidden */\n  readonly _isStrict: boolean;\n\n  protected constructor(isStripped: boolean) {\n    this._isStrict = isStripped;\n  }\n\n  /**\n   * Returns `true` if input consumers should not include diagnostic metadata\n   * in generated output.\n   */\n  isStripped(): boolean;\n\n  /**\n   * Returns a copy of these settings with the given `isStripped` flag.\n   */\n  isStripped(isStripped: boolean): InputSettings;\n\n  isStripped(isStripped?: boolean): boolean | InputSettings {\n    if (isStripped === void 0) {\n      return this._isStrict;\n    } else {\n      return this.copy(isStripped);\n    }\n  }\n\n  protected copy(isStripped: boolean): InputSettings {\n    return InputSettings.create(isStripped);\n  }\n\n  protected canEqual(that: unknown): boolean {\n    return that instanceof InputSettings;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof InputSettings) {\n      return that.canEqual(this) && this._isStrict === that._isStrict;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (InputSettings._hashSeed === void 0) {\n      InputSettings._hashSeed = Murmur3.seed(InputSettings);\n    }\n    return Murmur3.mash(Murmur3.mix(InputSettings._hashSeed,\n        Murmur3.hash(this._isStrict)));\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"InputSettings\").write(46/*'.'*/);\n    if (!this._isStrict) {\n      output = output.write(\"standard\");\n    } else {\n      output = output.write(\"stripped\");\n    }\n    output = output.write(40/*'('*/).write(41/*')'*/);\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  private static _hashSeed?: number;\n  private static _standard?: InputSettings;\n  private static _stripped?: InputSettings;\n\n  /**\n   * Returns `InputSettings` configured to include diagnostic metadata in\n   * generated output.\n   */\n  static standard(): InputSettings {\n    if (!InputSettings._standard) {\n      InputSettings._standard = new InputSettings(false);\n    }\n    return InputSettings._standard;\n  }\n\n  /**\n   * Returns `InputSettings` configured to not include diagnostic metadata in\n   * generated output.\n   */\n  static stripped(): InputSettings {\n    if (!InputSettings._stripped) {\n      InputSettings._stripped = new InputSettings(false);\n    }\n    return InputSettings._stripped;\n  }\n\n  /**\n   * Returns `InputSettings` configured to not include diagnostic metadata in\n   * generated output, if `isStripped` is `true`.\n   */\n  static create(isStripped?: boolean): InputSettings {\n    if (isStripped) {\n      return InputSettings.stripped();\n    }\n    return InputSettings.standard();\n  }\n\n  /**\n   * Converts the loosely typed `settings` to an instance of `InputSettings`.\n   */\n  static fromAny(settings: AnyInputSettings | undefined): InputSettings {\n    if (settings instanceof InputSettings) {\n      return settings;\n    } else if (typeof settings === \"object\" && settings) {\n       return InputSettings.create(settings.isStripped);\n    } else {\n      return InputSettings.standard();\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Mark} from \"./Mark\";\nimport {InputException} from \"./InputException\";\nimport {AnyInputSettings, InputSettings} from \"./InputSettings\";\nimport {Input} from \"./Input\";\n\n/**\n * Non-blocking token stream buffer.\n */\nexport abstract class InputBuffer extends Input {\n  abstract isPart(): boolean;\n  abstract isPart(isPart: boolean): InputBuffer;\n\n  abstract index(): number;\n  abstract index(index: number): InputBuffer;\n\n  abstract limit(): number;\n  abstract limit(limit: number): InputBuffer;\n\n  abstract capacity(): number;\n\n  abstract remaining(): number;\n\n  abstract has(index: number): boolean;\n\n  abstract get(index: number): number;\n\n  abstract set(index: number, token: number): void;\n\n  abstract step(offset?: number): InputBuffer;\n\n  abstract seek(mark: Mark): InputBuffer;\n\n  abstract id(): unknown | null;\n  abstract id(id: unknown | null): InputBuffer;\n\n  abstract mark(): Mark;\n  abstract mark(mark: Mark): Input;\n\n  abstract settings(): InputSettings;\n  abstract settings(settings: AnyInputSettings): Input;\n\n  abstract clone(): InputBuffer;\n\n  private static _emptyBuffer: InputBuffer;\n\n  private static _doneBuffer: InputBuffer;\n\n  /**\n   * Returns an `InputBuffer}` in the _empty_ state.\n   */\n  static empty(id: unknown | null = null, mark: Mark = Mark.zero(),\n               settings: InputSettings = InputSettings.standard()): InputBuffer {\n    if (id === null && mark === Mark.zero() && settings === InputSettings.standard()) {\n      if (!InputBuffer._emptyBuffer) {\n        InputBuffer._emptyBuffer = new InputBufferEmpty(null, Mark.zero(), InputSettings.standard());\n      }\n      return InputBuffer._emptyBuffer;\n    }\n    return new InputBufferEmpty(id, mark, settings);\n  }\n\n  /**\n   * Returns an `InputBuffer` in the _done_ state.\n   */\n  static done(id: unknown | null = null, mark: Mark = Mark.zero(),\n              settings: InputSettings = InputSettings.standard()): InputBuffer {\n    if (id === null && mark === Mark.zero() && settings === InputSettings.standard()) {\n      if (!InputBuffer._doneBuffer) {\n        InputBuffer._doneBuffer = new InputBufferDone(null, Mark.zero(), InputSettings.standard());\n      }\n      return InputBuffer._doneBuffer;\n    }\n    return new InputBufferDone(id, mark, settings);\n  }\n\n  /**\n   * Returns an `InputBuffer` in the _error_ state, with the given input `error`.\n   */\n  static error(error: Error, id: unknown | null = null, mark: Mark = Mark.zero(),\n               settings: InputSettings = InputSettings.standard()): InputBuffer {\n    return new InputBufferError(error, id, mark, settings);\n  }\n}\n\n/** @hidden */\nclass InputBufferEmpty extends InputBuffer {\n  /** @hidden */\n  readonly _id: unknown | null;\n  /** @hidden */\n  readonly _mark: Mark;\n  /** @hidden */\n  readonly _settings: InputSettings;\n\n  constructor(id: unknown | null, mark: Mark, settings: InputSettings) {\n    super();\n    this._id = id;\n    this._mark = mark;\n    this._settings = settings;\n  }\n\n  isCont(): boolean {\n    return false;\n  }\n\n  isEmpty(): boolean {\n    return true;\n  }\n\n  isDone(): boolean {\n    return false;\n  }\n\n  isError(): boolean {\n    return false;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): InputBuffer;\n  isPart(isPart?: boolean): boolean | InputBuffer {\n    if (isPart === void 0) {\n      return true;\n    } else if (isPart) {\n      return this;\n    } else {\n      return InputBuffer.done(this._id, this._mark, this._settings);\n    }\n  }\n\n  index(): number;\n  index(index: number): InputBuffer;\n  index(index?: number): number | InputBuffer {\n    if (index === void 0) {\n      return 0;\n    } else if (index === 0) {\n      return this;\n    } else {\n      const error = new InputException(\"invalid index\");\n      return InputBuffer.error(error, this._id, this._mark, this._settings);\n    }\n  }\n\n  limit(): number;\n  limit(limit: number): InputBuffer;\n  limit(limit?: number): number | InputBuffer {\n    if (limit === void 0) {\n      return 0;\n    } else if (limit === 0) {\n      return this;\n    } else {\n      const error = new InputException(\"invalid limit\");\n      return InputBuffer.error(error, this._id, this._mark, this._settings);\n    }\n  }\n\n  capacity(): number {\n    return 0;\n  }\n\n  remaining(): number {\n    return 0;\n  }\n\n  has(index: number): boolean {\n    return false;\n  }\n\n  get(index: number): number {\n    throw new InputException();\n  }\n\n  set(index: number, token: number): void {\n    throw new InputException();\n  }\n\n  head(): number {\n    throw new InputException();\n  }\n\n  step(offset?: number): InputBuffer {\n    const error = new InputException(\"empty step\");\n    return InputBuffer.error(error, this._id, this._mark, this._settings);\n  }\n\n  seek(mark: Mark): InputBuffer {\n    const error = new InputException(\"empty seek\");\n    return InputBuffer.error(error, this._id, this._mark, this._settings);\n  }\n\n  id(): unknown | null;\n  id(id: unknown | null): InputBuffer;\n  id(id?: unknown | null): unknown | null | InputBuffer {\n    if (id === void 0) {\n      return this._id;\n    } else {\n      return InputBuffer.empty(id, this._mark, this._settings);\n    }\n  }\n\n  mark(): Mark;\n  mark(mark: Mark): InputBuffer;\n  mark(mark?: Mark): Mark | InputBuffer {\n    if (mark === void 0) {\n      return this._mark;\n    } else {\n      return InputBuffer.empty(this._id, mark, this._settings);\n    }\n  }\n\n  settings(): InputSettings;\n  settings(settings: InputSettings): InputBuffer;\n  settings(settings?: InputSettings): InputSettings | InputBuffer {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      return InputBuffer.empty(this._id, this._mark, settings);\n    }\n  }\n\n  clone(): InputBuffer {\n    return this;\n  }\n}\n\n/** @hidden */\nclass InputBufferDone extends InputBuffer {\n  /** @hidden */\n  readonly _id: unknown | null;\n  /** @hidden */\n  readonly _mark: Mark;\n  /** @hidden */\n  readonly _settings: InputSettings;\n\n  constructor(id: unknown | null, mark: Mark, settings: InputSettings) {\n    super();\n    this._id = id;\n    this._mark = mark;\n    this._settings = settings;\n  }\n\n  isCont(): boolean {\n    return false;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n\n  isDone(): boolean {\n    return true;\n  }\n\n  isError(): boolean {\n    return false;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): InputBuffer;\n  isPart(isPart?: boolean): boolean | InputBuffer {\n    if (isPart === void 0) {\n      return false;\n    } else if (isPart) {\n      return InputBuffer.empty(this._id, this._mark, this._settings);\n    } else {\n      return this;\n    }\n  }\n\n  index(): number;\n  index(index: number): InputBuffer;\n  index(index?: number): number | InputBuffer {\n    if (index === void 0) {\n      return 0;\n    } else if (index === 0) {\n      return this;\n    } else {\n      const error = new InputException(\"invalid index\");\n      return InputBuffer.error(error, this._id, this._mark, this._settings);\n    }\n  }\n\n  limit(): number;\n  limit(limit: number): InputBuffer;\n  limit(limit?: number): number | InputBuffer {\n    if (limit === void 0) {\n      return 0;\n    } else if (limit === 0) {\n      return this;\n    } else {\n      const error = new InputException(\"invalid limit\");\n      return InputBuffer.error(error, this._id, this._mark, this._settings);\n    }\n  }\n\n  capacity(): number {\n    return 0;\n  }\n\n  remaining(): number {\n    return 0;\n  }\n\n  has(index: number): boolean {\n    return false;\n  }\n\n  get(index: number): number {\n    throw new InputException();\n  }\n\n  set(index: number, token: number): void {\n    throw new InputException();\n  }\n\n  head(): number {\n    throw new InputException();\n  }\n\n  step(offset?: number): InputBuffer {\n    const error = new InputException(\"done step\");\n    return InputBuffer.error(error, this._id, this._mark, this._settings);\n  }\n\n  seek(mark: Mark): InputBuffer {\n    const error = new InputException(\"done seek\");\n    return InputBuffer.error(error, this._id, this._mark, this._settings);\n  }\n\n  id(): unknown | null;\n  id(id: unknown | null): InputBuffer;\n  id(id?: unknown | null): unknown | null | InputBuffer {\n    if (id === void 0) {\n      return this._id;\n    } else {\n      return InputBuffer.done(id, this._mark, this._settings);\n    }\n  }\n\n  mark(): Mark;\n  mark(mark: Mark): InputBuffer;\n  mark(mark?: Mark): Mark | InputBuffer {\n    if (mark === void 0) {\n      return this._mark;\n    } else {\n      return InputBuffer.done(this._id, mark, this._settings);\n    }\n  }\n\n  settings(): InputSettings;\n  settings(settings: InputSettings): InputBuffer;\n  settings(settings?: InputSettings): InputSettings | InputBuffer {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      return InputBuffer.done(this._id, this._mark, settings);\n    }\n  }\n\n  clone(): InputBuffer {\n    return this;\n  }\n}\n\n/** @hidden */\nclass InputBufferError extends InputBuffer {\n  /** @hidden */\n  readonly _id: unknown | null;\n  /** @hidden */\n  readonly _mark: Mark;\n  /** @hidden */\n  readonly _settings: InputSettings;\n  /** @hidden */\n  readonly _error: Error;\n\n  constructor(error: Error, id: unknown | null, mark: Mark, settings: InputSettings) {\n    super();\n    this._error = error;\n    this._id = id;\n    this._mark = mark;\n    this._settings = settings;\n  }\n\n  isCont(): boolean {\n    return false;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n\n  isDone(): boolean {\n    return false;\n  }\n\n  isError(): boolean {\n    return true;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): InputBuffer;\n  isPart(isPart?: boolean): boolean | InputBuffer {\n    if (isPart === void 0) {\n      return false;\n    } else {\n      return this;\n    }\n  }\n\n  index(): number;\n  index(index: number): InputBuffer;\n  index(index?: number): number | InputBuffer {\n    if (index === void 0) {\n      return 0;\n    } else if (index === 0) {\n      return this;\n    } else {\n      const error = new InputException(\"invalid index\");\n      return InputBuffer.error(error, this._id, this._mark, this._settings);\n    }\n  }\n\n  limit(): number;\n  limit(limit: number): InputBuffer;\n  limit(limit?: number): number | InputBuffer {\n    if (limit === void 0) {\n      return 0;\n    } else if (limit === 0) {\n      return this;\n    } else {\n      const error = new InputException(\"invalid limit\");\n      return InputBuffer.error(error, this._id, this._mark, this._settings);\n    }\n  }\n\n  capacity(): number {\n    return 0;\n  }\n\n  remaining(): number {\n    return 0;\n  }\n\n  has(index: number): boolean {\n    return false;\n  }\n\n  get(index: number): number {\n    throw new InputException();\n  }\n\n  set(index: number, token: number): void {\n    throw new InputException();\n  }\n\n  head(): number {\n    throw new InputException();\n  }\n\n  step(offset?: number): InputBuffer {\n    const error = new InputException(\"error step\");\n    return InputBuffer.error(error, this._id, this._mark, this._settings);\n  }\n\n  trap(): Error {\n    return this._error;\n  }\n\n  seek(mark: Mark): InputBuffer {\n    const error = new InputException(\"error seek\");\n    return InputBuffer.error(error, this._id, this._mark, this._settings);\n  }\n\n  id(): unknown | null;\n  id(id: unknown | null): InputBuffer;\n  id(id?: unknown | null): unknown | null | InputBuffer {\n    if (id === void 0) {\n      return this._id;\n    } else {\n      return InputBuffer.error(this._error, id, this._mark, this._settings);\n    }\n  }\n\n  mark(): Mark;\n  mark(mark: Mark): InputBuffer;\n  mark(mark?: Mark): Mark | InputBuffer {\n    if (mark === void 0) {\n      return this._mark;\n    } else {\n      return InputBuffer.error(this._error, this._id, mark, this._settings);\n    }\n  }\n\n  settings(): InputSettings;\n  settings(settings: InputSettings): InputBuffer;\n  settings(settings?: InputSettings): InputSettings | InputBuffer {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      return InputBuffer.error(this._error, this._id, this._mark, settings);\n    }\n  }\n\n  clone(): InputBuffer {\n    return this;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyOutputSettings, OutputSettings} from \"./OutputSettings\";\nimport {Format} from \"./Format\";\nimport {OutputException} from \"./OutputException\";\nimport {Output} from \"./Output\";\n\n/**\n * Non-blocking token stream buffer.\n */\nexport abstract class OutputBuffer<T = unknown> extends Output<T> {\n  abstract isPart(): boolean;\n  abstract isPart(isPart: boolean): OutputBuffer<T>;\n\n  abstract index(): number;\n  abstract index(index: number): OutputBuffer<T>;\n\n  abstract limit(): number;\n  abstract limit(limit: number): OutputBuffer<T>;\n\n  abstract capacity(): number;\n\n  abstract remaining(): number;\n\n  abstract has(index: number): boolean;\n\n  abstract get(index: number): number;\n\n  abstract set(index: number, token: number): void;\n\n  abstract write(token: number): OutputBuffer<T>;\n  abstract write(string: string): OutputBuffer<T>;\n\n  writeln(string?: string): OutputBuffer<T> {\n    if (typeof string === \"string\") {\n      this.write(string);\n    }\n    return this.write(this.settings().lineSeparator());\n  }\n\n  display(object: unknown): OutputBuffer<T> {\n    Format.display(object, this);\n    return this;\n  }\n\n  debug(object: unknown): OutputBuffer<T> {\n    Format.debug(object, this);\n    return this;\n  }\n\n  abstract step(offset?: number): OutputBuffer<T>;\n\n  flush(): OutputBuffer<T> {\n    return this;\n  }\n\n  abstract settings(): OutputSettings;\n  abstract settings(settings: AnyOutputSettings): Output<T>;\n\n  clone(): OutputBuffer<T> {\n    throw new Error();\n  }\n\n  private static _fullBuffer: OutputBuffer<any>;\n\n  private static _doneBuffer: OutputBuffer<any>;\n\n  /**\n   * Returns an `OutputBuffer` in the _full_ state, that binds a `null` result.\n   */\n  static full<T>(value: T | null = null, settings: OutputSettings = OutputSettings.standard()): OutputBuffer<T> {\n    if (value === null && settings === OutputSettings.standard()) {\n      if (!OutputBuffer._fullBuffer) {\n        OutputBuffer._fullBuffer = new OutputBufferFull(value, OutputSettings.standard());\n      }\n      return OutputBuffer._fullBuffer;\n    }\n    return new OutputBufferFull<T>(value!, settings);\n\n  }\n\n  /**\n   * Returns an `OutputBuffer` in the _done_ state, that binds a `null` result.\n   */\n  static done<T>(value: T | null = null, settings: OutputSettings = OutputSettings.standard()): OutputBuffer<T> {\n    if (value === null && settings === OutputSettings.standard()) {\n      if (!OutputBuffer._doneBuffer) {\n        OutputBuffer._doneBuffer = new OutputBufferDone(value, OutputSettings.standard());\n      }\n      return OutputBuffer._doneBuffer;\n    }\n    return new OutputBufferDone<T>(value!, settings);\n  }\n\n  /**\n   * Returns an `OutputBuffer` in the _error_ state, with the given output `error`.\n   */\n  static error<T>(error: Error, settings: OutputSettings = OutputSettings.standard()): OutputBuffer<T> {\n    return new OutputBufferError<T>(error, settings);\n  }\n}\n\n/** @hidden */\nclass OutputBufferFull<T> extends OutputBuffer<T> {\n  /** @hidden */\n  readonly _value: T;\n  /** @hidden */\n  readonly _settings: OutputSettings;\n\n  constructor(value: T, settings: OutputSettings) {\n    super();\n    this._value = value;\n    this._settings = settings;\n  }\n\n  isCont(): boolean {\n    return false;\n  }\n\n  isFull(): boolean {\n    return true;\n  }\n\n  isDone(): boolean {\n    return false;\n  }\n\n  isError(): boolean {\n    return false;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): OutputBuffer<T>;\n  isPart(isPart?: boolean): boolean | OutputBuffer<T> {\n    if (isPart === void 0) {\n      return true;\n    } else if (isPart) {\n      return OutputBuffer.done(this._value, this._settings);\n    } else {\n      return this;\n    }\n  }\n\n  index(): number;\n  index(index: number): OutputBuffer<T>;\n  index(index?: number): number | OutputBuffer<T> {\n    if (index === void 0) {\n      return 0;\n    } else if (index === 0) {\n      return this;\n    } else {\n      return OutputBuffer.error(new OutputException(\"invalid index\"), this._settings);\n    }\n  }\n\n  limit(): number;\n  limit(limit: number): OutputBuffer<T>;\n  limit(limit?: number): number | OutputBuffer<T> {\n    if (limit === void 0) {\n      return 0;\n    } else if (limit === 0) {\n      return this;\n    } else {\n      return OutputBuffer.error(new OutputException(\"invalid index\"), this._settings);\n    }\n  }\n\n  capacity(): number {\n    return 0;\n  }\n\n  remaining(): number {\n    return 0;\n  }\n\n  has(index: number): boolean {\n    return false;\n  }\n\n  get(index: number): number {\n    throw new OutputException();\n  }\n\n  set(index: number, token: number): void {\n    throw new OutputException();\n  }\n\n  write(token: number): OutputBuffer<T>;\n  write(string: string): OutputBuffer<T>;\n  write(tokenOrString: number | string): OutputBuffer<T> {\n    return OutputBuffer.error(new OutputException(\"full\"), this._settings);\n  }\n\n  writeln(string?: string): OutputBuffer<T> {\n    return OutputBuffer.error(new OutputException(\"full\"), this._settings);\n  }\n\n  step(offset: number = 1): OutputBuffer<T> {\n    if (offset === 0) {\n      return this;\n    } else {\n      return OutputBuffer.error(new OutputException(\"invalid step\"), this._settings);\n    }\n  }\n\n  bind(): T {\n    return this._value;\n  }\n\n  settings(): OutputSettings;\n  settings(settings: OutputSettings): OutputBuffer<T>;\n  settings(settings?: OutputSettings): OutputSettings | OutputBuffer<T> {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      return OutputBuffer.full(this._value, settings);\n    }\n  }\n\n  clone(): OutputBuffer<T> {\n    return this;\n  }\n}\n\n/** @hidden */\nclass OutputBufferDone<T> extends OutputBuffer<T> {\n  /** @hidden */\n  readonly _value: T;\n  /** @hidden */\n  readonly _settings: OutputSettings;\n\n  constructor(value: T, settings: OutputSettings) {\n    super();\n    this._value = value;\n    this._settings = settings;\n  }\n\n  isCont(): boolean {\n    return false;\n  }\n\n  isFull(): boolean {\n    return false;\n  }\n\n  isDone(): boolean {\n    return true;\n  }\n\n  isError(): boolean {\n    return false;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): OutputBuffer<T>;\n  isPart(isPart?: boolean): boolean | OutputBuffer<T> {\n    if (isPart === void 0) {\n      return false;\n    } else if (isPart) {\n      return this;\n    } else {\n      return OutputBuffer.full(this._value, this._settings);\n    }\n  }\n\n  index(): number;\n  index(index: number): OutputBuffer<T>;\n  index(index?: number): number | OutputBuffer<T> {\n    if (index === void 0) {\n      return 0;\n    } else if (index === 0) {\n      return this;\n    } else {\n      return OutputBuffer.error(new OutputException(\"invalid index\"), this._settings);\n    }\n  }\n\n  limit(): number;\n  limit(limit: number): OutputBuffer<T>;\n  limit(limit?: number): number | OutputBuffer<T> {\n    if (limit === void 0) {\n      return 0;\n    } else if (limit === 0) {\n      return this;\n    } else {\n      return OutputBuffer.error(new OutputException(\"invalid index\"), this._settings);\n    }\n  }\n\n  capacity(): number {\n    return 0;\n  }\n\n  remaining(): number {\n    return 0;\n  }\n\n  has(index: number): boolean {\n    return false;\n  }\n\n  get(index: number): number {\n    throw new OutputException();\n  }\n\n  set(index: number, token: number): void {\n    throw new OutputException();\n  }\n\n  write(token: number): OutputBuffer<T>;\n  write(string: string): OutputBuffer<T>;\n  write(tokenOrString: number | string): OutputBuffer<T> {\n    return OutputBuffer.error(new OutputException(\"done\"), this._settings);\n  }\n\n  writeln(string?: string): OutputBuffer<T> {\n    return OutputBuffer.error(new OutputException(\"done\"), this._settings);\n  }\n\n  step(offset: number = 1): OutputBuffer<T> {\n    if (offset === 0) {\n      return this;\n    } else {\n      return OutputBuffer.error(new OutputException(\"invalid step\"), this._settings);\n    }\n  }\n\n  bind(): T {\n    return this._value;\n  }\n\n  settings(): OutputSettings;\n  settings(settings: OutputSettings): OutputBuffer<T>;\n  settings(settings?: OutputSettings): OutputSettings | OutputBuffer<T> {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      return OutputBuffer.done(this._value, settings);\n    }\n  }\n\n  clone(): OutputBuffer<T> {\n    return this;\n  }\n}\n\n/** @hidden */\nclass OutputBufferError<T> extends OutputBuffer<T> {\n  /** @hidden */\n  readonly _error: Error;\n  /** @hidden */\n  readonly _settings: OutputSettings;\n\n  constructor(error: Error, settings: OutputSettings) {\n    super();\n    this._error = error;\n    this._settings = settings;\n  }\n\n  isCont(): boolean {\n    return false;\n  }\n\n  isFull(): boolean {\n    return false;\n  }\n\n  isDone(): boolean {\n    return false;\n  }\n\n  isError(): boolean {\n    return true;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): OutputBuffer<T>;\n  isPart(isPart?: boolean): boolean | OutputBuffer<T> {\n    if (isPart === void 0) {\n      return false;\n    } else {\n      return this;\n    }\n  }\n\n  index(): number;\n  index(index: number): OutputBuffer<T>;\n  index(index?: number): number | OutputBuffer<T> {\n    if (index === void 0) {\n      return 0;\n    } else if (index === 0) {\n      return this;\n    } else {\n      return OutputBuffer.error(new OutputException(\"invalid index\"), this._settings);\n    }\n  }\n\n  limit(): number;\n  limit(limit: number): OutputBuffer<T>;\n  limit(limit?: number): number | OutputBuffer<T> {\n    if (limit === void 0) {\n      return 0;\n    } else if (limit === 0) {\n      return this;\n    } else {\n      return OutputBuffer.error(new OutputException(\"invalid index\"), this._settings);\n    }\n  }\n\n  capacity(): number {\n    return 0;\n  }\n\n  remaining(): number {\n    return 0;\n  }\n\n  has(index: number): boolean {\n    return false;\n  }\n\n  get(index: number): number {\n    throw new OutputException();\n  }\n\n  set(index: number, token: number): void {\n    throw new OutputException();\n  }\n\n  write(token: number): OutputBuffer<T>;\n  write(string: string): OutputBuffer<T>;\n  write(tokenOrString: number | string): OutputBuffer<T> {\n    return this;\n  }\n\n  writeln(string?: string): OutputBuffer<T> {\n    return this;\n  }\n\n  step(offset: number = 1): OutputBuffer<T> {\n    if (offset === 0) {\n      return this;\n    } else {\n      return OutputBuffer.error(new OutputException(\"invalid step\"), this._settings);\n    }\n  }\n\n  bind(): T {\n    throw new OutputException();\n  }\n\n  trap(): Error {\n    return this._error;\n  }\n\n  settings(): OutputSettings;\n  settings(settings: OutputSettings): OutputBuffer<T>;\n  settings(settings?: OutputSettings): OutputSettings | OutputBuffer<T> {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      return OutputBuffer.error(this._error, settings);\n    }\n  }\n\n  clone(): OutputBuffer<T> {\n    return this;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output} from \"./Output\";\n\n/**\n * Stylized text output utility functions.\n */\nexport class OutputStyle {\n  private constructor() {\n  }\n\n  /**\n   * Writes the ASCII reset escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static reset(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(48/*'0'*/).write(109/*'m'*/);\n    }\n  }\n\n  /**\n   * Writes the ASCII bold (increased intensity) escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static bold(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(49/*'1'*/).write(109/*'m'*/);\n    }\n  }\n\n  /**\n   * Writes the ASCII faint (decreased intensity) escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static faint(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(50/*'2'*/).write(109/*'m'*/);\n    }\n  }\n\n  /**\n   * Writes the ASCII black foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static black(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(48/*'0'*/).write(59/*';'*/)\n          .write(51/*'3'*/).write(48/*'0'*/).write(109/*'m'*/);\n    }\n  }\n\n  /**\n   * Writes the ASCII red foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static red(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(48/*'0'*/).write(59/*';'*/)\n          .write(51/*'3'*/).write(49/*'1'*/).write(109/*'m'*/);\n    }\n  }\n\n  /**\n   * Writes the ASCII green foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static green(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(48/*'0'*/).write(59/*';'*/)\n          .write(51/*'3'*/).write(50/*'2'*/).write(109/*'m'*/);\n    }\n  }\n\n  /**\n   * Writes the ASCII yellow foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static yellow(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(48/*'0'*/).write(59/*';'*/)\n          .write(51/*'3'*/).write(51/*'3'*/).write(109/*'m'*/);\n    }\n  }\n\n  /**\n   * Writes the ASCII blue foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static blue(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(48/*'0'*/).write(59/*';'*/)\n          .write(51/*'3'*/).write(52/*'4'*/).write(109/*'m'*/);\n    }\n  }\n\n  /**\n   * Writes the ASCII magenta foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static magenta(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(48/*'0'*/).write(59/*';'*/)\n          .write(51/*'3'*/).write(53/*'5'*/).write(109/*'m'*/);\n    }\n  }\n\n  /**\n   * Writes the ASCII cyan foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static cyan(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(48/*'0'*/).write(59/*';'*/)\n          .write(51/*'3'*/).write(54/*'6'*/).write(109/*'m'*/);\n    }\n  }\n\n  /**\n   * Writes the ASCII gray foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static gray(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(48/*'0'*/).write(59/*';'*/)\n          .write(51/*'3'*/).write(55/*'7'*/).write(109/*'m'*/);\n    }\n  }\n\n  /**\n   * Writes the ASCII bold black foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static blackBold(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(49/*'1'*/).write(59/*';'*/)\n          .write(51/*'3'*/).write(48/*'0'*/).write(109/*'m'*/);\n    }\n  }\n\n  /**\n   * Writes the ASCII bold red foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static redBold(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(49/*'1'*/).write(59/*';'*/)\n          .write(51/*'3'*/).write(49/*'1'*/).write(109/*'m'*/);\n    }\n  }\n\n  /**\n   * Writes the ASCII bold green foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static greenBold(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(49/*'1'*/).write(59/*';'*/)\n          .write(51/*'3'*/).write(50/*'2'*/).write(109/*'m'*/);\n    }\n  }\n\n  /**\n   * Writes the ASCII bold yellow foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static yellowBold(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(49/*'1'*/).write(59/*';'*/)\n          .write(51/*'3'*/).write(51/*'3'*/).write(109/*'m'*/);\n    }\n  }\n\n  /**\n   * Writes the ASCII bold blue foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static blueBold(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(49/*'1'*/).write(59/*';'*/)\n          .write(51/*'3'*/).write(52/*'4'*/).write(109/*'m'*/);\n    }\n  }\n\n  /**\n   * Writes the ASCII bold magenta foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static magentaBold(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(49/*'1'*/).write(59/*';'*/)\n          .write(51/*'3'*/).write(53/*'5'*/).write(109/*'m'*/);\n    }\n  }\n\n  /**\n   * Writes the ASCII bold cyan foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static cyanBold(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(49/*'1'*/).write(59/*';'*/)\n          .write(51/*'3'*/).write(54/*'6'*/).write(109/*'m'*/);\n    }\n  }\n\n  /**\n   * Writes the ASCII bold gray foreground color escape code to `output`,\n   * if [[OutputSettings.isStyled output.settings().isStyled()]] is `true`.\n   *\n   * @throws [[OutputException]] if `output` exits the _cont_ state before the\n   *         full escape code has been written.\n   */\n  static grayBold(output: Output) {\n    if (output.settings().isStyled()) {\n      output = output.write(27).write(91/*'['*/).write(49/*'1'*/).write(59/*';'*/)\n          .write(51/*'3'*/).write(55/*'7'*/).write(109/*'m'*/);\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input} from \"./Input\";\nimport {Output} from \"./Output\";\nimport {Parser} from \"./Parser\";\nimport {Writer} from \"./Writer\";\nimport {Format} from \"./Format\";\nimport {Unicode} from \"./Unicode\";\nimport {Base10NumberParser} from \"./Base10NumberParser\";\nimport {Base10IntegerWriter} from \"./Base10IntegerWriter\";\n\n/**\n * Base-10 (decimal) encoding [[Parser]]/[[Writer]] factory.\n */\nexport class Base10 {\n  private constructor() {\n    // nop\n  }\n\n  /**\n   * Returns `true` if the Unicode code point `c` is a valid base-10 digit.\n   */\n  static isDigit(c: number): boolean {\n    return c >= 48/*'0'*/ && c <= 57/*'9'*/;\n  }\n\n  /**\n   * Returns the decimal quantity between `0` (inclusive) and `10` (exclusive)\n   * represented by the base-10 digit `c`.\n   *\n   * @throws `Error` if `c` is not a valid base-10 digit.\n   */\n  static decodeDigit(c: number): number {\n    if (c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n      return c - 48/*'0'*/;\n    } else {\n      const message = Unicode.stringOutput();\n      message.write(\"Invalid base-10 digit: \");\n      Format.debugChar(c, message);\n      throw new Error(message.bind());\n    }\n  }\n\n  /**\n   * Returns the Unicode code point of the base-10 digit that encodes the given\n   * decimal quantity between `0` (inclusive) and `10` (exclusive).\n   */\n  static encodeDigit(b: number): number {\n    if (b >= 0 && b <= 9) {\n      return 48/*'0'*/ + b;\n    } else {\n      throw new Error(\"\" + b);\n    }\n  }\n\n  /**\n   * Returns the number of whole decimal digits in the given absolute `value`.\n   */\n  static countDigits(value: number): number {\n    let size = 0;\n    do {\n      size += 1;\n      value = (value / 10) | 0;\n    } while (value);\n    return size;\n  }\n\n  static integerParser(): Parser<number> {\n    return new Base10.NumberParser(void 0, void 0, 0);\n  }\n\n  static parseInteger(input: Input): Parser<number> {\n    return Base10.NumberParser.parse(input, void 0, void 0, 0);\n  }\n\n  static decimalParser(): Parser<number> {\n    return new Base10.NumberParser(void 0, void 0, 1);\n  }\n\n  static parseDecimal(input: Input): Parser<number> {\n    return Base10.NumberParser.parse(input, void 0, void 0, 1);\n  }\n\n  static numberParser(): Parser<number> {\n    return new Base10.NumberParser();\n  }\n\n  static parseNumber(input: Input): Parser<number> {\n    return Base10.NumberParser.parse(input);\n  }\n\n  /**\n   * Returns a `Writer` that, when fed an input `number` value, returns a\n   * continuation that writes the base-10 (decimal) encoding of the input value.\n   */\n  static integerWriter(): Writer<number, unknown>;\n  /**\n   * Returns a `Writer` continuation that writes the base-10 (decimal) encoding\n   * of the `input` value.\n   */\n  static integerWriter(input: number): Writer<unknown, number>;\n  static integerWriter(input?: number): Writer<unknown, unknown> {\n    if (input === void 0) {\n      return new Base10.IntegerWriter(void 0, 0);\n    } else {\n      return new Base10.IntegerWriter(void 0, input);\n    }\n  }\n\n  /**\n   * Writes the base-10 (decimal) encoding of the `input` value to the `output`,\n   * returning a `Writer` continuation that knows how to write any remaining\n   * output that couldn't be immediately generated.\n   */\n  static writeInteger(input: number, output: Output): Writer<unknown, unknown> {\n    return Base10.IntegerWriter.write(output, void 0, input);\n  }\n\n  // Forward type declarations\n  /** @hidden */\n  static NumberParser: typeof Base10NumberParser; // defined by Base10NumberParser\n  /** @hidden */\n  static IntegerWriter: typeof Base10IntegerWriter; // defined by Base10IntegerWriter\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Objects, Severity} from \"@swim/util\";\nimport {Tag} from \"./Tag\";\nimport {Mark} from \"./Mark\";\nimport {Input} from \"./Input\";\nimport {OutputSettings} from \"./OutputSettings\";\nimport {Output} from \"./Output\";\nimport {OutputStyle} from \"./OutputStyle\";\nimport {Format} from \"./Format\";\nimport {Display} from \"./Display\";\nimport {Unicode} from \"./Unicode\";\nimport {Base10} from \"./Base10\";\n\n/**\n * Informational message attached to an input location.\n */\nexport class Diagnostic implements Display {\n  /** @hidden */\n  readonly _input: Input;\n  /** @hidden */\n  readonly _tag: Tag;\n  /** @hidden */\n  readonly _severity: Severity;\n  /** @hidden */\n  readonly _message: string | null;\n  /** @hidden */\n  readonly _note: string | null;\n  /** @hidden */\n  readonly _cause: Diagnostic | null;\n\n  constructor(input: Input, tag: Tag, severity: Severity, message: string | null,\n              note: string | null, cause: Diagnostic | null) {\n    this._input = input;\n    this._tag = tag;\n    this._severity = severity;\n    this._message = message;\n    this._note = note;\n    this._cause = cause;\n  }\n\n  /**\n   * Returns the `Input` source to which this diagnostic is attached.\n   */\n  input(): Input {\n    return this._input.clone();\n  }\n\n  /**\n   * Returns the annotated location `Tag` in the `input` to which this\n   * diagnostic is attached.\n   */\n  tag(): Tag {\n    return this._tag;\n  }\n\n  /**\n   * Returns the level of importance of this diagnostic.\n   */\n  severity(): Severity {\n    return this._severity;\n  }\n\n  /**\n   * Returns the help message that describes this diagnostic.\n   */\n  message(): string | null {\n    return this._message;\n  }\n\n  /**\n   * Returns an informative comment on the source context to which this\n   * diagnostic is attached.\n   */\n  note(): string | null {\n    return this._note;\n  }\n\n  /**\n   * Returns the `Diagnostic` cause of this diagnostic, forming a linked chain\n   * of diagnostics, or `null` if this diagnostic has no cause.\n   */\n  cause(): Diagnostic | null {\n    return this._cause;\n  }\n\n  private lineDigits(): number {\n    let digits = Base10.countDigits(this._tag.end().line());\n    if (this._cause !== null) {\n      digits = Math.max(digits, this._cause.lineDigits());\n    }\n    return digits;\n  }\n\n  display(output: Output): void {\n    const input = this._input.clone();\n    const start = this._tag.start();\n    const end = this._tag.end();\n    const severity = this._severity;\n    const message = this._message;\n    const note = this._note;\n    const cause = this._cause;\n    const contextLines = 2;\n    const lineDigits = this.lineDigits();\n    Diagnostic.displayDiagnostic(input, start, end, severity, message, note,\n                                 cause, contextLines, lineDigits, output);\n  }\n\n  toString(settings?: OutputSettings): string {\n    return Format.display(this, settings);\n  }\n\n  static from(input: Input, tag: Tag, severity: Severity, cause?: Diagnostic | null): Diagnostic;\n  static from(input: Input, tag: Tag, severity: Severity, message: string | null,\n              diagnostic?: Diagnostic | null): Diagnostic;\n  static from(input: Input, tag: Tag, severity: Severity, message: string | null,\n              note: string | null, cause?: Diagnostic | null): Diagnostic;\n  static from(input: Input, tag: Tag, severity: Severity, message?: Diagnostic | string | null,\n              note?: Diagnostic | string | null, cause?: Diagnostic | null): Diagnostic {\n    if (message instanceof Diagnostic) {\n      cause = message;\n      note = null;\n      message = null;\n    } else if (note instanceof Diagnostic) {\n      cause = note;\n      note = null;\n    }\n    input = input.clone();\n    if (message === void 0) {\n      message = null;\n    }\n    if (note === void 0) {\n      note = null;\n    }\n    if (cause === void 0) {\n      cause = null;\n    }\n    return new Diagnostic(input, tag, severity, message, note, cause);\n  }\n\n  static message(message: string, input: Input, cause?: Diagnostic | null): Diagnostic;\n  static message(message: string, input: Input, note: string, cause?: Diagnostic | null): Diagnostic;\n  static message(message: string, input: Input, severity: Severity, cause?: Diagnostic | null): Diagnostic;\n  static message(message: string, input: Input, severity?: Severity, note?: string, cause?: Diagnostic | null): Diagnostic;\n  static message(message: string, input: Input, severity?: Diagnostic | Severity | string | null,\n                 note?: Diagnostic | string | null, cause?: Diagnostic | null): Diagnostic {\n    if (severity === null || severity instanceof Diagnostic) {\n      cause = severity;\n      severity = void 0;\n    } else if (typeof severity === \"string\") {\n      note = severity;\n      severity = void 0;\n    }\n    if (note === null || note instanceof Diagnostic) {\n      cause = note;\n      note = void 0;\n    }\n    if (note === void 0) {\n      note = null;\n    }\n    if (severity === void 0) {\n      severity = Severity.error();\n    }\n\n    const mark = input.mark();\n    const source = input.clone();\n    source.seek();\n    return Diagnostic.from(source, mark, severity, message, note, cause);\n  }\n\n  static unexpected(input: Input, cause?: Diagnostic | null): Diagnostic;\n  static unexpected(input: Input, note: string, cause?: Diagnostic | null): Diagnostic;\n  static unexpected(input: Input, severity: Severity, cause?: Diagnostic | null): Diagnostic;\n  static unexpected(input: Input, severity?: Severity, note?: string, cause?: Diagnostic | null): Diagnostic;\n  static unexpected(input: Input, severity?: Diagnostic | Severity | string | null,\n                    note?: Diagnostic | string | null, cause?: Diagnostic | null): Diagnostic {\n    if (severity === null || severity instanceof Diagnostic) {\n      cause = severity;\n      severity = void 0;\n    } else if (typeof severity === \"string\") {\n      note = severity;\n      severity = void 0;\n    }\n    if (note === null || note instanceof Diagnostic) {\n      cause = note;\n      note = void 0;\n    }\n    if (note === void 0) {\n      note = null;\n    }\n    if (severity === void 0) {\n      severity = Severity.error();\n    }\n\n    let message;\n    if (input.isCont()) {\n      const output = Unicode.stringOutput().write(\"unexpected\").write(32/*' '*/);\n      Format.debugChar(input.head(), output);\n      message = output.bind();\n    } else {\n      message = \"unexpected end of input\";\n    }\n    const mark = input.mark();\n    const source = input.clone();\n    source.seek();\n    return Diagnostic.from(source, mark, severity, message, note, cause);\n  }\n\n  static expected(expected: string | number, input: Input, cause?: Diagnostic | null): Diagnostic;\n  static expected(expected: string | number, input: Input, note: string, cause?: Diagnostic | null): Diagnostic;\n  static expected(expected: string | number, input: Input, severity: Severity, cause?: Diagnostic | null): Diagnostic;\n  static expected(expected: string | number, input: Input, severity?: Severity, note?: string, cause?: Diagnostic | null): Diagnostic;\n  static expected(expected: string | number, input: Input, severity?: Diagnostic | Severity | string | null,\n                  note?: Diagnostic | string | null, cause?: Diagnostic | null): Diagnostic {\n    if (severity === null || severity instanceof Diagnostic) {\n      cause = severity;\n      severity = void 0;\n    } else if (typeof severity === \"string\") {\n      note = severity;\n      severity = void 0;\n    }\n    if (note === null || note instanceof Diagnostic) {\n      cause = note;\n      note = void 0;\n    }\n    if (note === void 0) {\n      note = null;\n    }\n    if (severity === void 0) {\n      severity = Severity.error();\n    }\n\n    let output = Unicode.stringOutput().write(\"expected\").write(32/*' '*/);\n    if (typeof expected === \"number\") {\n      Format.debugChar(expected, output);\n    } else {\n      output = output.write(expected);\n    }\n    output = output.write(44/*','*/).write(32/*' '*/).write(\"but found\").write(32/*' '*/);\n    if (input.isCont()) {\n      Format.debugChar(input.head(), output);\n    } else {\n      output = output.write(\"end of input\");\n    }\n    const message = output.bind();\n    const mark = input.mark();\n    const source = input.clone();\n    source.seek();\n    return Diagnostic.from(source, mark, severity, message, note, cause);\n  }\n\n  private static displayDiagnostic(input: Input, start: Mark, end: Mark,\n                                   severity: Severity, message: string | null,\n                                   note: string | null, cause: Diagnostic | null,\n                                   contextLines: number, lineDigits: number,\n                                   output: Output): void {\n    do {\n      if (message !== null) {\n        Diagnostic.displayMessage(severity, message, output);\n        output = output.writeln();\n      }\n      Diagnostic.displayAnchor(input, start, lineDigits, output);\n      output = output.writeln();\n      const next = Diagnostic.displayContext(input, start, end, severity, note,\n                                             cause, contextLines, lineDigits, output);\n      if (next !== null) {\n        output = output.writeln();\n        input = next._input.clone();\n        start = next._tag.start();\n        end = next._tag.end();\n        severity = next._severity;\n        message = next._message;\n        note = next._note;\n        cause = next._cause;\n      } else {\n        break;\n      }\n    } while (true);\n  }\n\n  /** @hidden */\n  static displayMessage(severity: Severity, message: string | null, output: Output): void {\n    Diagnostic.formatSeverity(severity, output);\n    output = output.write(severity.label());\n    OutputStyle.reset(output);\n    OutputStyle.bold(output);\n    output = output.write(58/*':'*/);\n    if (message !== null) {\n      output = output.write(32/*' '*/).write(message);\n    }\n    OutputStyle.reset(output);\n  }\n\n  private static displayAnchor(input: Input, start: Mark, lineDigits: number,\n                               output: Output): void {\n    Diagnostic.displayLineLeadArrow(lineDigits, output);\n    output = output.write(32/*' '*/);\n    const id = input.id();\n    if (id !== null) {\n      Format.display(id, output);\n    }\n    output = output.write(58/*':'*/);\n    Format.displayNumber(start._line, output);\n    output = output.write(58/*':'*/);\n    Format.displayNumber(start._column, output);\n    output = output.writeln();\n\n    Diagnostic.displayLineLead(lineDigits, output);\n  }\n\n  private static displayCause(cause: Diagnostic, contextLines: number,\n                              lineDigits: number, output: Output): Diagnostic | null {\n    const input = cause._input.clone();\n    const start = cause._tag.start();\n    const end = cause._tag.end();\n    const severity = cause._severity;\n    const note = cause._note;\n    const next = cause._cause;\n    return Diagnostic.displayContext(input, start, end, severity, note, next,\n                                     contextLines, lineDigits, output);\n  }\n\n  private static displayContext(input: Input, start: Mark, end: Mark,\n                                severity: Severity, note: string | null,\n                                cause: Diagnostic | null, contextLines: number,\n                                lineDigits: number, output: Output): Diagnostic | null {\n    let next = cause;\n    const sameCause = cause !== null && cause._message === null\n                   && Objects.equal(input.id(), cause._input.id());\n    const causeOrder = sameCause ? (start._offset <= cause!._tag.start()._offset ? -1 : 1) : 0;\n    if (causeOrder === 1) {\n      next = Diagnostic.displayCause(cause!, contextLines, lineDigits, output);\n      output = output.writeln();\n      Diagnostic.displayLineLeadEllipsis(lineDigits, output);\n      output = output.writeln();\n    }\n    Diagnostic.displayLines(input, start, end, severity, contextLines, lineDigits, output);\n    if (note !== null) {\n      Diagnostic.displayNote(note, lineDigits, output);\n    }\n    if (causeOrder === -1) {\n      output = output.writeln();\n      Diagnostic.displayLineLeadEllipsis(lineDigits, output);\n      output = output.writeln();\n      next = Diagnostic.displayCause(cause!, contextLines, lineDigits, output);\n    }\n    return next;\n  }\n\n  private static displayLines(input: Input, start: Mark, end: Mark,\n                              severity: Severity, contextLines: number,\n                              lineDigits: number, output: Output): void {\n    const startLine = start.line();\n    const endLine = end.line();\n    let line = input.line();\n\n    while (line < startLine) {\n      Diagnostic.consumeLineText(input, line);\n      line += 1;\n    }\n\n    if (endLine - startLine > 2 * contextLines + 2) {\n      while (line <= startLine + contextLines) {\n        Diagnostic.displayLine(input, start, end, severity, line, lineDigits, output);\n        line += 1;\n      }\n      Diagnostic.displayLineLeadEllipsis(lineDigits, output);\n      output = output.write(32/*' '*/);\n      Diagnostic.formatSeverity(severity, output);\n      output = output.write(124/*'|'*/);\n      OutputStyle.reset(output);\n      output = output.writeln();\n      while (line < endLine - contextLines) {\n        Diagnostic.consumeLineText(input, line);\n        line += 1;\n      }\n    }\n\n    while (line <= endLine) {\n      Diagnostic.displayLine(input, start, end, severity, line, lineDigits, output);\n      line += 1;\n    }\n  }\n\n  private static displayNote(note: string | null, lineDigits: number, output: Output): void {\n    output = output.writeln();\n    Diagnostic.displayLineLead(lineDigits, output);\n    output = output.writeln();\n    Diagnostic.displayLineComment('note', note, lineDigits, output);\n  }\n\n  private static displayLine(input: Input, start: Mark, end: Mark,\n                             severity: Severity, line: number,\n                             lineDigits: number, output: Output): void {\n    if (start._line === line && end._line === line) {\n      Diagnostic.displaySingleLine(input, start, end, severity, line, lineDigits, output);\n    } else if (start._line === line) {\n      Diagnostic.displayStartLine(input, start, severity, line, lineDigits, output);\n    } else if (end._line === line) {\n      Diagnostic.displayEndLine(input, end, severity, line, lineDigits, output);\n    } else {\n      Diagnostic.displayMidLine(input, severity, line, lineDigits, output);\n    }\n  }\n\n  private static displaySingleLine(input: Input, start: Mark, end: Mark,\n                                   severity: Severity, line: number,\n                                   lineDigits: number, output: Output): void {\n    Diagnostic.displayLineLeadNumber(line, lineDigits, output);\n    output = output.write(32/*' '*/);\n    for (let i = 1; i < input.column(); i += 1) {\n      output = output.write(32/*' '*/);\n    }\n    Diagnostic.displayLineText(input, line, output);\n\n    Diagnostic.displayLineLead(lineDigits, output);\n    output = output.write(32/*' '*/);\n    let i = 1;\n    while (i < start._column) {\n      output = output.write(32/*' '*/);\n      i += 1;\n    }\n    Diagnostic.formatSeverity(severity, output);\n    while (i <= end._column) {\n      output = output.write(94/*'^'*/);\n      i += 1;\n    }\n    if (end._note !== null) {\n      output = output.write(32/*' '*/).write(end._note);\n    }\n    OutputStyle.reset(output);\n  }\n\n  private static displayStartLine(input: Input, start: Mark,\n                                  severity: Severity, line: number,\n                                  lineDigits: number, output: Output): void {\n    Diagnostic.displayLineLeadNumber(line, lineDigits, output);\n    output = output.write(32/*' '*/).write(32/*' '*/).write(32/*' '*/);\n    for (let i = 1; i < input.column(); i += 1) {\n      output = output.write(32/*' '*/);\n    }\n    Diagnostic.displayLineText(input, line, output);\n\n    Diagnostic.displayLineLead(lineDigits, output);\n    output = output.write(32/*' '*/).write(32/*' '*/);\n    Diagnostic.formatSeverity(severity, output);\n    output = output.write(95/*'_'*/);\n    let i = 1;\n    while (i < start._column) {\n      output = output.write(95/*'_'*/);\n      i += 1;\n    }\n    output = output.write(94/*'^'*/);\n    if (start._note !== null) {\n      output = output.write(32/*' '*/).write(start._note);\n    }\n    OutputStyle.reset(output);\n    output = output.writeln();\n  }\n\n  private static displayEndLine(input: Input, end: Mark,\n                                severity: Severity, line: number,\n                                lineDigits: number, output: Output): void {\n    Diagnostic.displayLineLeadNumber(line, lineDigits, output);\n    output = output.write(32/*' '*/);\n    Diagnostic.formatSeverity(severity, output);\n    output = output.write(124/*'|'*/);\n    OutputStyle.reset(output);\n    output = output.write(32/*' '*/);\n    Diagnostic.displayLineText(input, line, output);\n\n    Diagnostic.displayLineLead(lineDigits, output);\n    output = output.write(32/*' '*/);\n    Diagnostic.formatSeverity(severity, output);\n    output = output.write(124/*'|'*/).write(95/*'_'*/);\n    let i = 1;\n    while (i < end._column) {\n      output = output.write(95/*'_'*/);\n      i += 1;\n    }\n    output = output.write(94/*'^'*/);\n    if (end._note !== null) {\n      output = output.write(32/*' '*/).write(end._note);\n    }\n    OutputStyle.reset(output);\n  }\n\n  private static displayMidLine(input: Input, severity: Severity, line: number,\n                                lineDigits: number, output: Output): void {\n    Diagnostic.displayLineLeadNumber(line, lineDigits, output);\n    output = output.write(32/*' '*/);\n    Diagnostic.formatSeverity(severity, output);\n    output = output.write(124/*'|'*/);\n    OutputStyle.reset(output);\n    output = output.write(32/*' '*/);\n    Diagnostic.displayLineText(input, line, output);\n  }\n\n  private static displayLineComment(label: string, comment: string | null,\n                                    lineDigits: number, output: Output): void {\n    Diagnostic.displayLineLeadComment(lineDigits, output);\n    output = output.write(32/*' '*/);\n    OutputStyle.bold(output);\n    output = output.write(label).write(58/*':'*/);\n    OutputStyle.reset(output);\n    if (comment != null) {\n      output = output.write(32/*' '*/).write(comment);\n    }\n  }\n\n  private static displayLineLead(lineDigits: number, output: Output): void {\n    OutputStyle.blueBold(output);\n    const padding = 1 + lineDigits;\n    for (let i = 0; i < padding; i += 1) {\n      output = output.write(32/*' '*/);\n    }\n    output = output.write(124/*'|'*/);\n    OutputStyle.reset(output);\n  }\n\n  private static displayLineLeadComment(lineDigits: number, output: Output): void {\n    OutputStyle.blueBold(output);\n    const padding = 1 + lineDigits;\n    for (let i = 0; i < padding; i += 1) {\n      output = output.write(32/*' '*/);\n    }\n    output = output.write(61/*'='*/);\n    OutputStyle.reset(output);\n  }\n\n  private static displayLineLeadArrow(lineDigits: number, output: Output): void {\n    for (let i = 0; i < lineDigits; i += 1) {\n      output = output.write(32/*' '*/);\n    }\n    OutputStyle.blueBold(output);\n    output = output.write(45/*'-'*/).write(45/*'-'*/).write(62/*'>'*/);\n    OutputStyle.reset(output);\n  }\n\n  private static displayLineLeadEllipsis(lineDigits: number, output: Output): void {\n    OutputStyle.blueBold(output);\n    for (let i = 0; i < lineDigits; i += 1) {\n      output = output.write(46/*'.'*/);\n    }\n    OutputStyle.reset(output);\n    output = output.write(32/*' '*/).write(32/*' '*/);\n  }\n\n  private static displayLineLeadNumber(line: number, lineDigits: number, output: Output): void {\n    const padding = lineDigits - Base10.countDigits(line);\n    for (let i = 0; i < padding; i += 1) {\n      output = output.write(32/*' '*/);\n    }\n    OutputStyle.blueBold(output);\n    Format.displayNumber(line, output);\n    output = output.write(32/*' '*/).write(124/*'|'*/);\n    OutputStyle.reset(output);\n  }\n\n  private static displayLineText(input: Input, line: number, output: Output): void {\n    while (input.isCont() && input.line() === line) {\n      output = output.write(input.head());\n      input = input.step();\n    }\n    if (input.line() === line) {\n      output = output.writeln();\n    }\n  }\n\n  private static consumeLineText(input: Input, line: number): void {\n    while (input.isCont() && input.line() === line) {\n      input = input.step();\n    }\n  }\n\n  private static formatSeverity(severity: Severity, output: Output): void {\n    switch (severity.level()) {\n      case Severity.FATAL_LEVEL:\n      case Severity.ALERT_LEVEL:\n      case Severity.ERROR_LEVEL:\n        OutputStyle.redBold(output);\n        break;\n      case Severity.WARNING_LEVEL:\n        OutputStyle.yellowBold(output);\n        break;\n      case Severity.NOTE_LEVEL:\n        OutputStyle.greenBold(output);\n        break;\n      case Severity.INFO_LEVEL:\n        OutputStyle.cyanBold(output);\n        break;\n      case Severity.DEBUG_LEVEL:\n      case Severity.TRACE_LEVEL:\n      default:\n        OutputStyle.magentaBold(output);\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Thrown when a [[Parser]] parses invalid syntax.\n */\nimport {Diagnostic} from \"./Diagnostic\";\n\nexport class ParserException extends Error {\n  readonly diagnostic?: Diagnostic;\n\n  constructor(message?: Diagnostic | string) {\n    super(message instanceof Diagnostic ? message.message() || void 0 : message);\n    if (message instanceof Diagnostic) {\n      this.diagnostic = message;\n    }\n    (this as any).__proto__ = ParserException.prototype;\n  }\n\n  toString(): string {\n    if (this.diagnostic) {\n      return this.diagnostic.toString();\n    } else {\n      return super.toString();\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input} from \"./Input\";\nimport {ParserException} from \"./ParserException\";\nimport {Diagnostic} from \"./Diagnostic\";\n\n/**\n * Continuation of how to parse subsequent [[Input]] tokens from a stream.\n * `Parser` enables efficient, interruptible parsing of network protocols and\n * data formats, without intermediate buffering.\n *\n * ### Input tokens\n * A `Parser` reads tokens from an `Input` reader.  Input tokens are modeled as\n * primitive numbers, commonly representing Unicode code points, or raw octets.\n * Each `Parser` implementation specifies the semantic type of input tokens it\n * consumes.\n *\n * ### Parser states\n * A `Parser` is always in one of three states: _cont_​inue, _done_, or _error_.\n * The _cont_ state indicates that [[feed]] is ready to consume `Input`; the\n * _done_ state indicates that parsing terminated successfully, and that\n * [[bind]] will return the parsed result; the _error_ state indicates that\n * parsing terminated in failure, and that [[trap]] will return the parse error.\n * `Parser` subclasses default to the _cont_ state.\n *\n * ### Feeding input\n * The [[feed]] method incrementally parses as much `Input` as it can, before\n * returning another `Parser` that represents the continuation of how to parse\n * additional `Input`.  The `Input` passed to `feed` is only guaranteed to be\n * valid for the duration of the method call; references to the provided `Input`\n * instance must not be stored.\n *\n * ### Parser results\n * A `Parser` produces a parsed result of type `O`, obtained via the [[bind]]\n * method.  `bind` is only guaranteed to return a result when in the _done_\n * state; though `bind` may optionally make available partial results in other\n * states.  A failed `Parser` provides a parse error via the [[trap]] method.\n * `trap` is only guaranteed to return an error when in the _error_ state.\n *\n * ### Continuations\n * A `Parser` instance represents a continuation of how to parse remaining\n * `Input`.  Rather than parsing a complete input in one go, a `Parser` takes\n * an `Input` chunk and returns another `Parser` instance that knows how to\n * parse subsequent `Input` chunks.  This enables non-blocking, incremental\n * parsing that can be interrupted whenever an `Input` reader runs out of\n * immediately available data.  A `Parser` terminates by returning a\n * continuation in either the _done_ state, or the _error_ state.\n * [[Parser.done]] returns a `Parser` in the _done_ state.  [[Parser.error]]\n * returns a `Parser` in the _error_ state.\n *\n * ### Iteratees\n * `Parser` is an [Iteratee](https://en.wikipedia.org/wiki/Iteratee).  Though\n * unlike strictly functional iteratees, a `Parser` statefully iterates over\n * its `Input`, rather than allocating an object for each incremental input\n * continutaion.  This internal mutability minimizes garbage collector memory\n * pressure, without violating the functional Iteratee abstraction, provided\n * that `feed` logically takes exclusive ownership of its `Input` when invoked,\n * and logically returns ownership of the `Input` in a state that's consistent\n * with the returned `Parser` continuation.\n *\n * ### Immutability\n * A `Parser` should be immutable.  Specifically, an invocation of `feed`\n * should not alter the behavior of future calls to `feed` on the same `Parser`\n * instance.  A `Parser` should only mutate its internal state if it's essential\n * to do so, such as for critical path performance reasons.\n *\n * ### Backtracking\n * `feed` can internally [[Input.clone clone]] its `Input`, if it might need to\n * backtrack.  Keep in mind that, because `Input` is only valid for the duration\n * of a call to `feed`, input must be internally buffered if it needs to be\n * preserved between `feed` invocations.\n *\n * ### Forking\n * The [[fork]] method passes an out-of-band condition to a `Parser`, yielding\n * a `Parser` continuation whose behavior may be altered by the given condition.\n * For example, an HTML `Parser` might `fork` an inner text parser to directly\n * parse an embedded micro format out of an HTML element, based on some\n * out-of-band schema information.  The types of conditions accepted by `fork`,\n * and their intended semantics, are implementation defined.\n */\nexport abstract class Parser<O> {\n  /**\n   * Returns `true` when [[feed]] is able to consume `Input`.  i.e. this\n   * `Parser` is in the _cont_ state.\n   */\n  isCont(): boolean {\n    return true;\n  }\n\n  /**\n   * Returns `true` when parsing has terminated successfully, and [[bind]] will\n   * return the parsed result.  i.e. this `Parser` is in the _done_ state.\n   */\n  isDone(): boolean {\n    return false;\n  }\n\n  /**\n   * Returns `true` when parsing has terminated in failure, and [[trap]] will\n   * return the parse error.  i.e. this `Parser` is in the _error_ state.\n   */\n  isError(): boolean {\n    return false;\n  }\n\n  /**\n   * Incrementally parses as much `Input` as possible, and returns another\n   * `Parser` that represents the continuation of how to parse additional\n   * `Input`.  The given `input` is only guaranteed to be valid for the\n   * duration of the method call; references to `input` must not be stored.\n   */\n\n  /**\n   * Incrementally parses as much `input` as possible, and returns another\n   * `Parser` that represents the continuation of how to parse additional\n   * `Input`.  If `input` enters the _done_ state, `feed` _must_ return a\n   * terminated `Parser`, i.e. a `Parser` in the _done_ state, or in the\n   * _error_ state.  The given `input` is only guaranteed to be valid for the\n   * duration of the method call; references to `input` must not be stored.\n   */\n  abstract feed(input: Input): Parser<O>;\n\n  /**\n   * Returns a `Parser` continuation whose behavior may be altered by the\n   * given out-of-band `condition`.\n   */\n  fork(condition: unknown): Parser<O> {\n    return this;\n  }\n\n  /**\n   * Returns the parsed result.  Only guaranteed to return a result when in the\n   * _done_ state.\n   *\n   * @throws `Error` if this `Parser is not in the _done_ state.\n   */\n  bind(): O {\n    throw new Error();\n  }\n\n  /**\n   * Returns the parse error.  Only guaranteed to return an error when in the\n   * _error_ state.\n   *\n   * @throws `Error` if this `Parser` is not in the _error_ state.\n   */\n  trap(): Error {\n    throw new Error();\n  }\n\n  /**\n   * Casts an errored `Parser` to a different output type.  A `Parser` in the\n   * _error_ state can have any output type.\n   *\n   * @throws `Error` if this `Parser` is not in the _error_ state.\n   */\n  asError<O2>(): Parser<O2> {\n    throw new Error();\n  }\n\n  private static _done?: Parser<any>;\n\n  /**\n   * Returns a `Parser` in the _done_ state that `bind`s an `undefined` parsed result.\n   */\n  static done<O>(): Parser<O>;\n\n  /**\n   * Returns a `Parser` in the _done_ state that `bind`s the given parsed `output`.\n   */\n  static done<O>(output: O): Parser<O>;\n\n  static done<O>(output?: O): Parser<O> {\n    if (output === void 0) {\n      if (!Parser._done) {\n        Parser._done = new ParserDone<any>(void 0);\n      }\n      return Parser._done;\n    } else {\n      return new ParserDone<O>(output);\n    }\n  }\n\n  /**\n   * Returns a `Parser` in the _error_ state that `trap`s the given parse `error`.\n   */\n  static error<O>(error: Error | Diagnostic): Parser<O> {\n    if (error instanceof Error) {\n      return new ParserError<O>(error);\n    } else {\n      return new ParserError<O>(new ParserException(error));\n    }\n  }\n}\n\n/** @hidden */\nclass ParserDone<O> extends Parser<O> {\n  /** @hidden */\n  readonly _output: O;\n\n  constructor(output: O) {\n    super();\n    this._output = output;\n  }\n\n  isCont(): boolean {\n    return false;\n  }\n\n  isDone(): boolean {\n    return true;\n  }\n\n  feed(input: Input): Parser<O> {\n    return this;\n  }\n\n  bind(): O {\n    return this._output;\n  }\n}\n\n/** @hidden */\nclass ParserError<O> extends Parser<O> {\n  /** @hidden */\n  readonly _error: Error;\n\n  constructor(error: Error) {\n    super();\n    this._error = error;\n  }\n\n  isCont(): boolean {\n    return false;\n  }\n\n  isError(): boolean {\n    return true;\n  }\n\n  feed(input: Input): Parser<O> {\n    return this;\n  }\n\n  bind(): O {\n    throw this._error;\n  }\n\n  trap(): Error {\n    return this._error;\n  }\n\n  asError<O2>(): Parser<O2> {\n    return this as any;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashCode, Murmur3} from \"@swim/util\";\nimport {Output} from \"./Output\";\nimport {Format} from \"./Format\";\nimport {Debug} from \"./Debug\";\n\n/**\n * Unicode transformation format error handling mode.\n */\nexport abstract class UtfErrorMode implements HashCode, Debug {\n  /**\n   * Returns {@code true} if a Unicode decoding should abort with an error when\n   * an invalid code unit sequence is encountered.\n   */\n  isFatal(): boolean {\n    return false;\n  }\n\n  /**\n   * Returns {@code true} if a Unicode decoding should substitute invalid code\n   * unit sequences with a replacement character.\n   */\n  isReplacement(): boolean {\n    return false;\n  }\n\n  /**\n   * Returns the Unicode code point of the replacement character to substitute\n   * for invalid code unit sequences.  Defaults to {@code U+FFFD}.\n   */\n  replacementChar(): number {\n    return 0xfffd;\n  }\n\n  /**\n   * Returns {@code true} if Unicode decoding should abort with an error when\n   * a {@code NUL} byte is encountered.\n   */\n  abstract isNonZero(): boolean;\n\n  /**\n   * Returns a {@code UtfErrorMode} that, if {@code isNonZero} is {@code true},\n   * aborts when Unicode decoding encounters a {@code NUL} byte.\n   */\n  abstract isNonZero(isNonZero: boolean): UtfErrorMode;\n\n  abstract equals(that: unknown): boolean;\n\n  abstract hashCode(): number;\n\n  abstract debug(output: Output): void;\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  private static _fatal?: UtfErrorMode;\n  private static _fatalNonZero?: UtfErrorMode;\n  private static _replacement?: UtfErrorMode;\n  private static _replacementNonZero?: UtfErrorMode;\n\n  /**\n   * Returns a {@code UtfErrorMode} that aborts Unicode decoding with an error\n   * when invalid code unit sequences are encountered.\n   */\n  static fatal(): UtfErrorMode {\n    if (!UtfErrorMode._fatal) {\n      UtfErrorMode._fatal = new UtfFatalErrorMode(false);\n    }\n    return UtfErrorMode._fatal;\n  }\n\n  /**\n   * Returns a {@code UtfErrorMode} that aborts Unicode decoding with an error\n   * when invalid code unit sequences, and {@code NUL} bytes, are encountered.\n   */\n  static fatalNonZero(): UtfErrorMode {\n    if (!UtfErrorMode._fatalNonZero) {\n      UtfErrorMode._fatalNonZero = new UtfFatalErrorMode(true);\n    }\n    return UtfErrorMode._fatalNonZero;\n  }\n\n  /**\n   * Returns a {@code UtfErrorMode} that substitutes invalid code unit\n   * sequences with the replacement character ({@code U+FFFD}).\n   */\n  static replacement(): UtfErrorMode;\n\n  /**\n   * Returns a {@code UtfErrorMode} that substitutes invalid code unit\n   * sequences with the given {@code replacementChar}.\n   */\n  static replacement(replacementChar: number): UtfErrorMode;\n\n  static replacement(replacementChar?: number): UtfErrorMode {\n    if (replacementChar === void 0 || replacementChar === 0xfffd) {\n      if (!UtfErrorMode._replacement) {\n        UtfErrorMode._replacement = new UtfReplacementErrorMode(0xfffd, false);\n      }\n      return UtfErrorMode._replacement;\n    } else {\n      return new UtfReplacementErrorMode(replacementChar, false);\n    }\n  }\n\n  /**\n   * Returns a {@code UtfErrorMode} that substitutes invalid code unit\n   * sequences with the replacement character ({@code U+FFFD}), and aborts\n   * decoding with an error when {@code NUL} bytes are encountered.\n   */\n  static replacementNonZero(): UtfErrorMode;\n\n  /**\n   * Returns a {@code UtfErrorMode} that substitutes invalid code unit\n   * sequences with the given {@code replacementChar}, and aborts decoding\n   * with an error when {@code NUL} bytes are encountered.\n   */\n  static replacementNonZero(replacementChar: number): UtfErrorMode;\n\n  static replacementNonZero(replacementChar?: number): UtfErrorMode {\n    if (replacementChar === void 0 || replacementChar === 0xfffd) {\n      if (!UtfErrorMode._replacementNonZero) {\n        UtfErrorMode._replacementNonZero = new UtfReplacementErrorMode(0xfffd, true);\n      }\n      return UtfErrorMode._replacementNonZero;\n    } else {\n      return new UtfReplacementErrorMode(replacementChar, true);\n    }\n  }\n}\n\n/** @hidden */\nclass UtfFatalErrorMode extends UtfErrorMode {\n  /** @hidden */\n  private readonly _isNonZero: boolean;\n\n  constructor(isNonZero: boolean) {\n    super();\n    this._isNonZero = isNonZero;\n  }\n\n  isFatal(): boolean {\n    return true;\n  }\n\n  isNonZero(): boolean;\n  isNonZero(isNonZero: boolean): UtfErrorMode;\n  isNonZero(isNonZero?: boolean): boolean | UtfErrorMode {\n    if (isNonZero === void 0) {\n      return this._isNonZero;\n    } else if (isNonZero) {\n      return UtfErrorMode.fatalNonZero();\n    } else {\n      return UtfErrorMode.fatal();\n    }\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof UtfFatalErrorMode) {\n      return this._isNonZero === that._isNonZero;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (UtfFatalErrorMode._hashSeed === void 0) {\n      UtfFatalErrorMode._hashSeed = Murmur3.seed(UtfFatalErrorMode);\n    }\n    return Murmur3.mash(Murmur3.mix(UtfFatalErrorMode._hashSeed,\n        Murmur3.hash(this._isNonZero)));\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"UtfErrorMode\").write(46/*'.'*/)\n        .write(this.isNonZero ? \"fatalNonZero\" : \"fatal\")\n        .write(40/*'('*/).write(41/*')'*/);\n  }\n\n  private static _hashSeed?: number;\n}\n\n/** @hidden */\nclass UtfReplacementErrorMode extends UtfErrorMode {\n  private readonly _replacementChar: number;\n  private readonly _isNonZero: boolean;\n\n  /** @hidden */\n  constructor(replacementChar: number, isNonZero: boolean) {\n    super();\n    this._replacementChar = replacementChar;\n    this._isNonZero = isNonZero;\n  }\n\n  isReplacement(): boolean {\n    return true;\n  }\n\n  replacementChar(): number {\n    return this._replacementChar;\n  }\n\n  isNonZero(): boolean;\n  isNonZero(isNonZero: boolean): UtfErrorMode;\n  isNonZero(isNonZero?: boolean): boolean | UtfErrorMode {\n    if (isNonZero === void 0) {\n      return this._isNonZero;\n    } else if (this._replacementChar === 0xfffd) {\n      if (isNonZero) {\n        return UtfErrorMode.replacementNonZero();\n      } else {\n        return UtfErrorMode.replacement();\n      }\n    } else {\n      return new UtfReplacementErrorMode(this._replacementChar, isNonZero);\n    }\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof UtfReplacementErrorMode) {\n      return this.replacementChar === that.replacementChar\n          && this.isNonZero === that.isNonZero;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (UtfReplacementErrorMode._hashSeed === void 0) {\n      UtfReplacementErrorMode._hashSeed = Murmur3.seed(UtfReplacementErrorMode);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(UtfReplacementErrorMode._hashSeed,\n        this._replacementChar), Murmur3.hash(this._isNonZero)));\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"UtfErrorMode\").write(46/*'.'*/)\n        .write(this._isNonZero ? \"replacementNonZero\" : \"replacement\")\n        .write(40/*'('*/);\n    if (this._replacementChar !== 0xfffd) {\n      Format.debugChar(this._replacementChar, output);\n    }\n    output = output.write(41/*')'*/);\n  }\n\n  private static _hashSeed?: number;\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {OutputException} from \"./OutputException\";\nimport {AnyOutputSettings, OutputSettings} from \"./OutputSettings\";\nimport {OutputBuffer} from \"./OutputBuffer\";\n\n/** @hidden */\nexport class Uint8ArrayOutput extends OutputBuffer<Uint8Array> {\n  /** @hidden */\n  _array: Uint8Array;\n  /** @hidden */\n  _index: number;\n  /** @hidden */\n  _limit: number;\n  /** @hidden */\n  _settings: OutputSettings;\n  /** @hidden */\n  _isPart: boolean;\n\n  constructor(array: Uint8Array, index: number, limit: number,\n              settings: OutputSettings = OutputSettings.standard(), isPart: boolean = false) {\n    super();\n    this._array = array;\n    this._index = index;\n    this._limit = limit;\n    this._settings = settings;\n    this._isPart = isPart;\n  }\n\n  isCont(): boolean {\n    return this._index < this._limit;\n  }\n\n  isFull(): boolean {\n    return this._isPart && this._index >= this._limit;\n  }\n\n  isDone(): boolean {\n    return !this._isPart && this._index >= this._limit;\n  }\n\n  isError(): boolean {\n    return false;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): OutputBuffer<Uint8Array>;\n  isPart(isPart?: boolean): boolean | OutputBuffer<Uint8Array> {\n    if (isPart === void 0) {\n      return this._isPart;\n    } else {\n      this._isPart = isPart;\n      return this;\n    }\n  }\n\n  index(): number;\n  index(index: number): OutputBuffer<Uint8Array>;\n  index(index?: number): number | OutputBuffer<Uint8Array> {\n    if (index === void 0) {\n      return this._index;\n    } else if (0 <= index && index <= this._limit) {\n      this._index = index;\n      return this;\n    } else {\n      return OutputBuffer.error(new OutputException(\"invalid index\"), this._settings);\n    }\n  }\n\n  limit(): number;\n  limit(limit: number): OutputBuffer<Uint8Array>;\n  limit(limit?: number): number | OutputBuffer<Uint8Array> {\n    if (limit === void 0) {\n      return this._limit;\n    } else if (0 <= limit && limit <= this._array.length) {\n      this._limit = limit;\n      return this;\n    } else {\n      return OutputBuffer.error(new OutputException(\"invalid limit\"), this._settings);\n    }\n  }\n\n  capacity(): number {\n    return this._array.length;\n  }\n\n  remaining(): number {\n    return this._limit - this._index;\n  }\n\n  has(index: number): boolean {\n    return 0 <= index && index < this._limit;\n  }\n\n  get(index: number): number {\n    if (0 <= index && index < this._limit) {\n      return this._array[index];\n    } else {\n      throw new OutputException();\n    }\n  }\n\n  set(index: number, token: number): void {\n    if (0 <= index && index < this._limit) {\n      this._array[index] = token;\n    } else {\n      throw new OutputException();\n    }\n  }\n\n  write(token: number | string): OutputBuffer<Uint8Array> {\n    if (typeof token === \"number\") {\n      const index = this._index;\n      if (index < this._limit) {\n        this._array[index] = token;\n        this._index = index + 1;\n        return this;\n      } else {\n        return OutputBuffer.error(new OutputException(\"full\"), this._settings);\n      }\n    } else {\n      return OutputBuffer.error(new OutputException(\"binary output\"), this._settings);\n    }\n  }\n\n  writeln(string?: string): OutputBuffer<Uint8Array> {\n    return OutputBuffer.error(new OutputException(\"binary output\"), this._settings);\n  }\n\n  step(offset: number): OutputBuffer<Uint8Array> {\n    const index = this._index + offset;\n    if (0 <= index && index <= this._limit) {\n      this._index = index;\n      return this;\n    } else {\n      return OutputBuffer.error(new OutputException(\"invalid step\"), this._settings);\n    }\n  }\n\n  bind(): Uint8Array {\n    return new Uint8Array(this._array.buffer, 0, this._index);\n  }\n\n  settings(): OutputSettings;\n  settings(settings: AnyOutputSettings): OutputBuffer<Uint8Array>;\n  settings(settings?: AnyOutputSettings): OutputSettings | OutputBuffer<Uint8Array> {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      this._settings = OutputSettings.fromAny(settings);\n      return this;\n    }\n  }\n\n  clone(): OutputBuffer<Uint8Array> {\n    return new Uint8ArrayOutput(this._array, this._index, this._limit, this._settings, this._isPart);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyOutputSettings, OutputSettings} from \"./OutputSettings\";\nimport {Output} from \"./Output\";\n\n/** @hidden */\nexport abstract class ByteOutput<T> extends Output<T> {\n  /** @hidden */\n  _array: Uint8Array | null;\n  /** @hidden */\n  _size: number;\n  /** @hidden */\n  _settings: OutputSettings;\n\n  constructor(array: Uint8Array | null, size: number, settings: OutputSettings) {\n    super();\n    this._array = array;\n    this._size = size;\n    this._settings = settings;\n  }\n\n  isCont(): boolean {\n    return true;\n  }\n\n  isFull(): boolean {\n    return false;\n  }\n\n  isDone(): boolean {\n    return false;\n  }\n\n  isError(): boolean {\n    return false;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): Output<T>;\n  isPart(isPart?: boolean): boolean | Output<T> {\n    if (isPart === void 0) {\n      return false;\n    } else {\n      return this;\n    }\n  }\n\n  write(b: number | string): Output<T> {\n    if (typeof b === \"number\") {\n      const n = this._size;\n      const oldArray = this._array;\n      let newArray;\n      if (oldArray === null || n + 1 > oldArray.length) {\n        newArray = new Uint8Array(ByteOutput.expand(n + 1));\n        if (oldArray !== null) {\n          newArray.set(oldArray, 0);\n        }\n        this._array = newArray;\n      } else {\n        newArray = oldArray;\n      }\n      newArray[n] = b;\n      this._size = n + 1;\n      return this;\n    } else {\n      throw new TypeError(\"\" + b);\n    }\n  }\n\n  writeln(string?: string): Output<T> {\n    throw new TypeError(\"\" + string);\n  }\n\n  toUint8Array(): Uint8Array {\n    const n = this._size;\n    const oldArray = this._array;\n    if (oldArray !== null && n === oldArray.length) {\n      return oldArray;\n    } else {\n      const newArray = new Uint8Array(n);\n      if (oldArray !== null) {\n        newArray.set(oldArray.slice(0, n), 0);\n      }\n      this._array = newArray;\n      return newArray;\n    }\n  }\n\n  cloneArray(): Uint8Array | null {\n    const oldArray = this._array;\n    if (oldArray !== null) {\n      return oldArray.slice(0, this._size);\n    } else {\n      return null;\n    }\n  }\n\n  settings(): OutputSettings;\n  settings(settings: AnyOutputSettings): Output<T>;\n  settings(settings?: AnyOutputSettings): OutputSettings | Output<T> {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      this._settings = OutputSettings.fromAny(settings);\n      return this;\n    }\n  }\n\n  static expand(n: number): number {\n    n = Math.max(32, n) - 1;\n    n |= n >> 1; n |= n >> 2; n |= n >> 4; n |= n >> 8; n |= n >> 16;\n    return n + 1;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {OutputSettings} from \"./OutputSettings\";\nimport {Output} from \"./Output\";\nimport {ByteOutput} from \"./ByteOutput\";\n\n/** @hidden */\nexport class ByteOutputUint8Array extends ByteOutput<Uint8Array> {\n  constructor(array: Uint8Array | null, size: number, settings: OutputSettings) {\n    super(array, size, settings);\n  }\n\n  bind(): Uint8Array {\n    return this.toUint8Array();\n  }\n\n  clone(): Output<Uint8Array> {\n    return new ByteOutputUint8Array(this.cloneArray(), this._size, this._settings);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyOutputSettings, OutputSettings} from \"./OutputSettings\";\nimport {Output} from \"./Output\";\nimport {OutputBuffer} from \"./OutputBuffer\";\nimport {Uint8ArrayOutput} from \"./Uint8ArrayOutput\";\nimport {ByteOutputUint8Array} from \"./ByteOutputUint8Array\";\n\n/**\n * Byte [[Input]]/[[Output]] factory.\n *\n * The `Binary.uint8ArrayOutput(...)}` function returns an `Output` that writes\n * bytes to a growable array, and [[Output.bind binds]] a `Uint8Array`\n * containing all written bytes.\n */\nexport class Binary {\n  private constructor() {\n    // nop\n  }\n\n  static outputBuffer(array: Uint8Array, offset: number = 0, length: number = array.length): OutputBuffer<Uint8Array> {\n    return new Uint8ArrayOutput(array, offset, offset + length);\n  }\n\n  /**\n   * Returns a new `Output` that appends bytes to a growable array,\n   * pre-allocated with space for `initialCapacity` bytes, if `initialCapacity`\n   * is defined, using the given `settings`, if `settings` is defined.  The\n   * returned `Output` accepts an unbounded number of bytes, remaining\n   * permanently in the _cont_ state, and can [[Output.bind bind]] a\n   * `Uint8Array` with the current output state at any time.\n   */\n  static uint8ArrayOutput(initialCapacity?: number, settings?: AnyOutputSettings): Output<Uint8Array>;\n  /**\n   * Returns a new `Output` that appends bytes to a growable array, using the\n   * given `settings`.  The returned `Output` accepts an unbounded number of\n   * bytes, remaining permanently in the _cont_ state, and can [[Output.bind\n   * bind]] a `Uint8Array` array with the current output state at any time.\n   */\n  static uint8ArrayOutput(settings: AnyOutputSettings): Output<Uint8Array>;\n  static uint8ArrayOutput(initialCapacity?: number | AnyOutputSettings,\n                          settings?: AnyOutputSettings): Output<Uint8Array> {\n    if (settings === void 0 && typeof initialCapacity !== \"number\") {\n      settings = initialCapacity;\n      initialCapacity = void 0;\n    } else if (typeof initialCapacity !== \"number\") {\n      initialCapacity = void 0;\n    }\n    let array: Uint8Array | null;\n    if (typeof initialCapacity === \"number\") {\n      array = new Uint8Array(initialCapacity);\n    } else {\n      array = null;\n    }\n    settings = OutputSettings.fromAny(settings);\n    return new ByteOutputUint8Array(array, 0, settings);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input} from \"./Input\";\nimport {Output} from \"./Output\";\nimport {Parser} from \"./Parser\";\nimport {Writer} from \"./Writer\";\nimport {Format} from \"./Format\";\nimport {Unicode} from \"./Unicode\";\nimport {Binary} from \"./Binary\";\nimport {Base16Parser} from \"./Base16Parser\";\nimport {Base16Writer} from \"./Base16Writer\";\nimport {Base16IntegerWriter} from \"./Base16IntegerWriter\";\n\n/**\n * Base-16 (hexadecimal) encoding [[Parser]]/[[Writer]] factory.\n */\nexport class Base16 {\n  /** @hidden */\n  readonly _alphabet: string;\n\n  constructor(alphabet: string) {\n    this._alphabet = alphabet;\n  }\n\n  /**\n   * Returns a 16 character string, where the character at index `i` is the\n   * encoding of the base-16 digit `i`.\n   */\n  alphabet(): string {\n    return this._alphabet;\n  }\n\n  /**\n   * Returns the Unicode code point of the base-16 digit that encodes the given\n   * 4-bit quantity.\n   */\n  encodeDigit(b: number): number {\n    return this._alphabet.charCodeAt(b);\n  }\n\n  /**\n   * Returns a `Writer` that, when fed an input `Uint8Array`, returns a\n   * continuation that writes the base-16 (hexadecimal) encoding of the input\n   * byte array.\n   */\n  uint8ArrayWriter(): Writer<Uint8Array, unknown>;\n  /**\n   * Returns a `Writer` continuation that writes the base-16 (hexadecimal)\n   * encoding of the `input` `Uint8Array`.\n   */\n  uint8ArrayWriter(input: Uint8Array): Writer<unknown, Uint8Array>;\n  uint8ArrayWriter(input?: Uint8Array): Writer<unknown, unknown> {\n    if (input === void 0) {\n      return new Base16.Writer(void 0, void 0, this);\n    } else {\n      return new Base16.Writer(input, input, this);\n    }\n  }\n\n  /**\n   * Writes the base-16 (hexadecimal) encoding of the `input` `Uint8Array` to\n   * the `output`, returning a `Writer` continuation that knows how to write any\n   * remaining output that couldn't be immediately generated.\n   */\n  writeUint8Array(input: Uint8Array, output: Output): Writer<unknown, unknown> {\n    return Base16.Writer.write(output, void 0, input, this);\n  }\n\n  writeInteger(input: number, output: Output, width: number = 0): Writer<unknown, unknown> {\n    return Base16.IntegerWriter.write(output, void 0, input, width, this);\n  }\n\n  writeIntegerLiteral(input: number, output: Output, width: number = 0): Writer<unknown, unknown> {\n    return Base16.IntegerWriter.writeLiteral(output, void 0, input, width, this);\n  }\n\n  private static _lowercase?: Base16;\n  private static _uppercase?: Base16;\n\n  /**\n   * Returns the `Base16` encoding with lowercase alphanumeric digits.\n   */\n  public static lowercase(): Base16 {\n    if (!Base16._lowercase) {\n      Base16._lowercase = new Base16(\"0123456789abcdef\");\n    }\n    return Base16._lowercase;\n  }\n\n  /**\n   * Returns the `Base16` encoding with uppercase alphanumeric digits.\n   */\n  public static uppercase(): Base16 {\n    if (!Base16._uppercase) {\n      Base16._uppercase = new Base16(\"0123456789ABCDEF\");\n    }\n    return Base16._uppercase;\n  }\n\n  /**\n   * Returns `true` if the Unicode code point `c` is a valid base-16 digit.\n   */\n  static isDigit(c: number): boolean {\n    return c >= 48/*'0'*/ && c <= 57/*'9'*/\n        || c >= 65/*'A'*/ && c <= 70/*'F'*/\n        || c >= 97/*'a'*/ && c <= 102/*'f'*/;\n  }\n\n  /**\n   * Returns the 4-bit quantity represented by the base-16 digit `c`.\n   *\n   * @throws `Error` if `c` is not a valid base-16 digit.\n   */\n  static decodeDigit(c: number): number {\n    if (c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n      return c - 48/*'0'*/;\n    } else if (c >= 65/*'A'*/ && c <= 70/*'F'*/) {\n      return 10 + (c - 65/*'A'*/);\n    } else if (c >= 97/*'a'*/ && c <= 102/*'f'*/) {\n      return 10 + (c - 97/*'a'*/);\n    } else {\n      const message = Unicode.stringOutput();\n      message.write(\"Invalid base-16 digit: \");\n      Format.debugChar(c, message);\n      throw new Error(message.bind());\n    }\n  }\n\n  /**\n   * Decodes the base-16 digits `c1` and `c2`, and writes the 8-bit  quantity\n   * they represent to the given `output`.\n   */\n  static writeQuantum(c1: number, c2: number, output: Output): void {\n    const x = Base16.decodeDigit(c1);\n    const y = Base16.decodeDigit(c2);\n    output = output.write(x << 4 | y);\n  }\n\n  /**\n   * Returns a `Parser` that decodes base-16 (hexadecimal) encoded input, and\n   * writes the decoded bytes to `output`.\n   */\n  static parser<O>(output: Output<O>): Parser<O> {\n    return new Base16.Parser<O>(output);\n  }\n\n  /**\n   * Parses the base-16 (hexadecimal) encoded `input`, and writes the decoded\n   * bytes to `output`, returning a `Parser` continuation that knows how to\n   * parse any additional input.\n   */\n  static parse<O>(input: Input, output: Output<O>): Parser<O> {\n    return Base16.Parser.parse(input, output);\n  }\n\n  /**\n   * Parses the base-16 (hexadecimal) encoded `input`, and writes the decoded\n   * bytes to a growable array, returning a `Parser` continuation that knows\n   * how to parse any additional input.  The returned `Parser` [[Parser.bind\n   * binds]] a `Uint8Array` array containing all parsed base-16 data.\n   */\n  static parseUint8Array(input: Input): Parser<Uint8Array> {\n    return Base16.Parser.parse(input, Binary.uint8ArrayOutput());\n  }\n\n  // Forward type declarations\n  /** @hidden */\n  static Parser: typeof Base16Parser; // defined by Base16Parser\n  /** @hidden */\n  static Writer: typeof Base16Writer; // defined by Base16Writer\n  /** @hidden */\n  static IntegerWriter: typeof Base16IntegerWriter; // defined by Base16IntegerWriter\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {UtfErrorMode} from \"./UtfErrorMode\";\nimport {OutputException} from \"./OutputException\";\nimport {AnyOutputSettings, OutputSettings} from \"./OutputSettings\";\nimport {Output} from \"./Output\";\nimport {Unicode} from \"./Unicode\";\nimport {Base16} from \"./Base16\";\n\n/** @hidden */\nexport class Utf8DecodedOutput<T> extends Output<T> {\n  /** @hidden */\n  _output: Output<T>;\n  /** @hidden */\n  readonly _errorMode: UtfErrorMode;\n  /** @hidden */\n  _c1: number;\n  /** @hidden */\n  _c2: number;\n  /** @hidden */\n  _c3: number;\n  /** @hidden */\n  _have: number;\n\n  constructor(output: Output<T>, errorMode: UtfErrorMode,\n              c1: number = -1, c2: number = -1, c3: number = -1, have: number = 0) {\n    super();\n    this._output = output;\n    this._errorMode = errorMode;\n    this._c1 = c1;\n    this._c2 = c2;\n    this._c3 = c3;\n    this._have = have;\n  }\n\n  isCont(): boolean {\n    return this._output.isCont();\n  }\n\n  isFull(): boolean {\n    return this._output.isFull();\n  }\n\n  isDone(): boolean {\n    return this._output.isDone();\n  }\n\n  isError(): boolean {\n    return this._output.isError();\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): Output<T>;\n  isPart(isPart?: boolean): boolean | Output<T> {\n    if (isPart === void 0) {\n      return this._output.isPart();\n    } else {\n      this._output = this._output.isPart(isPart);\n      return this;\n    }\n  }\n\n  write(token: number | string): Output<T> {\n    if (typeof token === \"number\") {\n      let c1 = this._c1;\n      let c2 = this._c2;\n      let c3 = this._c3;\n      let c4 = -1;\n      let have = this._have;\n\n      if (token >= 0) {\n        switch (have) {\n          case 0:\n            c1 = token & 0xff;\n            have = 1;\n            break;\n          case 1:\n            c2 = token & 0xff;\n            have = 2;\n            break;\n          case 2:\n            c3 = token & 0xff;\n            have = 3;\n            break;\n          case 3:\n            c4 = token & 0xff;\n            have = 4;\n            break;\n          default:\n            throw new Error(\"unreachable\");\n        }\n      }\n\n      if (c1 === 0 && this._errorMode.isNonZero()) { // invalid NUL byte\n        return Output.error(new OutputException(\"unexpected NUL byte\"));\n      } else if (c1 >= 0 && c1 <= 0x7f) { // U+0000..U+007F\n        this._output = this._output.write(c1);\n        this._have = 0;\n      } else if (c1 >= 0xc2 && c1 <= 0xf4) {\n        if (c1 >= 0xc2 && c1 <= 0xdf && c2 >= 0x80 && c2 <= 0xbf) { // U+0080..U+07FF\n          this._output = this._output.write((c1 & 0x1f) << 6 | c2 & 0x3f);\n          this._c1 = -1;\n          this._have = 0;\n        } else if (c1 === 0xe0 && c2 >= 0xa0 && c2 <= 0xbf // U+0800..U+0FFF\n                || c1 >= 0xe1 && c1 <= 0xec && c2 >= 0x80 && c2 <= 0xbf // U+1000..U+CFFF\n                || c1 === 0xed && c2 >= 0x80 && c2 <= 0x9f // U+D000..U+D7FF\n                || c1 >= 0xee && c1 <= 0xef && c2 >= 0x80 && c2 <= 0xbf) { // U+E000..U+FFFF\n          if (c3 >= 0x80 && c3 <= 0xbf) {\n            this._output = this._output.write((c1 & 0x0f) << 12 | (c2 & 0x3f) << 6 | c3 & 0x3f);\n            this._c1 = -1;\n            this._c2 = -1;\n            this._have = 0;\n          } else if (c3 >= 0) { // invalid c3\n            if (this._errorMode.isFatal()) {\n              return Output.error(new OutputException(Utf8DecodedOutput.invalid(c1, c2, c3)));\n            }\n            this._output = this._output.write(this._errorMode.replacementChar());\n            this._c1 = c3;\n            this._c2 = -1;\n            this._have = 1;\n          } else if (token < 0 || this._output.isDone()) { // incomplete c3\n            return Output.error(new OutputException(Utf8DecodedOutput.invalid(c1, c2)));\n          } else { // awaiting c3\n            this._c2 = c2;\n            this._have = 2;\n          }\n        } else if (c1 === 0xf0 && c2 >= 0x90 && c2 <= 0xbf // U+10000..U+3FFFF\n                || c1 >= 0xf1 && c1 <= 0xf3 && c2 >= 0x80 && c2 <= 0xbf // U+40000..U+FFFFF\n                || c1 === 0xf4 && c2 >= 0x80 && c2 <= 0x8f) { // U+100000..U+10FFFF\n          if (c3 >= 0x80 && c3 <= 0xbf) {\n            if (c4 >= 0x80 && c4 <= 0xbf) {\n              this._have = 4;\n              this._output = this._output.write((c1 & 0x07) << 18 | (c2 & 0x3f) << 12 | (c3 & 0x3f) << 6 | c4 & 0x3f);\n              this._c1 = -1;\n              this._c2 = -1;\n              this._c3 = -1;\n              this._have = 0;\n            } else if (c4 >= 0) { // invalid c4\n              if (this._errorMode.isFatal()) {\n                return Output.error(new OutputException(Utf8DecodedOutput.invalid(c1, c2, c3, c4)));\n              }\n              this._output = this._output.write(this._errorMode.replacementChar());\n              this._c1 = c4;\n              this._c2 = -1;\n              this._c3 = -1;\n              this._have = 1;\n            } else if (token < 0 || this._output.isDone()) { // incomplete c4\n              return Output.error(new OutputException(Utf8DecodedOutput.invalid(c1, c2, c3)));\n            } else { // awaiting c4\n              this._c3 = c3;\n              this._have = 3;\n            }\n          } else if (c3 >= 0) { // invalid c3\n            if (this._errorMode.isFatal()) {\n              return Output.error(new OutputException(Utf8DecodedOutput.invalid(c1, c2, c3)));\n            }\n            this._output = this._output.write(this._errorMode.replacementChar());\n            this._c1 = c3;\n            this._c2 = -1;\n            this._have = 1;\n          } else if (token < 0 || this._output.isDone()) { // incomplete c3\n            return Output.error(new OutputException(Utf8DecodedOutput.invalid(c1, c2)));\n          } else { // awaiting c3\n            this._c2 = c2;\n            this._have = 2;\n          }\n        } else if (c2 >= 0) { // invalid c2\n          if (this._errorMode.isFatal()) {\n            return Output.error(new OutputException(Utf8DecodedOutput.invalid(c1, c2)));\n          }\n          this._output = this._output.write(this._errorMode.replacementChar());\n          this._c1 = c2;\n          this._have = 1;\n        } else if (token < 0 || this._output.isDone()) { // incomplete c2\n          return Output.error(new OutputException(Utf8DecodedOutput.invalid(c1)));\n        } else { // awaiting c2\n          this._c1 = c1;\n          this._have = 1;\n        }\n      } else if (c1 >= 0) { // invalid c1\n        if (this._errorMode.isFatal()) {\n          return Output.error(new OutputException(Utf8DecodedOutput.invalid(c1)));\n        }\n        this._output = this._output.write(this._errorMode.replacementChar());\n        this._have = 0;\n      }\n      if (this._output.isError()) {\n        return this._output;\n      }\n      return this;\n    } else if (typeof token === \"string\") {\n      this._output.write(token);\n      return this;\n    } else {\n      throw new TypeError(\"\" + token);\n    }\n  }\n\n  static invalid(c1: number, c2?: number, c3?: number, c4?: number): string {\n    let output = Unicode.stringOutput();\n    output = output.write(\"invalid UTF-8 code unit sequence: \");\n    Base16.uppercase().writeIntegerLiteral(c1, output, 2);\n    if (c2 !== void 0) {\n      output = output.write(' ');\n      Base16.uppercase().writeIntegerLiteral(c2, output, 2);\n      if (c3 !== void 0) {\n        output = output.write(' ');\n        Base16.uppercase().writeIntegerLiteral(c3, output, 2);\n        if (c4 !== void 0) {\n          output = output.write(' ');\n          Base16.uppercase().writeIntegerLiteral(c4, output, 2);\n        }\n      }\n    }\n    return output.bind();\n  }\n\n  settings(): OutputSettings;\n  settings(settings: AnyOutputSettings): Output<T>;\n  settings(settings?: AnyOutputSettings): OutputSettings | Output<T> {\n    if (settings === void 0) {\n      return this._output.settings();\n    } else {\n      this._output.settings(settings);\n      return this;\n    }\n  }\n\n  bind(): T {\n    if (this._have === 0) {\n      return this._output.bind();\n    } else {\n      return this.write(-1).bind();\n    }\n  }\n\n  trap(): Error {\n    return this._output.trap();\n  }\n\n  clone(): Output<T> {\n    return new Utf8DecodedOutput<T>(this._output.clone(), this._errorMode,\n                                    this._c1, this._c2, this._c3, this._have);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {UtfErrorMode} from \"./UtfErrorMode\";\nimport {OutputException} from \"./OutputException\";\nimport {AnyOutputSettings, OutputSettings} from \"./OutputSettings\";\nimport {Output} from \"./Output\";\n\n/** @hidden */\nexport class Utf8EncodedOutput<T> extends Output<T> {\n  /** @hidden */\n  _output: Output<T>;\n  /** @hidden */\n  readonly _errorMode: UtfErrorMode;\n  /** @hidden */\n  _c2: number;\n  /** @hidden */\n  _c3: number;\n  /** @hidden */\n  _c4: number;\n  /** @hidden */\n  _index: number;\n\n  constructor(output: Output<T>, errorMode: UtfErrorMode, c2: number = 0,\n              c3: number = 0, c4: number = 0, index: number = 4) {\n    super();\n    this._output = output;\n    this._errorMode = errorMode;\n    this._c2 = c2;\n    this._c3 = c3;\n    this._c4 = c4;\n    this._index = index;\n  }\n\n  isCont(): boolean {\n    return this._output.isCont();\n  }\n\n  isFull(): boolean {\n    return this._output.isFull();\n  }\n\n  isDone(): boolean {\n    return this._output.isDone();\n  }\n\n  isError(): boolean {\n    return false;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): Output<T>;\n  isPart(isPart?: boolean): boolean | Output<T> {\n    if (isPart === void 0) {\n      return this._output.isPart();\n    } else {\n      this._output = this._output.isPart(isPart);\n      return this;\n    }\n  }\n\n  write(token: number | string): Output<T> {\n    if (typeof token === \"number\") {\n      let c1 = 0;\n      let c2 = this._c2;\n      let c3 = this._c3;\n      let c4 = this._c4;\n      let index = this._index;\n      while (index < 4) {\n        if (this._output.isCont()) {\n          switch (index) {\n            case 1: this._output = this._output.write(c2); this._c2 = 0; break;\n            case 2: this._output = this._output.write(c3); this._c3 = 0; break;\n            case 3: this._output = this._output.write(c4); this._c4 = 0; break;\n            default: throw new Error(\"unreachable\");\n          }\n          index += 1;\n        } else {\n          return Output.error(new OutputException(\"unable to flush buffered code units\"));\n        }\n      }\n      if (token >= 0 && token <= 0x7f) { // U+0000..U+007F\n        c4 = token;\n        index = 3;\n      } else if (token >= 0x80 && token <= 0x7ff) { // U+0080..U+07FF\n        c3 = 0xc0 | (token >>> 6);\n        c4 = 0x80 | (token & 0x3f);\n        index = 2;\n      } else if (token >= 0x0800 && token <= 0xffff || // U+0800..U+D7FF\n                 token >= 0xe000 && token <= 0xffff) { // U+E000..U+FFFF\n        c2 = 0xe0 | (token  >>> 12);\n        c3 = 0x80 | ((token >>>  6) & 0x3f);\n        c4 = 0x80 | (token & 0x3f);\n        index = 1;\n      } else if (token >= 0x10000 && token <= 0x10ffff) { // U+10000..U+10FFFF\n        c1 = 0xf0 | (token  >>> 18);\n        c2 = 0x80 | ((token >>> 12) & 0x3f);\n        c3 = 0x80 | ((token >>>  6) & 0x3f);\n        c4 = 0x80 | (token & 0x3f);\n        index = 0;\n      } else { // surrogate or invalid code point\n        if (this._errorMode.isFatal()) {\n          return Output.error(new OutputException(\"invalid code point: \" + token));\n        } else {\n          return this.write(this._errorMode.replacementChar());\n        }\n      }\n      do {\n        switch (index) {\n          case 0: this._output = this._output.write(c1); break;\n          case 1: this._output = this._output.write(c2); this._c2 = 0; break;\n          case 2: this._output = this._output.write(c3); this._c3 = 0; break;\n          case 3: this._output = this._output.write(c4); this._c4 = 0; break;\n          default: throw new Error(\"unreachable\");\n        }\n        index += 1;\n      } while (index < 4 && this._output.isCont());\n      if (index < 4) {\n        if (index < 3) {\n          if (index < 2) {\n            this._c2 = c2;\n          }\n          this._c3 = c3;\n        }\n        this._c4 = c4;\n      }\n      this._index = index;\n      return this;\n    } else if (typeof token === \"string\") {\n      this._output.write(token);\n      return this;\n    } else {\n      throw new TypeError(\"\" + token);\n    }\n  }\n\n  flush(): Output<T> {\n    let index = this._index;\n    while (index < 4) {\n      if (this._output.isCont()) {\n        switch (index) {\n          case 1: this._output = this._output.write(this._c2); this._c2 = 0; break;\n          case 2: this._output = this._output.write(this._c3); this._c3 = 0; break;\n          case 3: this._output = this._output.write(this._c4); this._c4 = 0; break;\n          default: throw new Error(\"unreachable\");\n        }\n        index += 1;\n      } else {\n        return Output.error(new OutputException(\"unable to flush buffered code units\"));\n      }\n    }\n    this._index = index;\n    return this;\n  }\n\n  settings(): OutputSettings;\n  settings(settings: AnyOutputSettings): Output<T>;\n  settings(settings?: AnyOutputSettings): OutputSettings | Output<T> {\n    if (settings === void 0) {\n      return this._output.settings();\n    } else {\n      this._output.settings(settings);\n      return this;\n    }\n  }\n\n  bind(): T {\n    return this._output.bind();\n  }\n\n  clone(): Output<T> {\n    return new Utf8EncodedOutput<T>(this._output.clone(), this._errorMode,\n                                    this._c2, this._c3, this._c4, this._index);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {UtfErrorMode} from \"./UtfErrorMode\";\nimport {Output} from \"./Output\";\nimport {Unicode} from \"./Unicode\";\nimport {Utf8DecodedOutput} from \"./Utf8DecodedOutput\";\nimport {Utf8EncodedOutput} from \"./Utf8EncodedOutput\";\n\n/**\n * UTF-8 [[Input]]/[[Output]] factory.\n */\nexport class Utf8 {\n  private constructor() {\n    // nop\n  }\n\n  /**\n   * Returns the number of bytes in the UTF-8 encoding of the Unicode code\n   * point `c`, handling invalid code unit sequences according to the\n   * `errorMode` policy.  Returns the size of the\n   * [[UtfErrorMode.replacementChar]] for surrogates and invalid code points,\n   * if [[UtfErrorMode.isReplacement]] is `true`; otherwise returns `0` for\n   * surrogates and invalid code points.  Uses the two byte modified UTF-8\n   * encoding of the NUL character (`U+0000`), if [[UtfErrorMode.isNonZero]]\n   * is `true`.\n   */\n  static sizeOf(c: number | undefined, errorMode?: UtfErrorMode): number;\n  /**\n   * Returns the number of bytes in the UTF-8 encoding of the Unicode code\n   * point `c`; returns the size of the Unicode replacement character (`U+FFFD`)\n   * for surrogates and invalid code points.\n   */\n  static sizeOf(c: number | undefined): number;\n  /**\n   * Returns the number of bytes in the UTF-8 encoding the given `string`,\n   * handling invalid code unit sequences according to the `errorMode` policy.\n   */\n  static sizeOf(string: string, errorMode?: UtfErrorMode): number;\n  /**\n   * Returns the number of bytes in the UTF-8 encoding the given `string`,\n   * assuming the Unicode replacement character (`U+FFFD`) replaces unpaired\n   * surrogates and invalid code points.\n   */\n  static sizeOf(string: string): number;\n  static sizeOf(u: string | number | undefined, errorMode?: UtfErrorMode): number {\n    if (typeof u === \"number\" || u === void 0) {\n      if (typeof u === \"number\") {\n        if (u === 0x0000 && errorMode !== void 0 && errorMode.isNonZero()) { // Modified UTF-8\n          return 2; // U+0000 encoded as 0xC0, 0x80\n        } else if (u >= 0x0000 && u <= 0x007F) { // U+0000..U+007F\n          return 1;\n        } else if (u >= 0x0080 && u <= 0x07FF) { // U+0080..U+07FF\n          return 2;\n        } else if (u >= 0x0800 && u <= 0xFFFF || // U+0800..U+D7FF\n                   u >= 0xE000 && u <= 0xFFFF) { // U+E000..U+FFFF\n          return 3;\n        } else if (u >= 0x10000 && u <= 0x10FFFF) { // U+10000..U+10FFFF\n          return 4;\n        }\n      }\n      // surrogate or invalid code point\n      if (errorMode === void 0) {\n        return 3;\n      } else if (errorMode.isReplacement()) {\n        return Utf8.sizeOf(errorMode.replacementChar());\n      } else {\n        return 0;\n      }\n    } else if (typeof u === \"string\") {\n      let size = 0;\n      for (let i = 0, n = u.length; i < n; i = u.offsetByCodePoints(i, 1)) {\n        size += Utf8.sizeOf(u.charCodeAt(i), errorMode);\n      }\n      return size;\n    } else {\n      throw new TypeError(\"\" + u);\n    }\n  }\n\n  /**\n   * Returns a new `Output` that accepts UTF-8 code unit sequences, and writes\n   * writes decoded Unicode code points to the composed `output`, handling\n   * invalid code unit sequences according to the `errorMode` policy.\n   */\n  static decodedOutput<T>(output: Output<T>, errorMode: UtfErrorMode = UtfErrorMode.fatal()): Output<T> {\n    return new Utf8DecodedOutput<T>(output, errorMode);\n  }\n\n  /**\n   * Returns a new `Output` that accepts Unicode code points, and writes\n   * encoded UTF-8 code unit sequences to the composed `output`, handling\n   * invalid code unit sequences according to the `errorMode` policy.\n   */\n  static encodedOutput<T>(output: Output<T>, errorMode: UtfErrorMode = UtfErrorMode.fatal()): Output<T> {\n    return new Utf8EncodedOutput<T>(output, errorMode);\n  }\n\n  /**\n   * Returns a new `Output` that accepts UTF-8 code unit sequences, and writes\n   * decoded Unicode code points to a growable `string`, handling invalid code\n   * unit sequences according to the [[UtfErrorMode.fatal]] policy.  The\n   * returned `Output` accepts an unbounded number of UTF-8 code units,\n   * remaining permanently in the _cont_ state, and [[Output.bind binds]] a\n   * `string` containing all decoded code points.\n   */\n  static decodedString(): Output<string> {\n    return Utf8.decodedOutput(Unicode.stringOutput());\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input} from \"./Input\";\nimport {Output} from \"./Output\";\nimport {Parser} from \"./Parser\";\nimport {Diagnostic} from \"./Diagnostic\";\nimport {Unicode} from \"./Unicode\";\nimport {Base10} from \"./Base10\";\n\n/** @hidden */\nexport class Base10NumberParser extends Parser<number> {\n  private readonly _sign: number | undefined;\n  private readonly _value: number | undefined;\n  private readonly _mode: number | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(sign?: number, value?: number, mode?: number, step?: number) {\n    super();\n    this._sign = sign;\n    this._value = value;\n    this._mode = mode;\n    this._step = step;\n  }\n\n  feed(input: Input): Parser<number> {\n    return Base10NumberParser.parse(input, this._sign, this._value, this._mode, this._step);\n  }\n\n  static parse(input: Input, sign: number = 1, value: number = 0,\n               mode: number = 2, step: number = 1): Parser<number> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 45/*'-'*/) {\n          input = input.step();\n          sign = -1;\n        }\n        step = 2;\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(\"number\", input));\n      }\n    }\n    if (step === 2) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 48/*'0'*/) {\n          input = input.step();\n          step = 4;\n        } else if (c >= 49/*'1'*/ && c <= 57/*'9'*/) {\n          input = input.step();\n          value = sign * (c - 48/*'0'*/);\n          step = 3;\n        } else if (mode > 0 && c === 46/*'.'*/) {\n          let output = Unicode.stringOutput();\n          if (sign < 0) {\n            output = output.write(45/*'-'*/);\n          }\n          return Base10DecimalParser.parse(input, output, mode);\n        } else {\n          return Parser.error(Diagnostic.expected(\"number\", input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(\"number\", input));\n      }\n    }\n    if (step === 3) {\n      while (input.isCont()) {\n        c = input.head();\n        if (c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n          const newValue = 10 * value + sign * (c - 48/*'0'*/);\n          if (-9007199254740991 <= newValue && newValue <= 9007199254740992) {\n            value = newValue;\n            input = input.step();\n          } else {\n            return Parser.error(Diagnostic.message(\"integer overflow\", input));\n          }\n        } else {\n          break;\n        }\n      }\n      if (input.isCont()) {\n        step = 4;\n      } else if (input.isDone()) {\n        return Parser.done(value);\n      }\n    }\n    if (step === 4) {\n      if (input.isCont()) {\n        c = input.head();\n        if (mode > 0 && c === 46/*'.'*/ || mode > 1 && (c === 69/*'E'*/ || c === 101/*'e'*/)) {\n          let output = Unicode.stringOutput();\n          if (sign < 0 && value === 0) {\n            output = output.write(45/*'-'*/).write(48/*'0'*/);\n          } else {\n            output = output.write(\"\" + value);\n          }\n          return Base10DecimalParser.parse(input, output, mode);\n        } else {\n          return Parser.done(value);\n        }\n      } else if (input.isDone()) {\n        return Parser.done(value);\n      }\n    }\n    return new Base10NumberParser(sign, value, mode, step);\n  }\n}\nBase10.NumberParser = Base10NumberParser;\n\n/** @hidden */\nclass Base10DecimalParser extends Parser<number> {\n  private readonly _output: Output<string>;\n  private readonly _mode: number | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(output: Output<string>, mode?: number, step?: number) {\n    super();\n    this._output = output;\n    this._mode = mode;\n    this._step = step;\n  }\n\n  feed(input: Input): Parser<number> {\n    return Base10DecimalParser.parse(input, this._output, this._mode, this._step);\n  }\n\n  static parse(input: Input, output: Output<string>, mode: number = 2,\n               step: number = 1): Parser<number> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 46/*'.'*/) {\n          input = input.step();\n          output = output.write(c);\n          step = 2;\n        } else if (mode > 1 && (c === 69/*'E'*/ || c === 101/*'e'*/)) {\n          input = input.step();\n          output = output.write(c);\n          step = 5;\n        } else {\n          return Parser.error(Diagnostic.expected(\"decimal or exponent\", input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(\"decimal or exponent\", input));\n      }\n    }\n    if (step === 2) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n          input = input.step();\n          output = output.write(c);\n          step = 3;\n        } else {\n          return Parser.error(Diagnostic.expected(\"digit\", input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(\"digit\", input));\n      }\n    }\n    if (step === 3) {\n      while (input.isCont()) {\n        c = input.head();\n        if (c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n          input = input.step();\n          output = output.write(c);\n        } else {\n          break;\n        }\n      }\n      if (input.isCont()) {\n        if (mode > 1) {\n          step = 4;\n        } else {\n          return Parser.done(+output.bind());\n        }\n      } else if (input.isDone()) {\n        return Parser.done(+output.bind());\n      }\n    }\n    if (step === 4) {\n      c = input.head();\n      if (c === 69/*'E'*/ || c === 101/*'e'*/) {\n        input = input.step();\n        output = output.write(c);\n        step = 5;\n      } else {\n        return Parser.done(+output.bind());\n      }\n    }\n    if (step === 5) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 43/*'+'*/ || c === 45/*'-'*/) {\n          input = input.step();\n          output = output.write(c);\n        }\n        step = 6;\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.unexpected(input));\n      }\n    }\n    if (step === 6) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n          input = input.step();\n          output = output.write(c);\n          step = 7;\n        } else {\n          return Parser.error(Diagnostic.expected(\"digit\", input));\n        }\n      } else if (input.isDone()) {\n        return Parser.error(Diagnostic.expected(\"digit\", input));\n      }\n    }\n    if (step === 7) {\n      while (input.isCont()) {\n        c = input.head();\n        if (c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n          input = input.step();\n          output = output.write(c);\n        } else {\n          break;\n        }\n      }\n      if (!input.isEmpty()) {\n        return Parser.done(+output.bind());\n      }\n    }\n    return new Base10DecimalParser(output, mode, step);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output} from \"./Output\";\nimport {WriterException} from \"./WriterException\";\nimport {Writer} from \"./Writer\";\nimport {Base10} from \"./Base10\";\n\n/** @hidden */\nexport class Base10IntegerWriter extends Writer<any, any> {\n  /** @hidden */\n  readonly _value: any;\n  /** @hidden */\n  readonly _input: number;\n  /** @hidden */\n  readonly _index: number;\n  /** @hidden */\n  readonly _step: number;\n\n  constructor(value: any, input: number, index: number = 0, step: number = 1) {\n    super();\n    this._value = value;\n    this._input = input;\n    this._index = index;\n    this._step = step;\n  }\n\n  pull(output: Output): Writer<any, any> {\n    return Base10IntegerWriter.write(output, this._value, this._input, this._index, this._step);\n  }\n\n  static write(output: Output, value: any, input: number, index: number = 0,\n               step: number = 1): Writer<any, any> {\n    if (step === 0) {\n      return Writer.done();\n    }\n    if (step === 1) {\n      if (input < 0) {\n        if (output.isCont()) {\n          output = output.write(45/*'-'*/);\n          step = 2;\n        }\n      } else {\n        step = 2;\n      }\n    }\n    if (step === 2) {\n      if (input > -10 && input < 10) {\n        if (output.isCont()) {\n          output = output.write(Base10.encodeDigit(Math.abs(input | 0)));\n          return Writer.done(value);\n        }\n      } else {\n        const digits = new Array<number>(19);\n        let x = input;\n        let i = 18;\n        while (x) {\n          digits[i] = Math.abs((x % 10) | 0);\n          x = (x / 10) | 0;\n          i -= 1;\n        }\n        i += 1 + index;\n        while (i < 19 && output.isCont()) {\n          output = output.write(Base10.encodeDigit(digits[i]));\n          index += 1;\n          i += 1;\n        }\n        if (i === 19) {\n          return Writer.done(value);\n        }\n      }\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new Base10IntegerWriter(value, input, index, step);\n  }\n}\nBase10.IntegerWriter = Base10IntegerWriter;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input} from \"./Input\";\nimport {Output} from \"./Output\";\nimport {Parser} from \"./Parser\";\nimport {Diagnostic} from \"./Diagnostic\";\nimport {Base16} from \"./Base16\";\n\n/** @hidden */\nexport class Base16Parser<O> extends Parser<O> {\n  /** @hidden */\n  readonly _output: Output<O>;\n  /** @hidden */\n  readonly _p: number;\n  /** @hidden */\n  readonly _step: number;\n\n  constructor(output: Output<O>, p: number = 0, step: number = 1) {\n    super();\n    this._output = output;\n    this._p = p;\n    this._step = step;\n  }\n\n  feed(input: Input): Parser<O> {\n    return Base16Parser.parse(input, this._output.clone(), this._p, this._step);\n  }\n\n  static parse<O>(input: Input, output: Output<O>, p: number = 0, step: number = 1): Parser<O> {\n    let c = 0;\n    while (!input.isEmpty()) {\n      if (step === 1) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          p = c;\n          step = 2;\n        } else if (!input.isEmpty()) {\n          return Parser.done(output.bind());\n        }\n      }\n      if (step === 2) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          Base16.writeQuantum(p, c, output);\n          p = 0;\n          step = 1;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"base16 digit\", input));\n        }\n      }\n    }\n    return new Base16Parser<O>(output, p, step);\n  }\n}\nBase16.Parser = Base16Parser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output} from \"./Output\";\nimport {WriterException} from \"./WriterException\";\nimport {Writer} from \"./Writer\";\nimport {Base16} from \"./Base16\";\n\n/** @hidden */\nexport class Base16Writer extends Writer<unknown, unknown> {\n  /** @hidden */\n  readonly _value: unknown;\n  /** @hidden */\n  readonly _input: Uint8Array | undefined;\n  /** @hidden */\n  readonly _base16: Base16;\n  /** @hidden */\n  readonly _index: number;\n  /** @hidden */\n  readonly _step: number;\n\n  constructor(value: unknown, input: Uint8Array | undefined, base16: Base16,\n              index: number = 0, step: number = 1) {\n    super();\n    this._value = value;\n    this._input = input;\n    this._base16 = base16;\n    this._index = index;\n    this._step = step;\n  }\n\n  feed(value: unknown): Writer<unknown, unknown> {\n    if (value instanceof Uint8Array) {\n      return new Base16Writer(undefined, value, this._base16);\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n\n  pull(output: Output): Writer<unknown, unknown> {\n    return Base16Writer.write(output, this._value, this._input!, this._base16,\n                              this._index, this._step);\n  }\n\n  static write(output: Output, value: unknown, input: Uint8Array, base16: Base16,\n               index: number = 0, step: number = 1): Writer<unknown, unknown> {\n    while (index < input.length) {\n      const x = input[index];\n      if (step === 1 && output.isCont()) {\n        output = output.write(base16.encodeDigit(x >>> 4));\n        step = 2;\n      }\n      if (step === 2 && output.isCont()) {\n        output = output.write(base16.encodeDigit(x & 0x0f));\n        index += 1;\n        step = 1;\n      }\n    }\n    if (index === input.length) {\n      return Writer.done(value);\n    } else if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new Base16Writer(value, input, base16, index, step);\n  }\n}\nBase16.Writer = Base16Writer;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output} from \"./Output\";\nimport {WriterException} from \"./WriterException\";\nimport {Writer} from \"./Writer\";\nimport {Base16} from \"./Base16\";\n\nexport class Base16IntegerWriter extends Writer<unknown, unknown> {\n  private readonly _value: unknown;\n  private readonly _input: number;\n  private readonly _width: number;\n  private readonly _base16: Base16;\n  private readonly _index: number | undefined;\n  private readonly _step: number | undefined;\n\n  constructor(value: unknown, input: number, width: number,\n              base16: Base16, index?: number, step?: number) {\n    super();\n    this._value = value;\n    this._input = input;\n    this._width = width;\n    this._base16 = base16;\n    this._index = index;\n    this._step = step;\n  }\n\n  pull(output: Output): Writer<unknown, unknown> {\n    return Base16IntegerWriter.write(output, this._value, this._input, this._width,\n                                     this._base16, this._index, this._step);\n  }\n\n  static write(output: Output, value: unknown, input: number, width: number,\n               base16: Base16, index: number = 0, step: number = 3): Writer<unknown, unknown> {\n    if (step <= 0) {\n      return Writer.done();\n    }\n    if (step === 1 && output.isCont()) {\n      output = output.write(48/*'0'*/);\n      step = 2;\n    }\n    if (step === 2 && output.isCont()) {\n      output = output.write(120/*'x'*/);\n      step = 3;\n    }\n    if (step === 3) {\n      if (input >= 0 && input < 16 && width <= 1) {\n        if (output.isCont()) {\n          output = output.write(base16.encodeDigit(input));\n          return Writer.done(value);\n        }\n      } else {\n        let i = 15;\n        const digits = new Array<number>(16);\n        let x = input;\n        while (x !== 0 || i >= 16 - width) {\n          digits[i] = x & 0xf;\n          x >>>= 4;\n          i -= 1;\n        }\n        i += 1 + index;\n        while (i < 16 && output.isCont()) {\n          output = output.write(base16.encodeDigit(digits[i]));\n          index += 1;\n          i += 1;\n        }\n        if (i === 16) {\n          return Writer.done(value);\n        }\n      }\n    }\n    if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new Base16IntegerWriter(value, input, width, base16, index, step);\n  }\n\n  static writeLiteral(output: Output, value: unknown, input: number, width: number,\n                      base16: Base16): Writer<unknown, unknown> {\n    return Base16IntegerWriter.write(output, value, input, width, base16, 0, 1);\n  }\n}\nBase16.IntegerWriter = Base16IntegerWriter;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input} from \"./Input\";\nimport {Output} from \"./Output\";\nimport {Parser} from \"./Parser\";\nimport {Writer} from \"./Writer\";\nimport {Format} from \"./Format\";\nimport {Unicode} from \"./Unicode\";\nimport {Binary} from \"./Binary\";\nimport {Base64Parser} from \"./Base64Parser\";\nimport {Base64Writer} from \"./Base64Writer\";\n\n/**\n * Base-64 (7-bit ASCII) encoding [[Parser]]/[[Writer]] factory.\n */\nexport abstract class Base64 {\n  /** @hidden */\n  constructor() {\n    // stub\n  }\n\n  /**\n   * Returns a 64 character string, where the character at index `i` is the\n   * encoding of the base-64 digit `i`.\n   */\n  abstract alphabet(): string;\n\n  /**\n   * Returns `true` if this base-64 encoding requires padding.\n   */\n  abstract isPadded(): boolean;\n\n  /**\n   * Returns this `Base64` encoding with required padding, if `isPadded` is\n   * `true`.\n   */\n  abstract isPadded(isPadded: boolean): Base64;\n\n  /**\n   * Returns `true` if the Unicode code point `c` is a valid base-64 digit.\n   */\n  abstract isDigit(c: number): boolean;\n\n  /**\n   * Returns the 7-bit quantity represented by the base-64 digit `c`.\n   *\n   * @throws `Error` if `c` is not a valid base-64 digit.\n   */\n  public decodeDigit(c: number): number {\n    if (c >= 65/*'A'*/ && c <= 90/*'Z'*/) {\n      return c - 65/*'A'*/;\n    } else if (c >= 97/*'a'*/ && c <= 122/*'z'*/) {\n      return c + (26 - 97/*'a'*/);\n    } else if (c >= 48/*'0'*/ && c <= 57/*'9'*/) {\n      return c + (52 - 48/*'0'*/);\n    } else if (c === 43/*'+'*/ || c === 45/*'-'*/) {\n      return 62;\n    } else if (c === 47/*'/'*/ || c === 95/*'_'*/) {\n      return 63;\n    } else {\n      const message = Unicode.stringOutput();\n      message.write(\"Invalid base-64 digit: \");\n      Format.debugChar(c, message);\n      throw new Error(message.bind());\n    }\n  }\n\n  /**\n   * Returns the Unicode code point of the base-64 digit that encodes the given\n   * 7-bit quantity.\n   */\n  encodeDigit(b: number): number {\n    return this.alphabet().charCodeAt(b);\n  }\n\n  /**\n   * Decodes the base-64 digits `c1`, `c2`, `c3`, and `c4`, and writes the 8 to\n   * 24 bit quantity they represent to the given `output`.\n   */\n  writeQuantum(c1: number, c2: number, c3: number, c4: number, output: Output): void {\n    const x = this.decodeDigit(c1);\n    const y = this.decodeDigit(c2);\n    if (c3 !== 61/*'='*/) {\n      const z = this.decodeDigit(c3);\n      if (c4 !== 61/*'='*/) {\n        const w = this.decodeDigit(c4);\n        output = output.write((x << 2) | (y >>> 4));\n        output = output.write((y << 4) | (z >>> 2));\n        output = output.write((z << 6) | w);\n      } else {\n        output = output.write((x << 2) | (y >>> 4));\n        output = output.write((y << 4) | (z >>> 2));\n      }\n    } else {\n      if (c4 !== 61/*'='*/) {\n        throw new Error(\"Improperly padded base-64\");\n      }\n      output = output.write((x << 2) | (y >>> 4));\n    }\n  }\n\n  /**\n   * Returns a `Parser` that decodes base-64 (7-bit ASCII) encoded input, and\n   * writes the decoded bytes to `output`.\n   */\n  parser<O>(output: Output<O>): Parser<O> {\n    return new Base64.Parser<O>(output, this);\n  }\n\n  /**\n   * Parses the base-64 (7-bit ASCII) encoded `input`, and writes the decoded\n   * bytes to `output`, returning a `Parser` continuation that knows how to\n   * parse any additional input.\n   */\n  parse<O>(input: Input, output: Output<O>): Parser<O> {\n    return Base64.Parser.parse(input, output, this);\n  }\n\n  /**\n   * Parses the base-64 (7-bit ASCII) encoded `input`, and writes the decoded\n   * bytes to a growable array, returning a `Parser` continuation that knows\n   * how to parse any additional input.  The returned `Parser` [[Parser.bind\n   * binds]] a `Uint8Array` array containing all parsed base-64 data.\n   */\n  parseUint8Array(input: Input): Parser<Uint8Array> {\n    return Base64.Parser.parse(input, Binary.uint8ArrayOutput(), this);\n  }\n\n  /**\n   * Returns a `Writer` that, when fed an input `Uint8Array`, returns a\n   * continuation that writes the base-64 (7-bit ASCII) encoding of the input\n   * `Uint8Array`.\n   */\n  uint8ArrayWriter(): Writer<Uint8Array, unknown>;\n  /**\n   * Returns a {@code Writer} continuation that writes the base-64 (7-bit ASCII)\n   * encoding of the {@code input} byte array.\n   */\n  uint8ArrayWriter(input: Uint8Array): Writer<unknown, Uint8Array>;\n  uint8ArrayWriter(input?: Uint8Array): Writer<unknown, unknown> {\n    if (input === void 0) {\n      return new Base64.Writer(void 0, void 0, this);\n    } else {\n      return new Base64.Writer(input, input, this);\n    }\n  }\n\n  /**\n   * Writes the base-64 (7-bit ASCII) encoding of the `input` `Uint8Array` to\n   * the `output`, returning a `Writer` continuation that knows how to write any\n   * remaining output that couldn't be immediately generated.\n   */\n  writeUint8Array(input: Uint8Array, output: Output): Writer<unknown, unknown> {\n    return Base64.Writer.write(output, void 0, input, this);\n  }\n\n  private static _standard?: Base64;\n  private static _standardUnpadded?: Base64;\n  private static _url?: Base64;\n  private static _urlUnpadded?: Base64;\n\n  /**\n   * Returns the `Base64` encoding with the standard alphabet, and required\n   * padding, if `isPadding` is `true`.\n   */\n  static standard(isPadded: boolean = true): Base64 {\n    if (isPadded) {\n      if (!Base64._standard) {\n        Base64._standard = new Base64Standard(true);\n      }\n      return Base64._standard;\n    } else {\n      if (!Base64._standardUnpadded) {\n        Base64._standardUnpadded = new Base64Standard(true);\n      }\n      return Base64._standardUnpadded;\n    }\n  }\n\n  /**\n   * Returns the `Base64` encoding with the url and filename safe alphabet,\n   * and required padding, if `isPadded` is `true`.\n   */\n  static url(isPadded: boolean = true): Base64 {\n    if (isPadded) {\n      if (!Base64._url) {\n        Base64._url = new Base64Url(true);\n      }\n      return Base64._url;\n    } else {\n      if (!Base64._urlUnpadded) {\n        Base64._urlUnpadded = new Base64Url(false);\n      }\n      return Base64._urlUnpadded;\n    }\n  }\n\n  // Forward type declarations\n  /** @hidden */\n  static Parser: typeof Base64Parser; // defined by Base64Parser\n  /** @hidden */\n  static Writer: typeof Base64Writer; // defined by Base64Writer\n}\n\n/** @hidden */\nclass Base64Standard extends Base64 {\n  /** @hidden */\n  readonly _isPadded: boolean;\n\n  constructor(isPadded: boolean) {\n    super();\n    this._isPadded = isPadded;\n  }\n\n  alphabet(): string {\n    return \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n  }\n\n  isPadded(): boolean;\n  isPadded(isPadded: boolean): Base64;\n  isPadded(isPadded?: boolean): boolean | Base64 {\n    if (isPadded === void 0) {\n      return this._isPadded;\n    } else {\n      if (isPadded === this._isPadded) {\n        return this;\n      } else {\n        return Base64.standard(isPadded);\n      }\n    }\n  }\n\n  isDigit(c: number): boolean {\n    return c >= 48/*'0'*/ && c <= 57/*'9'*/\n        || c >= 65/*'A'*/ && c <= 90/*'Z'*/\n        || c >= 97/*'a'*/ && c <= 122/*'z'*/\n        || c === 43/*'+'*/ || c === 47/*'/'*/;\n  }\n}\n\n/** @hidden */\nclass Base64Url extends Base64 {\n  /** @hidden */\n  readonly _isPadded: boolean;\n\n  constructor(isPadded: boolean) {\n    super();\n    this._isPadded = isPadded;\n  }\n\n  alphabet(): string {\n    return \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\";\n  }\n\n  isPadded(): boolean;\n  isPadded(isPadded: boolean): Base64;\n  isPadded(isPadded?: boolean): boolean | Base64 {\n    if (isPadded === void 0) {\n      return this._isPadded;\n    } else {\n      if (isPadded === this._isPadded) {\n        return this;\n      } else {\n        return Base64.url(isPadded);\n      }\n    }\n  }\n\n  isDigit(c: number): boolean {\n    return c >= 48/*'0'*/ && c <= 57/*'9'*/\n        || c >= 65/*'A'*/ && c <= 90/*'Z'*/\n        || c >= 97/*'a'*/ && c <= 122/*'z'*/\n        || c === 45/*'-'*/ || c === 95/*'_'*/;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input} from \"./Input\";\nimport {Output} from \"./Output\";\nimport {Parser} from \"./Parser\";\nimport {Diagnostic} from \"./Diagnostic\";\nimport {Base64} from \"./Base64\";\n\n/** @hidden */\nexport class Base64Parser<O> extends Parser<O> {\n  /** @hidden */\n  readonly _output: Output<O>;\n  /** @hidden */\n  readonly _base64: Base64;\n  /** @hidden */\n  readonly _p: number;\n  /** @hidden */\n  readonly _q: number;\n  /** @hidden */\n  readonly _r: number;\n  /** @hidden */\n  readonly _step: number;\n\n  constructor(output: Output<O>, base64: Base64, p: number = 0, q: number = 0,\n              r: number = 0, step: number = 1) {\n    super();\n    this._output = output;\n    this._base64 = base64;\n    this._p = p;\n    this._q = q;\n    this._r = r;\n    this._step = step;\n  }\n\n  feed(input: Input): Parser<O> {\n    return Base64Parser.parse(input, this._output.clone(), this._base64,\n                              this._p, this._q, this._r, this._step);\n  }\n\n  static parse<O>(input: Input, output: Output<O>, base64: Base64, p: number = 0,\n                  q: number = 0, r: number = 0, step: number = 1): Parser<O> {\n    let c = 0;\n    while (!input.isEmpty()) {\n      if (step === 1) {\n        if (input.isCont() && (c = input.head(), base64.isDigit(c))) {\n          input = input.step();\n          p = c;\n          step = 2;\n        } else if (!input.isEmpty()) {\n          return Parser.done(output.bind());\n        }\n      }\n      if (step === 2) {\n        if (input.isCont() && (c = input.head(), base64.isDigit(c))) {\n          input = input.step();\n          q = c;\n          step = 3;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"base64 digit\", input));\n        }\n      }\n      if (step === 3) {\n        if (input.isCont() && (c = input.head(), base64.isDigit(c) || c === 61/*'='*/)) {\n          input = input.step();\n          r = c;\n          if (c !== 61/*'='*/) {\n            step = 4;\n          } else {\n            step = 5;\n          }\n        } else if (!input.isEmpty()) {\n          if (!base64.isPadded()) {\n            base64.writeQuantum(p, q, 61/*'='*/, 61/*'='*/, output);\n            return Parser.done(output.bind());\n          } else {\n            return Parser.error(Diagnostic.unexpected(input));\n          }\n        }\n      }\n      if (step === 4) {\n        if (input.isCont() && (c = input.head(), base64.isDigit(c) || c === 61/*'='*/)) {\n          input = input.step();\n          base64.writeQuantum(p, q, r, c, output);\n          r = 0;\n          q = 0;\n          p = 0;\n          if (c !== 61/*'='*/) {\n            step = 1;\n          } else {\n            return Parser.done(output.bind());\n          }\n        } else if (!input.isEmpty()) {\n          if (!base64.isPadded()) {\n            base64.writeQuantum(p, q, r, 61/*'='*/, output);\n            return Parser.done(output.bind());\n          } else {\n            return Parser.error(Diagnostic.unexpected(input));\n          }\n        }\n      } else if (step === 5) {\n        if (input.isCont() && (c = input.head(), c === 61/*'='*/)) {\n          input = input.step();\n          base64.writeQuantum(p, q, r, c, output);\n          r = 0;\n          q = 0;\n          p = 0;\n          return Parser.done(output.bind());\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(61/*'='*/, input));\n        }\n      }\n    }\n    return new Base64Parser<O>(output, base64, p, q, r, step);\n  }\n}\nBase64.Parser = Base64Parser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output} from \"./Output\";\nimport {WriterException} from \"./WriterException\";\nimport {Writer} from \"./Writer\";\nimport {Base64} from \"./Base64\";\n\n/** @hidden */\nexport class Base64Writer extends Writer<unknown, unknown> {\n  /** @hidden */\n  readonly _value: unknown;\n  /** @hidden */\n  readonly _input: Uint8Array | undefined;\n  /** @hidden */\n  readonly _base64: Base64;\n  /** @hidden */\n  readonly _index: number;\n  /** @hidden */\n  readonly _step: number;\n\n  constructor(value: unknown, input: Uint8Array | undefined, base64: Base64,\n              index: number = 0, step: number = 1) {\n    super();\n    this._value = value;\n    this._input = input;\n    this._base64 = base64;\n    this._index = index;\n    this._step = step;\n  }\n\n  feed(value: unknown): Writer<unknown, unknown> {\n    if (value instanceof Uint8Array) {\n      return new Base64Writer(undefined, value, this._base64);\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n\n  pull(output: Output): Writer<unknown, unknown> {\n    return Base64Writer.write(output, this._value, this._input!, this._base64,\n                              this._index, this._step);\n  }\n\n  static write(output: Output, value: unknown, input: Uint8Array, base64: Base64,\n               index: number = 0, step: number = 1): Writer<unknown, unknown> {\n    while (index + 2 < input.length && output.isCont()) {\n      const x = input[index];\n      const y = input[index + 1];\n      const z = input[index + 2];\n      if (step === 1 && output.isCont()) {\n        output = output.write(base64.encodeDigit(x >>> 2));\n        step = 2;\n      }\n      if (step === 2 && output.isCont()) {\n        output = output.write(base64.encodeDigit(((x << 4) | (y >>> 4)) & 0x3f));\n        step = 3;\n      }\n      if (step === 3 && output.isCont()) {\n        output = output.write(base64.encodeDigit(((y << 2) | (z >>> 6)) & 0x3f));\n        step = 4;\n      }\n      if (step === 4 && output.isCont()) {\n        output = output.write(base64.encodeDigit(z & 0x3f));\n        index += 3;\n        step = 1;\n      }\n    }\n    if (index + 1 < input.length && output.isCont()) {\n      const x = input[index];\n      const y = input[index + 1];\n      if (step === 1 && output.isCont()) {\n        output = output.write(base64.encodeDigit(x >>> 2));\n        step = 2;\n      }\n      if (step === 2 && output.isCont()) {\n        output = output.write(base64.encodeDigit(((x << 4) | (y >>> 4)) & 0x3f));\n        step = 3;\n      }\n      if (step === 3 && output.isCont()) {\n        output = output.write(base64.encodeDigit((y << 2) & 0x3f));\n        step = 4;\n      }\n      if (step === 4) {\n        if (!base64.isPadded()) {\n          index += 2;\n        } else if (output.isCont()) {\n          output = output.write(61/*'='*/);\n          index += 2;\n        }\n      }\n    } else if (index < input.length && output.isCont()) {\n      const x = input[index];\n      if (step === 1 && output.isCont()) {\n        output = output.write(base64.encodeDigit(x >>> 2));\n        step = 2;\n      }\n      if (step === 2 && output.isCont()) {\n        output = output.write(base64.encodeDigit((x << 4) & 0x3f));\n        step = 3;\n      }\n      if (step === 3) {\n        if (!base64.isPadded()) {\n          index += 1;\n        } else if (output.isCont()) {\n          output = output.write(61/*'='*/);\n          step = 4;\n        }\n      }\n      if (step === 4 && output.isCont()) {\n        output = output.write(61/*'='*/);\n        index += 1;\n      }\n    }\n    if (index === input.length) {\n      return Writer.done(value);\n    } else if (output.isDone()) {\n      return Writer.error(new WriterException(\"truncated\"));\n    } else if (output.isError()) {\n      return Writer.error(output.trap());\n    }\n    return new Base64Writer(value, input, base64, index, step);\n  }\n}\nBase64.Writer = Base64Writer;\n"],"names":["Murmur3","Severity","Objects"],"mappings":";;;;;;;QA6BA;SAqCC;QAAD,UAAC;IAAD,CAAC;;IClED;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;AACA;IACA,IAAI,aAAa,GAAG,SAAS,CAAC,EAAE,CAAC,EAAE;IACnC,IAAI,aAAa,GAAG,MAAM,CAAC,cAAc;IACzC,SAAS,EAAE,SAAS,EAAE,EAAE,EAAE,YAAY,KAAK,IAAI,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC;IACpF,QAAQ,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACnF,IAAI,OAAO,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC;AACF;AACA,IAAO,SAAS,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE;IAChC,IAAI,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACxB,IAAI,SAAS,EAAE,GAAG,EAAE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE;IAC3C,IAAI,CAAC,CAAC,SAAS,GAAG,CAAC,KAAK,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;IACzF,CAAC;;;QCLyB,wBAAG;QAW3B,cAAY,MAAc,EAAE,IAAY,EAAE,MAAc,EAAE,IAAmB;YAA7E,YACE,iBAAO,SAKR;YAJC,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;;SACnB;QAKD,qBAAM,GAAN;YACE,OAAO,IAAI,CAAC,OAAO,CAAC;SACrB;QAKD,mBAAI,GAAJ;YACE,OAAO,IAAI,CAAC,KAAK,CAAC;SACnB;QAKD,qBAAM,GAAN;YACE,OAAO,IAAI,CAAC,OAAO,CAAC;SACrB;QAMD,mBAAI,GAAJ;YACE,OAAO,IAAI,CAAC,KAAK,CAAC;SACnB;QAMD,kBAAG,GAAH,UAAI,IAAU;YACZ,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChC,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,OAAO,IAAI,CAAC;aACb;SACF;QAMD,kBAAG,GAAH,UAAI,IAAU;YACZ,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChC,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,OAAO,IAAI,CAAC;aACb;SACF;QAED,oBAAK,GAAL;YACE,OAAO,IAAI,CAAC;SACb;QAED,kBAAG,GAAH;YACE,OAAO,IAAI,CAAC;SACb;QAED,oBAAK,GAAL,UAAM,IAAS;YACb,IAAI,IAAI,YAAY,IAAI,EAAE;gBACxB,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK;uBACvD,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,OAAO,EAAE;oBACpC,OAAO,IAAI,CAAC;iBACb;qBAAM;oBACL,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;iBAClC;aACF;iBAAM,IAAI,IAAI,YAAY,GAAG,CAAC,IAAI,EAAE;gBACnC,IAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACpC,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAChC,IAAI,KAAK,KAAK,IAAI,CAAC,MAAM,IAAI,GAAG,KAAK,IAAI,CAAC,IAAI,EAAE;oBAC9C,OAAO,IAAI,CAAC;iBACb;qBAAM;oBACL,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;iBAClC;aACF;YACD,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;SAClC;QAED,oBAAK,GAAL,UAAM,IAAU;YACd,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;YAC5D,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;YACpD,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;YAC1B,IAAI,IAAI,KAAK,CAAC,EAAE;gBACd,MAAM,KAAK,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;aACzC;YACD,IAAI,MAAM,KAAK,IAAI,CAAC,OAAO,IAAI,IAAI,KAAK,IAAI,CAAC,KAAK,IAAI,MAAM,KAAK,IAAI,CAAC,OAAO,EAAE;gBAC7E,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,OAAO,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aAClD;SACF;QAED,qBAAM,GAAN,UAAO,IAAa;YAClB,IAAI,IAAI,KAAK,IAAI,EAAE;gBACjB,OAAO,IAAI,CAAC;aACb;iBAAM,IAAI,IAAI,YAAY,IAAI,EAAE;gBAC/B,OAAO,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK;uBAC1D,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC;aACnE;YACD,OAAO,KAAK,CAAC;SACd;QAED,uBAAQ,GAAR;YACE,IAAI,IAAI,CAAC,SAAS,KAAK,KAAK,CAAC,EAAE;gBAC7B,IAAI,CAAC,SAAS,GAAGA,YAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACrC;YACD,OAAOA,YAAO,CAAC,IAAI,CAACA,YAAO,CAAC,GAAG,CAACA,YAAO,CAAC,GAAG,CAACA,YAAO,CAAC,GAAG,CAACA,YAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,EAC9E,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAEA,YAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SAC3E;QAED,sBAAO,GAAP,UAAQ,MAAc;YACpB,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YAC7C,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;YACjC,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;YAC/C,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,EAAE;gBACvB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACrE;SACF;QAED,oBAAK,GAAL,UAAM,MAAc;YAClB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAChE,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;YAC7C,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC5B,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YAC3C,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC5B,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;YAC7C,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,EAAE;gBACvB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAC5B,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;aAC5C;YACD,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SAC5B;QAED,uBAAQ,GAAR;YACE,OAAO,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACjC;QASM,SAAI,GAAX;YACE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;gBACf,IAAI,CAAC,KAAK,GAAG,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;aACtC;YACD,OAAO,IAAI,CAAC,KAAK,CAAC;SACnB;QAOM,OAAE,GAAT,UAAU,MAAc,EAAE,IAAY,EAAE,MAAc,EAAE,IAA0B;YAA1B,qBAAA,EAAA,WAA0B;YAChF,OAAO,IAAI,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;SAC7C;QACH,WAAC;IAAD,CArLA,CAA0B,GAAG,GAqL5B;IACD,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC;;;QCrLU,wBAAG;QAO3B,cAAY,KAAW,EAAE,GAAS;YAAlC,YACE,iBAAO,SAGR;YAFC,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,KAAI,CAAC,IAAI,GAAG,GAAG,CAAC;;SACjB;QAED,oBAAK,GAAL;YACE,OAAO,IAAI,CAAC,MAAM,CAAC;SACpB;QAED,kBAAG,GAAH;YACE,OAAO,IAAI,CAAC,IAAI,CAAC;SAClB;QAED,oBAAK,GAAL,UAAM,IAAS;YACb,IAAI,IAAI,YAAY,GAAG,CAAC,IAAI,EAAE;gBAC5B,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBACpC,IAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAChC,IAAI,KAAK,KAAK,IAAI,CAAC,MAAM,IAAI,GAAG,KAAK,IAAI,CAAC,IAAI,EAAE;oBAC9C,OAAO,IAAI,CAAC;iBACb;qBAAM;oBACL,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;iBAC9B;aACF;iBAAM,IAAI,IAAI,YAAY,IAAI,EAAE;gBAC/B,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC3C,IAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACrC,IAAI,KAAK,KAAK,IAAI,CAAC,MAAM,IAAI,GAAG,KAAK,IAAI,CAAC,IAAI,EAAE;oBAC9C,OAAO,IAAI,CAAC;iBACb;qBAAM;oBACL,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;iBAC9B;aACF;YACD,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;SAClC;QAED,oBAAK,GAAL,UAAM,IAAU;YACd,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACtC,IAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAClC,IAAI,KAAK,KAAK,IAAI,CAAC,MAAM,IAAI,GAAG,KAAK,IAAI,CAAC,IAAI,EAAE;gBAC9C,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;aAC9B;SACF;QAED,qBAAM,GAAN,UAAO,IAAa;YAClB,IAAI,IAAI,KAAK,IAAI,EAAE;gBACjB,OAAO,IAAI,CAAC;aACb;iBAAM,IAAI,IAAI,YAAY,IAAI,EAAE;gBAC/B,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACvE;YACD,OAAO,KAAK,CAAC;SACd;QAED,uBAAQ,GAAR;YACE,IAAI,IAAI,CAAC,SAAS,KAAK,KAAK,CAAC,EAAE;gBAC7B,IAAI,CAAC,SAAS,GAAGA,YAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACrC;YACD,OAAOA,YAAO,CAAC,IAAI,CAACA,YAAO,CAAC,GAAG,CAACA,YAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,EACtD,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;SACrD;QAED,sBAAO,GAAP,UAAQ,MAAc;YACpB,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,KAAK,IAAI,EAAE;gBAC9B,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;aAC5E;YACD,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YACpD,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;YACjC,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;YACtD,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;YACjC,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YAClD,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;YACjC,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;YACpD,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,IAAI,EAAE;gBAC5B,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC1E;SACF;QAED,oBAAK,GAAL,UAAM,MAAc;YAClB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAClE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAC1B,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC5B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YACxB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SAC5B;QAED,uBAAQ,GAAR;YACE,OAAO,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACjC;QAQM,SAAI,GAAX,UAAY,KAAW,EAAE,GAAS;YAChC,IAAI,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,EAAE;gBAC/B,IAAM,GAAG,GAAG,KAAK,CAAC;gBAClB,KAAK,GAAG,GAAG,CAAC;gBACZ,GAAG,GAAG,GAAG,CAAC;aACX;YACD,OAAO,IAAI,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;SAC7B;QACH,WAAC;IAAD,CA/GA,CAA0B,GAAG,GA+G5B;IACD,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC;;;QCtHoB,kCAAK;QACvC,wBAAY,OAAgB;YAA5B,YACE,kBAAM,OAAO,CAAC,SAEf;YADE,KAAY,CAAC,SAAS,GAAG,cAAc,CAAC,SAAS,CAAC;;SACpD;QACH,qBAAC;IAAD,CALA,CAAoC,KAAK;;;QCgCvC,wBAAsB,aAAqB,EAAE,QAAiB,EAAE,QAAiB;YAC/E,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;YACpC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;SAC3B;QAaD,sCAAa,GAAb,UAAc,aAA6B;YACzC,IAAI,aAAa,KAAK,KAAK,CAAC,EAAE;gBAC5B,OAAO,IAAI,CAAC,cAAc,CAAC;aAC5B;iBAAM;gBACL,OAAO,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACjE;SACF;QAaD,iCAAQ,GAAR,UAAS,QAAkB;YACzB,IAAI,QAAQ,KAAK,KAAK,CAAC,EAAE;gBACvB,OAAO,IAAI,CAAC,SAAS,CAAC;aACvB;iBAAM;gBACL,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACjE;SACF;QAaD,iCAAQ,GAAR,UAAS,QAAkB;YACzB,IAAI,QAAQ,KAAK,KAAK,CAAC,EAAE;gBACvB,OAAO,IAAI,CAAC,SAAS,CAAC;aACvB;iBAAM;gBACL,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;aACjE;SACF;QAES,6BAAI,GAAd,UAAe,aAA4B,EAAE,QAAiB,EAAE,QAAiB;YAC/E,OAAO,cAAc,CAAC,MAAM,CAAC,aAAa,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;SACjE;QAES,iCAAQ,GAAlB,UAAmB,IAAa;YAC9B,OAAO,IAAI,YAAY,cAAc,CAAC;SACvC;QAED,+BAAM,GAAN,UAAO,IAAa;YAClB,IAAI,IAAI,KAAK,IAAI,EAAE;gBACjB,OAAO,IAAI,CAAC;aACb;iBAAM,IAAI,IAAI,YAAY,cAAc,EAAE;gBACzC,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,cAAc,KAAK,IAAI,CAAC,cAAc;uBAClE,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,SAAS,CAAC;aAC/E;YACD,OAAO,KAAK,CAAC;SACd;QAED,iCAAQ,GAAR;YACE,IAAI,cAAc,CAAC,SAAS,KAAK,KAAK,CAAC,EAAE;gBACvC,cAAc,CAAC,SAAS,GAAGA,YAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;aACzD;YACD,OAAOA,YAAO,CAAC,IAAI,CAACA,YAAO,CAAC,GAAG,CAACA,YAAO,CAAC,GAAG,CAACA,YAAO,CAAC,GAAG,CAAC,cAAc,CAAC,SAAS,EAC5EA,YAAO,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,EAAEA,YAAO,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EACjEA,YAAO,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;SACpC;QAED,8BAAK,GAAL,UAAM,MAAc;YAClB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;YACzD,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACtC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;aACnC;iBAAM,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBAC5C,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;aACjC;iBAAM,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,EAAE;gBAC5C,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;aACjC;iBAAM;gBACL,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;aACvC;YACD,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;YAClD,IAAI,MAAM,CAAC,aAAa,EAAE,KAAK,IAAI,CAAC,cAAc,EAAE;gBAClD,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,EAAE,CAAQ;qBACnE,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;aACpD;SACF;QAED,iCAAQ,GAAR;YACE,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SAC3B;QAYM,uBAAQ,GAAf;YACE,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE;gBAC7B,cAAc,CAAC,SAAS,GAAG,IAAI,cAAc,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;aACrF;YACD,OAAO,cAAc,CAAC,SAAS,CAAC;SACjC;QAMM,qBAAM,GAAb;YACE,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;gBAC3B,cAAc,CAAC,OAAO,GAAG,IAAI,cAAc,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;aAClF;YACD,OAAO,cAAc,CAAC,OAAO,CAAC;SAC/B;QAMM,qBAAM,GAAb;YACE,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;gBAC3B,cAAc,CAAC,OAAO,GAAG,IAAI,cAAc,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;aAClF;YACD,OAAO,cAAc,CAAC,OAAO,CAAC;SAC/B;QAMM,2BAAY,GAAnB;YACE,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE;gBACjC,cAAc,CAAC,aAAa,GAAG,IAAI,cAAc,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;aACvF;YACD,OAAO,cAAc,CAAC,aAAa,CAAC;SACrC;QAOM,qBAAM,GAAb,UAAc,aAA6B,EAAE,QAAkB,EAAE,QAAkB;YACjF,IAAI,OAAO,aAAa,KAAK,QAAQ,EAAE;gBACrC,aAAa,GAAG,MAAM,CAAC,aAAa,EAAE,CAAC;aACxC;YACD,IAAI,OAAO,QAAQ,KAAK,SAAS,EAAE;gBACjC,QAAQ,GAAG,KAAK,CAAC;aAClB;YACD,IAAI,OAAO,QAAQ,KAAK,SAAS,EAAE;gBACjC,QAAQ,GAAG,KAAK,CAAC;aAClB;YACD,IAAI,MAAM,CAAC,aAAa,EAAE,KAAK,aAAa,EAAE;gBAC5C,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ,EAAE;oBAC1B,OAAO,cAAc,CAAC,QAAQ,EAAE,CAAC;iBAClC;qBAAM,IAAI,QAAQ,IAAI,CAAC,QAAQ,EAAE;oBAChC,OAAO,cAAc,CAAC,MAAM,EAAE,CAAC;iBAChC;qBAAM,IAAI,CAAC,QAAQ,IAAI,QAAQ,EAAE;oBAChC,OAAO,cAAc,CAAC,MAAM,EAAE,CAAC;iBAChC;qBAAM;oBACL,OAAO,cAAc,CAAC,YAAY,EAAE,CAAC;iBACtC;aACF;YACD,OAAO,IAAI,cAAc,CAAC,aAAa,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;SAC9D;QAKM,sBAAO,GAAd,UAAe,QAAuC;YACpD,IAAI,QAAQ,YAAY,cAAc,EAAE;gBACtC,OAAO,QAAQ,CAAC;aACjB;iBAAM,IAAI,OAAO,QAAQ,KAAK,QAAQ,IAAI,QAAQ,EAAE;gBACnD,OAAO,cAAc,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,EAAE,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;aAC5F;YACD,OAAO,cAAc,CAAC,QAAQ,EAAE,CAAC;SAClC;QACH,qBAAC;IAAD,CAAC;;;QC1OoC,mCAAK;QACxC,yBAAY,OAAgB;YAA5B,YACE,kBAAM,OAAO,CAAC,SAEf;YADE,KAAY,CAAC,SAAS,GAAG,eAAe,CAAC,SAAS,CAAC;;SACrD;QACH,sBAAC;IAAD,CALA,CAAqC,KAAK;;;QCkD1C;SAkMC;QA9HC,wBAAO,GAAP,UAAQ,MAAe;YACrB,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;gBAC9B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;aACpB;YACD,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC;SACpD;QAWD,wBAAO,GAAP,UAAQ,MAAe;YACrB,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAC7B,OAAO,IAAI,CAAC;SACb;QAWD,sBAAK,GAAL,UAAM,MAAe;YACnB,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAC3B,OAAO,IAAI,CAAC;SACb;QAKD,sBAAK,GAAL;YACE,OAAO,IAAI,CAAC;SACb;QAED,qBAAI,GAAJ;YAAK,gBAAmB;iBAAnB,UAAmB,EAAnB,qBAAmB,EAAnB,IAAmB;gBAAnB,2BAAmB;;YACtB,IAAM,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;YACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;gBAC7B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;aACvB;SACF;QA0BD,qBAAI,GAAJ;YACE,MAAM,IAAI,eAAe,EAAE,CAAC;SAC7B;QAOD,sBAAK,GAAL;YACE,MAAM,IAAI,KAAK,EAAE,CAAC;SACnB;QAUM,WAAI,GAAX,UAAe,KAAsB,EAAE,QAAoD;YAA5E,sBAAA,EAAA,YAAsB;YAAE,yBAAA,EAAA,WAA2B,cAAc,CAAC,QAAQ,EAAE;YACzF,IAAI,KAAK,KAAK,IAAI,IAAI,QAAQ,KAAK,cAAc,CAAC,QAAQ,EAAE,EAAE;gBAC5D,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;oBACjB,MAAM,CAAC,KAAK,GAAG,IAAI,UAAU,CAAC,KAAK,EAAE,cAAc,CAAC,QAAQ,EAAE,CAAC,CAAC;iBACjE;gBACD,OAAO,MAAM,CAAC,KAAK,CAAC;aACrB;YACD,OAAO,IAAI,UAAU,CAAI,KAAM,EAAE,QAAQ,CAAC,CAAC;SAE5C;QAMM,WAAI,GAAX,UAAe,KAAsB,EAAE,QAAoD;YAA5E,sBAAA,EAAA,YAAsB;YAAE,yBAAA,EAAA,WAA2B,cAAc,CAAC,QAAQ,EAAE;YACzF,IAAI,KAAK,KAAK,IAAI,IAAI,QAAQ,KAAK,cAAc,CAAC,QAAQ,EAAE,EAAE;gBAC5D,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;oBACjB,MAAM,CAAC,KAAK,GAAG,IAAI,UAAU,CAAC,KAAK,EAAE,cAAc,CAAC,QAAQ,EAAE,CAAC,CAAC;iBACjE;gBACD,OAAO,MAAM,CAAC,KAAK,CAAC;aACrB;YACD,OAAO,IAAI,UAAU,CAAI,KAAM,EAAE,QAAQ,CAAC,CAAC;SAC5C;QAMM,YAAK,GAAZ,UAAgB,KAAY,EAAE,QAAoD;YAApD,yBAAA,EAAA,WAA2B,cAAc,CAAC,QAAQ,EAAE;YAChF,OAAO,IAAI,WAAW,CAAI,KAAK,EAAE,QAAQ,CAAC,CAAC;SAC5C;QACH,aAAC;IAAD,CAAC,IAAA;IAGD;QAA4B,8BAAS;QAMnC,oBAAY,KAAQ,EAAE,QAAwB;YAA9C,YACE,iBAAO,SAGR;YAFC,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;;SAC3B;QAED,2BAAM,GAAN;YACE,OAAO,KAAK,CAAC;SACd;QAED,2BAAM,GAAN;YACE,OAAO,IAAI,CAAC;SACb;QAED,2BAAM,GAAN;YACE,OAAO,KAAK,CAAC;SACd;QAED,4BAAO,GAAP;YACE,OAAO,KAAK,CAAC;SACd;QAID,2BAAM,GAAN,UAAO,MAAgB;YACrB,IAAI,MAAM,KAAK,KAAK,CAAC,EAAE;gBACrB,OAAO,IAAI,CAAC;aACb;iBAAM,IAAI,MAAM,EAAE;gBACjB,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACjD;iBAAM;gBACL,OAAO,IAAI,CAAC;aACb;SACF;QAID,0BAAK,GAAL,UAAM,aAA8B;YAClC,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SAClE;QAED,4BAAO,GAAP,UAAQ,MAAe;YACrB,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SAClE;QAED,yBAAI,GAAJ;YACE,OAAO,IAAI,CAAC,MAAM,CAAC;SACpB;QAID,6BAAQ,GAAR,UAAS,QAAyB;YAChC,IAAI,QAAQ,KAAK,KAAK,CAAC,EAAE;gBACvB,OAAO,IAAI,CAAC,SAAS,CAAC;aACvB;iBAAM;gBACL,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;aAC3C;SACF;QAED,0BAAK,GAAL;YACE,OAAO,IAAI,CAAC;SACb;QACH,iBAAC;IAAD,CAnEA,CAA4B,MAAM,GAmEjC;IAGD;QAA4B,8BAAS;QAMnC,oBAAY,KAAQ,EAAE,QAAwB;YAA9C,YACE,iBAAO,SAGR;YAFC,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;;SAC3B;QAED,2BAAM,GAAN;YACE,OAAO,KAAK,CAAC;SACd;QAED,2BAAM,GAAN;YACE,OAAO,KAAK,CAAC;SACd;QAED,2BAAM,GAAN;YACE,OAAO,IAAI,CAAC;SACb;QAED,4BAAO,GAAP;YACE,OAAO,KAAK,CAAC;SACd;QAID,2BAAM,GAAN,UAAO,MAAgB;YACrB,IAAI,MAAM,KAAK,KAAK,CAAC,EAAE;gBACrB,OAAO,KAAK,CAAC;aACd;iBAAM,IAAI,MAAM,EAAE;gBACjB,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACjD;SACF;QAID,0BAAK,GAAL,UAAM,aAA8B;YAClC,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SAClE;QAED,4BAAO,GAAP,UAAQ,MAAe;YACrB,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SAClE;QAED,yBAAI,GAAJ;YACE,OAAO,IAAI,CAAC,MAAM,CAAC;SACpB;QAID,6BAAQ,GAAR,UAAS,QAAyB;YAChC,IAAI,QAAQ,KAAK,KAAK,CAAC,EAAE;gBACvB,OAAO,IAAI,CAAC,SAAS,CAAC;aACvB;iBAAM;gBACL,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;aAC3C;SACF;QAED,0BAAK,GAAL;YACE,OAAO,IAAI,CAAC;SACb;QACH,iBAAC;IAAD,CAnEA,CAA4B,MAAM,GAmEjC;IAGD;QAA6B,+BAAS;QAMpC,qBAAY,KAAY,EAAE,QAAwB;YAAlD,YACE,iBAAO,SAGR;YAFC,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;;SAC3B;QAED,4BAAM,GAAN;YACE,OAAO,KAAK,CAAC;SACd;QAED,4BAAM,GAAN;YACE,OAAO,KAAK,CAAC;SACd;QAED,4BAAM,GAAN;YACE,OAAO,KAAK,CAAC;SACd;QAED,6BAAO,GAAP;YACE,OAAO,IAAI,CAAC;SACb;QAID,4BAAM,GAAN,UAAO,MAAgB;YACrB,IAAI,MAAM,KAAK,KAAK,CAAC,EAAE;gBACrB,OAAO,KAAK,CAAC;aACd;iBAAM;gBACL,OAAO,IAAI,CAAC;aACb;SACF;QAID,2BAAK,GAAL,UAAM,aAA8B;YAClC,OAAO,IAAI,CAAC;SACb;QAED,6BAAO,GAAP,UAAQ,MAAe;YACrB,OAAO,IAAI,CAAC;SACb;QAED,0BAAI,GAAJ;YACE,MAAM,IAAI,eAAe,EAAE,CAAC;SAC7B;QAED,0BAAI,GAAJ;YACE,OAAO,IAAI,CAAC,MAAM,CAAC;SACpB;QAID,8BAAQ,GAAR,UAAS,QAAyB;YAChC,IAAI,QAAQ,KAAK,KAAK,CAAC,EAAE;gBACvB,OAAO,IAAI,CAAC,SAAS,CAAC;aACvB;iBAAM;gBACL,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;aAC5C;SACF;QAED,2BAAK,GAAL;YACE,OAAO,IAAI,CAAC;SACb;QACH,kBAAC;IAAD,CArEA,CAA6B,MAAM,GAqElC;;;QCzZD;SA8LC;QAtHC,oBAAI,GAAJ;YACE,MAAM,IAAI,cAAc,EAAE,CAAC;SAC5B;QAiCD,sBAAM,GAAN;YACE,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC;SAC5B;QAMD,oBAAI,GAAJ;YACE,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC;SAC1B;QAMD,sBAAM,GAAN;YACE,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC;SAC5B;QA+BM,WAAK,GAAZ,UAAa,EAAyB,EAAE,IAAwB,EACnD,QAAkD;YADlD,mBAAA,EAAA,SAAyB;YAAE,qBAAA,EAAA,OAAa,IAAI,CAAC,IAAI,EAAE;YACnD,yBAAA,EAAA,WAA0B,aAAa,CAAC,QAAQ,EAAE;YAC7D,IAAI,EAAE,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,CAAC,IAAI,EAAE,IAAI,QAAQ,KAAK,aAAa,CAAC,QAAQ,EAAE,EAAE;gBAChF,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;oBACjB,KAAK,CAAC,MAAM,GAAG,IAAI,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC;iBAC5E;gBACD,OAAO,KAAK,CAAC,MAAM,CAAC;aACrB;YACD,OAAO,IAAI,UAAU,CAAC,EAAE,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;SAC3C;QAMM,UAAI,GAAX,UAAY,EAAyB,EAAE,IAAwB,EACnD,QAAkD;YADlD,mBAAA,EAAA,SAAyB;YAAE,qBAAA,EAAA,OAAa,IAAI,CAAC,IAAI,EAAE;YACnD,yBAAA,EAAA,WAA0B,aAAa,CAAC,QAAQ,EAAE;YAC5D,IAAI,EAAE,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,CAAC,IAAI,EAAE,IAAI,QAAQ,KAAK,aAAa,CAAC,QAAQ,EAAE,EAAE;gBAChF,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;oBAChB,KAAK,CAAC,KAAK,GAAG,IAAI,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC;iBAC1E;gBACD,OAAO,KAAK,CAAC,KAAK,CAAC;aACpB;YACD,OAAO,IAAI,SAAS,CAAC,EAAE,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;SAC1C;QAMM,WAAK,GAAZ,UAAa,KAAY,EAAE,EAAyB,EAAE,IAAwB,EACjE,QAAkD;YADpC,mBAAA,EAAA,SAAyB;YAAE,qBAAA,EAAA,OAAa,IAAI,CAAC,IAAI,EAAE;YACjE,yBAAA,EAAA,WAA0B,aAAa,CAAC,QAAQ,EAAE;YAC7D,OAAO,IAAI,UAAU,CAAC,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;SAClD;QACH,YAAC;IAAD,CAAC,IAAA;IAGD;QAAyB,8BAAK;QAQ5B,oBAAY,EAAkB,EAAE,IAAU,EAAE,QAAuB;YAAnE,YACE,iBAAO,SAIR;YAHC,KAAI,CAAC,GAAG,GAAG,EAAE,CAAC;YACd,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;;SAC3B;QAED,2BAAM,GAAN;YACE,OAAO,KAAK,CAAC;SACd;QAED,4BAAO,GAAP;YACE,OAAO,IAAI,CAAC;SACb;QAED,2BAAM,GAAN;YACE,OAAO,KAAK,CAAC;SACd;QAED,4BAAO,GAAP;YACE,OAAO,KAAK,CAAC;SACd;QAID,2BAAM,GAAN,UAAO,MAAgB;YACrB,IAAI,MAAM,KAAK,KAAK,CAAC,EAAE;gBACrB,OAAO,IAAI,CAAC;aACb;iBAAM,IAAI,MAAM,EAAE;gBACjB,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACzD;SACF;QAED,yBAAI,GAAJ;YACE,MAAM,IAAI,cAAc,EAAE,CAAC;SAC5B;QAED,yBAAI,GAAJ;YACE,IAAM,KAAK,GAAG,IAAI,cAAc,CAAC,YAAY,CAAC,CAAC;YAC/C,OAAO,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SACjE;QAED,yBAAI,GAAJ,UAAK,IAAW;YACd,IAAM,KAAK,GAAG,IAAI,cAAc,CAAC,YAAY,CAAC,CAAC;YAC/C,OAAO,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SACjE;QAID,uBAAE,GAAF,UAAG,EAAmB;YACpB,IAAI,EAAE,KAAK,KAAK,CAAC,EAAE;gBACjB,OAAO,IAAI,CAAC,GAAG,CAAC;aACjB;iBAAM;gBACL,OAAO,KAAK,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACpD;SACF;QAID,yBAAI,GAAJ,UAAK,IAAW;YACd,IAAI,IAAI,KAAK,KAAK,CAAC,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC;aACnB;iBAAM;gBACL,OAAO,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACpD;SACF;QAID,6BAAQ,GAAR,UAAS,QAAwB;YAC/B,IAAI,QAAQ,KAAK,KAAK,CAAC,EAAE;gBACvB,OAAO,IAAI,CAAC,SAAS,CAAC;aACvB;iBAAM;gBACL,OAAO,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;aACpD;SACF;QAED,0BAAK,GAAL;YACE,OAAO,IAAI,CAAC;SACb;QACH,iBAAC;IAAD,CA1FA,CAAyB,KAAK,GA0F7B;IAGD;QAAwB,6BAAK;QAQ3B,mBAAY,EAAkB,EAAE,IAAU,EAAE,QAAuB;YAAnE,YACE,iBAAO,SAIR;YAHC,KAAI,CAAC,GAAG,GAAG,EAAE,CAAC;YACd,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;;SAC3B;QAED,0BAAM,GAAN;YACE,OAAO,KAAK,CAAC;SACd;QAED,2BAAO,GAAP;YACE,OAAO,KAAK,CAAC;SACd;QAED,0BAAM,GAAN;YACE,OAAO,IAAI,CAAC;SACb;QAED,2BAAO,GAAP;YACE,OAAO,KAAK,CAAC;SACd;QAID,0BAAM,GAAN,UAAO,MAAgB;YACrB,IAAI,MAAM,KAAK,KAAK,CAAC,EAAE;gBACrB,OAAO,KAAK,CAAC;aACd;iBAAM,IAAI,MAAM,EAAE;gBACjB,OAAO,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aAC1D;iBAAM;gBACL,OAAO,IAAI,CAAC;aACb;SACF;QAED,wBAAI,GAAJ;YACE,MAAM,IAAI,cAAc,EAAE,CAAC;SAC5B;QAED,wBAAI,GAAJ;YACE,IAAM,KAAK,GAAG,IAAI,cAAc,CAAC,WAAW,CAAC,CAAC;YAC9C,OAAO,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SACjE;QAED,wBAAI,GAAJ,UAAK,IAAW;YACd,IAAM,KAAK,GAAG,IAAI,cAAc,CAAC,YAAY,CAAC,CAAC;YAC/C,OAAO,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SACjE;QAID,sBAAE,GAAF,UAAG,EAAmB;YACpB,IAAI,EAAE,KAAK,KAAK,CAAC,EAAE;gBACjB,OAAO,IAAI,CAAC,GAAG,CAAC;aACjB;iBAAM;gBACL,OAAO,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACnD;SACF;QAID,wBAAI,GAAJ,UAAK,IAAW;YACd,IAAI,IAAI,KAAK,KAAK,CAAC,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC;aACnB;iBAAM;gBACL,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACnD;SACF;QAID,4BAAQ,GAAR,UAAS,QAAwB;YAC/B,IAAI,QAAQ,KAAK,KAAK,CAAC,EAAE;gBACvB,OAAO,IAAI,CAAC,SAAS,CAAC;aACvB;iBAAM;gBACL,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;aACnD;SACF;QAED,yBAAK,GAAL;YACE,OAAO,IAAI,CAAC;SACb;QACH,gBAAC;IAAD,CA1FA,CAAwB,KAAK,GA0F5B;IAGD;QAAyB,8BAAK;QAU5B,oBAAY,KAAY,EAAE,EAAkB,EAAE,IAAU,EAAE,QAAuB;YAAjF,YACE,iBAAO,SAKR;YAJC,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,KAAI,CAAC,GAAG,GAAG,EAAE,CAAC;YACd,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;;SAC3B;QAED,2BAAM,GAAN;YACE,OAAO,KAAK,CAAC;SACd;QAED,4BAAO,GAAP;YACE,OAAO,KAAK,CAAC;SACd;QAED,2BAAM,GAAN;YACE,OAAO,KAAK,CAAC;SACd;QAED,4BAAO,GAAP;YACE,OAAO,IAAI,CAAC;SACb;QAID,2BAAM,GAAN,UAAO,MAAgB;YACrB,IAAI,MAAM,KAAK,KAAK,CAAC,EAAE;gBACrB,OAAO,KAAK,CAAC;aACd;iBAAM;gBACL,OAAO,IAAI,CAAC;aACb;SACF;QAED,yBAAI,GAAJ;YACE,MAAM,IAAI,cAAc,EAAE,CAAC;SAC5B;QAED,yBAAI,GAAJ;YACE,IAAM,KAAK,GAAG,IAAI,cAAc,CAAC,YAAY,CAAC,CAAC;YAC/C,OAAO,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SACjE;QAED,yBAAI,GAAJ;YACE,OAAO,IAAI,CAAC,MAAM,CAAC;SACpB;QAED,yBAAI,GAAJ,UAAK,IAAW;YACd,IAAM,KAAK,GAAG,IAAI,cAAc,CAAC,YAAY,CAAC,CAAC;YAC/C,OAAO,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SACjE;QAID,uBAAE,GAAF,UAAG,EAAmB;YACpB,IAAI,EAAE,KAAK,KAAK,CAAC,EAAE;gBACjB,OAAO,IAAI,CAAC,GAAG,CAAC;aACjB;iBAAM;gBACL,OAAO,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACjE;SACF;QAID,yBAAI,GAAJ,UAAK,IAAW;YACd,IAAI,IAAI,KAAK,KAAK,CAAC,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC;aACnB;iBAAM;gBACL,OAAO,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACjE;SACF;QAID,6BAAQ,GAAR,UAAS,QAAwB;YAC/B,IAAI,QAAQ,KAAK,KAAK,CAAC,EAAE;gBACvB,OAAO,IAAI,CAAC,SAAS,CAAC;aACvB;iBAAM;gBACL,OAAO,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;aACjE;SACF;QAED,0BAAK,GAAL;YACE,OAAO,IAAI,CAAC;SACb;QACH,iBAAC;IAAD,CA/FA,CAAyB,KAAK,GA+F7B;;ICtgBD;QAAiC,+BAAK;QAkBpC,qBAAY,MAAc,EAAE,EAAyB,EAAE,MAAkB,EAC7D,IAAgB,EAAE,MAAkB,EAAE,QAAkD,EACxF,KAAiB,EAAE,MAAuB;YAF1B,mBAAA,EAAA,SAAyB;YAAE,uBAAA,EAAA,UAAkB;YAC7D,qBAAA,EAAA,QAAgB;YAAE,uBAAA,EAAA,UAAkB;YAAE,yBAAA,EAAA,WAA0B,aAAa,CAAC,QAAQ,EAAE;YACxF,sBAAA,EAAA,SAAiB;YAAE,uBAAA,EAAA,cAAuB;YAFtD,YAGE,iBAAO,SASR;YARC,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,KAAI,CAAC,GAAG,GAAG,EAAE,CAAC;YACd,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;;SACvB;QAED,4BAAM,GAAN;YACE,OAAO,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;SAC1C;QAED,6BAAO,GAAP;YACE,OAAO,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;SAC3D;QAED,4BAAM,GAAN;YACE,OAAO,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;SAC5D;QAED,6BAAO,GAAP;YACE,OAAO,KAAK,CAAC;SACd;QAID,4BAAM,GAAN,UAAO,MAAgB;YACrB,IAAI,MAAM,KAAK,KAAK,CAAC,EAAE;gBACrB,OAAO,IAAI,CAAC,OAAO,CAAC;aACrB;iBAAM;gBACL,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;gBACtB,OAAO,IAAI,CAAC;aACb;SACF;QAED,0BAAI,GAAJ;YACE,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;gBACrC,IAAM,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAChD,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;oBAChB,OAAO,CAAC,CAAC;iBACV;qBAAM;oBACL,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBAC7C;aACF;YACD,MAAM,IAAI,cAAc,EAAE,CAAC;SAC5B;QAED,0BAAI,GAAJ;YACE,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;YAC1B,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;gBAC/B,IAAM,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBAC1C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBACxD,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpC,IAAI,CAAC,KAAK,EAAE,EAAU;oBACpB,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;oBAChB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;iBAClB;qBAAM;oBACL,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC;iBACnB;gBACD,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,IAAM,KAAK,GAAG,IAAI,cAAc,CAAC,cAAc,CAAC,CAAC;gBACjD,OAAO,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aAClE;SACF;QAED,0BAAI,GAAJ,UAAK,IAAW;YACd,IAAI,IAAI,KAAK,KAAK,CAAC,EAAE;gBACnB,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC1D,IAAI,CAAC,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;oBAC9C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;oBAC5B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;oBACxB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;oBAC5B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;oBACpB,OAAO,IAAI,CAAC;iBACb;qBAAM;oBACL,IAAM,KAAK,GAAG,IAAI,cAAc,CAAC,kBAAkB,GAAG,IAAI,CAAC,CAAC;oBAC5D,OAAO,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;iBAClE;aACF;iBAAM;gBACL,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;gBACjB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBACf,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;gBACjB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;gBAChB,OAAO,IAAI,CAAC;aACb;SACF;QAID,wBAAE,GAAF,UAAG,EAAmB;YACpB,IAAI,EAAE,KAAK,KAAK,CAAC,EAAE;gBACjB,OAAO,IAAI,CAAC,GAAG,CAAC;aACjB;iBAAM;gBACL,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;gBACd,OAAO,IAAI,CAAC;aACb;SACF;QAID,0BAAI,GAAJ,UAAK,IAAW;YACd,IAAI,IAAI,KAAK,KAAK,CAAC,EAAE;gBACnB,OAAO,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;aACxD;iBAAM;gBACL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;gBAC5B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;gBACxB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;gBAC5B,OAAO,IAAI,CAAC;aACb;SACF;QAED,4BAAM,GAAN;YACE,OAAO,IAAI,CAAC,OAAO,CAAC;SACrB;QAED,0BAAI,GAAJ;YACE,OAAO,IAAI,CAAC,KAAK,CAAC;SACnB;QAED,4BAAM,GAAN;YACE,OAAO,IAAI,CAAC,OAAO,CAAC;SACrB;QAID,8BAAQ,GAAR,UAAS,QAA2B;YAClC,IAAI,QAAQ,KAAK,KAAK,CAAC,EAAE;gBACvB,OAAO,IAAI,CAAC,SAAS,CAAC;aACvB;iBAAM;gBACL,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;gBACjD,OAAO,IAAI,CAAC;aACb;SACF;QAED,2BAAK,GAAL;YACE,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAChD,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;SACjF;QACH,kBAAC;IAAD,CAnKA,CAAiC,KAAK,GAmKrC;;ICrKD;QAAkC,gCAAc;QAM9C,sBAAY,MAAc,EAAE,QAAwB;YAApD,YACE,iBAAO,SAGR;YAFC,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;;SAC3B;QAED,6BAAM,GAAN;YACE,OAAO,IAAI,CAAC;SACb;QAED,6BAAM,GAAN;YACE,OAAO,KAAK,CAAC;SACd;QAED,6BAAM,GAAN;YACE,OAAO,KAAK,CAAC;SACd;QAED,8BAAO,GAAP;YACE,OAAO,KAAK,CAAC;SACd;QAID,6BAAM,GAAN,UAAO,MAAgB;YACrB,IAAI,MAAM,KAAK,KAAK,CAAC,EAAE;gBACrB,OAAO,KAAK,CAAC;aACd;iBAAM;gBACL,OAAO,IAAI,CAAC;aACb;SACF;QAED,4BAAK,GAAL,UAAM,KAAsB;YAC1B,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;gBAC7B,IAAI,CAAC,KAAK,IAAI,MAAM,IAAI,KAAK,IAAI,MAAM;wBAC/B,KAAK,IAAI,MAAM,IAAI,KAAK,IAAI,MAAM,CAAC,EAAE;oBAC3C,KAAK,GAAG,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;iBACpC;qBAAM,IAAI,KAAK,IAAI,OAAO,IAAI,KAAK,IAAI,QAAQ,EAAE;oBAChD,IAAM,CAAC,GAAG,KAAK,GAAG,OAAO,CAAC;oBAC1B,KAAK,GAAG,MAAM,CAAC,YAAY,CAAC,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,MAAM,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;iBACxE;qBAAM;oBACL,KAAK,GAAG,QAAQ,CAAC;iBAClB;aACF;YACD,IAAI,CAAC,OAAO,IAAI,KAAK,CAAC;YACtB,OAAO,IAAI,CAAC;SACb;QAED,8BAAO,GAAP,UAAQ,MAAe;YACrB,IAAI,MAAM,KAAK,KAAK,CAAC,EAAE;gBACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;gBAClE,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;gBACjF,OAAO,IAAI,CAAC;aACb;SACF;QAID,+BAAQ,GAAR,UAAS,QAA4B;YACnC,IAAI,QAAQ,KAAK,KAAK,CAAC,EAAE;gBACvB,OAAO,IAAI,CAAC,SAAS,CAAC;aACvB;iBAAM;gBACL,IAAI,CAAC,SAAS,GAAG,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;gBAClD,OAAO,IAAI,CAAC;aACb;SACF;QAED,2BAAI,GAAJ;YACE,OAAO,IAAI,CAAC,OAAO,CAAC;SACrB;QAED,4BAAK,GAAL;YACE,OAAO,IAAI,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SACvD;QAED,+BAAQ,GAAR;YACE,OAAO,IAAI,CAAC,OAAO,CAAC;SACrB;QACH,mBAAC;IAAD,CAtFA,CAAkC,MAAM,GAsFvC;;;QCvFoC,mCAAK;QACxC,yBAAY,OAAgB;YAA5B,YACE,kBAAM,OAAO,CAAC,SAEf;YADE,KAAY,CAAC,SAAS,GAAG,eAAe,CAAC,SAAS,CAAC;;SACrD;QACH,sBAAC;IAAD,CALA,CAAqC,KAAK;;;QCuD1C;SAsIC;QAjIC,uBAAM,GAAN;YACE,OAAO,IAAI,CAAC;SACb;QAMD,uBAAM,GAAN;YACE,OAAO,KAAK,CAAC;SACd;QAMD,wBAAO,GAAP;YACE,OAAO,KAAK,CAAC;SACd;QASD,qBAAI,GAAJ,UAAK,KAAQ;YACX,MAAM,IAAI,KAAK,EAAE,CAAC;SACnB;QAgBD,qBAAI,GAAJ,UAAK,SAAkB;YACrB,OAAO,IAAI,CAAC;SACb;QAQD,qBAAI,GAAJ;YACE,MAAM,IAAI,KAAK,EAAE,CAAC;SACnB;QAQD,qBAAI,GAAJ;YACE,MAAM,IAAI,KAAK,EAAE,CAAC;SACnB;QAQD,uBAAM,GAAN;YACE,MAAM,IAAI,KAAK,EAAE,CAAC;SACnB;QAQD,wBAAO,GAAP;YACE,MAAM,IAAI,KAAK,EAAE,CAAC;SACnB;QAMD,wBAAO,GAAP,UAAY,IAAmB;YAC7B,OAAO,IAAI,aAAa,CAAQ,IAAI,EAAE,IAAI,CAAC,CAAC;SAC7C;QAgBM,WAAI,GAAX,UAAkB,MAAU;YAC1B,IAAI,MAAM,KAAK,KAAK,CAAC,EAAE;gBACrB,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;oBACjB,MAAM,CAAC,KAAK,GAAG,IAAI,UAAU,CAAW,KAAK,CAAC,CAAC,CAAC;iBACjD;gBACD,OAAO,MAAM,CAAC,KAAK,CAAC;aACrB;iBAAM;gBACL,OAAO,IAAI,UAAU,CAAO,MAAM,CAAC,CAAC;aACrC;SACF;QAMM,YAAK,GAAZ,UAAmB,KAAY;YAC7B,OAAO,IAAI,WAAW,CAAO,KAAK,CAAC,CAAC;SACrC;QACH,aAAC;IAAD,CAAC,IAAA;IAGD;QAA+B,8BAAY;QAIzC,oBAAY,MAAS;YAArB,YACE,iBAAO,SAER;YADC,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;;SACvB;QAED,2BAAM,GAAN;YACE,OAAO,KAAK,CAAC;SACd;QAED,2BAAM,GAAN;YACE,OAAO,IAAI,CAAC;SACb;QAED,yBAAI,GAAJ,UAAK,MAAc;YACjB,OAAO,IAAI,CAAC;SACb;QAED,yBAAI,GAAJ;YACE,OAAO,IAAI,CAAC,OAAO,CAAC;SACrB;QAED,2BAAM,GAAN;YACE,OAAO,IAAW,CAAC;SACpB;QAED,4BAAO,GAAP,UAAY,IAAmB;YAC7B,OAAO,IAAI,CAAC;SACb;QACH,iBAAC;IAAD,CAhCA,CAA+B,MAAM,GAgCpC;IAGD;QAAgC,+BAAY;QAI1C,qBAAY,KAAY;YAAxB,YACE,iBAAO,SAER;YADC,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;;SACrB;QAED,4BAAM,GAAN;YACE,OAAO,KAAK,CAAC;SACd;QAED,6BAAO,GAAP;YACE,OAAO,IAAI,CAAC;SACb;QAED,0BAAI,GAAJ,UAAK,MAAc;YACjB,OAAO,IAAI,CAAC;SACb;QAED,0BAAI,GAAJ;YACE,MAAM,IAAI,CAAC,MAAM,CAAC;SACnB;QAED,0BAAI,GAAJ;YACE,OAAO,IAAI,CAAC,MAAM,CAAC;SACpB;QAED,6BAAO,GAAP;YACE,OAAO,IAAW,CAAC;SACpB;QAED,6BAAO,GAAP,UAAY,IAAmB;YAC7B,OAAO,IAAW,CAAC;SACpB;QACH,kBAAC;IAAD,CApCA,CAAgC,MAAM,GAoCrC;IAGD;QAAkC,iCAAY;QAM5C,uBAAY,IAAoB,EAAE,IAAkB;YAApD,YACE,iBAAO,SAGR;YAFC,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;;SACnB;QAED,4BAAI,GAAJ,UAAK,MAAc;YACjB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;YACtB,IAAI,IAAI,CAAC,MAAM,EAAE,EAAE;gBACjB,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAC1B;YACD,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE;gBAClB,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;aACvB;iBAAM,IAAI,IAAI,CAAC,MAAM,EAAE,EAAE;gBACxB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAChC;iBAAM;gBACL,OAAO,IAAI,aAAa,CAAO,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aAClD;SACF;QACH,oBAAC;IAAD,CAzBA,CAAkC,MAAM,GAyBvC;;ICjSD;QAAqC,gCAAkB;QAKrD,sBAAY,KAAc,EAAE,KAAa,EAAE,KAAiB;YAAjB,sBAAA,EAAA,SAAiB;YAA5D,YACE,iBAAO,SAIR;YAHC,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;;SACrB;QAED,2BAAI,GAAJ,UAAK,KAAc;YACjB,OAAO,IAAI,YAAY,CAAC,KAAK,EAAE,EAAE,GAAG,KAAK,CAAC,CAAC;SAC5C;QAED,2BAAI,GAAJ,UAAK,MAAc;YACjB,OAAO,YAAY,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;SAC1E;QAEM,kBAAK,GAAZ,UAAgB,MAAc,EAAE,KAAc,EAAE,KAAa,EAAE,KAAiB;YAAjB,sBAAA,EAAA,SAAiB;YAC9E,IAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;YAC5B,OAAO,KAAK,GAAG,MAAM,IAAI,MAAM,CAAC,MAAM,EAAE,EAAE;gBACxC,IAAI,CAAC,GAAG,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBACjC,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;oBAChB,CAAC,GAAG,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;iBAC7B;gBACD,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACzB,KAAK,GAAG,KAAK,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;aAC5C;YACD,IAAI,KAAK,KAAK,MAAM,EAAE;gBACpB,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC3B;YACD,IAAI,MAAM,CAAC,MAAM,EAAE,EAAE;gBACnB,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,WAAW,CAAC,CAAC,CAAC;aACvD;iBAAM,IAAI,MAAM,CAAC,OAAO,EAAE,EAAE;gBAC3B,OAAO,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;aACpC;YACD,OAAO,IAAI,YAAY,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;SAC9C;QACH,mBAAC;IAAD,CAxCA,CAAqC,MAAM,GAwC1C;;;QC1BC;SAEC;QAEM,mBAAW,GAAlB,UAAmB,MAAc;YAC/B,OAAO,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC;SAChC;QAiBM,oBAAY,GAAnB,UAAoB,MAAmC,EAAE,QAA4B;YACnF,IAAI,QAAQ,KAAK,KAAK,CAAC,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;gBACrD,QAAQ,GAAG,MAAM,CAAC;gBAClB,MAAM,GAAG,EAAE,CAAC;aACb;iBAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;gBACrC,MAAM,GAAG,EAAE,CAAC;aACb;YACD,QAAQ,GAAG,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YAC5C,OAAO,IAAI,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;SAC3C;QAIM,oBAAY,GAAnB,UAA0B,KAAS;YACjC,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE;gBACpB,OAAO,IAAI,YAAY,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;aACrC;iBAAM;gBACL,OAAO,IAAI,YAAY,CAAC,KAAK,EAAE,EAAE,GAAG,KAAK,CAAC,CAAC;aAC5C;SACF;QAEM,mBAAW,GAAlB,UAAsB,KAAc,EAAE,MAAc;YAClD,OAAO,YAAY,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,CAAC;SACvD;QAGM,eAAO,GAAd,UAAe,CAAS;YACtB,OAAO,CAAC,IAAI,EAAE,IAAW,CAAC,IAAI,EAAE;mBACzB,CAAC,IAAI,EAAE,IAAW,CAAC,IAAI,GAAG,CAAQ;SAC1C;QAGM,eAAO,GAAd,UAAe,CAAS;YACtB,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC;SAChC;QAGM,iBAAS,GAAhB,UAAiB,CAAS;YACxB,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC;SAC/B;QAGM,oBAAY,GAAnB,UAAoB,CAAS;YAC3B,OAAO,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;SACnD;QACH,cAAC;IAAD,CAAC;;;QC5EC;SACC;QAqBM,cAAO,GAAd,UAAe,MAAe,EAAE,MAAmC;YACjE,IAAM,SAAS,GAAG,EAAE,MAAM,YAAY,MAAM,CAAC,CAAC;YAC9C,IAAI,MAAM,KAAK,KAAK,CAAC,EAAE;gBACrB,IAAI,MAAM,KAAK,KAAK,CAAC,EAAE;oBACrB,OAAO,WAAW,CAAC;iBACpB;qBAAM;oBACL,IAAI,EAAE,MAAM,YAAY,MAAM,CAAC,EAAE;wBAC/B,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;qBACvC;oBACD,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;iBACpC;aACF;iBAAM,IAAI,MAAM,KAAK,IAAI,EAAE;gBAC1B,IAAI,MAAM,KAAK,KAAK,CAAC,EAAE;oBACrB,OAAO,MAAM,CAAC;iBACf;qBAAM;oBACL,IAAI,EAAE,MAAM,YAAY,MAAM,CAAC,EAAE;wBAC/B,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;qBACvC;oBACD,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;iBAC/B;aACF;iBAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;gBACrC,IAAI,MAAM,KAAK,KAAK,CAAC,EAAE;oBACrB,OAAO,EAAE,GAAG,MAAM,CAAC;iBACpB;qBAAM;oBACL,IAAI,EAAE,MAAM,YAAY,MAAM,CAAC,EAAE;wBAC/B,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;qBACvC;oBACD,MAAM,CAAC,aAAa,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;iBACtC;aACF;iBAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;gBACrC,IAAI,MAAM,KAAK,KAAK,CAAC,EAAE;oBACrB,OAAO,MAAM,CAAC;iBACf;qBAAM;oBACL,IAAI,EAAE,MAAM,YAAY,MAAM,CAAC,EAAE;wBAC/B,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;qBACvC;oBACD,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;iBAC/B;aACF;iBAAM,IAAI,MAAM,IAAI,OAAQ,MAAc,CAAC,OAAO,KAAK,UAAU,EAAE;gBAClE,IAAI,EAAE,MAAM,YAAY,MAAM,CAAC,EAAE;oBAC/B,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;iBACvC;gBACA,MAAkB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;aACrC;iBAAM;gBACL,IAAI,MAAM,KAAK,KAAK,CAAC,EAAE;oBACrB,OAAO,EAAE,GAAG,MAAM,CAAC;iBACpB;qBAAM;oBACL,IAAI,EAAE,MAAM,YAAY,MAAM,CAAC,EAAE;wBAC/B,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;qBACvC;oBACD,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC;iBACpC;aACF;YACD,IAAI,SAAS,EAAE;gBACb,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAC;aAC1B;SACF;QAwBM,YAAK,GAAZ,UAAa,MAAe,EAAE,MAAmC;YAC/D,IAAM,SAAS,GAAG,EAAE,MAAM,YAAY,MAAM,CAAC,CAAC;YAC9C,IAAI,MAAM,KAAK,KAAK,CAAC,EAAE;gBACrB,IAAI,MAAM,KAAK,KAAK,CAAC,EAAE;oBACrB,OAAO,WAAW,CAAC;iBACpB;qBAAM;oBACL,IAAI,EAAE,MAAM,YAAY,MAAM,CAAC,EAAE;wBAC/B,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;qBACvC;oBACD,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;iBACpC;aACF;iBAAM,IAAI,MAAM,KAAK,IAAI,EAAE;gBAC1B,IAAI,MAAM,KAAK,KAAK,CAAC,EAAE;oBACrB,OAAO,MAAM,CAAC;iBACf;qBAAM;oBACL,IAAI,EAAE,MAAM,YAAY,MAAM,CAAC,EAAE;wBAC/B,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;qBACvC;oBACD,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;iBAC/B;aACF;iBAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;gBACrC,IAAI,MAAM,KAAK,KAAK,CAAC,EAAE;oBACrB,OAAO,EAAE,GAAG,MAAM,CAAC;iBACpB;qBAAM;oBACL,IAAI,EAAE,MAAM,YAAY,MAAM,CAAC,EAAE;wBAC/B,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;qBACvC;oBACD,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;iBACpC;aACF;iBAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;gBACrC,IAAI,EAAE,MAAM,YAAY,MAAM,CAAC,EAAE;oBAC/B,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;iBACvC;gBACD,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;aACpC;iBAAM,IAAI,OAAQ,MAAc,CAAC,KAAK,KAAK,UAAU,EAAE;gBACtD,IAAI,EAAE,MAAM,YAAY,MAAM,CAAC,EAAE;oBAC/B,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;iBACvC;gBACA,MAAgB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;aACjC;iBAAM;gBACL,IAAI,MAAM,KAAK,KAAK,CAAC,EAAE;oBACrB,OAAO,EAAE,GAAG,MAAM,CAAC;iBACpB;qBAAM;oBACL,IAAI,EAAE,MAAM,YAAY,MAAM,CAAC,EAAE;wBAC/B,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;qBACvC;oBACD,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC;iBACpC;aACF;YACD,IAAI,SAAS,EAAE;gBACb,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAC;aAC1B;SACF;QASM,oBAAa,GAApB,UAAqB,KAAa,EAAE,MAAc;YAChD,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,UAAU,EAAE;gBAClF,IAAI,KAAK,GAAG,CAAC,EAAE;oBACb,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;iBAClC;gBACD,IAAI,KAAK,GAAG,CAAC,EAAE,IAAI,KAAK,GAAG,EAAE,EAAE;oBAC7B,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,GAAU,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;iBACpD;qBAAM;oBACL,IAAM,MAAM,GAAG,IAAI,KAAK,CAAS,EAAE,CAAC,CAAC;oBACrC,IAAI,CAAC,GAAG,KAAK,CAAC;oBACd,IAAI,CAAC,GAAG,EAAE,CAAC;oBACX,OAAO,CAAC,EAAE;wBACR,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;wBACnC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;wBACjB,CAAC,IAAI,CAAC,CAAC;qBACR;oBACD,CAAC,IAAI,CAAC,CAAC;oBACP,OAAO,CAAC,GAAG,EAAE,EAAE;wBACb,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,GAAU,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC7C,CAAC,IAAI,CAAC,CAAC;qBACR;iBACF;aACF;iBAAM;gBACL,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,CAAC;aACnC;SACF;QASM,kBAAW,GAAlB,UAAmB,KAAa,EAAE,MAAc;YAC9C,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;SACrC;QASM,gBAAS,GAAhB,UAAiB,SAAiB,EAAE,MAAc;YAChD,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAS,CAAC;YAClC,QAAQ,SAAS;gBACb,KAAK,CAAC;oBAAU,MAAM,CAAC,KAAK,CAAC,EAAE,CAAS,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;oBAAC,MAAM;gBACjE,KAAK,CAAC;oBAAU,MAAM,CAAC,KAAK,CAAC,EAAE,CAAS,CAAC,KAAK,CAAC,GAAG,CAAQ,CAAC;oBAAC,MAAM;gBAClE,KAAK,EAAE;oBAAU,MAAM,CAAC,KAAK,CAAC,EAAE,CAAS,CAAC,KAAK,CAAC,GAAG,CAAQ,CAAC;oBAAC,MAAM;gBACnE,KAAK,EAAE;oBAAU,MAAM,CAAC,KAAK,CAAC,EAAE,CAAS,CAAC,KAAK,CAAC,GAAG,CAAQ,CAAC;oBAAC,MAAM;gBACnE,KAAK,EAAE;oBAAU,MAAM,CAAC,KAAK,CAAC,EAAE,CAAS,CAAC,KAAK,CAAC,GAAG,CAAQ,CAAC;oBAAC,MAAM;gBACnE,KAAK,EAAE;oBAAU,MAAM,CAAC,KAAK,CAAC,EAAE,CAAS,CAAC,KAAK,CAAC,EAAE,CAAS,CAAC;oBAAC,MAAM;gBACnE,KAAK,EAAE;oBAAU,MAAM,CAAC,KAAK,CAAC,EAAE,CAAS,CAAC,KAAK,CAAC,EAAE,CAAS,CAAC;oBAAC,MAAM;gBACnE,KAAK,EAAE;oBAAU,MAAM,CAAC,KAAK,CAAC,EAAE,CAAS,CAAC,KAAK,CAAC,EAAE,CAAS,CAAC;oBAAC,MAAM;gBACrE;oBACE,IAAI,SAAS,IAAI,MAAM,IAAI,SAAS,IAAI,MAAM;2BACvC,SAAS,IAAI,MAAM,IAAI,SAAS,IAAI,MAAM,EAAE;wBACjD,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAS,CAAC,KAAK,CAAC,GAAG,CAAQ;6BAChD,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,KAAK,EAAE,GAAG,GAAG,CAAC,CAAC;6BAC/C,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,KAAM,CAAC,GAAG,GAAG,CAAC,CAAC;6BAC/C,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,KAAM,CAAC,GAAG,GAAG,CAAC,CAAC;6BAC/C,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,GAAU,GAAG,CAAC,CAAC,CAAC;qBACpD;yBAAM;wBACL,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;qBAClC;aACJ;YACD,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAS,CAAC;SACnC;QASM,kBAAW,GAAlB,UAAmB,MAAc,EAAE,MAAc;YAC/C,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAS,CAAC;YAClC,IAAI,KAAK,GAAG,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,KAAK,CAAC,MAAM,EAAE,EAAE;gBACrB,IAAM,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;gBACvB,QAAQ,CAAC;oBACP,KAAK,CAAC;wBAAU,MAAM,CAAC,KAAK,CAAC,EAAE,CAAS,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;wBAAC,MAAM;oBACjE,KAAK,CAAC;wBAAU,MAAM,CAAC,KAAK,CAAC,EAAE,CAAS,CAAC,KAAK,CAAC,GAAG,CAAQ,CAAC;wBAAC,MAAM;oBAClE,KAAK,EAAE;wBAAU,MAAM,CAAC,KAAK,CAAC,EAAE,CAAS,CAAC,KAAK,CAAC,GAAG,CAAQ,CAAC;wBAAC,MAAM;oBACnE,KAAK,EAAE;wBAAU,MAAM,CAAC,KAAK,CAAC,EAAE,CAAS,CAAC,KAAK,CAAC,GAAG,CAAQ,CAAC;wBAAC,MAAM;oBACnE,KAAK,EAAE;wBAAU,MAAM,CAAC,KAAK,CAAC,EAAE,CAAS,CAAC,KAAK,CAAC,GAAG,CAAQ,CAAC;wBAAC,MAAM;oBACnE,KAAK,EAAE;wBAAU,MAAM,CAAC,KAAK,CAAC,EAAE,CAAS,CAAC,KAAK,CAAC,EAAE,CAAS,CAAC;wBAAC,MAAM;oBACnE,KAAK,EAAE;wBAAU,MAAM,CAAC,KAAK,CAAC,EAAE,CAAS,CAAC,KAAK,CAAC,EAAE,CAAS,CAAC;wBAAC,MAAM;oBACnE;wBACE,IAAI,CAAC,IAAI,MAAM,IAAI,CAAC,IAAI,MAAM,IAAI,CAAC,IAAI,MAAM,IAAI,CAAC,IAAI,MAAM,EAAE;4BAC5D,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAS,CAAC,KAAK,CAAC,GAAG,CAAQ;iCAChD,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,GAAG,GAAG,CAAC,CAAC;iCACvC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,KAAM,CAAC,GAAG,GAAG,CAAC,CAAC;iCACvC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,KAAM,CAAC,GAAG,GAAG,CAAC,CAAC;iCACvC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,GAAU,GAAG,CAAC,CAAC,CAAC;yBAC5C;6BAAM;4BACL,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;yBAC1B;iBACJ;gBACD,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;aACtB;YACD,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAS,CAAC;SACnC;QAEc,gBAAS,GAAxB,UAAyB,CAAS;YAChC,IAAI,CAAC,GAAG,EAAE,EAAE;gBACV,OAAO,EAAE,GAAU,CAAC,CAAC;aACtB;iBAAM;gBACL,OAAO,EAAE,IAAW,CAAC,GAAG,EAAE,CAAC,CAAC;aAC7B;SACF;QAOM,oBAAa,GAApB;YACE,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE;gBAC1B,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE;oBACjC,IAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;oBACzB,IAAI,EAAE,EAAE;wBACN,MAAM,CAAC,cAAc,GAAG,EAAE,CAAC,GAAG,CAAC;qBAChC;iBACF;gBACD,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE;oBAC1B,MAAM,CAAC,cAAc,GAAG,IAAI,CAAC;iBAC9B;aACF;YACD,OAAO,MAAM,CAAC,cAAc,CAAC;SAC9B;QAUM,aAAM,GAAb,UAAc,KAAa,EAAE,SAAqB;YAArB,0BAAA,EAAA,aAAqB;YAChD,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;gBACnB,IAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,aAAa,EAAE,CAAC;gBACpD,IAAM,aAAa,GAAG,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;gBAC/C,IAAM,QAAQ,GAAG,aAAa,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;gBAClF,IAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;gBACtE,IAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;gBAC5C,IAAI,CAAC,GAAG,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;gBACtE,IAAI,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,EAAE;oBAC1B,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;iBACb;gBACD,CAAC,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;gBACpC,OAAO,CAAC,CAAC;aACV;iBAAM;gBACL,OAAO,EAAE,GAAG,KAAK,CAAC;aACnB;SACF;QAGM,wBAAiB,GAAxB,UAAyB,CAAS;YAChC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;YACZ,IAAI,EAAsB,CAAC;YAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;gBAC3C,IAAM,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBAC1B,IAAI,CAAC,KAAK,EAAE,EAAS;oBACnB,EAAE,GAAG,CAAC,CAAC;oBACP,EAAE,GAAG,CAAC,CAAC;iBACR;qBAAM,IAAI,CAAC,KAAK,EAAE,EAAS;oBAC1B,IAAI,EAAE,KAAK,CAAC,EAAE;wBACZ,EAAE,GAAG,CAAC,CAAC;qBACR;oBACD,EAAE,GAAG,CAAC,CAAC;iBACR;qBAAM,IAAI,CAAC,IAAI,EAAE,IAAW,CAAC,IAAI,EAAE,EAAS;oBAC3C,IAAI,EAAE,GAAG,CAAC,EAAE;wBACV,EAAE,GAAG,CAAC,CAAC;qBACR;iBACF;qBAAM,IAAI,EAAE,GAAG,CAAC,EAAE;oBACjB,MAAM;iBACP;aACF;YACD,IAAI,EAAE,GAAG,CAAC,EAAE;gBACV,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAG,GAAG,CAAC,CAAC,CAAC;aACvC;YACD,OAAO,CAAC,CAAC;SACV;QAMM,eAAQ,GAAf,UAAgB,MAAc,EAAE,SAAuB;YAAvB,0BAAA,EAAA,eAAuB;YACrD,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE;gBACpB,IAAM,MAAM,GAAG,IAAI,CAAC;gBACpB,IAAM,MAAM,GAAG,EAAE,GAAG,MAAM,CAAC;gBAC3B,IAAM,IAAI,GAAG,EAAE,GAAG,MAAM,CAAC;gBACzB,IAAM,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC;gBACtB,IAAM,IAAI,GAAG,CAAC,GAAG,GAAG,CAAC;gBACrB,IAAI,KAAK,SAAoB,CAAC;gBAC9B,IAAI,MAAM,GAAG,IAAI,EAAE;oBACjB,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;oBAClC,MAAM,IAAI,IAAI,CAAC;iBAChB;gBACD,IAAI,IAAI,SAAoB,CAAC;gBAC7B,IAAI,MAAM,GAAG,GAAG,EAAE;oBAChB,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC;oBAChC,MAAM,IAAI,GAAG,CAAC;iBACf;gBACD,IAAI,KAAK,SAAoB,CAAC;gBAC9B,IAAI,MAAM,GAAG,IAAI,EAAE;oBACjB,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;oBAClC,MAAM,IAAI,IAAI,CAAC;iBAChB;gBACD,IAAI,OAAO,SAAoB,CAAC;gBAChC,IAAI,MAAM,GAAG,MAAM,EAAE;oBACnB,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC;oBACtC,MAAM,IAAI,MAAM,CAAC;iBAClB;gBACD,IAAI,OAAO,SAAoB,CAAC;gBAChC,IAAI,MAAM,GAAG,MAAM,EAAE;oBACnB,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC;oBACtC,MAAM,IAAI,MAAM,CAAC;iBAClB;gBACD,IAAI,CAAC,GAAG,EAAE,CAAC;gBACX,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE;oBACpB,CAAC,IAAI,KAAK,GAAG,GAAG,CAAC;iBAClB;gBACD,IAAI,IAAI,KAAK,KAAK,CAAC,EAAE;oBACnB,CAAC,IAAI,CAAC,CAAC,GAAG,SAAS,GAAG,EAAE,IAAI,IAAI,GAAG,GAAG,CAAC;iBACxC;gBACD,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE;oBACpB,CAAC,IAAI,CAAC,CAAC,GAAG,SAAS,GAAG,EAAE,IAAI,KAAK,GAAG,GAAG,CAAC;iBACzC;gBACD,IAAI,OAAO,KAAK,KAAK,CAAC,EAAE;oBACtB,CAAC,IAAI,CAAC,CAAC,GAAG,SAAS,GAAG,EAAE,IAAI,OAAO,GAAG,GAAG,CAAC;iBAC3C;gBACD,IAAI,OAAO,KAAK,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE;oBACjC,CAAC,IAAI,CAAC,CAAC,GAAG,SAAS,GAAG,EAAE,KAAK,OAAO,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC;iBAClD;gBACD,IAAI,MAAM,IAAI,CAAC,CAAC,EAAE;oBAChB,CAAC,IAAI,MAAM,GAAG,IAAI,CAAC;iBACpB;gBACD,OAAO,CAAC,CAAC;aACV;iBAAM;gBACL,OAAO,EAAE,GAAG,MAAM,CAAC;aACpB;SACF;QAhHe,eAAQ,GAA0B,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAiHzI,aAAC;KA7ZD,IA6ZC;IACD,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC;;;QCjZlB,uBAAsB,UAAmB;YACvC,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;SAC7B;QAaD,kCAAU,GAAV,UAAW,UAAoB;YAC7B,IAAI,UAAU,KAAK,KAAK,CAAC,EAAE;gBACzB,OAAO,IAAI,CAAC,SAAS,CAAC;aACvB;iBAAM;gBACL,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAC9B;SACF;QAES,4BAAI,GAAd,UAAe,UAAmB;YAChC,OAAO,aAAa,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;SACzC;QAES,gCAAQ,GAAlB,UAAmB,IAAa;YAC9B,OAAO,IAAI,YAAY,aAAa,CAAC;SACtC;QAED,8BAAM,GAAN,UAAO,IAAa;YAClB,IAAI,IAAI,KAAK,IAAI,EAAE;gBACjB,OAAO,IAAI,CAAC;aACb;iBAAM,IAAI,IAAI,YAAY,aAAa,EAAE;gBACxC,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,SAAS,CAAC;aACjE;YACD,OAAO,KAAK,CAAC;SACd;QAED,gCAAQ,GAAR;YACE,IAAI,aAAa,CAAC,SAAS,KAAK,KAAK,CAAC,EAAE;gBACtC,aAAa,CAAC,SAAS,GAAGA,YAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aACvD;YACD,OAAOA,YAAO,CAAC,IAAI,CAACA,YAAO,CAAC,GAAG,CAAC,aAAa,CAAC,SAAS,EACnDA,YAAO,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;SACpC;QAED,6BAAK,GAAL,UAAM,MAAc;YAClB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;YACxD,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACnB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;aACnC;iBAAM;gBACL,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;aACnC;YACD,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;SACnD;QAED,gCAAQ,GAAR;YACE,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SAC3B;QAUM,sBAAQ,GAAf;YACE,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE;gBAC5B,aAAa,CAAC,SAAS,GAAG,IAAI,aAAa,CAAC,KAAK,CAAC,CAAC;aACpD;YACD,OAAO,aAAa,CAAC,SAAS,CAAC;SAChC;QAMM,sBAAQ,GAAf;YACE,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE;gBAC5B,aAAa,CAAC,SAAS,GAAG,IAAI,aAAa,CAAC,KAAK,CAAC,CAAC;aACpD;YACD,OAAO,aAAa,CAAC,SAAS,CAAC;SAChC;QAMM,oBAAM,GAAb,UAAc,UAAoB;YAChC,IAAI,UAAU,EAAE;gBACd,OAAO,aAAa,CAAC,QAAQ,EAAE,CAAC;aACjC;YACD,OAAO,aAAa,CAAC,QAAQ,EAAE,CAAC;SACjC;QAKM,qBAAO,GAAd,UAAe,QAAsC;YACnD,IAAI,QAAQ,YAAY,aAAa,EAAE;gBACrC,OAAO,QAAQ,CAAC;aACjB;iBAAM,IAAI,OAAO,QAAQ,KAAK,QAAQ,IAAI,QAAQ,EAAE;gBAClD,OAAO,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;aACnD;iBAAM;gBACL,OAAO,aAAa,CAAC,QAAQ,EAAE,CAAC;aACjC;SACF;QACH,oBAAC;IAAD,CAAC;;;QC9HyC,+BAAK;QAA/C;;SA0EC;QAhCQ,iBAAK,GAAZ,UAAa,EAAyB,EAAE,IAAwB,EACnD,QAAkD;YADlD,mBAAA,EAAA,SAAyB;YAAE,qBAAA,EAAA,OAAa,IAAI,CAAC,IAAI,EAAE;YACnD,yBAAA,EAAA,WAA0B,aAAa,CAAC,QAAQ,EAAE;YAC7D,IAAI,EAAE,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,CAAC,IAAI,EAAE,IAAI,QAAQ,KAAK,aAAa,CAAC,QAAQ,EAAE,EAAE;gBAChF,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE;oBAC7B,WAAW,CAAC,YAAY,GAAG,IAAI,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC;iBAC9F;gBACD,OAAO,WAAW,CAAC,YAAY,CAAC;aACjC;YACD,OAAO,IAAI,gBAAgB,CAAC,EAAE,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;SACjD;QAKM,gBAAI,GAAX,UAAY,EAAyB,EAAE,IAAwB,EACnD,QAAkD;YADlD,mBAAA,EAAA,SAAyB;YAAE,qBAAA,EAAA,OAAa,IAAI,CAAC,IAAI,EAAE;YACnD,yBAAA,EAAA,WAA0B,aAAa,CAAC,QAAQ,EAAE;YAC5D,IAAI,EAAE,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,CAAC,IAAI,EAAE,IAAI,QAAQ,KAAK,aAAa,CAAC,QAAQ,EAAE,EAAE;gBAChF,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;oBAC5B,WAAW,CAAC,WAAW,GAAG,IAAI,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC;iBAC5F;gBACD,OAAO,WAAW,CAAC,WAAW,CAAC;aAChC;YACD,OAAO,IAAI,eAAe,CAAC,EAAE,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;SAChD;QAKM,iBAAK,GAAZ,UAAa,KAAY,EAAE,EAAyB,EAAE,IAAwB,EACjE,QAAkD;YADpC,mBAAA,EAAA,SAAyB;YAAE,qBAAA,EAAA,OAAa,IAAI,CAAC,IAAI,EAAE;YACjE,yBAAA,EAAA,WAA0B,aAAa,CAAC,QAAQ,EAAE;YAC7D,OAAO,IAAI,gBAAgB,CAAC,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;SACxD;QACH,kBAAC;IAAD,CA1EA,CAA0C,KAAK,GA0E9C;IAGD;QAA+B,oCAAW;QAQxC,0BAAY,EAAkB,EAAE,IAAU,EAAE,QAAuB;YAAnE,YACE,iBAAO,SAIR;YAHC,KAAI,CAAC,GAAG,GAAG,EAAE,CAAC;YACd,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;;SAC3B;QAED,iCAAM,GAAN;YACE,OAAO,KAAK,CAAC;SACd;QAED,kCAAO,GAAP;YACE,OAAO,IAAI,CAAC;SACb;QAED,iCAAM,GAAN;YACE,OAAO,KAAK,CAAC;SACd;QAED,kCAAO,GAAP;YACE,OAAO,KAAK,CAAC;SACd;QAID,iCAAM,GAAN,UAAO,MAAgB;YACrB,IAAI,MAAM,KAAK,KAAK,CAAC,EAAE;gBACrB,OAAO,IAAI,CAAC;aACb;iBAAM,IAAI,MAAM,EAAE;gBACjB,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,OAAO,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aAC/D;SACF;QAID,gCAAK,GAAL,UAAM,KAAc;YAClB,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE;gBACpB,OAAO,CAAC,CAAC;aACV;iBAAM,IAAI,KAAK,KAAK,CAAC,EAAE;gBACtB,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,IAAM,KAAK,GAAG,IAAI,cAAc,CAAC,eAAe,CAAC,CAAC;gBAClD,OAAO,WAAW,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACvE;SACF;QAID,gCAAK,GAAL,UAAM,KAAc;YAClB,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE;gBACpB,OAAO,CAAC,CAAC;aACV;iBAAM,IAAI,KAAK,KAAK,CAAC,EAAE;gBACtB,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,IAAM,KAAK,GAAG,IAAI,cAAc,CAAC,eAAe,CAAC,CAAC;gBAClD,OAAO,WAAW,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACvE;SACF;QAED,mCAAQ,GAAR;YACE,OAAO,CAAC,CAAC;SACV;QAED,oCAAS,GAAT;YACE,OAAO,CAAC,CAAC;SACV;QAED,8BAAG,GAAH,UAAI,KAAa;YACf,OAAO,KAAK,CAAC;SACd;QAED,8BAAG,GAAH,UAAI,KAAa;YACf,MAAM,IAAI,cAAc,EAAE,CAAC;SAC5B;QAED,8BAAG,GAAH,UAAI,KAAa,EAAE,KAAa;YAC9B,MAAM,IAAI,cAAc,EAAE,CAAC;SAC5B;QAED,+BAAI,GAAJ;YACE,MAAM,IAAI,cAAc,EAAE,CAAC;SAC5B;QAED,+BAAI,GAAJ,UAAK,MAAe;YAClB,IAAM,KAAK,GAAG,IAAI,cAAc,CAAC,YAAY,CAAC,CAAC;YAC/C,OAAO,WAAW,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SACvE;QAED,+BAAI,GAAJ,UAAK,IAAU;YACb,IAAM,KAAK,GAAG,IAAI,cAAc,CAAC,YAAY,CAAC,CAAC;YAC/C,OAAO,WAAW,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SACvE;QAID,6BAAE,GAAF,UAAG,EAAmB;YACpB,IAAI,EAAE,KAAK,KAAK,CAAC,EAAE;gBACjB,OAAO,IAAI,CAAC,GAAG,CAAC;aACjB;iBAAM;gBACL,OAAO,WAAW,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aAC1D;SACF;QAID,+BAAI,GAAJ,UAAK,IAAW;YACd,IAAI,IAAI,KAAK,KAAK,CAAC,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC;aACnB;iBAAM;gBACL,OAAO,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aAC1D;SACF;QAID,mCAAQ,GAAR,UAAS,QAAwB;YAC/B,IAAI,QAAQ,KAAK,KAAK,CAAC,EAAE;gBACvB,OAAO,IAAI,CAAC,SAAS,CAAC;aACvB;iBAAM;gBACL,OAAO,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;aAC1D;SACF;QAED,gCAAK,GAAL;YACE,OAAO,IAAI,CAAC;SACb;QACH,uBAAC;IAAD,CAxIA,CAA+B,WAAW,GAwIzC;IAGD;QAA8B,mCAAW;QAQvC,yBAAY,EAAkB,EAAE,IAAU,EAAE,QAAuB;YAAnE,YACE,iBAAO,SAIR;YAHC,KAAI,CAAC,GAAG,GAAG,EAAE,CAAC;YACd,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;;SAC3B;QAED,gCAAM,GAAN;YACE,OAAO,KAAK,CAAC;SACd;QAED,iCAAO,GAAP;YACE,OAAO,KAAK,CAAC;SACd;QAED,gCAAM,GAAN;YACE,OAAO,IAAI,CAAC;SACb;QAED,iCAAO,GAAP;YACE,OAAO,KAAK,CAAC;SACd;QAID,gCAAM,GAAN,UAAO,MAAgB;YACrB,IAAI,MAAM,KAAK,KAAK,CAAC,EAAE;gBACrB,OAAO,KAAK,CAAC;aACd;iBAAM,IAAI,MAAM,EAAE;gBACjB,OAAO,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aAChE;iBAAM;gBACL,OAAO,IAAI,CAAC;aACb;SACF;QAID,+BAAK,GAAL,UAAM,KAAc;YAClB,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE;gBACpB,OAAO,CAAC,CAAC;aACV;iBAAM,IAAI,KAAK,KAAK,CAAC,EAAE;gBACtB,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,IAAM,KAAK,GAAG,IAAI,cAAc,CAAC,eAAe,CAAC,CAAC;gBAClD,OAAO,WAAW,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACvE;SACF;QAID,+BAAK,GAAL,UAAM,KAAc;YAClB,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE;gBACpB,OAAO,CAAC,CAAC;aACV;iBAAM,IAAI,KAAK,KAAK,CAAC,EAAE;gBACtB,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,IAAM,KAAK,GAAG,IAAI,cAAc,CAAC,eAAe,CAAC,CAAC;gBAClD,OAAO,WAAW,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACvE;SACF;QAED,kCAAQ,GAAR;YACE,OAAO,CAAC,CAAC;SACV;QAED,mCAAS,GAAT;YACE,OAAO,CAAC,CAAC;SACV;QAED,6BAAG,GAAH,UAAI,KAAa;YACf,OAAO,KAAK,CAAC;SACd;QAED,6BAAG,GAAH,UAAI,KAAa;YACf,MAAM,IAAI,cAAc,EAAE,CAAC;SAC5B;QAED,6BAAG,GAAH,UAAI,KAAa,EAAE,KAAa;YAC9B,MAAM,IAAI,cAAc,EAAE,CAAC;SAC5B;QAED,8BAAI,GAAJ;YACE,MAAM,IAAI,cAAc,EAAE,CAAC;SAC5B;QAED,8BAAI,GAAJ,UAAK,MAAe;YAClB,IAAM,KAAK,GAAG,IAAI,cAAc,CAAC,WAAW,CAAC,CAAC;YAC9C,OAAO,WAAW,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SACvE;QAED,8BAAI,GAAJ,UAAK,IAAU;YACb,IAAM,KAAK,GAAG,IAAI,cAAc,CAAC,WAAW,CAAC,CAAC;YAC9C,OAAO,WAAW,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SACvE;QAID,4BAAE,GAAF,UAAG,EAAmB;YACpB,IAAI,EAAE,KAAK,KAAK,CAAC,EAAE;gBACjB,OAAO,IAAI,CAAC,GAAG,CAAC;aACjB;iBAAM;gBACL,OAAO,WAAW,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACzD;SACF;QAID,8BAAI,GAAJ,UAAK,IAAW;YACd,IAAI,IAAI,KAAK,KAAK,CAAC,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC;aACnB;iBAAM;gBACL,OAAO,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACzD;SACF;QAID,kCAAQ,GAAR,UAAS,QAAwB;YAC/B,IAAI,QAAQ,KAAK,KAAK,CAAC,EAAE;gBACvB,OAAO,IAAI,CAAC,SAAS,CAAC;aACvB;iBAAM;gBACL,OAAO,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;aACzD;SACF;QAED,+BAAK,GAAL;YACE,OAAO,IAAI,CAAC;SACb;QACH,sBAAC;IAAD,CAxIA,CAA8B,WAAW,GAwIxC;IAGD;QAA+B,oCAAW;QAUxC,0BAAY,KAAY,EAAE,EAAkB,EAAE,IAAU,EAAE,QAAuB;YAAjF,YACE,iBAAO,SAKR;YAJC,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,KAAI,CAAC,GAAG,GAAG,EAAE,CAAC;YACd,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;;SAC3B;QAED,iCAAM,GAAN;YACE,OAAO,KAAK,CAAC;SACd;QAED,kCAAO,GAAP;YACE,OAAO,KAAK,CAAC;SACd;QAED,iCAAM,GAAN;YACE,OAAO,KAAK,CAAC;SACd;QAED,kCAAO,GAAP;YACE,OAAO,IAAI,CAAC;SACb;QAID,iCAAM,GAAN,UAAO,MAAgB;YACrB,IAAI,MAAM,KAAK,KAAK,CAAC,EAAE;gBACrB,OAAO,KAAK,CAAC;aACd;iBAAM;gBACL,OAAO,IAAI,CAAC;aACb;SACF;QAID,gCAAK,GAAL,UAAM,KAAc;YAClB,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE;gBACpB,OAAO,CAAC,CAAC;aACV;iBAAM,IAAI,KAAK,KAAK,CAAC,EAAE;gBACtB,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,IAAM,KAAK,GAAG,IAAI,cAAc,CAAC,eAAe,CAAC,CAAC;gBAClD,OAAO,WAAW,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACvE;SACF;QAID,gCAAK,GAAL,UAAM,KAAc;YAClB,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE;gBACpB,OAAO,CAAC,CAAC;aACV;iBAAM,IAAI,KAAK,KAAK,CAAC,EAAE;gBACtB,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,IAAM,KAAK,GAAG,IAAI,cAAc,CAAC,eAAe,CAAC,CAAC;gBAClD,OAAO,WAAW,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACvE;SACF;QAED,mCAAQ,GAAR;YACE,OAAO,CAAC,CAAC;SACV;QAED,oCAAS,GAAT;YACE,OAAO,CAAC,CAAC;SACV;QAED,8BAAG,GAAH,UAAI,KAAa;YACf,OAAO,KAAK,CAAC;SACd;QAED,8BAAG,GAAH,UAAI,KAAa;YACf,MAAM,IAAI,cAAc,EAAE,CAAC;SAC5B;QAED,8BAAG,GAAH,UAAI,KAAa,EAAE,KAAa;YAC9B,MAAM,IAAI,cAAc,EAAE,CAAC;SAC5B;QAED,+BAAI,GAAJ;YACE,MAAM,IAAI,cAAc,EAAE,CAAC;SAC5B;QAED,+BAAI,GAAJ,UAAK,MAAe;YAClB,IAAM,KAAK,GAAG,IAAI,cAAc,CAAC,YAAY,CAAC,CAAC;YAC/C,OAAO,WAAW,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SACvE;QAED,+BAAI,GAAJ;YACE,OAAO,IAAI,CAAC,MAAM,CAAC;SACpB;QAED,+BAAI,GAAJ,UAAK,IAAU;YACb,IAAM,KAAK,GAAG,IAAI,cAAc,CAAC,YAAY,CAAC,CAAC;YAC/C,OAAO,WAAW,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SACvE;QAID,6BAAE,GAAF,UAAG,EAAmB;YACpB,IAAI,EAAE,KAAK,KAAK,CAAC,EAAE;gBACjB,OAAO,IAAI,CAAC,GAAG,CAAC;aACjB;iBAAM;gBACL,OAAO,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACvE;SACF;QAID,+BAAI,GAAJ,UAAK,IAAW;YACd,IAAI,IAAI,KAAK,KAAK,CAAC,EAAE;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC;aACnB;iBAAM;gBACL,OAAO,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACvE;SACF;QAID,mCAAQ,GAAR,UAAS,QAAwB;YAC/B,IAAI,QAAQ,KAAK,KAAK,CAAC,EAAE;gBACvB,OAAO,IAAI,CAAC,SAAS,CAAC;aACvB;iBAAM;gBACL,OAAO,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;aACvE;SACF;QAED,gCAAK,GAAL;YACE,OAAO,IAAI,CAAC;SACb;QACH,uBAAC;IAAD,CA7IA,CAA+B,WAAW,GA6IzC;;;QChfuD,gCAAS;QAAjE;;SA0FC;QAnEC,8BAAO,GAAP,UAAQ,MAAe;YACrB,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;gBAC9B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;aACpB;YACD,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC;SACpD;QAED,8BAAO,GAAP,UAAQ,MAAe;YACrB,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAC7B,OAAO,IAAI,CAAC;SACb;QAED,4BAAK,GAAL,UAAM,MAAe;YACnB,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAC3B,OAAO,IAAI,CAAC;SACb;QAID,4BAAK,GAAL;YACE,OAAO,IAAI,CAAC;SACb;QAKD,4BAAK,GAAL;YACE,MAAM,IAAI,KAAK,EAAE,CAAC;SACnB;QASM,iBAAI,GAAX,UAAe,KAAsB,EAAE,QAAoD;YAA5E,sBAAA,EAAA,YAAsB;YAAE,yBAAA,EAAA,WAA2B,cAAc,CAAC,QAAQ,EAAE;YACzF,IAAI,KAAK,KAAK,IAAI,IAAI,QAAQ,KAAK,cAAc,CAAC,QAAQ,EAAE,EAAE;gBAC5D,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE;oBAC7B,YAAY,CAAC,WAAW,GAAG,IAAI,gBAAgB,CAAC,KAAK,EAAE,cAAc,CAAC,QAAQ,EAAE,CAAC,CAAC;iBACnF;gBACD,OAAO,YAAY,CAAC,WAAW,CAAC;aACjC;YACD,OAAO,IAAI,gBAAgB,CAAI,KAAM,EAAE,QAAQ,CAAC,CAAC;SAElD;QAKM,iBAAI,GAAX,UAAe,KAAsB,EAAE,QAAoD;YAA5E,sBAAA,EAAA,YAAsB;YAAE,yBAAA,EAAA,WAA2B,cAAc,CAAC,QAAQ,EAAE;YACzF,IAAI,KAAK,KAAK,IAAI,IAAI,QAAQ,KAAK,cAAc,CAAC,QAAQ,EAAE,EAAE;gBAC5D,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE;oBAC7B,YAAY,CAAC,WAAW,GAAG,IAAI,gBAAgB,CAAC,KAAK,EAAE,cAAc,CAAC,QAAQ,EAAE,CAAC,CAAC;iBACnF;gBACD,OAAO,YAAY,CAAC,WAAW,CAAC;aACjC;YACD,OAAO,IAAI,gBAAgB,CAAI,KAAM,EAAE,QAAQ,CAAC,CAAC;SAClD;QAKM,kBAAK,GAAZ,UAAgB,KAAY,EAAE,QAAoD;YAApD,yBAAA,EAAA,WAA2B,cAAc,CAAC,QAAQ,EAAE;YAChF,OAAO,IAAI,iBAAiB,CAAI,KAAK,EAAE,QAAQ,CAAC,CAAC;SAClD;QACH,mBAAC;IAAD,CA1FA,CAAwD,MAAM,GA0F7D;IAGD;QAAkC,oCAAe;QAM/C,0BAAY,KAAQ,EAAE,QAAwB;YAA9C,YACE,iBAAO,SAGR;YAFC,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;;SAC3B;QAED,iCAAM,GAAN;YACE,OAAO,KAAK,CAAC;SACd;QAED,iCAAM,GAAN;YACE,OAAO,IAAI,CAAC;SACb;QAED,iCAAM,GAAN;YACE,OAAO,KAAK,CAAC;SACd;QAED,kCAAO,GAAP;YACE,OAAO,KAAK,CAAC;SACd;QAID,iCAAM,GAAN,UAAO,MAAgB;YACrB,IAAI,MAAM,KAAK,KAAK,CAAC,EAAE;gBACrB,OAAO,IAAI,CAAC;aACb;iBAAM,IAAI,MAAM,EAAE;gBACjB,OAAO,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACvD;iBAAM;gBACL,OAAO,IAAI,CAAC;aACb;SACF;QAID,gCAAK,GAAL,UAAM,KAAc;YAClB,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE;gBACpB,OAAO,CAAC,CAAC;aACV;iBAAM,IAAI,KAAK,KAAK,CAAC,EAAE;gBACtB,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,OAAO,YAAY,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,eAAe,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACjF;SACF;QAID,gCAAK,GAAL,UAAM,KAAc;YAClB,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE;gBACpB,OAAO,CAAC,CAAC;aACV;iBAAM,IAAI,KAAK,KAAK,CAAC,EAAE;gBACtB,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,OAAO,YAAY,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,eAAe,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACjF;SACF;QAED,mCAAQ,GAAR;YACE,OAAO,CAAC,CAAC;SACV;QAED,oCAAS,GAAT;YACE,OAAO,CAAC,CAAC;SACV;QAED,8BAAG,GAAH,UAAI,KAAa;YACf,OAAO,KAAK,CAAC;SACd;QAED,8BAAG,GAAH,UAAI,KAAa;YACf,MAAM,IAAI,eAAe,EAAE,CAAC;SAC7B;QAED,8BAAG,GAAH,UAAI,KAAa,EAAE,KAAa;YAC9B,MAAM,IAAI,eAAe,EAAE,CAAC;SAC7B;QAID,gCAAK,GAAL,UAAM,aAA8B;YAClC,OAAO,YAAY,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SACxE;QAED,kCAAO,GAAP,UAAQ,MAAe;YACrB,OAAO,YAAY,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SACxE;QAED,+BAAI,GAAJ,UAAK,MAAkB;YAAlB,uBAAA,EAAA,UAAkB;YACrB,IAAI,MAAM,KAAK,CAAC,EAAE;gBAChB,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,OAAO,YAAY,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,cAAc,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aAChF;SACF;QAED,+BAAI,GAAJ;YACE,OAAO,IAAI,CAAC,MAAM,CAAC;SACpB;QAID,mCAAQ,GAAR,UAAS,QAAyB;YAChC,IAAI,QAAQ,KAAK,KAAK,CAAC,EAAE;gBACvB,OAAO,IAAI,CAAC,SAAS,CAAC;aACvB;iBAAM;gBACL,OAAO,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;aACjD;SACF;QAED,gCAAK,GAAL;YACE,OAAO,IAAI,CAAC;SACb;QACH,uBAAC;IAAD,CAvHA,CAAkC,YAAY,GAuH7C;IAGD;QAAkC,oCAAe;QAM/C,0BAAY,KAAQ,EAAE,QAAwB;YAA9C,YACE,iBAAO,SAGR;YAFC,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;;SAC3B;QAED,iCAAM,GAAN;YACE,OAAO,KAAK,CAAC;SACd;QAED,iCAAM,GAAN;YACE,OAAO,KAAK,CAAC;SACd;QAED,iCAAM,GAAN;YACE,OAAO,IAAI,CAAC;SACb;QAED,kCAAO,GAAP;YACE,OAAO,KAAK,CAAC;SACd;QAID,iCAAM,GAAN,UAAO,MAAgB;YACrB,IAAI,MAAM,KAAK,KAAK,CAAC,EAAE;gBACrB,OAAO,KAAK,CAAC;aACd;iBAAM,IAAI,MAAM,EAAE;gBACjB,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,OAAO,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACvD;SACF;QAID,gCAAK,GAAL,UAAM,KAAc;YAClB,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE;gBACpB,OAAO,CAAC,CAAC;aACV;iBAAM,IAAI,KAAK,KAAK,CAAC,EAAE;gBACtB,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,OAAO,YAAY,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,eAAe,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACjF;SACF;QAID,gCAAK,GAAL,UAAM,KAAc;YAClB,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE;gBACpB,OAAO,CAAC,CAAC;aACV;iBAAM,IAAI,KAAK,KAAK,CAAC,EAAE;gBACtB,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,OAAO,YAAY,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,eAAe,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACjF;SACF;QAED,mCAAQ,GAAR;YACE,OAAO,CAAC,CAAC;SACV;QAED,oCAAS,GAAT;YACE,OAAO,CAAC,CAAC;SACV;QAED,8BAAG,GAAH,UAAI,KAAa;YACf,OAAO,KAAK,CAAC;SACd;QAED,8BAAG,GAAH,UAAI,KAAa;YACf,MAAM,IAAI,eAAe,EAAE,CAAC;SAC7B;QAED,8BAAG,GAAH,UAAI,KAAa,EAAE,KAAa;YAC9B,MAAM,IAAI,eAAe,EAAE,CAAC;SAC7B;QAID,gCAAK,GAAL,UAAM,aAA8B;YAClC,OAAO,YAAY,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SACxE;QAED,kCAAO,GAAP,UAAQ,MAAe;YACrB,OAAO,YAAY,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SACxE;QAED,+BAAI,GAAJ,UAAK,MAAkB;YAAlB,uBAAA,EAAA,UAAkB;YACrB,IAAI,MAAM,KAAK,CAAC,EAAE;gBAChB,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,OAAO,YAAY,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,cAAc,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aAChF;SACF;QAED,+BAAI,GAAJ;YACE,OAAO,IAAI,CAAC,MAAM,CAAC;SACpB;QAID,mCAAQ,GAAR,UAAS,QAAyB;YAChC,IAAI,QAAQ,KAAK,KAAK,CAAC,EAAE;gBACvB,OAAO,IAAI,CAAC,SAAS,CAAC;aACvB;iBAAM;gBACL,OAAO,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;aACjD;SACF;QAED,gCAAK,GAAL;YACE,OAAO,IAAI,CAAC;SACb;QACH,uBAAC;IAAD,CAvHA,CAAkC,YAAY,GAuH7C;IAGD;QAAmC,qCAAe;QAMhD,2BAAY,KAAY,EAAE,QAAwB;YAAlD,YACE,iBAAO,SAGR;YAFC,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;;SAC3B;QAED,kCAAM,GAAN;YACE,OAAO,KAAK,CAAC;SACd;QAED,kCAAM,GAAN;YACE,OAAO,KAAK,CAAC;SACd;QAED,kCAAM,GAAN;YACE,OAAO,KAAK,CAAC;SACd;QAED,mCAAO,GAAP;YACE,OAAO,IAAI,CAAC;SACb;QAID,kCAAM,GAAN,UAAO,MAAgB;YACrB,IAAI,MAAM,KAAK,KAAK,CAAC,EAAE;gBACrB,OAAO,KAAK,CAAC;aACd;iBAAM;gBACL,OAAO,IAAI,CAAC;aACb;SACF;QAID,iCAAK,GAAL,UAAM,KAAc;YAClB,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE;gBACpB,OAAO,CAAC,CAAC;aACV;iBAAM,IAAI,KAAK,KAAK,CAAC,EAAE;gBACtB,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,OAAO,YAAY,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,eAAe,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACjF;SACF;QAID,iCAAK,GAAL,UAAM,KAAc;YAClB,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE;gBACpB,OAAO,CAAC,CAAC;aACV;iBAAM,IAAI,KAAK,KAAK,CAAC,EAAE;gBACtB,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,OAAO,YAAY,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,eAAe,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACjF;SACF;QAED,oCAAQ,GAAR;YACE,OAAO,CAAC,CAAC;SACV;QAED,qCAAS,GAAT;YACE,OAAO,CAAC,CAAC;SACV;QAED,+BAAG,GAAH,UAAI,KAAa;YACf,OAAO,KAAK,CAAC;SACd;QAED,+BAAG,GAAH,UAAI,KAAa;YACf,MAAM,IAAI,eAAe,EAAE,CAAC;SAC7B;QAED,+BAAG,GAAH,UAAI,KAAa,EAAE,KAAa;YAC9B,MAAM,IAAI,eAAe,EAAE,CAAC;SAC7B;QAID,iCAAK,GAAL,UAAM,aAA8B;YAClC,OAAO,IAAI,CAAC;SACb;QAED,mCAAO,GAAP,UAAQ,MAAe;YACrB,OAAO,IAAI,CAAC;SACb;QAED,gCAAI,GAAJ,UAAK,MAAkB;YAAlB,uBAAA,EAAA,UAAkB;YACrB,IAAI,MAAM,KAAK,CAAC,EAAE;gBAChB,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,OAAO,YAAY,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,cAAc,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aAChF;SACF;QAED,gCAAI,GAAJ;YACE,MAAM,IAAI,eAAe,EAAE,CAAC;SAC7B;QAED,gCAAI,GAAJ;YACE,OAAO,IAAI,CAAC,MAAM,CAAC;SACpB;QAID,oCAAQ,GAAR,UAAS,QAAyB;YAChC,IAAI,QAAQ,KAAK,KAAK,CAAC,EAAE;gBACvB,OAAO,IAAI,CAAC,SAAS,CAAC;aACvB;iBAAM;gBACL,OAAO,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;aAClD;SACF;QAED,iCAAK,GAAL;YACE,OAAO,IAAI,CAAC;SACb;QACH,wBAAC;IAAD,CAzHA,CAAmC,YAAY,GAyH9C;;;QC5cC;SACC;QASM,iBAAK,GAAZ,UAAa,MAAc;YACzB,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAE;gBAChC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,GAAG,CAAQ,CAAC;aAC/E;SACF;QASM,gBAAI,GAAX,UAAY,MAAc;YACxB,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAE;gBAChC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,GAAG,CAAQ,CAAC;aAC/E;SACF;QASM,iBAAK,GAAZ,UAAa,MAAc;YACzB,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAE;gBAChC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,GAAG,CAAQ,CAAC;aAC/E;SACF;QASM,iBAAK,GAAZ,UAAa,MAAc;YACzB,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAE;gBAChC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ;qBACvE,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,GAAG,CAAQ,CAAC;aAC1D;SACF;QASM,eAAG,GAAV,UAAW,MAAc;YACvB,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAE;gBAChC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ;qBACvE,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,GAAG,CAAQ,CAAC;aAC1D;SACF;QASM,iBAAK,GAAZ,UAAa,MAAc;YACzB,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAE;gBAChC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ;qBACvE,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,GAAG,CAAQ,CAAC;aAC1D;SACF;QASM,kBAAM,GAAb,UAAc,MAAc;YAC1B,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAE;gBAChC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ;qBACvE,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,GAAG,CAAQ,CAAC;aAC1D;SACF;QASM,gBAAI,GAAX,UAAY,MAAc;YACxB,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAE;gBAChC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ;qBACvE,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,GAAG,CAAQ,CAAC;aAC1D;SACF;QASM,mBAAO,GAAd,UAAe,MAAc;YAC3B,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAE;gBAChC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ;qBACvE,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,GAAG,CAAQ,CAAC;aAC1D;SACF;QASM,gBAAI,GAAX,UAAY,MAAc;YACxB,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAE;gBAChC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ;qBACvE,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,GAAG,CAAQ,CAAC;aAC1D;SACF;QASM,gBAAI,GAAX,UAAY,MAAc;YACxB,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAE;gBAChC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ;qBACvE,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,GAAG,CAAQ,CAAC;aAC1D;SACF;QASM,qBAAS,GAAhB,UAAiB,MAAc;YAC7B,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAE;gBAChC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ;qBACvE,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,GAAG,CAAQ,CAAC;aAC1D;SACF;QASM,mBAAO,GAAd,UAAe,MAAc;YAC3B,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAE;gBAChC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ;qBACvE,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,GAAG,CAAQ,CAAC;aAC1D;SACF;QASM,qBAAS,GAAhB,UAAiB,MAAc;YAC7B,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAE;gBAChC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ;qBACvE,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,GAAG,CAAQ,CAAC;aAC1D;SACF;QASM,sBAAU,GAAjB,UAAkB,MAAc;YAC9B,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAE;gBAChC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ;qBACvE,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,GAAG,CAAQ,CAAC;aAC1D;SACF;QASM,oBAAQ,GAAf,UAAgB,MAAc;YAC5B,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAE;gBAChC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ;qBACvE,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,GAAG,CAAQ,CAAC;aAC1D;SACF;QASM,uBAAW,GAAlB,UAAmB,MAAc;YAC/B,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAE;gBAChC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ;qBACvE,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,GAAG,CAAQ,CAAC;aAC1D;SACF;QASM,oBAAQ,GAAf,UAAgB,MAAc;YAC5B,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAE;gBAChC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ;qBACvE,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,GAAG,CAAQ,CAAC;aAC1D;SACF;QASM,oBAAQ,GAAf,UAAgB,MAAc;YAC5B,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAE;gBAChC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ;qBACvE,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,GAAG,CAAQ,CAAC;aAC1D;SACF;QACH,kBAAC;IAAD,CAAC;;;QClQC;SAEC;QAKM,cAAO,GAAd,UAAe,CAAS;YACtB,OAAO,CAAC,IAAI,EAAE,IAAW,CAAC,IAAI,EAAE,CAAQ;SACzC;QAQM,kBAAW,GAAlB,UAAmB,CAAS;YAC1B,IAAI,CAAC,IAAI,EAAE,IAAW,CAAC,IAAI,EAAE,EAAS;gBACpC,OAAO,CAAC,GAAG,EAAE,CAAQ;aACtB;iBAAM;gBACL,IAAM,OAAO,GAAG,OAAO,CAAC,YAAY,EAAE,CAAC;gBACvC,OAAO,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;gBACzC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;gBAC7B,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;aACjC;SACF;QAMM,kBAAW,GAAlB,UAAmB,CAAS;YAC1B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;gBACpB,OAAO,EAAE,GAAU,CAAC,CAAC;aACtB;iBAAM;gBACL,MAAM,IAAI,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;aACzB;SACF;QAKM,kBAAW,GAAlB,UAAmB,KAAa;YAC9B,IAAI,IAAI,GAAG,CAAC,CAAC;YACb,GAAG;gBACD,IAAI,IAAI,CAAC,CAAC;gBACV,KAAK,GAAG,CAAC,KAAK,GAAG,EAAE,IAAI,CAAC,CAAC;aAC1B,QAAQ,KAAK,EAAE;YAChB,OAAO,IAAI,CAAC;SACb;QAEM,oBAAa,GAApB;YACE,OAAO,IAAI,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;SACnD;QAEM,mBAAY,GAAnB,UAAoB,KAAY;YAC9B,OAAO,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;SAC5D;QAEM,oBAAa,GAApB;YACE,OAAO,IAAI,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;SACnD;QAEM,mBAAY,GAAnB,UAAoB,KAAY;YAC9B,OAAO,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;SAC5D;QAEM,mBAAY,GAAnB;YACE,OAAO,IAAI,MAAM,CAAC,YAAY,EAAE,CAAC;SAClC;QAEM,kBAAW,GAAlB,UAAmB,KAAY;YAC7B,OAAO,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SACzC;QAYM,oBAAa,GAApB,UAAqB,KAAc;YACjC,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE;gBACpB,OAAO,IAAI,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;aAC5C;iBAAM;gBACL,OAAO,IAAI,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;aAChD;SACF;QAOM,mBAAY,GAAnB,UAAoB,KAAa,EAAE,MAAc;YAC/C,OAAO,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;SAC1D;QAOH,aAAC;IAAD,CAAC;;;QC5FC,oBAAY,KAAY,EAAE,GAAQ,EAAE,QAAkB,EAAE,OAAsB,EAClE,IAAmB,EAAE,KAAwB;YACvD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;YAChB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YACxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACrB;QAKD,0BAAK,GAAL;YACE,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;SAC5B;QAMD,wBAAG,GAAH;YACE,OAAO,IAAI,CAAC,IAAI,CAAC;SAClB;QAKD,6BAAQ,GAAR;YACE,OAAO,IAAI,CAAC,SAAS,CAAC;SACvB;QAKD,4BAAO,GAAP;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;SACtB;QAMD,yBAAI,GAAJ;YACE,OAAO,IAAI,CAAC,KAAK,CAAC;SACnB;QAMD,0BAAK,GAAL;YACE,OAAO,IAAI,CAAC,MAAM,CAAC;SACpB;QAEO,+BAAU,GAAlB;YACE,IAAI,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC;YACxD,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;gBACxB,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC;aACrD;YACD,OAAO,MAAM,CAAC;SACf;QAED,4BAAO,GAAP,UAAQ,MAAc;YACpB,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;YAClC,IAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAChC,IAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;YAC5B,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;YAChC,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC9B,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;YACxB,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;YAC1B,IAAM,YAAY,GAAG,CAAC,CAAC;YACvB,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;YACrC,UAAU,CAAC,iBAAiB,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,EAC1C,KAAK,EAAE,YAAY,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;SACvE;QAED,6BAAQ,GAAR,UAAS,QAAyB;YAChC,OAAO,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;SACvC;QAOM,eAAI,GAAX,UAAY,KAAY,EAAE,GAAQ,EAAE,QAAkB,EAAE,OAAoC,EAChF,IAAiC,EAAE,KAAyB;YACtE,IAAI,OAAO,YAAY,UAAU,EAAE;gBACjC,KAAK,GAAG,OAAO,CAAC;gBAChB,IAAI,GAAG,IAAI,CAAC;gBACZ,OAAO,GAAG,IAAI,CAAC;aAChB;iBAAM,IAAI,IAAI,YAAY,UAAU,EAAE;gBACrC,KAAK,GAAG,IAAI,CAAC;gBACb,IAAI,GAAG,IAAI,CAAC;aACb;YACD,KAAK,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;YACtB,IAAI,OAAO,KAAK,KAAK,CAAC,EAAE;gBACtB,OAAO,GAAG,IAAI,CAAC;aAChB;YACD,IAAI,IAAI,KAAK,KAAK,CAAC,EAAE;gBACnB,IAAI,GAAG,IAAI,CAAC;aACb;YACD,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE;gBACpB,KAAK,GAAG,IAAI,CAAC;aACd;YACD,OAAO,IAAI,UAAU,CAAC,KAAK,EAAE,GAAG,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;SACnE;QAMM,kBAAO,GAAd,UAAe,OAAe,EAAE,KAAY,EAAE,QAAgD,EAC/E,IAAiC,EAAE,KAAyB;YACzE,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,YAAY,UAAU,EAAE;gBACvD,KAAK,GAAG,QAAQ,CAAC;gBACjB,QAAQ,GAAG,KAAK,CAAC,CAAC;aACnB;iBAAM,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;gBACvC,IAAI,GAAG,QAAQ,CAAC;gBAChB,QAAQ,GAAG,KAAK,CAAC,CAAC;aACnB;YACD,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,YAAY,UAAU,EAAE;gBAC/C,KAAK,GAAG,IAAI,CAAC;gBACb,IAAI,GAAG,KAAK,CAAC,CAAC;aACf;YACD,IAAI,IAAI,KAAK,KAAK,CAAC,EAAE;gBACnB,IAAI,GAAG,IAAI,CAAC;aACb;YACD,IAAI,QAAQ,KAAK,KAAK,CAAC,EAAE;gBACvB,QAAQ,GAAGC,aAAQ,CAAC,KAAK,EAAE,CAAC;aAC7B;YAED,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;YAC1B,IAAM,MAAM,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;YAC7B,MAAM,CAAC,IAAI,EAAE,CAAC;YACd,OAAO,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;SACtE;QAMM,qBAAU,GAAjB,UAAkB,KAAY,EAAE,QAAgD,EAC9D,IAAiC,EAAE,KAAyB;YAC5E,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,YAAY,UAAU,EAAE;gBACvD,KAAK,GAAG,QAAQ,CAAC;gBACjB,QAAQ,GAAG,KAAK,CAAC,CAAC;aACnB;iBAAM,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;gBACvC,IAAI,GAAG,QAAQ,CAAC;gBAChB,QAAQ,GAAG,KAAK,CAAC,CAAC;aACnB;YACD,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,YAAY,UAAU,EAAE;gBAC/C,KAAK,GAAG,IAAI,CAAC;gBACb,IAAI,GAAG,KAAK,CAAC,CAAC;aACf;YACD,IAAI,IAAI,KAAK,KAAK,CAAC,EAAE;gBACnB,IAAI,GAAG,IAAI,CAAC;aACb;YACD,IAAI,QAAQ,KAAK,KAAK,CAAC,EAAE;gBACvB,QAAQ,GAAGA,aAAQ,CAAC,KAAK,EAAE,CAAC;aAC7B;YAED,IAAI,OAAO,CAAC;YACZ,IAAI,KAAK,CAAC,MAAM,EAAE,EAAE;gBAClB,IAAM,MAAM,GAAG,OAAO,CAAC,YAAY,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;gBAC3E,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC;gBACvC,OAAO,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;aACzB;iBAAM;gBACL,OAAO,GAAG,yBAAyB,CAAC;aACrC;YACD,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;YAC1B,IAAM,MAAM,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;YAC7B,MAAM,CAAC,IAAI,EAAE,CAAC;YACd,OAAO,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;SACtE;QAMM,mBAAQ,GAAf,UAAgB,QAAyB,EAAE,KAAY,EAAE,QAAgD,EACzF,IAAiC,EAAE,KAAyB;YAC1E,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,YAAY,UAAU,EAAE;gBACvD,KAAK,GAAG,QAAQ,CAAC;gBACjB,QAAQ,GAAG,KAAK,CAAC,CAAC;aACnB;iBAAM,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;gBACvC,IAAI,GAAG,QAAQ,CAAC;gBAChB,QAAQ,GAAG,KAAK,CAAC,CAAC;aACnB;YACD,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,YAAY,UAAU,EAAE;gBAC/C,KAAK,GAAG,IAAI,CAAC;gBACb,IAAI,GAAG,KAAK,CAAC,CAAC;aACf;YACD,IAAI,IAAI,KAAK,KAAK,CAAC,EAAE;gBACnB,IAAI,GAAG,IAAI,CAAC;aACb;YACD,IAAI,QAAQ,KAAK,KAAK,CAAC,EAAE;gBACvB,QAAQ,GAAGA,aAAQ,CAAC,KAAK,EAAE,CAAC;aAC7B;YAED,IAAI,MAAM,GAAG,OAAO,CAAC,YAAY,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;YACvE,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;gBAChC,MAAM,CAAC,SAAS,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;aACpC;iBAAM;gBACL,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;aACjC;YACD,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;YACtF,IAAI,KAAK,CAAC,MAAM,EAAE,EAAE;gBAClB,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC;aACxC;iBAAM;gBACL,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;aACvC;YACD,IAAM,OAAO,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;YAC9B,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;YAC1B,IAAM,MAAM,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;YAC7B,MAAM,CAAC,IAAI,EAAE,CAAC;YACd,OAAO,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;SACtE;QAEc,4BAAiB,GAAhC,UAAiC,KAAY,EAAE,KAAW,EAAE,GAAS,EACpC,QAAkB,EAAE,OAAsB,EAC1C,IAAmB,EAAE,KAAwB,EAC7C,YAAoB,EAAE,UAAkB,EACxC,MAAc;YAC7C,GAAG;gBACD,IAAI,OAAO,KAAK,IAAI,EAAE;oBACpB,UAAU,CAAC,cAAc,CAAC,QAAQ,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;oBACrD,MAAM,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;iBAC3B;gBACD,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;gBAC3D,MAAM,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;gBAC1B,IAAM,IAAI,GAAG,UAAU,CAAC,cAAc,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EACjC,KAAK,EAAE,YAAY,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;gBAChF,IAAI,IAAI,KAAK,IAAI,EAAE;oBACjB,MAAM,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;oBAC1B,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;oBAC5B,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;oBAC1B,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;oBACtB,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;oBAC1B,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;oBACxB,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;oBAClB,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;iBACrB;qBAAM;oBACL,MAAM;iBACP;aACF,QAAQ,IAAI,EAAE;SAChB;QAGM,yBAAc,GAArB,UAAsB,QAAkB,EAAE,OAAsB,EAAE,MAAc;YAC9E,UAAU,CAAC,cAAc,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YAC5C,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;YACxC,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAC1B,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACzB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;YACjC,IAAI,OAAO,KAAK,IAAI,EAAE;gBACpB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;aACjD;YACD,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SAC3B;QAEc,wBAAa,GAA5B,UAA6B,KAAY,EAAE,KAAW,EAAE,UAAkB,EAC7C,MAAc;YACzC,UAAU,CAAC,oBAAoB,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;YACpD,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;YACjC,IAAM,EAAE,GAAG,KAAK,CAAC,EAAE,EAAE,CAAC;YACtB,IAAI,EAAE,KAAK,IAAI,EAAE;gBACf,MAAM,CAAC,OAAO,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;aAC5B;YACD,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;YACjC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YAC1C,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;YACjC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;YAC5C,MAAM,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;YAE1B,UAAU,CAAC,eAAe,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;SAChD;QAEc,uBAAY,GAA3B,UAA4B,KAAiB,EAAE,YAAoB,EACvC,UAAkB,EAAE,MAAc;YAC5D,IAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;YACnC,IAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YACjC,IAAM,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;YAC7B,IAAM,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC;YACjC,IAAM,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC;YACzB,IAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC;YAC1B,OAAO,UAAU,CAAC,cAAc,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EACvC,YAAY,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;SACpE;QAEc,yBAAc,GAA7B,UAA8B,KAAY,EAAE,KAAW,EAAE,GAAS,EACpC,QAAkB,EAAE,IAAmB,EACvC,KAAwB,EAAE,YAAoB,EAC9C,UAAkB,EAAE,MAAc;YAC9D,IAAI,IAAI,GAAG,KAAK,CAAC;YACjB,IAAM,SAAS,GAAG,KAAK,KAAK,IAAI,IAAI,KAAK,CAAC,QAAQ,KAAK,IAAI;mBACzCC,YAAO,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;YAC/D,IAAM,UAAU,GAAG,SAAS,IAAI,KAAK,CAAC,OAAO,IAAI,KAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAC3F,IAAI,UAAU,KAAK,CAAC,EAAE;gBACpB,IAAI,GAAG,UAAU,CAAC,YAAY,CAAC,KAAM,EAAE,YAAY,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;gBACzE,MAAM,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;gBAC1B,UAAU,CAAC,uBAAuB,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;gBACvD,MAAM,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;aAC3B;YACD,UAAU,CAAC,YAAY,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,QAAQ,EAAE,YAAY,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;YACvF,IAAI,IAAI,KAAK,IAAI,EAAE;gBACjB,UAAU,CAAC,WAAW,CAAC,IAAI,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;aAClD;YACD,IAAI,UAAU,KAAK,CAAC,CAAC,EAAE;gBACrB,MAAM,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;gBAC1B,UAAU,CAAC,uBAAuB,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;gBACvD,MAAM,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;gBAC1B,IAAI,GAAG,UAAU,CAAC,YAAY,CAAC,KAAM,EAAE,YAAY,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;aAC1E;YACD,OAAO,IAAI,CAAC;SACb;QAEc,uBAAY,GAA3B,UAA4B,KAAY,EAAE,KAAW,EAAE,GAAS,EACpC,QAAkB,EAAE,YAAoB,EACxC,UAAkB,EAAE,MAAc;YAC5D,IAAM,SAAS,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;YAC/B,IAAM,OAAO,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YAC3B,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;YAExB,OAAO,IAAI,GAAG,SAAS,EAAE;gBACvB,UAAU,CAAC,eAAe,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;gBACxC,IAAI,IAAI,CAAC,CAAC;aACX;YAED,IAAI,OAAO,GAAG,SAAS,GAAG,CAAC,GAAG,YAAY,GAAG,CAAC,EAAE;gBAC9C,OAAO,IAAI,IAAI,SAAS,GAAG,YAAY,EAAE;oBACvC,UAAU,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;oBAC9E,IAAI,IAAI,CAAC,CAAC;iBACX;gBACD,UAAU,CAAC,uBAAuB,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;gBACvD,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;gBACjC,UAAU,CAAC,cAAc,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;gBAC5C,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAQ,CAAC;gBAClC,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBAC1B,MAAM,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;gBAC1B,OAAO,IAAI,GAAG,OAAO,GAAG,YAAY,EAAE;oBACpC,UAAU,CAAC,eAAe,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;oBACxC,IAAI,IAAI,CAAC,CAAC;iBACX;aACF;YAED,OAAO,IAAI,IAAI,OAAO,EAAE;gBACtB,UAAU,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;gBAC9E,IAAI,IAAI,CAAC,CAAC;aACX;SACF;QAEc,sBAAW,GAA1B,UAA2B,IAAmB,EAAE,UAAkB,EAAE,MAAc;YAChF,MAAM,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;YAC1B,UAAU,CAAC,eAAe,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;YAC/C,MAAM,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;YAC1B,UAAU,CAAC,kBAAkB,CAAC,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;SACjE;QAEc,sBAAW,GAA1B,UAA2B,KAAY,EAAE,KAAW,EAAE,GAAS,EACpC,QAAkB,EAAE,IAAY,EAChC,UAAkB,EAAE,MAAc;YAC3D,IAAI,KAAK,CAAC,KAAK,KAAK,IAAI,IAAI,GAAG,CAAC,KAAK,KAAK,IAAI,EAAE;gBAC9C,UAAU,CAAC,iBAAiB,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;aACrF;iBAAM,IAAI,KAAK,CAAC,KAAK,KAAK,IAAI,EAAE;gBAC/B,UAAU,CAAC,gBAAgB,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;aAC/E;iBAAM,IAAI,GAAG,CAAC,KAAK,KAAK,IAAI,EAAE;gBAC7B,UAAU,CAAC,cAAc,CAAC,KAAK,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;aAC3E;iBAAM;gBACL,UAAU,CAAC,cAAc,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;aACtE;SACF;QAEc,4BAAiB,GAAhC,UAAiC,KAAY,EAAE,KAAW,EAAE,GAAS,EACpC,QAAkB,EAAE,IAAY,EAChC,UAAkB,EAAE,MAAc;YACjE,UAAU,CAAC,qBAAqB,CAAC,IAAI,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;YAC3D,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;YACjC,KAAK,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,GAAC,IAAI,CAAC,EAAE;gBAC1C,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;aAClC;YACD,UAAU,CAAC,eAAe,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;YAEhD,UAAU,CAAC,eAAe,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;YAC/C,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;YACjC,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,OAAO,CAAC,GAAG,KAAK,CAAC,OAAO,EAAE;gBACxB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;gBACjC,CAAC,IAAI,CAAC,CAAC;aACR;YACD,UAAU,CAAC,cAAc,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YAC5C,OAAO,CAAC,IAAI,GAAG,CAAC,OAAO,EAAE;gBACvB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;gBACjC,CAAC,IAAI,CAAC,CAAC;aACR;YACD,IAAI,GAAG,CAAC,KAAK,KAAK,IAAI,EAAE;gBACtB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACnD;YACD,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SAC3B;QAEc,2BAAgB,GAA/B,UAAgC,KAAY,EAAE,KAAW,EACzB,QAAkB,EAAE,IAAY,EAChC,UAAkB,EAAE,MAAc;YAChE,UAAU,CAAC,qBAAqB,CAAC,IAAI,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;YAC3D,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;YACnE,KAAK,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,GAAC,IAAI,CAAC,EAAE;gBAC1C,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;aAClC;YACD,UAAU,CAAC,eAAe,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;YAEhD,UAAU,CAAC,eAAe,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;YAC/C,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;YAClD,UAAU,CAAC,cAAc,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YAC5C,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;YACjC,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,OAAO,CAAC,GAAG,KAAK,CAAC,OAAO,EAAE;gBACxB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;gBACjC,CAAC,IAAI,CAAC,CAAC;aACR;YACD,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;YACjC,IAAI,KAAK,CAAC,KAAK,KAAK,IAAI,EAAE;gBACxB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aACrD;YACD,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAC1B,MAAM,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;SAC3B;QAEc,yBAAc,GAA7B,UAA8B,KAAY,EAAE,GAAS,EACvB,QAAkB,EAAE,IAAY,EAChC,UAAkB,EAAE,MAAc;YAC9D,UAAU,CAAC,qBAAqB,CAAC,IAAI,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;YAC3D,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;YACjC,UAAU,CAAC,cAAc,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YAC5C,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAQ,CAAC;YAClC,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAC1B,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;YACjC,UAAU,CAAC,eAAe,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;YAEhD,UAAU,CAAC,eAAe,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;YAC/C,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;YACjC,UAAU,CAAC,cAAc,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YAC5C,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;YACnD,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,OAAO,CAAC,GAAG,GAAG,CAAC,OAAO,EAAE;gBACtB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;gBACjC,CAAC,IAAI,CAAC,CAAC;aACR;YACD,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;YACjC,IAAI,GAAG,CAAC,KAAK,KAAK,IAAI,EAAE;gBACtB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACnD;YACD,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SAC3B;QAEc,yBAAc,GAA7B,UAA8B,KAAY,EAAE,QAAkB,EAAE,IAAY,EAC9C,UAAkB,EAAE,MAAc;YAC9D,UAAU,CAAC,qBAAqB,CAAC,IAAI,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;YAC3D,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;YACjC,UAAU,CAAC,cAAc,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YAC5C,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAQ,CAAC;YAClC,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAC1B,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;YACjC,UAAU,CAAC,eAAe,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;SACjD;QAEc,6BAAkB,GAAjC,UAAkC,KAAa,EAAE,OAAsB,EACrC,UAAkB,EAAE,MAAc;YAClE,UAAU,CAAC,sBAAsB,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;YACtD,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;YACjC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACzB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;YAC9C,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAC1B,IAAI,OAAO,IAAI,IAAI,EAAE;gBACnB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;aACjD;SACF;QAEc,0BAAe,GAA9B,UAA+B,UAAkB,EAAE,MAAc;YAC/D,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAC7B,IAAM,OAAO,GAAG,CAAC,GAAG,UAAU,CAAC;YAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE;gBACnC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;aAClC;YACD,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAQ,CAAC;YAClC,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SAC3B;QAEc,iCAAsB,GAArC,UAAsC,UAAkB,EAAE,MAAc;YACtE,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAC7B,IAAM,OAAO,GAAG,CAAC,GAAG,UAAU,CAAC;YAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE;gBACnC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;aAClC;YACD,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;YACjC,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SAC3B;QAEc,+BAAoB,GAAnC,UAAoC,UAAkB,EAAE,MAAc;YACpE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,IAAI,CAAC,EAAE;gBACtC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;aAClC;YACD,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAC7B,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;YACnE,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SAC3B;QAEc,kCAAuB,GAAtC,UAAuC,UAAkB,EAAE,MAAc;YACvE,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,IAAI,CAAC,EAAE;gBACtC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;aAClC;YACD,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAC1B,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;SACnD;QAEc,gCAAqB,GAApC,UAAqC,IAAY,EAAE,UAAkB,EAAE,MAAc;YACnF,IAAM,OAAO,GAAG,UAAU,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YACtD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE;gBACnC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;aAClC;YACD,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAC7B,MAAM,CAAC,aAAa,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YACnC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,GAAG,CAAQ,CAAC;YACnD,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SAC3B;QAEc,0BAAe,GAA9B,UAA+B,KAAY,EAAE,IAAY,EAAE,MAAc;YACvE,OAAO,KAAK,CAAC,MAAM,EAAE,IAAI,KAAK,CAAC,IAAI,EAAE,KAAK,IAAI,EAAE;gBAC9C,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;gBACpC,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;aACtB;YACD,IAAI,KAAK,CAAC,IAAI,EAAE,KAAK,IAAI,EAAE;gBACzB,MAAM,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;aAC3B;SACF;QAEc,0BAAe,GAA9B,UAA+B,KAAY,EAAE,IAAY;YACvD,OAAO,KAAK,CAAC,MAAM,EAAE,IAAI,KAAK,CAAC,IAAI,EAAE,KAAK,IAAI,EAAE;gBAC9C,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;aACtB;SACF;QAEc,yBAAc,GAA7B,UAA8B,QAAkB,EAAE,MAAc;YAC9D,QAAQ,QAAQ,CAAC,KAAK,EAAE;gBACtB,KAAKD,aAAQ,CAAC,WAAW,CAAC;gBAC1B,KAAKA,aAAQ,CAAC,WAAW,CAAC;gBAC1B,KAAKA,aAAQ,CAAC,WAAW;oBACvB,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;oBAC5B,MAAM;gBACR,KAAKA,aAAQ,CAAC,aAAa;oBACzB,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;oBAC/B,MAAM;gBACR,KAAKA,aAAQ,CAAC,UAAU;oBACtB,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;oBAC9B,MAAM;gBACR,KAAKA,aAAQ,CAAC,UAAU;oBACtB,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;oBAC7B,MAAM;gBACR,KAAKA,aAAQ,CAAC,WAAW,CAAC;gBAC1B,KAAKA,aAAQ,CAAC,WAAW,CAAC;gBAC1B;oBACE,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;aACnC;SACF;QACH,iBAAC;IAAD,CAAC;;;QC9kBoC,mCAAK;QAGxC,yBAAY,OAA6B;YAAzC,YACE,kBAAM,OAAO,YAAY,UAAU,GAAG,OAAO,CAAC,OAAO,EAAE,IAAI,KAAK,CAAC,GAAG,OAAO,CAAC,SAK7E;YAJC,IAAI,OAAO,YAAY,UAAU,EAAE;gBACjC,KAAI,CAAC,UAAU,GAAG,OAAO,CAAC;aAC3B;YACA,KAAY,CAAC,SAAS,GAAG,eAAe,CAAC,SAAS,CAAC;;SACrD;QAED,kCAAQ,GAAR;YACE,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;aACnC;iBAAM;gBACL,OAAO,iBAAM,QAAQ,WAAE,CAAC;aACzB;SACF;QACH,sBAAC;IAAD,CAlBA,CAAqC,KAAK;;;QCyE1C;SAiHC;QA5GC,uBAAM,GAAN;YACE,OAAO,IAAI,CAAC;SACb;QAMD,uBAAM,GAAN;YACE,OAAO,KAAK,CAAC;SACd;QAMD,wBAAO,GAAP;YACE,OAAO,KAAK,CAAC;SACd;QAuBD,qBAAI,GAAJ,UAAK,SAAkB;YACrB,OAAO,IAAI,CAAC;SACb;QAQD,qBAAI,GAAJ;YACE,MAAM,IAAI,KAAK,EAAE,CAAC;SACnB;QAQD,qBAAI,GAAJ;YACE,MAAM,IAAI,KAAK,EAAE,CAAC;SACnB;QAQD,wBAAO,GAAP;YACE,MAAM,IAAI,KAAK,EAAE,CAAC;SACnB;QAcM,WAAI,GAAX,UAAe,MAAU;YACvB,IAAI,MAAM,KAAK,KAAK,CAAC,EAAE;gBACrB,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;oBACjB,MAAM,CAAC,KAAK,GAAG,IAAI,UAAU,CAAM,KAAK,CAAC,CAAC,CAAC;iBAC5C;gBACD,OAAO,MAAM,CAAC,KAAK,CAAC;aACrB;iBAAM;gBACL,OAAO,IAAI,UAAU,CAAI,MAAM,CAAC,CAAC;aAClC;SACF;QAKM,YAAK,GAAZ,UAAgB,KAAyB;YACvC,IAAI,KAAK,YAAY,KAAK,EAAE;gBAC1B,OAAO,IAAI,WAAW,CAAI,KAAK,CAAC,CAAC;aAClC;iBAAM;gBACL,OAAO,IAAI,WAAW,CAAI,IAAI,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;aACvD;SACF;QACH,aAAC;IAAD,CAAC,IAAA;IAGD;QAA4B,8BAAS;QAInC,oBAAY,MAAS;YAArB,YACE,iBAAO,SAER;YADC,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;;SACvB;QAED,2BAAM,GAAN;YACE,OAAO,KAAK,CAAC;SACd;QAED,2BAAM,GAAN;YACE,OAAO,IAAI,CAAC;SACb;QAED,yBAAI,GAAJ,UAAK,KAAY;YACf,OAAO,IAAI,CAAC;SACb;QAED,yBAAI,GAAJ;YACE,OAAO,IAAI,CAAC,OAAO,CAAC;SACrB;QACH,iBAAC;IAAD,CAxBA,CAA4B,MAAM,GAwBjC;IAGD;QAA6B,+BAAS;QAIpC,qBAAY,KAAY;YAAxB,YACE,iBAAO,SAER;YADC,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;;SACrB;QAED,4BAAM,GAAN;YACE,OAAO,KAAK,CAAC;SACd;QAED,6BAAO,GAAP;YACE,OAAO,IAAI,CAAC;SACb;QAED,0BAAI,GAAJ,UAAK,KAAY;YACf,OAAO,IAAI,CAAC;SACb;QAED,0BAAI,GAAJ;YACE,MAAM,IAAI,CAAC,MAAM,CAAC;SACnB;QAED,0BAAI,GAAJ;YACE,OAAO,IAAI,CAAC,MAAM,CAAC;SACpB;QAED,6BAAO,GAAP;YACE,OAAO,IAAW,CAAC;SACpB;QACH,kBAAC;IAAD,CAhCA,CAA6B,MAAM,GAgClC;;;QCrPD;SAyHC;QApHC,8BAAO,GAAP;YACE,OAAO,KAAK,CAAC;SACd;QAMD,oCAAa,GAAb;YACE,OAAO,KAAK,CAAC;SACd;QAMD,sCAAe,GAAf;YACE,OAAO,MAAM,CAAC;SACf;QAoBD,+BAAQ,GAAR;YACE,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SAC3B;QAWM,kBAAK,GAAZ;YACE,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;gBACxB,YAAY,CAAC,MAAM,GAAG,IAAI,iBAAiB,CAAC,KAAK,CAAC,CAAC;aACpD;YACD,OAAO,YAAY,CAAC,MAAM,CAAC;SAC5B;QAMM,yBAAY,GAAnB;YACE,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE;gBAC/B,YAAY,CAAC,aAAa,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,CAAC;aAC1D;YACD,OAAO,YAAY,CAAC,aAAa,CAAC;SACnC;QAcM,wBAAW,GAAlB,UAAmB,eAAwB;YACzC,IAAI,eAAe,KAAK,KAAK,CAAC,IAAI,eAAe,KAAK,MAAM,EAAE;gBAC5D,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE;oBAC9B,YAAY,CAAC,YAAY,GAAG,IAAI,uBAAuB,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;iBACxE;gBACD,OAAO,YAAY,CAAC,YAAY,CAAC;aAClC;iBAAM;gBACL,OAAO,IAAI,uBAAuB,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;aAC5D;SACF;QAgBM,+BAAkB,GAAzB,UAA0B,eAAwB;YAChD,IAAI,eAAe,KAAK,KAAK,CAAC,IAAI,eAAe,KAAK,MAAM,EAAE;gBAC5D,IAAI,CAAC,YAAY,CAAC,mBAAmB,EAAE;oBACrC,YAAY,CAAC,mBAAmB,GAAG,IAAI,uBAAuB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;iBAC9E;gBACD,OAAO,YAAY,CAAC,mBAAmB,CAAC;aACzC;iBAAM;gBACL,OAAO,IAAI,uBAAuB,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;aAC3D;SACF;QACH,mBAAC;IAAD,CAAC,IAAA;IAGD;QAAgC,qCAAY;QAI1C,2BAAY,SAAkB;YAA9B,YACE,iBAAO,SAER;YADC,KAAI,CAAC,UAAU,GAAG,SAAS,CAAC;;SAC7B;QAED,mCAAO,GAAP;YACE,OAAO,IAAI,CAAC;SACb;QAID,qCAAS,GAAT,UAAU,SAAmB;YAC3B,IAAI,SAAS,KAAK,KAAK,CAAC,EAAE;gBACxB,OAAO,IAAI,CAAC,UAAU,CAAC;aACxB;iBAAM,IAAI,SAAS,EAAE;gBACpB,OAAO,YAAY,CAAC,YAAY,EAAE,CAAC;aACpC;iBAAM;gBACL,OAAO,YAAY,CAAC,KAAK,EAAE,CAAC;aAC7B;SACF;QAED,kCAAM,GAAN,UAAO,IAAa;YAClB,IAAI,IAAI,KAAK,IAAI,EAAE;gBACjB,OAAO,IAAI,CAAC;aACb;iBAAM,IAAI,IAAI,YAAY,iBAAiB,EAAE;gBAC5C,OAAO,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,UAAU,CAAC;aAC5C;YACD,OAAO,KAAK,CAAC;SACd;QAED,oCAAQ,GAAR;YACE,IAAI,iBAAiB,CAAC,SAAS,KAAK,KAAK,CAAC,EAAE;gBAC1C,iBAAiB,CAAC,SAAS,GAAGD,YAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;aAC/D;YACD,OAAOA,YAAO,CAAC,IAAI,CAACA,YAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,SAAS,EACvDA,YAAO,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SACrC;QAED,iCAAK,GAAL,UAAM,MAAc;YAClB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,EAAE,CAAQ;iBACjD,KAAK,CAAC,IAAI,CAAC,SAAS,GAAG,cAAc,GAAG,OAAO,CAAC;iBAChD,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;SACxC;QAGH,wBAAC;IAAD,CAjDA,CAAgC,YAAY,GAiD3C;IAGD;QAAsC,2CAAY;QAKhD,iCAAY,eAAuB,EAAE,SAAkB;YAAvD,YACE,iBAAO,SAGR;YAFC,KAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;YACxC,KAAI,CAAC,UAAU,GAAG,SAAS,CAAC;;SAC7B;QAED,+CAAa,GAAb;YACE,OAAO,IAAI,CAAC;SACb;QAED,iDAAe,GAAf;YACE,OAAO,IAAI,CAAC,gBAAgB,CAAC;SAC9B;QAID,2CAAS,GAAT,UAAU,SAAmB;YAC3B,IAAI,SAAS,KAAK,KAAK,CAAC,EAAE;gBACxB,OAAO,IAAI,CAAC,UAAU,CAAC;aACxB;iBAAM,IAAI,IAAI,CAAC,gBAAgB,KAAK,MAAM,EAAE;gBAC3C,IAAI,SAAS,EAAE;oBACb,OAAO,YAAY,CAAC,kBAAkB,EAAE,CAAC;iBAC1C;qBAAM;oBACL,OAAO,YAAY,CAAC,WAAW,EAAE,CAAC;iBACnC;aACF;iBAAM;gBACL,OAAO,IAAI,uBAAuB,CAAC,IAAI,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAAC;aACtE;SACF;QAED,wCAAM,GAAN,UAAO,IAAa;YAClB,IAAI,IAAI,KAAK,IAAI,EAAE;gBACjB,OAAO,IAAI,CAAC;aACb;iBAAM,IAAI,IAAI,YAAY,uBAAuB,EAAE;gBAClD,OAAO,IAAI,CAAC,eAAe,KAAK,IAAI,CAAC,eAAe;uBAC7C,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,SAAS,CAAC;aAC1C;YACD,OAAO,KAAK,CAAC;SACd;QAED,0CAAQ,GAAR;YACE,IAAI,uBAAuB,CAAC,SAAS,KAAK,KAAK,CAAC,EAAE;gBAChD,uBAAuB,CAAC,SAAS,GAAGA,YAAO,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;aAC3E;YACD,OAAOA,YAAO,CAAC,IAAI,CAACA,YAAO,CAAC,GAAG,CAACA,YAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,SAAS,EACzE,IAAI,CAAC,gBAAgB,CAAC,EAAEA,YAAO,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SAC7D;QAED,uCAAK,GAAL,UAAM,MAAc;YAClB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,EAAE,CAAQ;iBACjD,KAAK,CAAC,IAAI,CAAC,UAAU,GAAG,oBAAoB,GAAG,aAAa,CAAC;iBAC7D,KAAK,CAAC,EAAE,CAAQ,CAAC;YACtB,IAAI,IAAI,CAAC,gBAAgB,KAAK,MAAM,EAAE;gBACpC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;aACjD;YACD,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;SAClC;QAGH,8BAAC;IAAD,CAhEA,CAAsC,YAAY,GAgEjD;;ICnPD;QAAsC,oCAAwB;QAY5D,0BAAY,KAAiB,EAAE,KAAa,EAAE,KAAa,EAC/C,QAAoD,EAAE,MAAuB;YAA7E,yBAAA,EAAA,WAA2B,cAAc,CAAC,QAAQ,EAAE;YAAE,uBAAA,EAAA,cAAuB;YADzF,YAEE,iBAAO,SAMR;YALC,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;;SACvB;QAED,iCAAM,GAAN;YACE,OAAO,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SAClC;QAED,iCAAM,GAAN;YACE,OAAO,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC;SACnD;QAED,iCAAM,GAAN;YACE,OAAO,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC;SACpD;QAED,kCAAO,GAAP;YACE,OAAO,KAAK,CAAC;SACd;QAID,iCAAM,GAAN,UAAO,MAAgB;YACrB,IAAI,MAAM,KAAK,KAAK,CAAC,EAAE;gBACrB,OAAO,IAAI,CAAC,OAAO,CAAC;aACrB;iBAAM;gBACL,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;gBACtB,OAAO,IAAI,CAAC;aACb;SACF;QAID,gCAAK,GAAL,UAAM,KAAc;YAClB,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE;gBACpB,OAAO,IAAI,CAAC,MAAM,CAAC;aACpB;iBAAM,IAAI,CAAC,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,MAAM,EAAE;gBAC7C,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,OAAO,YAAY,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,eAAe,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACjF;SACF;QAID,gCAAK,GAAL,UAAM,KAAc;YAClB,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE;gBACpB,OAAO,IAAI,CAAC,MAAM,CAAC;aACpB;iBAAM,IAAI,CAAC,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;gBACpD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,OAAO,YAAY,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,eAAe,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACjF;SACF;QAED,mCAAQ,GAAR;YACE,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;SAC3B;QAED,oCAAS,GAAT;YACE,OAAO,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SAClC;QAED,8BAAG,GAAH,UAAI,KAAa;YACf,OAAO,CAAC,IAAI,KAAK,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;SAC1C;QAED,8BAAG,GAAH,UAAI,KAAa;YACf,IAAI,CAAC,IAAI,KAAK,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE;gBACrC,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;aAC3B;iBAAM;gBACL,MAAM,IAAI,eAAe,EAAE,CAAC;aAC7B;SACF;QAED,8BAAG,GAAH,UAAI,KAAa,EAAE,KAAa;YAC9B,IAAI,CAAC,IAAI,KAAK,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE;gBACrC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;aAC5B;iBAAM;gBACL,MAAM,IAAI,eAAe,EAAE,CAAC;aAC7B;SACF;QAED,gCAAK,GAAL,UAAM,KAAsB;YAC1B,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;gBAC7B,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC1B,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE;oBACvB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;oBAC3B,IAAI,CAAC,MAAM,GAAG,KAAK,GAAG,CAAC,CAAC;oBACxB,OAAO,IAAI,CAAC;iBACb;qBAAM;oBACL,OAAO,YAAY,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;iBACxE;aACF;iBAAM;gBACL,OAAO,YAAY,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,eAAe,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACjF;SACF;QAED,kCAAO,GAAP,UAAQ,MAAe;YACrB,OAAO,YAAY,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,eAAe,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SACjF;QAED,+BAAI,GAAJ,UAAK,MAAc;YACjB,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACnC,IAAI,CAAC,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,MAAM,EAAE;gBACtC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,OAAO,YAAY,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,cAAc,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aAChF;SACF;QAED,+BAAI,GAAJ;YACE,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;SAC3D;QAID,mCAAQ,GAAR,UAAS,QAA4B;YACnC,IAAI,QAAQ,KAAK,KAAK,CAAC,EAAE;gBACvB,OAAO,IAAI,CAAC,SAAS,CAAC;aACvB;iBAAM;gBACL,IAAI,CAAC,SAAS,GAAG,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;gBAClD,OAAO,IAAI,CAAC;aACb;SACF;QAED,gCAAK,GAAL;YACE,OAAO,IAAI,gBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;SAClG;QACH,uBAAC;IAAD,CAtJA,CAAsC,YAAY,GAsJjD;;ICvJD;QAA4C,8BAAS;QAQnD,oBAAY,KAAwB,EAAE,IAAY,EAAE,QAAwB;YAA5E,YACE,iBAAO,SAIR;YAHC,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;;SAC3B;QAED,2BAAM,GAAN;YACE,OAAO,IAAI,CAAC;SACb;QAED,2BAAM,GAAN;YACE,OAAO,KAAK,CAAC;SACd;QAED,2BAAM,GAAN;YACE,OAAO,KAAK,CAAC;SACd;QAED,4BAAO,GAAP;YACE,OAAO,KAAK,CAAC;SACd;QAID,2BAAM,GAAN,UAAO,MAAgB;YACrB,IAAI,MAAM,KAAK,KAAK,CAAC,EAAE;gBACrB,OAAO,KAAK,CAAC;aACd;iBAAM;gBACL,OAAO,IAAI,CAAC;aACb;SACF;QAED,0BAAK,GAAL,UAAM,CAAkB;YACtB,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;gBACzB,IAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;gBACrB,IAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC7B,IAAI,QAAQ,SAAA,CAAC;gBACb,IAAI,QAAQ,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE;oBAChD,QAAQ,GAAG,IAAI,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACpD,IAAI,QAAQ,KAAK,IAAI,EAAE;wBACrB,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;qBAC3B;oBACD,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;iBACxB;qBAAM;oBACL,QAAQ,GAAG,QAAQ,CAAC;iBACrB;gBACD,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBAChB,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;gBACnB,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,MAAM,IAAI,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;aAC7B;SACF;QAED,4BAAO,GAAP,UAAQ,MAAe;YACrB,MAAM,IAAI,SAAS,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC;SAClC;QAED,iCAAY,GAAZ;YACE,IAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;YACrB,IAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC;YAC7B,IAAI,QAAQ,KAAK,IAAI,IAAI,CAAC,KAAK,QAAQ,CAAC,MAAM,EAAE;gBAC9C,OAAO,QAAQ,CAAC;aACjB;iBAAM;gBACL,IAAM,QAAQ,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;gBACnC,IAAI,QAAQ,KAAK,IAAI,EAAE;oBACrB,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBACvC;gBACD,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACvB,OAAO,QAAQ,CAAC;aACjB;SACF;QAED,+BAAU,GAAV;YACE,IAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC;YAC7B,IAAI,QAAQ,KAAK,IAAI,EAAE;gBACrB,OAAO,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aACtC;iBAAM;gBACL,OAAO,IAAI,CAAC;aACb;SACF;QAID,6BAAQ,GAAR,UAAS,QAA4B;YACnC,IAAI,QAAQ,KAAK,KAAK,CAAC,EAAE;gBACvB,OAAO,IAAI,CAAC,SAAS,CAAC;aACvB;iBAAM;gBACL,IAAI,CAAC,SAAS,GAAG,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;gBAClD,OAAO,IAAI,CAAC;aACb;SACF;QAEM,iBAAM,GAAb,UAAc,CAAS;YACrB,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;YACxB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YACjE,OAAO,CAAC,GAAG,CAAC,CAAC;SACd;QACH,iBAAC;IAAD,CA3GA,CAA4C,MAAM,GA2GjD;;IC1GD;QAA0C,wCAAsB;QAC9D,8BAAY,KAAwB,EAAE,IAAY,EAAE,QAAwB;mBAC1E,kBAAM,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC;SAC7B;QAED,mCAAI,GAAJ;YACE,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC;SAC5B;QAED,oCAAK,GAAL;YACE,OAAO,IAAI,oBAAoB,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SAChF;QACH,2BAAC;IAAD,CAZA,CAA0C,UAAU,GAYnD;;;QCHC;SAEC;QAEM,mBAAY,GAAnB,UAAoB,KAAiB,EAAE,MAAkB,EAAE,MAA6B;YAAjD,uBAAA,EAAA,UAAkB;YAAE,uBAAA,EAAA,SAAiB,KAAK,CAAC,MAAM;YACtF,OAAO,IAAI,gBAAgB,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,CAAC,CAAC;SAC7D;QAkBM,uBAAgB,GAAvB,UAAwB,eAA4C,EAC5C,QAA4B;YAClD,IAAI,QAAQ,KAAK,KAAK,CAAC,IAAI,OAAO,eAAe,KAAK,QAAQ,EAAE;gBAC9D,QAAQ,GAAG,eAAe,CAAC;gBAC3B,eAAe,GAAG,KAAK,CAAC,CAAC;aAC1B;iBAAM,IAAI,OAAO,eAAe,KAAK,QAAQ,EAAE;gBAC9C,eAAe,GAAG,KAAK,CAAC,CAAC;aAC1B;YACD,IAAI,KAAwB,CAAC;YAC7B,IAAI,OAAO,eAAe,KAAK,QAAQ,EAAE;gBACvC,KAAK,GAAG,IAAI,UAAU,CAAC,eAAe,CAAC,CAAC;aACzC;iBAAM;gBACL,KAAK,GAAG,IAAI,CAAC;aACd;YACD,QAAQ,GAAG,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YAC5C,OAAO,IAAI,oBAAoB,CAAC,KAAK,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;SACrD;QACH,aAAC;IAAD,CAAC;;;QCrCC,gBAAY,QAAgB;YAC1B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;SAC3B;QAMD,yBAAQ,GAAR;YACE,OAAO,IAAI,CAAC,SAAS,CAAC;SACvB;QAMD,4BAAW,GAAX,UAAY,CAAS;YACnB,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SACrC;QAaD,iCAAgB,GAAhB,UAAiB,KAAkB;YACjC,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE;gBACpB,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC;aAChD;iBAAM;gBACL,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;aAC9C;SACF;QAOD,gCAAe,GAAf,UAAgB,KAAiB,EAAE,MAAc;YAC/C,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;SACzD;QAED,6BAAY,GAAZ,UAAa,KAAa,EAAE,MAAc,EAAE,KAAiB;YAAjB,sBAAA,EAAA,SAAiB;YAC3D,OAAO,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;SACvE;QAED,oCAAmB,GAAnB,UAAoB,KAAa,EAAE,MAAc,EAAE,KAAiB;YAAjB,sBAAA,EAAA,SAAiB;YAClE,OAAO,MAAM,CAAC,aAAa,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;SAC9E;QAQa,gBAAS,GAAvB;YACE,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;gBACtB,MAAM,CAAC,UAAU,GAAG,IAAI,MAAM,CAAC,kBAAkB,CAAC,CAAC;aACpD;YACD,OAAO,MAAM,CAAC,UAAU,CAAC;SAC1B;QAKa,gBAAS,GAAvB;YACE,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;gBACtB,MAAM,CAAC,UAAU,GAAG,IAAI,MAAM,CAAC,kBAAkB,CAAC,CAAC;aACpD;YACD,OAAO,MAAM,CAAC,UAAU,CAAC;SAC1B;QAKM,cAAO,GAAd,UAAe,CAAS;YACtB,OAAO,CAAC,IAAI,EAAE,IAAW,CAAC,IAAI,EAAE;mBACzB,CAAC,IAAI,EAAE,IAAW,CAAC,IAAI,EAAE;mBACzB,CAAC,IAAI,EAAE,IAAW,CAAC,IAAI,GAAG,CAAQ;SAC1C;QAOM,kBAAW,GAAlB,UAAmB,CAAS;YAC1B,IAAI,CAAC,IAAI,EAAE,IAAW,CAAC,IAAI,EAAE,EAAS;gBACpC,OAAO,CAAC,GAAG,EAAE,CAAQ;aACtB;iBAAM,IAAI,CAAC,IAAI,EAAE,IAAW,CAAC,IAAI,EAAE,EAAS;gBAC3C,OAAO,EAAE,IAAI,CAAC,GAAG,EAAE,CAAQ,CAAC;aAC7B;iBAAM,IAAI,CAAC,IAAI,EAAE,IAAW,CAAC,IAAI,GAAG,EAAS;gBAC5C,OAAO,EAAE,IAAI,CAAC,GAAG,EAAE,CAAQ,CAAC;aAC7B;iBAAM;gBACL,IAAM,OAAO,GAAG,OAAO,CAAC,YAAY,EAAE,CAAC;gBACvC,OAAO,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;gBACzC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;gBAC7B,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;aACjC;SACF;QAMM,mBAAY,GAAnB,UAAoB,EAAU,EAAE,EAAU,EAAE,MAAc;YACxD,IAAM,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YACjC,IAAM,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YACjC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;SACnC;QAMM,aAAM,GAAb,UAAiB,MAAiB;YAChC,OAAO,IAAI,MAAM,CAAC,MAAM,CAAI,MAAM,CAAC,CAAC;SACrC;QAOM,YAAK,GAAZ,UAAgB,KAAY,EAAE,MAAiB;YAC7C,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;SAC3C;QAQM,sBAAe,GAAtB,UAAuB,KAAY;YACjC,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,MAAM,CAAC,gBAAgB,EAAE,CAAC,CAAC;SAC9D;QASH,aAAC;IAAD,CAAC;;IClKD;QAA0C,qCAAS;QAcjD,2BAAY,MAAiB,EAAE,SAAuB,EAC1C,EAAe,EAAE,EAAe,EAAE,EAAe,EAAE,IAAgB;YAAnE,mBAAA,EAAA,MAAc,CAAC;YAAE,mBAAA,EAAA,MAAc,CAAC;YAAE,mBAAA,EAAA,MAAc,CAAC;YAAE,qBAAA,EAAA,QAAgB;YAD/E,YAEE,iBAAO,SAOR;YANC,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,KAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAC5B,KAAI,CAAC,GAAG,GAAG,EAAE,CAAC;YACd,KAAI,CAAC,GAAG,GAAG,EAAE,CAAC;YACd,KAAI,CAAC,GAAG,GAAG,EAAE,CAAC;YACd,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;;SACnB;QAED,kCAAM,GAAN;YACE,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;SAC9B;QAED,kCAAM,GAAN;YACE,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;SAC9B;QAED,kCAAM,GAAN;YACE,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;SAC9B;QAED,mCAAO,GAAP;YACE,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;SAC/B;QAID,kCAAM,GAAN,UAAO,MAAgB;YACrB,IAAI,MAAM,KAAK,KAAK,CAAC,EAAE;gBACrB,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;aAC9B;iBAAM;gBACL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBAC3C,OAAO,IAAI,CAAC;aACb;SACF;QAED,iCAAK,GAAL,UAAM,KAAsB;YAC1B,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;gBAC7B,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;gBAClB,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;gBAClB,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;gBAClB,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;gBACZ,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;gBAEtB,IAAI,KAAK,IAAI,CAAC,EAAE;oBACd,QAAQ,IAAI;wBACV,KAAK,CAAC;4BACJ,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC;4BAClB,IAAI,GAAG,CAAC,CAAC;4BACT,MAAM;wBACR,KAAK,CAAC;4BACJ,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC;4BAClB,IAAI,GAAG,CAAC,CAAC;4BACT,MAAM;wBACR,KAAK,CAAC;4BACJ,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC;4BAClB,IAAI,GAAG,CAAC,CAAC;4BACT,MAAM;wBACR,KAAK,CAAC;4BACJ,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC;4BAClB,IAAI,GAAG,CAAC,CAAC;4BACT,MAAM;wBACR;4BACE,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC;qBAClC;iBACF;gBAED,IAAI,EAAE,KAAK,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,EAAE;oBAC3C,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,qBAAqB,CAAC,CAAC,CAAC;iBACjE;qBAAM,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,IAAI,EAAE;oBAChC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;oBACtC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;iBAChB;qBAAM,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE;oBACnC,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE;wBACxD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,IAAI,KAAK,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;wBAChE,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;wBACd,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;qBAChB;yBAAM,IAAI,EAAE,KAAK,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI;2BACvC,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI;2BACpD,EAAE,KAAK,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI;2BACvC,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE;wBAC/D,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE;4BAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,IAAI,KAAK,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,KAAK,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;4BACpF,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;4BACd,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;4BACd,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;yBAChB;6BAAM,IAAI,EAAE,IAAI,CAAC,EAAE;4BAClB,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE;gCAC7B,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;6BACjF;4BACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,EAAE,CAAC,CAAC;4BACrE,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;4BACd,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;4BACd,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;yBAChB;6BAAM,IAAI,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE;4BAC7C,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;yBAC7E;6BAAM;4BACL,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;4BACd,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;yBAChB;qBACF;yBAAM,IAAI,EAAE,KAAK,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI;2BACvC,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI;2BACpD,EAAE,KAAK,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE;wBAClD,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE;4BAC5B,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE;gCAC5B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gCACf,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,IAAI,KAAK,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,KAAK,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,KAAK,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;gCACxG,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;gCACd,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;gCACd,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;gCACd,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;6BAChB;iCAAM,IAAI,EAAE,IAAI,CAAC,EAAE;gCAClB,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE;oCAC7B,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;iCACrF;gCACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,EAAE,CAAC,CAAC;gCACrE,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;gCACd,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;gCACd,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;gCACd,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;6BAChB;iCAAM,IAAI,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE;gCAC7C,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;6BACjF;iCAAM;gCACL,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;gCACd,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;6BAChB;yBACF;6BAAM,IAAI,EAAE,IAAI,CAAC,EAAE;4BAClB,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE;gCAC7B,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;6BACjF;4BACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,EAAE,CAAC,CAAC;4BACrE,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;4BACd,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;4BACd,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;yBAChB;6BAAM,IAAI,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE;4BAC7C,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;yBAC7E;6BAAM;4BACL,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;4BACd,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;yBAChB;qBACF;yBAAM,IAAI,EAAE,IAAI,CAAC,EAAE;wBAClB,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE;4BAC7B,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;yBAC7E;wBACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,EAAE,CAAC,CAAC;wBACrE,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;wBACd,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;qBAChB;yBAAM,IAAI,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE;wBAC7C,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;qBACzE;yBAAM;wBACL,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;wBACd,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;qBAChB;iBACF;qBAAM,IAAI,EAAE,IAAI,CAAC,EAAE;oBAClB,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE;wBAC7B,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;qBACzE;oBACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,EAAE,CAAC,CAAC;oBACrE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;iBAChB;gBACD,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE;oBAC1B,OAAO,IAAI,CAAC,OAAO,CAAC;iBACrB;gBACD,OAAO,IAAI,CAAC;aACb;iBAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;gBACpC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBAC1B,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,MAAM,IAAI,SAAS,CAAC,EAAE,GAAG,KAAK,CAAC,CAAC;aACjC;SACF;QAEM,yBAAO,GAAd,UAAe,EAAU,EAAE,EAAW,EAAE,EAAW,EAAE,EAAW;YAC9D,IAAI,MAAM,GAAG,OAAO,CAAC,YAAY,EAAE,CAAC;YACpC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,oCAAoC,CAAC,CAAC;YAC5D,MAAM,CAAC,SAAS,EAAE,CAAC,mBAAmB,CAAC,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;YACtD,IAAI,EAAE,KAAK,KAAK,CAAC,EAAE;gBACjB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC3B,MAAM,CAAC,SAAS,EAAE,CAAC,mBAAmB,CAAC,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;gBACtD,IAAI,EAAE,KAAK,KAAK,CAAC,EAAE;oBACjB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBAC3B,MAAM,CAAC,SAAS,EAAE,CAAC,mBAAmB,CAAC,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;oBACtD,IAAI,EAAE,KAAK,KAAK,CAAC,EAAE;wBACjB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBAC3B,MAAM,CAAC,SAAS,EAAE,CAAC,mBAAmB,CAAC,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;qBACvD;iBACF;aACF;YACD,OAAO,MAAM,CAAC,IAAI,EAAE,CAAC;SACtB;QAID,oCAAQ,GAAR,UAAS,QAA4B;YACnC,IAAI,QAAQ,KAAK,KAAK,CAAC,EAAE;gBACvB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;aAChC;iBAAM;gBACL,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBAChC,OAAO,IAAI,CAAC;aACb;SACF;QAED,gCAAI,GAAJ;YACE,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;gBACpB,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;aAC5B;iBAAM;gBACL,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;aAC9B;SACF;QAED,gCAAI,GAAJ;YACE,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;SAC5B;QAED,iCAAK,GAAL;YACE,OAAO,IAAI,iBAAiB,CAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,UAAU,EACrC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SAC3E;QACH,wBAAC;IAAD,CA1OA,CAA0C,MAAM,GA0O/C;;IC5OD;QAA0C,qCAAS;QAcjD,2BAAY,MAAiB,EAAE,SAAuB,EAAE,EAAc,EAC1D,EAAc,EAAE,EAAc,EAAE,KAAiB;YADL,mBAAA,EAAA,MAAc;YAC1D,mBAAA,EAAA,MAAc;YAAE,mBAAA,EAAA,MAAc;YAAE,sBAAA,EAAA,SAAiB;YAD7D,YAEE,iBAAO,SAOR;YANC,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,KAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAC5B,KAAI,CAAC,GAAG,GAAG,EAAE,CAAC;YACd,KAAI,CAAC,GAAG,GAAG,EAAE,CAAC;YACd,KAAI,CAAC,GAAG,GAAG,EAAE,CAAC;YACd,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;;SACrB;QAED,kCAAM,GAAN;YACE,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;SAC9B;QAED,kCAAM,GAAN;YACE,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;SAC9B;QAED,kCAAM,GAAN;YACE,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;SAC9B;QAED,mCAAO,GAAP;YACE,OAAO,KAAK,CAAC;SACd;QAID,kCAAM,GAAN,UAAO,MAAgB;YACrB,IAAI,MAAM,KAAK,KAAK,CAAC,EAAE;gBACrB,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;aAC9B;iBAAM;gBACL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBAC3C,OAAO,IAAI,CAAC;aACb;SACF;QAED,iCAAK,GAAL,UAAM,KAAsB;YAC1B,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;gBAC7B,IAAI,EAAE,GAAG,CAAC,CAAC;gBACX,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;gBAClB,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;gBAClB,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;gBAClB,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;gBACxB,OAAO,KAAK,GAAG,CAAC,EAAE;oBAChB,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE;wBACzB,QAAQ,KAAK;4BACX,KAAK,CAAC;gCAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;gCAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;gCAAC,MAAM;4BACnE,KAAK,CAAC;gCAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;gCAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;gCAAC,MAAM;4BACnE,KAAK,CAAC;gCAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;gCAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;gCAAC,MAAM;4BACnE,SAAS,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC;yBACzC;wBACD,KAAK,IAAI,CAAC,CAAC;qBACZ;yBAAM;wBACL,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,qCAAqC,CAAC,CAAC,CAAC;qBACjF;iBACF;gBACD,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,IAAI,EAAE;oBAC/B,EAAE,GAAG,KAAK,CAAC;oBACX,KAAK,GAAG,CAAC,CAAC;iBACX;qBAAM,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,EAAE;oBAC1C,EAAE,GAAG,IAAI,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC;oBAC1B,EAAE,GAAG,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC;oBAC3B,KAAK,GAAG,CAAC,CAAC;iBACX;qBAAM,IAAI,KAAK,IAAI,MAAM,IAAI,KAAK,IAAI,MAAM;oBAClC,KAAK,IAAI,MAAM,IAAI,KAAK,IAAI,MAAM,EAAE;oBAC7C,EAAE,GAAG,IAAI,IAAI,KAAK,KAAM,EAAE,CAAC,CAAC;oBAC5B,EAAE,GAAG,IAAI,IAAI,CAAC,KAAK,KAAM,CAAC,IAAI,IAAI,CAAC,CAAC;oBACpC,EAAE,GAAG,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC;oBAC3B,KAAK,GAAG,CAAC,CAAC;iBACX;qBAAM,IAAI,KAAK,IAAI,OAAO,IAAI,KAAK,IAAI,QAAQ,EAAE;oBAChD,EAAE,GAAG,IAAI,IAAI,KAAK,KAAM,EAAE,CAAC,CAAC;oBAC5B,EAAE,GAAG,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,CAAC;oBACpC,EAAE,GAAG,IAAI,IAAI,CAAC,KAAK,KAAM,CAAC,IAAI,IAAI,CAAC,CAAC;oBACpC,EAAE,GAAG,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC;oBAC3B,KAAK,GAAG,CAAC,CAAC;iBACX;qBAAM;oBACL,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE;wBAC7B,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,sBAAsB,GAAG,KAAK,CAAC,CAAC,CAAC;qBAC1E;yBAAM;wBACL,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,EAAE,CAAC,CAAC;qBACtD;iBACF;gBACD,GAAG;oBACD,QAAQ,KAAK;wBACX,KAAK,CAAC;4BAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;4BAAC,MAAM;wBACrD,KAAK,CAAC;4BAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;4BAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;4BAAC,MAAM;wBACnE,KAAK,CAAC;4BAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;4BAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;4BAAC,MAAM;wBACnE,KAAK,CAAC;4BAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;4BAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;4BAAC,MAAM;wBACnE,SAAS,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC;qBACzC;oBACD,KAAK,IAAI,CAAC,CAAC;iBACZ,QAAQ,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE;gBAC7C,IAAI,KAAK,GAAG,CAAC,EAAE;oBACb,IAAI,KAAK,GAAG,CAAC,EAAE;wBACb,IAAI,KAAK,GAAG,CAAC,EAAE;4BACb,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;yBACf;wBACD,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;qBACf;oBACD,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;iBACf;gBACD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;iBAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;gBACpC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBAC1B,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,MAAM,IAAI,SAAS,CAAC,EAAE,GAAG,KAAK,CAAC,CAAC;aACjC;SACF;QAED,iCAAK,GAAL;YACE,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;YACxB,OAAO,KAAK,GAAG,CAAC,EAAE;gBAChB,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE;oBACzB,QAAQ,KAAK;wBACX,KAAK,CAAC;4BAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;4BAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;4BAAC,MAAM;wBACzE,KAAK,CAAC;4BAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;4BAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;4BAAC,MAAM;wBACzE,KAAK,CAAC;4BAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;4BAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;4BAAC,MAAM;wBACzE,SAAS,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC;qBACzC;oBACD,KAAK,IAAI,CAAC,CAAC;iBACZ;qBAAM;oBACL,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,qCAAqC,CAAC,CAAC,CAAC;iBACjF;aACF;YACD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,OAAO,IAAI,CAAC;SACb;QAID,oCAAQ,GAAR,UAAS,QAA4B;YACnC,IAAI,QAAQ,KAAK,KAAK,CAAC,EAAE;gBACvB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;aAChC;iBAAM;gBACL,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBAChC,OAAO,IAAI,CAAC;aACb;SACF;QAED,gCAAI,GAAJ;YACE,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;SAC5B;QAED,iCAAK,GAAL;YACE,OAAO,IAAI,iBAAiB,CAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,UAAU,EACrC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;SAC5E;QACH,wBAAC;IAAD,CArKA,CAA0C,MAAM,GAqK/C;;;QCjKC;SAEC;QA8BM,WAAM,GAAb,UAAc,CAA8B,EAAE,SAAwB;YACpE,IAAI,OAAO,CAAC,KAAK,QAAQ,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;gBACzC,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;oBACzB,IAAI,CAAC,KAAK,MAAM,IAAI,SAAS,KAAK,KAAK,CAAC,IAAI,SAAS,CAAC,SAAS,EAAE,EAAE;wBACjE,OAAO,CAAC,CAAC;qBACV;yBAAM,IAAI,CAAC,IAAI,MAAM,IAAI,CAAC,IAAI,MAAM,EAAE;wBACrC,OAAO,CAAC,CAAC;qBACV;yBAAM,IAAI,CAAC,IAAI,MAAM,IAAI,CAAC,IAAI,MAAM,EAAE;wBACrC,OAAO,CAAC,CAAC;qBACV;yBAAM,IAAI,CAAC,IAAI,MAAM,IAAI,CAAC,IAAI,MAAM;wBAC1B,CAAC,IAAI,MAAM,IAAI,CAAC,IAAI,MAAM,EAAE;wBACrC,OAAO,CAAC,CAAC;qBACV;yBAAM,IAAI,CAAC,IAAI,OAAO,IAAI,CAAC,IAAI,QAAQ,EAAE;wBACxC,OAAO,CAAC,CAAC;qBACV;iBACF;gBAED,IAAI,SAAS,KAAK,KAAK,CAAC,EAAE;oBACxB,OAAO,CAAC,CAAC;iBACV;qBAAM,IAAI,SAAS,CAAC,aAAa,EAAE,EAAE;oBACpC,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;iBACjD;qBAAM;oBACL,OAAO,CAAC,CAAC;iBACV;aACF;iBAAM,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;gBAChC,IAAI,IAAI,GAAG,CAAC,CAAC;gBACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;oBACnE,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;iBACjD;gBACD,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,MAAM,IAAI,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;aAC7B;SACF;QAOM,kBAAa,GAApB,UAAwB,MAAiB,EAAE,SAA8C;YAA9C,0BAAA,EAAA,YAA0B,YAAY,CAAC,KAAK,EAAE;YACvF,OAAO,IAAI,iBAAiB,CAAI,MAAM,EAAE,SAAS,CAAC,CAAC;SACpD;QAOM,kBAAa,GAApB,UAAwB,MAAiB,EAAE,SAA8C;YAA9C,0BAAA,EAAA,YAA0B,YAAY,CAAC,KAAK,EAAE;YACvF,OAAO,IAAI,iBAAiB,CAAI,MAAM,EAAE,SAAS,CAAC,CAAC;SACpD;QAUM,kBAAa,GAApB;YACE,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,CAAC;SACnD;QACH,WAAC;IAAD,CAAC;;;QClGuC,sCAAc;QAMpD,4BAAY,IAAa,EAAE,KAAc,EAAE,IAAa,EAAE,IAAa;YAAvE,YACE,iBAAO,SAKR;YAJC,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;;SACnB;QAED,iCAAI,GAAJ,UAAK,KAAY;YACf,OAAO,kBAAkB,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SACzF;QAEM,wBAAK,GAAZ,UAAa,KAAY,EAAE,IAAgB,EAAE,KAAiB,EACjD,IAAgB,EAAE,IAAgB;YADpB,qBAAA,EAAA,QAAgB;YAAE,sBAAA,EAAA,SAAiB;YACjD,qBAAA,EAAA,QAAgB;YAAE,qBAAA,EAAA,QAAgB;YAC7C,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,IAAI,IAAI,KAAK,CAAC,EAAE;gBACd,IAAI,KAAK,CAAC,MAAM,EAAE,EAAE;oBAClB,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;oBACjB,IAAI,CAAC,KAAK,EAAE,EAAS;wBACnB,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;wBACrB,IAAI,GAAG,CAAC,CAAC,CAAC;qBACX;oBACD,IAAI,GAAG,CAAC,CAAC;iBACV;qBAAM,IAAI,KAAK,CAAC,MAAM,EAAE,EAAE;oBACzB,OAAO,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC;iBAC3D;aACF;YACD,IAAI,IAAI,KAAK,CAAC,EAAE;gBACd,IAAI,KAAK,CAAC,MAAM,EAAE,EAAE;oBAClB,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;oBACjB,IAAI,CAAC,KAAK,EAAE,EAAS;wBACnB,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;wBACrB,IAAI,GAAG,CAAC,CAAC;qBACV;yBAAM,IAAI,CAAC,IAAI,EAAE,IAAW,CAAC,IAAI,EAAE,EAAS;wBAC3C,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;wBACrB,KAAK,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,CAAQ,CAAC;wBAC/B,IAAI,GAAG,CAAC,CAAC;qBACV;yBAAM,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,EAAS;wBACtC,IAAI,MAAM,GAAG,OAAO,CAAC,YAAY,EAAE,CAAC;wBACpC,IAAI,IAAI,GAAG,CAAC,EAAE;4BACZ,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;yBAClC;wBACD,OAAO,mBAAmB,CAAC,KAAK,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;qBACvD;yBAAM;wBACL,OAAO,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC;qBAC3D;iBACF;qBAAM,IAAI,KAAK,CAAC,MAAM,EAAE,EAAE;oBACzB,OAAO,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC;iBAC3D;aACF;YACD,IAAI,IAAI,KAAK,CAAC,EAAE;gBACd,OAAO,KAAK,CAAC,MAAM,EAAE,EAAE;oBACrB,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;oBACjB,IAAI,CAAC,IAAI,EAAE,IAAW,CAAC,IAAI,EAAE,EAAS;wBACpC,IAAM,QAAQ,GAAG,EAAE,GAAG,KAAK,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,CAAQ,CAAC;wBACrD,IAAI,CAAC,gBAAgB,IAAI,QAAQ,IAAI,QAAQ,IAAI,gBAAgB,EAAE;4BACjE,KAAK,GAAG,QAAQ,CAAC;4BACjB,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;yBACtB;6BAAM;4BACL,OAAO,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC,CAAC;yBACpE;qBACF;yBAAM;wBACL,MAAM;qBACP;iBACF;gBACD,IAAI,KAAK,CAAC,MAAM,EAAE,EAAE;oBAClB,IAAI,GAAG,CAAC,CAAC;iBACV;qBAAM,IAAI,KAAK,CAAC,MAAM,EAAE,EAAE;oBACzB,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBAC3B;aACF;YACD,IAAI,IAAI,KAAK,CAAC,EAAE;gBACd,IAAI,KAAK,CAAC,MAAM,EAAE,EAAE;oBAClB,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;oBACjB,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,IAAW,IAAI,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,IAAW,CAAC,KAAK,GAAG,CAAQ,EAAE;wBACpF,IAAI,MAAM,GAAG,OAAO,CAAC,YAAY,EAAE,CAAC;wBACpC,IAAI,IAAI,GAAG,CAAC,IAAI,KAAK,KAAK,CAAC,EAAE;4BAC3B,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;yBACnD;6BAAM;4BACL,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,CAAC;yBACnC;wBACD,OAAO,mBAAmB,CAAC,KAAK,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;qBACvD;yBAAM;wBACL,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;qBAC3B;iBACF;qBAAM,IAAI,KAAK,CAAC,MAAM,EAAE,EAAE;oBACzB,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBAC3B;aACF;YACD,OAAO,IAAI,kBAAkB,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;SACxD;QACH,yBAAC;IAAD,CAjGA,CAAwC,MAAM,GAiG7C;IACD,MAAM,CAAC,YAAY,GAAG,kBAAkB,CAAC;IAGzC;QAAkC,uCAAc;QAK9C,6BAAY,MAAsB,EAAE,IAAa,EAAE,IAAa;YAAhE,YACE,iBAAO,SAIR;YAHC,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;;SACnB;QAED,kCAAI,GAAJ,UAAK,KAAY;YACf,OAAO,mBAAmB,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SAC/E;QAEM,yBAAK,GAAZ,UAAa,KAAY,EAAE,MAAsB,EAAE,IAAgB,EACtD,IAAgB;YADsB,qBAAA,EAAA,QAAgB;YACtD,qBAAA,EAAA,QAAgB;YAC3B,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,IAAI,IAAI,KAAK,CAAC,EAAE;gBACd,IAAI,KAAK,CAAC,MAAM,EAAE,EAAE;oBAClB,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;oBACjB,IAAI,CAAC,KAAK,EAAE,EAAS;wBACnB,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;wBACrB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBACzB,IAAI,GAAG,CAAC,CAAC;qBACV;yBAAM,IAAI,IAAI,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,IAAW,CAAC,KAAK,GAAG,CAAQ,EAAE;wBAC5D,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;wBACrB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBACzB,IAAI,GAAG,CAAC,CAAC;qBACV;yBAAM;wBACL,OAAO,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC,CAAC;qBACxE;iBACF;qBAAM,IAAI,KAAK,CAAC,MAAM,EAAE,EAAE;oBACzB,OAAO,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC,CAAC;iBACxE;aACF;YACD,IAAI,IAAI,KAAK,CAAC,EAAE;gBACd,IAAI,KAAK,CAAC,MAAM,EAAE,EAAE;oBAClB,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;oBACjB,IAAI,CAAC,IAAI,EAAE,IAAW,CAAC,IAAI,EAAE,EAAS;wBACpC,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;wBACrB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBACzB,IAAI,GAAG,CAAC,CAAC;qBACV;yBAAM;wBACL,OAAO,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;qBAC1D;iBACF;qBAAM,IAAI,KAAK,CAAC,MAAM,EAAE,EAAE;oBACzB,OAAO,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;iBAC1D;aACF;YACD,IAAI,IAAI,KAAK,CAAC,EAAE;gBACd,OAAO,KAAK,CAAC,MAAM,EAAE,EAAE;oBACrB,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;oBACjB,IAAI,CAAC,IAAI,EAAE,IAAW,CAAC,IAAI,EAAE,EAAS;wBACpC,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;wBACrB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;qBAC1B;yBAAM;wBACL,MAAM;qBACP;iBACF;gBACD,IAAI,KAAK,CAAC,MAAM,EAAE,EAAE;oBAClB,IAAI,IAAI,GAAG,CAAC,EAAE;wBACZ,IAAI,GAAG,CAAC,CAAC;qBACV;yBAAM;wBACL,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;qBACpC;iBACF;qBAAM,IAAI,KAAK,CAAC,MAAM,EAAE,EAAE;oBACzB,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;iBACpC;aACF;YACD,IAAI,IAAI,KAAK,CAAC,EAAE;gBACd,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;gBACjB,IAAI,CAAC,KAAK,EAAE,IAAW,CAAC,KAAK,GAAG,EAAS;oBACvC,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;oBACrB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBACzB,IAAI,GAAG,CAAC,CAAC;iBACV;qBAAM;oBACL,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;iBACpC;aACF;YACD,IAAI,IAAI,KAAK,CAAC,EAAE;gBACd,IAAI,KAAK,CAAC,MAAM,EAAE,EAAE;oBAClB,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;oBACjB,IAAI,CAAC,KAAK,EAAE,IAAW,CAAC,KAAK,EAAE,EAAS;wBACtC,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;wBACrB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;qBAC1B;oBACD,IAAI,GAAG,CAAC,CAAC;iBACV;qBAAM,IAAI,KAAK,CAAC,MAAM,EAAE,EAAE;oBACzB,OAAO,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;iBACnD;aACF;YACD,IAAI,IAAI,KAAK,CAAC,EAAE;gBACd,IAAI,KAAK,CAAC,MAAM,EAAE,EAAE;oBAClB,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;oBACjB,IAAI,CAAC,IAAI,EAAE,IAAW,CAAC,IAAI,EAAE,EAAS;wBACpC,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;wBACrB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBACzB,IAAI,GAAG,CAAC,CAAC;qBACV;yBAAM;wBACL,OAAO,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;qBAC1D;iBACF;qBAAM,IAAI,KAAK,CAAC,MAAM,EAAE,EAAE;oBACzB,OAAO,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;iBAC1D;aACF;YACD,IAAI,IAAI,KAAK,CAAC,EAAE;gBACd,OAAO,KAAK,CAAC,MAAM,EAAE,EAAE;oBACrB,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;oBACjB,IAAI,CAAC,IAAI,EAAE,IAAW,CAAC,IAAI,EAAE,EAAS;wBACpC,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;wBACrB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;qBAC1B;yBAAM;wBACL,MAAM;qBACP;iBACF;gBACD,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE;oBACpB,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;iBACpC;aACF;YACD,OAAO,IAAI,mBAAmB,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;SACpD;QACH,0BAAC;IAAD,CA3HA,CAAkC,MAAM,GA2HvC;;;QClOwC,uCAAgB;QAUvD,6BAAY,KAAU,EAAE,KAAa,EAAE,KAAiB,EAAE,IAAgB;YAAnC,sBAAA,EAAA,SAAiB;YAAE,qBAAA,EAAA,QAAgB;YAA1E,YACE,iBAAO,SAKR;YAJC,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;;SACnB;QAED,kCAAI,GAAJ,UAAK,MAAc;YACjB,OAAO,mBAAmB,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SAC7F;QAEM,yBAAK,GAAZ,UAAa,MAAc,EAAE,KAAU,EAAE,KAAa,EAAE,KAAiB,EAC5D,IAAgB;YAD2B,sBAAA,EAAA,SAAiB;YAC5D,qBAAA,EAAA,QAAgB;YAC3B,IAAI,IAAI,KAAK,CAAC,EAAE;gBACd,OAAO,MAAM,CAAC,IAAI,EAAE,CAAC;aACtB;YACD,IAAI,IAAI,KAAK,CAAC,EAAE;gBACd,IAAI,KAAK,GAAG,CAAC,EAAE;oBACb,IAAI,MAAM,CAAC,MAAM,EAAE,EAAE;wBACnB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;wBACjC,IAAI,GAAG,CAAC,CAAC;qBACV;iBACF;qBAAM;oBACL,IAAI,GAAG,CAAC,CAAC;iBACV;aACF;YACD,IAAI,IAAI,KAAK,CAAC,EAAE;gBACd,IAAI,KAAK,GAAG,CAAC,EAAE,IAAI,KAAK,GAAG,EAAE,EAAE;oBAC7B,IAAI,MAAM,CAAC,MAAM,EAAE,EAAE;wBACnB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC/D,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;qBAC3B;iBACF;qBAAM;oBACL,IAAM,MAAM,GAAG,IAAI,KAAK,CAAS,EAAE,CAAC,CAAC;oBACrC,IAAI,CAAC,GAAG,KAAK,CAAC;oBACd,IAAI,CAAC,GAAG,EAAE,CAAC;oBACX,OAAO,CAAC,EAAE;wBACR,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;wBACnC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;wBACjB,CAAC,IAAI,CAAC,CAAC;qBACR;oBACD,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;oBACf,OAAO,CAAC,GAAG,EAAE,IAAI,MAAM,CAAC,MAAM,EAAE,EAAE;wBAChC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACrD,KAAK,IAAI,CAAC,CAAC;wBACX,CAAC,IAAI,CAAC,CAAC;qBACR;oBACD,IAAI,CAAC,KAAK,EAAE,EAAE;wBACZ,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;qBAC3B;iBACF;aACF;YACD,IAAI,MAAM,CAAC,MAAM,EAAE,EAAE;gBACnB,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,WAAW,CAAC,CAAC,CAAC;aACvD;iBAAM,IAAI,MAAM,CAAC,OAAO,EAAE,EAAE;gBAC3B,OAAO,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;aACpC;YACD,OAAO,IAAI,mBAAmB,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;SAC3D;QACH,0BAAC;IAAD,CAtEA,CAAyC,MAAM,GAsE9C;IACD,MAAM,CAAC,aAAa,GAAG,mBAAmB,CAAC;;;QCtEN,gCAAS;QAQ5C,sBAAY,MAAiB,EAAE,CAAa,EAAE,IAAgB;YAA/B,kBAAA,EAAA,KAAa;YAAE,qBAAA,EAAA,QAAgB;YAA9D,YACE,iBAAO,SAIR;YAHC,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,KAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;;SACnB;QAED,2BAAI,GAAJ,UAAK,KAAY;YACf,OAAO,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SAC7E;QAEM,kBAAK,GAAZ,UAAgB,KAAY,EAAE,MAAiB,EAAE,CAAa,EAAE,IAAgB;YAA/B,kBAAA,EAAA,KAAa;YAAE,qBAAA,EAAA,QAAgB;YAC9E,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE;gBACvB,IAAI,IAAI,KAAK,CAAC,EAAE;oBACd,IAAI,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;wBAC3D,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;wBACrB,CAAC,GAAG,CAAC,CAAC;wBACN,IAAI,GAAG,CAAC,CAAC;qBACV;yBAAM,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE;wBAC3B,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;qBACnC;iBACF;gBACD,IAAI,IAAI,KAAK,CAAC,EAAE;oBACd,IAAI,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;wBAC3D,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;wBACrB,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;wBAClC,CAAC,GAAG,CAAC,CAAC;wBACN,IAAI,GAAG,CAAC,CAAC;qBACV;yBAAM,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE;wBAC3B,OAAO,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC,CAAC;qBACjE;iBACF;aACF;YACD,OAAO,IAAI,YAAY,CAAI,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;SAC7C;QACH,mBAAC;IAAD,CA5CA,CAAqC,MAAM,GA4C1C;IACD,MAAM,CAAC,MAAM,GAAG,YAAY,CAAC;;;QC9CK,gCAAwB;QAYxD,sBAAY,KAAc,EAAE,KAA6B,EAAE,MAAc,EAC7D,KAAiB,EAAE,IAAgB;YAAnC,sBAAA,EAAA,SAAiB;YAAE,qBAAA,EAAA,QAAgB;YAD/C,YAEE,iBAAO,SAMR;YALC,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;;SACnB;QAED,2BAAI,GAAJ,UAAK,KAAc;YACjB,IAAI,KAAK,YAAY,UAAU,EAAE;gBAC/B,OAAO,IAAI,YAAY,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;aACzD;iBAAM;gBACL,MAAM,IAAI,SAAS,CAAC,EAAE,GAAG,KAAK,CAAC,CAAC;aACjC;SACF;QAED,2BAAI,GAAJ,UAAK,MAAc;YACjB,OAAO,YAAY,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAO,EAAE,IAAI,CAAC,OAAO,EAC/C,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SACpD;QAEM,kBAAK,GAAZ,UAAa,MAAc,EAAE,KAAc,EAAE,KAAiB,EAAE,MAAc,EACjE,KAAiB,EAAE,IAAgB;YAAnC,sBAAA,EAAA,SAAiB;YAAE,qBAAA,EAAA,QAAgB;YAC9C,OAAO,KAAK,GAAG,KAAK,CAAC,MAAM,EAAE;gBAC3B,IAAM,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;gBACvB,IAAI,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE,EAAE;oBACjC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBACnD,IAAI,GAAG,CAAC,CAAC;iBACV;gBACD,IAAI,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE,EAAE;oBACjC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;oBACpD,KAAK,IAAI,CAAC,CAAC;oBACX,IAAI,GAAG,CAAC,CAAC;iBACV;aACF;YACD,IAAI,KAAK,KAAK,KAAK,CAAC,MAAM,EAAE;gBAC1B,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC3B;iBAAM,IAAI,MAAM,CAAC,MAAM,EAAE,EAAE;gBAC1B,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,WAAW,CAAC,CAAC,CAAC;aACvD;iBAAM,IAAI,MAAM,CAAC,OAAO,EAAE,EAAE;gBAC3B,OAAO,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;aACpC;YACD,OAAO,IAAI,YAAY,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;SAC5D;QACH,mBAAC;IAAD,CA1DA,CAAkC,MAAM,GA0DvC;IACD,MAAM,CAAC,MAAM,GAAG,YAAY,CAAC;;;QC5DY,uCAAwB;QAQ/D,6BAAY,KAAc,EAAE,KAAa,EAAE,KAAa,EAC5C,MAAc,EAAE,KAAc,EAAE,IAAa;YADzD,YAEE,iBAAO,SAOR;YANC,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;;SACnB;QAED,kCAAI,GAAJ,UAAK,MAAc;YACjB,OAAO,mBAAmB,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAC7C,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SACzE;QAEM,yBAAK,GAAZ,UAAa,MAAc,EAAE,KAAc,EAAE,KAAa,EAAE,KAAa,EAC5D,MAAc,EAAE,KAAiB,EAAE,IAAgB;YAAnC,sBAAA,EAAA,SAAiB;YAAE,qBAAA,EAAA,QAAgB;YAC9D,IAAI,IAAI,IAAI,CAAC,EAAE;gBACb,OAAO,MAAM,CAAC,IAAI,EAAE,CAAC;aACtB;YACD,IAAI,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE,EAAE;gBACjC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;gBACjC,IAAI,GAAG,CAAC,CAAC;aACV;YACD,IAAI,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE,EAAE;gBACjC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAQ,CAAC;gBAClC,IAAI,GAAG,CAAC,CAAC;aACV;YACD,IAAI,IAAI,KAAK,CAAC,EAAE;gBACd,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,EAAE,IAAI,KAAK,IAAI,CAAC,EAAE;oBAC1C,IAAI,MAAM,CAAC,MAAM,EAAE,EAAE;wBACnB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;wBACjD,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;qBAC3B;iBACF;qBAAM;oBACL,IAAI,CAAC,GAAG,EAAE,CAAC;oBACX,IAAM,MAAM,GAAG,IAAI,KAAK,CAAS,EAAE,CAAC,CAAC;oBACrC,IAAI,CAAC,GAAG,KAAK,CAAC;oBACd,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,KAAK,EAAE;wBACjC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;wBACpB,CAAC,MAAM,CAAC,CAAC;wBACT,CAAC,IAAI,CAAC,CAAC;qBACR;oBACD,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;oBACf,OAAO,CAAC,GAAG,EAAE,IAAI,MAAM,CAAC,MAAM,EAAE,EAAE;wBAChC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACrD,KAAK,IAAI,CAAC,CAAC;wBACX,CAAC,IAAI,CAAC,CAAC;qBACR;oBACD,IAAI,CAAC,KAAK,EAAE,EAAE;wBACZ,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;qBAC3B;iBACF;aACF;YACD,IAAI,MAAM,CAAC,MAAM,EAAE,EAAE;gBACnB,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,WAAW,CAAC,CAAC,CAAC;aACvD;iBAAM,IAAI,MAAM,CAAC,OAAO,EAAE,EAAE;gBAC3B,OAAO,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;aACpC;YACD,OAAO,IAAI,mBAAmB,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;SAC1E;QAEM,gCAAY,GAAnB,UAAoB,MAAc,EAAE,KAAc,EAAE,KAAa,EAAE,KAAa,EAC5D,MAAc;YAChC,OAAO,mBAAmB,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAC7E;QACH,0BAAC;IAAD,CA3EA,CAAyC,MAAM,GA2E9C;IACD,MAAM,CAAC,aAAa,GAAG,mBAAmB,CAAC;;;QClEzC;SAEC;QA6BM,4BAAW,GAAlB,UAAmB,CAAS;YAC1B,IAAI,CAAC,IAAI,EAAE,IAAW,CAAC,IAAI,EAAE,EAAS;gBACpC,OAAO,CAAC,GAAG,EAAE,CAAQ;aACtB;iBAAM,IAAI,CAAC,IAAI,EAAE,IAAW,CAAC,IAAI,GAAG,EAAS;gBAC5C,OAAO,CAAC,IAAI,EAAE,GAAG,EAAE,CAAQ,CAAC;aAC7B;iBAAM,IAAI,CAAC,IAAI,EAAE,IAAW,CAAC,IAAI,EAAE,EAAS;gBAC3C,OAAO,CAAC,IAAI,EAAE,GAAG,EAAE,CAAQ,CAAC;aAC7B;iBAAM,IAAI,CAAC,KAAK,EAAE,IAAW,CAAC,KAAK,EAAE,EAAS;gBAC7C,OAAO,EAAE,CAAC;aACX;iBAAM,IAAI,CAAC,KAAK,EAAE,IAAW,CAAC,KAAK,EAAE,EAAS;gBAC7C,OAAO,EAAE,CAAC;aACX;iBAAM;gBACL,IAAM,OAAO,GAAG,OAAO,CAAC,YAAY,EAAE,CAAC;gBACvC,OAAO,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;gBACzC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;gBAC7B,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;aACjC;SACF;QAMD,4BAAW,GAAX,UAAY,CAAS;YACnB,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SACtC;QAMD,6BAAY,GAAZ,UAAa,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,MAAc;YACzE,IAAM,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YAC/B,IAAM,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YAC/B,IAAI,EAAE,KAAK,EAAE,EAAS;gBACpB,IAAM,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;gBAC/B,IAAI,EAAE,KAAK,EAAE,EAAS;oBACpB,IAAM,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;oBAC/B,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC5C,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC5C,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;iBACrC;qBAAM;oBACL,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC5C,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;iBAC7C;aACF;iBAAM;gBACL,IAAI,EAAE,KAAK,EAAE,EAAS;oBACpB,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;iBAC9C;gBACD,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aAC7C;SACF;QAMD,uBAAM,GAAN,UAAU,MAAiB;YACzB,OAAO,IAAI,MAAM,CAAC,MAAM,CAAI,MAAM,EAAE,IAAI,CAAC,CAAC;SAC3C;QAOD,sBAAK,GAAL,UAAS,KAAY,EAAE,MAAiB;YACtC,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;SACjD;QAQD,gCAAe,GAAf,UAAgB,KAAY;YAC1B,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,MAAM,CAAC,gBAAgB,EAAE,EAAE,IAAI,CAAC,CAAC;SACpE;QAaD,iCAAgB,GAAhB,UAAiB,KAAkB;YACjC,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE;gBACpB,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC;aAChD;iBAAM;gBACL,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;aAC9C;SACF;QAOD,gCAAe,GAAf,UAAgB,KAAiB,EAAE,MAAc;YAC/C,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;SACzD;QAWM,eAAQ,GAAf,UAAgB,QAAwB;YAAxB,yBAAA,EAAA,eAAwB;YACtC,IAAI,QAAQ,EAAE;gBACZ,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;oBACrB,MAAM,CAAC,SAAS,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,CAAC;iBAC7C;gBACD,OAAO,MAAM,CAAC,SAAS,CAAC;aACzB;iBAAM;gBACL,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE;oBAC7B,MAAM,CAAC,iBAAiB,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,CAAC;iBACrD;gBACD,OAAO,MAAM,CAAC,iBAAiB,CAAC;aACjC;SACF;QAMM,UAAG,GAAV,UAAW,QAAwB;YAAxB,yBAAA,EAAA,eAAwB;YACjC,IAAI,QAAQ,EAAE;gBACZ,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;oBAChB,MAAM,CAAC,IAAI,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC;iBACnC;gBACD,OAAO,MAAM,CAAC,IAAI,CAAC;aACpB;iBAAM;gBACL,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE;oBACxB,MAAM,CAAC,YAAY,GAAG,IAAI,SAAS,CAAC,KAAK,CAAC,CAAC;iBAC5C;gBACD,OAAO,MAAM,CAAC,YAAY,CAAC;aAC5B;SACF;QAOH,aAAC;IAAD,CAAC,IAAA;IAGD;QAA6B,kCAAM;QAIjC,wBAAY,QAAiB;YAA7B,YACE,iBAAO,SAER;YADC,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;;SAC3B;QAED,iCAAQ,GAAR;YACE,OAAO,kEAAkE,CAAC;SAC3E;QAID,iCAAQ,GAAR,UAAS,QAAkB;YACzB,IAAI,QAAQ,KAAK,KAAK,CAAC,EAAE;gBACvB,OAAO,IAAI,CAAC,SAAS,CAAC;aACvB;iBAAM;gBACL,IAAI,QAAQ,KAAK,IAAI,CAAC,SAAS,EAAE;oBAC/B,OAAO,IAAI,CAAC;iBACb;qBAAM;oBACL,OAAO,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;iBAClC;aACF;SACF;QAED,gCAAO,GAAP,UAAQ,CAAS;YACf,OAAO,CAAC,IAAI,EAAE,IAAW,CAAC,IAAI,EAAE;mBACzB,CAAC,IAAI,EAAE,IAAW,CAAC,IAAI,EAAE;mBACzB,CAAC,IAAI,EAAE,IAAW,CAAC,IAAI,GAAG;mBAC1B,CAAC,KAAK,EAAE,IAAW,CAAC,KAAK,EAAE,CAAQ;SAC3C;QACH,qBAAC;IAAD,CAjCA,CAA6B,MAAM,GAiClC;IAGD;QAAwB,6BAAM;QAI5B,mBAAY,QAAiB;YAA7B,YACE,iBAAO,SAER;YADC,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;;SAC3B;QAED,4BAAQ,GAAR;YACE,OAAO,kEAAkE,CAAC;SAC3E;QAID,4BAAQ,GAAR,UAAS,QAAkB;YACzB,IAAI,QAAQ,KAAK,KAAK,CAAC,EAAE;gBACvB,OAAO,IAAI,CAAC,SAAS,CAAC;aACvB;iBAAM;gBACL,IAAI,QAAQ,KAAK,IAAI,CAAC,SAAS,EAAE;oBAC/B,OAAO,IAAI,CAAC;iBACb;qBAAM;oBACL,OAAO,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;iBAC7B;aACF;SACF;QAED,2BAAO,GAAP,UAAQ,CAAS;YACf,OAAO,CAAC,IAAI,EAAE,IAAW,CAAC,IAAI,EAAE;mBACzB,CAAC,IAAI,EAAE,IAAW,CAAC,IAAI,EAAE;mBACzB,CAAC,IAAI,EAAE,IAAW,CAAC,IAAI,GAAG;mBAC1B,CAAC,KAAK,EAAE,IAAW,CAAC,KAAK,EAAE,CAAQ;SAC3C;QACH,gBAAC;IAAD,CAjCA,CAAwB,MAAM,GAiC7B;;;QCzQoC,gCAAS;QAc5C,sBAAY,MAAiB,EAAE,MAAc,EAAE,CAAa,EAAE,CAAa,EAC/D,CAAa,EAAE,IAAgB;YADI,kBAAA,EAAA,KAAa;YAAE,kBAAA,EAAA,KAAa;YAC/D,kBAAA,EAAA,KAAa;YAAE,qBAAA,EAAA,QAAgB;YAD3C,YAEE,iBAAO,SAOR;YANC,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,KAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,KAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,KAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;;SACnB;QAED,2BAAI,GAAJ,UAAK,KAAY;YACf,OAAO,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,OAAO,EACzC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SAClE;QAEM,kBAAK,GAAZ,UAAgB,KAAY,EAAE,MAAiB,EAAE,MAAc,EAAE,CAAa,EAC9D,CAAa,EAAE,CAAa,EAAE,IAAgB;YADG,kBAAA,EAAA,KAAa;YAC9D,kBAAA,EAAA,KAAa;YAAE,kBAAA,EAAA,KAAa;YAAE,qBAAA,EAAA,QAAgB;YAC5D,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE;gBACvB,IAAI,IAAI,KAAK,CAAC,EAAE;oBACd,IAAI,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;wBAC3D,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;wBACrB,CAAC,GAAG,CAAC,CAAC;wBACN,IAAI,GAAG,CAAC,CAAC;qBACV;yBAAM,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE;wBAC3B,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;qBACnC;iBACF;gBACD,IAAI,IAAI,KAAK,CAAC,EAAE;oBACd,IAAI,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;wBAC3D,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;wBACrB,CAAC,GAAG,CAAC,CAAC;wBACN,IAAI,GAAG,CAAC,CAAC;qBACV;yBAAM,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE;wBAC3B,OAAO,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC,CAAC;qBACjE;iBACF;gBACD,IAAI,IAAI,KAAK,CAAC,EAAE;oBACd,IAAI,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAQ,EAAE;wBAC9E,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;wBACrB,CAAC,GAAG,CAAC,CAAC;wBACN,IAAI,CAAC,KAAK,EAAE,EAAS;4BACnB,IAAI,GAAG,CAAC,CAAC;yBACV;6BAAM;4BACL,IAAI,GAAG,CAAC,CAAC;yBACV;qBACF;yBAAM,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE;wBAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE;4BACtB,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAS,EAAE,EAAS,MAAM,CAAC,CAAC;4BACxD,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;yBACnC;6BAAM;4BACL,OAAO,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;yBACnD;qBACF;iBACF;gBACD,IAAI,IAAI,KAAK,CAAC,EAAE;oBACd,IAAI,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAQ,EAAE;wBAC9E,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;wBACrB,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;wBACxC,CAAC,GAAG,CAAC,CAAC;wBACN,CAAC,GAAG,CAAC,CAAC;wBACN,CAAC,GAAG,CAAC,CAAC;wBACN,IAAI,CAAC,KAAK,EAAE,EAAS;4BACnB,IAAI,GAAG,CAAC,CAAC;yBACV;6BAAM;4BACL,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;yBACnC;qBACF;yBAAM,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE;wBAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE;4BACtB,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAS,MAAM,CAAC,CAAC;4BAChD,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;yBACnC;6BAAM;4BACL,OAAO,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;yBACnD;qBACF;iBACF;qBAAM,IAAI,IAAI,KAAK,CAAC,EAAE;oBACrB,IAAI,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,KAAK,EAAE,CAAQ,EAAE;wBACzD,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;wBACrB,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;wBACxC,CAAC,GAAG,CAAC,CAAC;wBACN,CAAC,GAAG,CAAC,CAAC;wBACN,CAAC,GAAG,CAAC,CAAC;wBACN,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;qBACnC;yBAAM,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE;wBAC3B,OAAO,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,EAAS,KAAK,CAAC,CAAC,CAAC;qBAC5D;iBACF;aACF;YACD,OAAO,IAAI,YAAY,CAAI,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;SAC3D;QACH,mBAAC;IAAD,CAzGA,CAAqC,MAAM,GAyG1C;IACD,MAAM,CAAC,MAAM,GAAG,YAAY,CAAC;;;QC3GK,gCAAwB;QAYxD,sBAAY,KAAc,EAAE,KAA6B,EAAE,MAAc,EAC7D,KAAiB,EAAE,IAAgB;YAAnC,sBAAA,EAAA,SAAiB;YAAE,qBAAA,EAAA,QAAgB;YAD/C,YAEE,iBAAO,SAMR;YALC,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;;SACnB;QAED,2BAAI,GAAJ,UAAK,KAAc;YACjB,IAAI,KAAK,YAAY,UAAU,EAAE;gBAC/B,OAAO,IAAI,YAAY,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;aACzD;iBAAM;gBACL,MAAM,IAAI,SAAS,CAAC,EAAE,GAAG,KAAK,CAAC,CAAC;aACjC;SACF;QAED,2BAAI,GAAJ,UAAK,MAAc;YACjB,OAAO,YAAY,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAO,EAAE,IAAI,CAAC,OAAO,EAC/C,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SACpD;QAEM,kBAAK,GAAZ,UAAa,MAAc,EAAE,KAAc,EAAE,KAAiB,EAAE,MAAc,EACjE,KAAiB,EAAE,IAAgB;YAAnC,sBAAA,EAAA,SAAiB;YAAE,qBAAA,EAAA,QAAgB;YAC9C,OAAO,KAAK,GAAG,CAAC,GAAG,KAAK,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,EAAE,EAAE;gBAClD,IAAM,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;gBACvB,IAAM,CAAC,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;gBAC3B,IAAM,CAAC,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;gBAC3B,IAAI,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE,EAAE;oBACjC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBACnD,IAAI,GAAG,CAAC,CAAC;iBACV;gBACD,IAAI,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE,EAAE;oBACjC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;oBACzE,IAAI,GAAG,CAAC,CAAC;iBACV;gBACD,IAAI,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE,EAAE;oBACjC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;oBACzE,IAAI,GAAG,CAAC,CAAC;iBACV;gBACD,IAAI,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE,EAAE;oBACjC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;oBACpD,KAAK,IAAI,CAAC,CAAC;oBACX,IAAI,GAAG,CAAC,CAAC;iBACV;aACF;YACD,IAAI,KAAK,GAAG,CAAC,GAAG,KAAK,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,EAAE,EAAE;gBAC/C,IAAM,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;gBACvB,IAAM,CAAC,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;gBAC3B,IAAI,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE,EAAE;oBACjC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBACnD,IAAI,GAAG,CAAC,CAAC;iBACV;gBACD,IAAI,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE,EAAE;oBACjC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;oBACzE,IAAI,GAAG,CAAC,CAAC;iBACV;gBACD,IAAI,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE,EAAE;oBACjC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;oBAC3D,IAAI,GAAG,CAAC,CAAC;iBACV;gBACD,IAAI,IAAI,KAAK,CAAC,EAAE;oBACd,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE;wBACtB,KAAK,IAAI,CAAC,CAAC;qBACZ;yBAAM,IAAI,MAAM,CAAC,MAAM,EAAE,EAAE;wBAC1B,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;wBACjC,KAAK,IAAI,CAAC,CAAC;qBACZ;iBACF;aACF;iBAAM,IAAI,KAAK,GAAG,KAAK,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,EAAE,EAAE;gBAClD,IAAM,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;gBACvB,IAAI,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE,EAAE;oBACjC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBACnD,IAAI,GAAG,CAAC,CAAC;iBACV;gBACD,IAAI,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE,EAAE;oBACjC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;oBAC3D,IAAI,GAAG,CAAC,CAAC;iBACV;gBACD,IAAI,IAAI,KAAK,CAAC,EAAE;oBACd,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE;wBACtB,KAAK,IAAI,CAAC,CAAC;qBACZ;yBAAM,IAAI,MAAM,CAAC,MAAM,EAAE,EAAE;wBAC1B,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;wBACjC,IAAI,GAAG,CAAC,CAAC;qBACV;iBACF;gBACD,IAAI,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE,EAAE;oBACjC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAQ,CAAC;oBACjC,KAAK,IAAI,CAAC,CAAC;iBACZ;aACF;YACD,IAAI,KAAK,KAAK,KAAK,CAAC,MAAM,EAAE;gBAC1B,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC3B;iBAAM,IAAI,MAAM,CAAC,MAAM,EAAE,EAAE;gBAC1B,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,WAAW,CAAC,CAAC,CAAC;aACvD;iBAAM,IAAI,MAAM,CAAC,OAAO,EAAE,EAAE;gBAC3B,OAAO,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;aACpC;YACD,OAAO,IAAI,YAAY,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;SAC5D;QACH,mBAAC;IAAD,CAlHA,CAAkC,MAAM,GAkHvC;IACD,MAAM,CAAC,MAAM,GAAG,YAAY,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}