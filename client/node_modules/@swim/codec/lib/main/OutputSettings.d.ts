import { HashCode } from "@swim/util";
import { Output } from "./Output";
import { Debug } from "./Debug";
export declare type AnyOutputSettings = OutputSettings | OutputSettingsInit;
export interface OutputSettingsInit {
    lineSeparator?: string | null;
    isPretty?: boolean;
    isStyled?: boolean;
}
export declare class OutputSettings implements Debug, HashCode {
    readonly _lineSeparator: string;
    readonly _isPretty: boolean;
    readonly _isStyled: boolean;
    protected constructor(lineSeparator: string, isPretty: boolean, isStyled: boolean);
    lineSeparator(): string;
    lineSeparator(lineSeparator: string | null): OutputSettings;
    isPretty(): boolean;
    isPretty(isPretty: boolean): OutputSettings;
    isStyled(): boolean;
    isStyled(isStyled: boolean): OutputSettings;
    protected copy(lineSeparator: string | null, isPretty: boolean, isStyled: boolean): OutputSettings;
    protected canEqual(that: unknown): boolean;
    equals(that: unknown): boolean;
    hashCode(): number;
    debug(output: Output): void;
    toString(): string;
    private static _hashSeed?;
    private static _standard?;
    private static _pretty?;
    private static _styled?;
    private static _prettyStyled?;
    static standard(): OutputSettings;
    static pretty(): OutputSettings;
    static styled(): OutputSettings;
    static prettyStyled(): OutputSettings;
    static create(lineSeparator?: string | null, isPretty?: boolean, isStyled?: boolean): OutputSettings;
    static fromAny(settings: AnyOutputSettings | undefined): OutputSettings;
}
//# sourceMappingURL=OutputSettings.d.ts.map