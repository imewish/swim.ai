import { __extends } from "tslib";
var Writer = (function () {
    function Writer() {
    }
    Writer.prototype.isCont = function () {
        return true;
    };
    Writer.prototype.isDone = function () {
        return false;
    };
    Writer.prototype.isError = function () {
        return false;
    };
    Writer.prototype.feed = function (input) {
        throw new Error();
    };
    Writer.prototype.fork = function (condition) {
        return this;
    };
    Writer.prototype.bind = function () {
        throw new Error();
    };
    Writer.prototype.trap = function () {
        throw new Error();
    };
    Writer.prototype.asDone = function () {
        throw new Error();
    };
    Writer.prototype.asError = function () {
        throw new Error();
    };
    Writer.prototype.andThen = function (that) {
        return new WriterAndThen(this, that);
    };
    Writer.done = function (output) {
        if (output === void 0) {
            if (!Writer._done) {
                Writer._done = new WriterDone(void 0);
            }
            return Writer._done;
        }
        else {
            return new WriterDone(output);
        }
    };
    Writer.error = function (error) {
        return new WriterError(error);
    };
    return Writer;
}());
export { Writer };
var WriterDone = (function (_super) {
    __extends(WriterDone, _super);
    function WriterDone(output) {
        var _this = _super.call(this) || this;
        _this._output = output;
        return _this;
    }
    WriterDone.prototype.isCont = function () {
        return false;
    };
    WriterDone.prototype.isDone = function () {
        return true;
    };
    WriterDone.prototype.pull = function (output) {
        return this;
    };
    WriterDone.prototype.bind = function () {
        return this._output;
    };
    WriterDone.prototype.asDone = function () {
        return this;
    };
    WriterDone.prototype.andThen = function (that) {
        return that;
    };
    return WriterDone;
}(Writer));
var WriterError = (function (_super) {
    __extends(WriterError, _super);
    function WriterError(error) {
        var _this = _super.call(this) || this;
        _this._error = error;
        return _this;
    }
    WriterError.prototype.isCont = function () {
        return false;
    };
    WriterError.prototype.isError = function () {
        return true;
    };
    WriterError.prototype.pull = function (output) {
        return this;
    };
    WriterError.prototype.bind = function () {
        throw this._error;
    };
    WriterError.prototype.trap = function () {
        return this._error;
    };
    WriterError.prototype.asError = function () {
        return this;
    };
    WriterError.prototype.andThen = function (that) {
        return this;
    };
    return WriterError;
}(Writer));
var WriterAndThen = (function (_super) {
    __extends(WriterAndThen, _super);
    function WriterAndThen(head, tail) {
        var _this = _super.call(this) || this;
        _this._head = head;
        _this._tail = tail;
        return _this;
    }
    WriterAndThen.prototype.pull = function (output) {
        var head = this._head;
        if (head.isCont()) {
            head = head.pull(output);
        }
        if (head.isError()) {
            return head.asError();
        }
        else if (head.isDone()) {
            return this._tail.pull(output);
        }
        else {
            return new WriterAndThen(head, this._tail);
        }
    };
    return WriterAndThen;
}(Writer));
//# sourceMappingURL=Writer.js.map