import { HashCode } from "@swim/util";
import { Output } from "./Output";
import { Debug } from "./Debug";
export declare type AnyInputSettings = InputSettings | InputSettingsInit;
export interface InputSettingsInit {
    isStripped?: boolean;
}
export declare class InputSettings implements Debug, HashCode {
    readonly _isStrict: boolean;
    protected constructor(isStripped: boolean);
    isStripped(): boolean;
    isStripped(isStripped: boolean): InputSettings;
    protected copy(isStripped: boolean): InputSettings;
    protected canEqual(that: unknown): boolean;
    equals(that: unknown): boolean;
    hashCode(): number;
    debug(output: Output): void;
    toString(): string;
    private static _hashSeed?;
    private static _standard?;
    private static _stripped?;
    static standard(): InputSettings;
    static stripped(): InputSettings;
    static create(isStripped?: boolean): InputSettings;
    static fromAny(settings: AnyInputSettings | undefined): InputSettings;
}
//# sourceMappingURL=InputSettings.d.ts.map