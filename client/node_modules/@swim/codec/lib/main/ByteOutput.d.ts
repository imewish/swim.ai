import { AnyOutputSettings, OutputSettings } from "./OutputSettings";
import { Output } from "./Output";
export declare abstract class ByteOutput<T> extends Output<T> {
    _array: Uint8Array | null;
    _size: number;
    _settings: OutputSettings;
    constructor(array: Uint8Array | null, size: number, settings: OutputSettings);
    isCont(): boolean;
    isFull(): boolean;
    isDone(): boolean;
    isError(): boolean;
    isPart(): boolean;
    isPart(isPart: boolean): Output<T>;
    write(b: number | string): Output<T>;
    writeln(string?: string): Output<T>;
    toUint8Array(): Uint8Array;
    cloneArray(): Uint8Array | null;
    settings(): OutputSettings;
    settings(settings: AnyOutputSettings): Output<T>;
    static expand(n: number): number;
}
//# sourceMappingURL=ByteOutput.d.ts.map