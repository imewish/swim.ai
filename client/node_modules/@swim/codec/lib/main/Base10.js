import { Format } from "./Format";
import { Unicode } from "./Unicode";
var Base10 = (function () {
    function Base10() {
    }
    Base10.isDigit = function (c) {
        return c >= 48 && c <= 57;
    };
    Base10.decodeDigit = function (c) {
        if (c >= 48 && c <= 57) {
            return c - 48;
        }
        else {
            var message = Unicode.stringOutput();
            message.write("Invalid base-10 digit: ");
            Format.debugChar(c, message);
            throw new Error(message.bind());
        }
    };
    Base10.encodeDigit = function (b) {
        if (b >= 0 && b <= 9) {
            return 48 + b;
        }
        else {
            throw new Error("" + b);
        }
    };
    Base10.countDigits = function (value) {
        var size = 0;
        do {
            size += 1;
            value = (value / 10) | 0;
        } while (value);
        return size;
    };
    Base10.integerParser = function () {
        return new Base10.NumberParser(void 0, void 0, 0);
    };
    Base10.parseInteger = function (input) {
        return Base10.NumberParser.parse(input, void 0, void 0, 0);
    };
    Base10.decimalParser = function () {
        return new Base10.NumberParser(void 0, void 0, 1);
    };
    Base10.parseDecimal = function (input) {
        return Base10.NumberParser.parse(input, void 0, void 0, 1);
    };
    Base10.numberParser = function () {
        return new Base10.NumberParser();
    };
    Base10.parseNumber = function (input) {
        return Base10.NumberParser.parse(input);
    };
    Base10.integerWriter = function (input) {
        if (input === void 0) {
            return new Base10.IntegerWriter(void 0, 0);
        }
        else {
            return new Base10.IntegerWriter(void 0, input);
        }
    };
    Base10.writeInteger = function (input, output) {
        return Base10.IntegerWriter.write(output, void 0, input);
    };
    return Base10;
}());
export { Base10 };
//# sourceMappingURL=Base10.js.map