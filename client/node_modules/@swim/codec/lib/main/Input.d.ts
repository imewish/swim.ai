import { Mark } from "./Mark";
import { AnyInputSettings, InputSettings } from "./InputSettings";
export declare abstract class Input {
    abstract isCont(): boolean;
    abstract isEmpty(): boolean;
    abstract isDone(): boolean;
    abstract isError(): boolean;
    abstract isPart(): boolean;
    abstract isPart(isPart: boolean): Input;
    abstract head(): number;
    abstract step(): Input;
    abstract seek(mark?: Mark): Input;
    trap(): Error;
    abstract id(): unknown | null;
    abstract id(id: unknown | null): Input;
    abstract mark(): Mark;
    abstract mark(mark: Mark): Input;
    offset(): number;
    line(): number;
    column(): number;
    abstract settings(): InputSettings;
    abstract settings(settings: AnyInputSettings): Input;
    abstract clone(): Input;
    private static _empty;
    private static _done;
    static empty(id?: unknown | null, mark?: Mark, settings?: InputSettings): Input;
    static done(id?: unknown | null, mark?: Mark, settings?: InputSettings): Input;
    static error(error: Error, id?: unknown | null, mark?: Mark, settings?: InputSettings): Input;
}
//# sourceMappingURL=Input.d.ts.map