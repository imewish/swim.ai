import { HashCode } from "@swim/util";
import { Output } from "./Output";
import { Debug } from "./Debug";
export declare abstract class UtfErrorMode implements HashCode, Debug {
    isFatal(): boolean;
    isReplacement(): boolean;
    replacementChar(): number;
    abstract isNonZero(): boolean;
    abstract isNonZero(isNonZero: boolean): UtfErrorMode;
    abstract equals(that: unknown): boolean;
    abstract hashCode(): number;
    abstract debug(output: Output): void;
    toString(): string;
    private static _fatal?;
    private static _fatalNonZero?;
    private static _replacement?;
    private static _replacementNonZero?;
    static fatal(): UtfErrorMode;
    static fatalNonZero(): UtfErrorMode;
    static replacement(): UtfErrorMode;
    static replacement(replacementChar: number): UtfErrorMode;
    static replacementNonZero(): UtfErrorMode;
    static replacementNonZero(replacementChar: number): UtfErrorMode;
}
//# sourceMappingURL=UtfErrorMode.d.ts.map