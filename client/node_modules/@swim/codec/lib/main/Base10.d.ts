import { Input } from "./Input";
import { Output } from "./Output";
import { Parser } from "./Parser";
import { Writer } from "./Writer";
import { Base10NumberParser } from "./Base10NumberParser";
import { Base10IntegerWriter } from "./Base10IntegerWriter";
export declare class Base10 {
    private constructor();
    static isDigit(c: number): boolean;
    static decodeDigit(c: number): number;
    static encodeDigit(b: number): number;
    static countDigits(value: number): number;
    static integerParser(): Parser<number>;
    static parseInteger(input: Input): Parser<number>;
    static decimalParser(): Parser<number>;
    static parseDecimal(input: Input): Parser<number>;
    static numberParser(): Parser<number>;
    static parseNumber(input: Input): Parser<number>;
    static integerWriter(): Writer<number, unknown>;
    static integerWriter(input: number): Writer<unknown, number>;
    static writeInteger(input: number, output: Output): Writer<unknown, unknown>;
    static NumberParser: typeof Base10NumberParser;
    static IntegerWriter: typeof Base10IntegerWriter;
}
//# sourceMappingURL=Base10.d.ts.map