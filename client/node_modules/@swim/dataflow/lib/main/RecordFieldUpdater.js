import { __extends } from "tslib";
import { AbstractInlet } from "@swim/streamlet";
import { RecordOutlet } from "./RecordOutlet";
var RecordFieldUpdater = (function (_super) {
    __extends(RecordFieldUpdater, _super);
    function RecordFieldUpdater(record, key) {
        var _this = _super.call(this) || this;
        _this._record = record;
        _this._key = key;
        return _this;
    }
    RecordFieldUpdater.prototype.onInvalidateOutput = function () {
        if (RecordOutlet.is(this._record)) {
            this._record.invalidateInputKey(this._key, 0);
        }
    };
    RecordFieldUpdater.prototype.onReconcileOutput = function (version) {
        if (this._input !== null) {
            var value = this._input.get();
            if (value !== void 0) {
                this._record.set(this._key, value);
            }
            else {
                this._record.delete(this._key);
            }
        }
    };
    return RecordFieldUpdater;
}(AbstractInlet));
export { RecordFieldUpdater };
//# sourceMappingURL=RecordFieldUpdater.js.map