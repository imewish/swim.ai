import { __extends } from "tslib";
import { Record } from "@swim/structure";
import { AbstractStreamlet } from "@swim/streamlet";
import { RecordOutlet } from "./RecordOutlet";
var RecordStreamlet = (function (_super) {
    __extends(RecordStreamlet, _super);
    function RecordStreamlet() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RecordStreamlet.prototype.isConstant = function () {
        return false;
    };
    RecordStreamlet.prototype.streamletClass = function () {
        return this.__proto__;
    };
    RecordStreamlet.prototype.compile = function () {
        AbstractStreamlet.reflectEachInlet(this, this.streamletClass(), function (inlet, name) {
            if (inlet.input() === null) {
                this.compileInlet(inlet, name);
            }
        }, this);
    };
    RecordStreamlet.prototype.compileInlet = function (inlet, name) {
        var scope = this.streamletScope();
        if (scope !== null) {
            var input = scope.outlet(name);
            if (input !== null) {
                inlet.bindInput(input);
            }
        }
    };
    return RecordStreamlet;
}(Record));
export { RecordStreamlet };
RecordOutlet.Streamlet = RecordStreamlet;
//# sourceMappingURL=RecordStreamlet.js.map