import { __extends } from "tslib";
import { Record } from "@swim/structure";
import { RecordOutlet } from "./RecordOutlet";
import { RecordModel } from "./RecordModel";
var RecordScope = (function (_super) {
    __extends(RecordScope, _super);
    function RecordScope(scope, state) {
        var _this = _super.call(this, state) || this;
        _this.scope = scope;
        return _this;
    }
    RecordScope.prototype.streamletScope = function () {
        return this.scope;
    };
    RecordScope.from = function (record) {
        var scope = new RecordScope(RecordScope.globalScope());
        scope.materialize(record);
        scope.compile(record);
        return scope;
    };
    RecordScope.of = function () {
        var items = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            items[_i] = arguments[_i];
        }
        return RecordScope.from(Record.of.apply(void 0, arguments));
    };
    return RecordScope;
}(RecordModel));
export { RecordScope };
RecordOutlet.Scope = RecordScope;
//# sourceMappingURL=RecordScope.js.map