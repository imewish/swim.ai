import { Value, Record } from "@swim/structure";
import { Inlet, Outlet, StreamletContext, StreamletScope, StreamletClass, Streamlet } from "@swim/streamlet";
export declare abstract class RecordStreamlet<I extends Value = Value, O extends Value = I> extends Record implements Streamlet<I, O> {
    isConstant(): boolean;
    protected streamletClass(): StreamletClass;
    abstract streamletScope(): StreamletScope<O> | null;
    abstract setStreamletScope(parent: StreamletScope<O> | null): void;
    abstract streamletContext(): StreamletContext | null;
    abstract setStreamletContext(context: StreamletContext | null): void;
    abstract inlet(key: string): Inlet<I> | null;
    abstract bindInput(key: string, input: Outlet<I>): void;
    abstract unbindInput(key: string): void;
    abstract outlet(key: string): Outlet<O> | null;
    abstract disconnectInputs(): void;
    abstract disconnectOutputs(): void;
    abstract invalidate(): void;
    abstract reconcile(version: number): void;
    compile(): void;
    compileInlet(inlet: Inlet<I>, name: string): void;
}
//# sourceMappingURL=RecordStreamlet.d.ts.map