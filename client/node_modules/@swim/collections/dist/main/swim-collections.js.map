{"version":3,"file":"swim-collections.js","sources":["../../../../../node_modules/tslib/tslib.es6.js","../../main/KeysCursor.ts","../../main/ValuesCursor.ts","../../main/NodeCursor.ts","../../main/BTreeContext.ts","../../main/BTree.ts","../../main/BTreePage.ts","../../main/BTreeLeaf.ts","../../main/BTreeNode.ts","../../main/BTreeNodeCursor.ts","../../main/STreeContext.ts","../../main/STree.ts","../../main/STreePage.ts","../../main/STreeLeaf.ts","../../main/STreeNode.ts","../../main/STreeNodeCursor.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\n\n/** @hidden */\nexport class KeysCursor<K, V> extends Cursor<K> {\n  private readonly _cursor: Cursor<[K, V]>;\n\n  constructor(cursor: Cursor<[K, V]>) {\n    super();\n    this._cursor = cursor;\n  }\n\n  isEmpty(): boolean {\n    return this._cursor.isEmpty();\n  }\n\n  head(): K {\n    return this._cursor.head()[0];\n  }\n\n  step(): void {\n    this._cursor.step();\n  }\n\n  skip(count: number): void {\n    this._cursor.skip(count);\n  }\n\n  hasNext(): boolean {\n    return this._cursor.hasNext();\n  }\n\n  nextIndex(): number {\n    return this._cursor.nextIndex();\n  }\n\n  next(): {value?: K, done: boolean} {\n    const {value, done} = this._cursor.next();\n    return {value: value && value[0], done};\n  }\n\n  hasPrevious(): boolean {\n    return this._cursor.hasPrevious();\n  }\n\n  previousIndex(): number {\n    return this._cursor.previousIndex();\n  }\n\n  previous(): {value?: K, done: boolean} {\n    const {value, done} = this._cursor.previous();\n    return {value: value && value[0], done};\n  }\n\n  delete(): void {\n    this._cursor.delete();\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\n\n/** @hidden */\nexport class ValuesCursor<K, V> extends Cursor<V> {\n  private readonly _cursor: Cursor<[K, V]>;\n\n  constructor(cursor: Cursor<[K, V]>) {\n    super();\n    this._cursor = cursor;\n  }\n\n  isEmpty(): boolean {\n    return this._cursor.isEmpty();\n  }\n\n  head(): V {\n    return this._cursor.head()[1];\n  }\n\n  step(): void {\n    this._cursor.step();\n  }\n\n  skip(count: number): void {\n    this._cursor.skip(count);\n  }\n\n  hasNext(): boolean {\n    return this._cursor.hasNext();\n  }\n\n  nextIndex(): number {\n    return this._cursor.nextIndex();\n  }\n\n  next(): {value?: V, done: boolean} {\n    const {value, done} = this._cursor.next();\n    return {value: value && value[1], done};\n  }\n\n  hasPrevious(): boolean {\n    return this._cursor.hasPrevious();\n  }\n\n  previousIndex(): number {\n    return this._cursor.previousIndex();\n  }\n\n  previous(): {value?: V, done: boolean} {\n    const {value, done} = this._cursor.previous();\n    return {value: value && value[1], done};\n  }\n\n  delete(): void {\n    this._cursor.delete();\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\n\n/** @hidden */\nexport abstract class NodeCursor<T, P> extends Cursor<T> {\n  /** @hidden */\n  readonly _pages: P[];\n  /** @hidden */\n  _index: number;\n  /** @hidden */\n  _pageIndex: number;\n  /** @hidden */\n  _pageCursor: Cursor<T> | undefined;\n\n  constructor(pages: P[], index: number = 0, pageIndex: number = 0, pageCursor?: Cursor<T>) {\n    super();\n    this._pages = pages;\n    this._index = index;\n    this._pageIndex = pageIndex;\n    this._pageCursor = pageCursor;\n  }\n\n  protected abstract pageSize(page: P): number;\n\n  protected abstract pageCursor(page: P): Cursor<T>;\n\n  protected abstract reversePageCursor(page: P): Cursor<T>;\n\n  isEmpty(): boolean {\n    do {\n      if (this._pageCursor) {\n        if (!this._pageCursor.isEmpty()) {\n          return false;\n        } else {\n          this._pageCursor = void 0;\n        }\n      } else if (this._pageIndex < this._pages.length) {\n        this._pageCursor = this.pageCursor(this._pages[this._pageIndex]);\n        this._pageIndex += 1;\n      } else {\n        this._pageIndex = this._pages.length;\n        return true;\n      }\n    } while (true);\n  }\n\n  head(): T {\n    do {\n      if (this._pageCursor) {\n        if (!this._pageCursor.isEmpty()) {\n          return this._pageCursor.head();\n        } else {\n          this._pageCursor = void 0;\n        }\n      } else {\n        if (this._pageIndex < this._pages.length) {\n          this._pageCursor = this.pageCursor(this._pages[this._pageIndex]);\n          this._pageIndex += 1;\n        } else {\n          this._pageIndex = this._pages.length;\n          throw new Error(\"empty\");\n        }\n      }\n    } while (true);\n  }\n\n  step(): void {\n    do {\n      if (this._pageCursor) {\n        if (!this._pageCursor.isEmpty()) {\n          this._index += 1;\n          return;\n        } else {\n          this._pageCursor = void 0;\n        }\n      } else {\n        if (this._pageIndex < this._pages.length) {\n          this._pageCursor = this.pageCursor(this._pages[this._pageIndex]);\n          this._pageIndex += 1;\n        } else {\n          this._pageIndex = this._pages.length;\n          throw new Error(\"empty\");\n        }\n      }\n    } while (true);\n  }\n\n  skip(count: number): void {\n    while (count > 0) {\n      if (this._pageCursor) {\n        if (this._pageCursor.hasNext()) {\n          this._index += 1;\n          count -= 1;\n          this._pageCursor.next();\n        } else {\n          this._pageCursor = void 0;\n        }\n      } else if (this._pageIndex < this._pages.length) {\n        const page = this._pages[this._pageIndex];\n        const pageSize = this.pageSize(page);\n        this._pageIndex += 1;\n        if (pageSize < count) {\n          this._pageCursor = this.pageCursor(page);\n          if (count > 0) {\n            this._index += count;\n            this._pageCursor!.skip(count);\n            count = 0;\n          }\n          break;\n        } else {\n          this._index += pageSize;\n          count -= pageSize;\n        }\n      } else {\n        break;\n      }\n    }\n  }\n\n  hasNext(): boolean {\n    do {\n      if (this._pageCursor) {\n        if (this._pageCursor.hasNext()) {\n          return true;\n        } else {\n          this._pageCursor = void 0;\n        }\n      } else if (this._pageIndex < this._pages.length) {\n        this._pageCursor = this.pageCursor(this._pages[this._pageIndex]);\n        this._pageIndex += 1;\n      } else {\n        this._pageIndex = this._pages.length;\n        return false;\n      }\n    } while (true);\n  }\n\n  nextIndex(): number {\n    return this._index;\n  }\n\n  next(): {value?: T, done: boolean} {\n    do {\n      if (this._pageCursor) {\n        if (this._pageCursor.hasNext()) {\n          this._index += 1;\n          return this._pageCursor.next();\n        } else {\n          this._pageCursor = void 0;\n        }\n      } else {\n        if (this._pageIndex < this._pages.length) {\n          this._pageCursor = this.pageCursor(this._pages[this._pageIndex]);\n          this._pageIndex += 1;\n        } else {\n          this._pageIndex = this._pages.length;\n          return {done: true};\n        }\n      }\n    } while (true);\n  }\n\n  hasPrevious(): boolean {\n    do {\n      if (this._pageCursor) {\n        if (this._pageCursor.hasPrevious()) {\n          return true;\n        } else {\n          this._pageCursor = void 0;\n        }\n      } else if (this._pageIndex > 0) {\n        this._pageCursor = this.reversePageCursor(this._pages[this._pageIndex - 1]);\n        this._pageIndex -= 1;\n      } else {\n        this._pageIndex = 0;\n        return false;\n      }\n    } while (true);\n  }\n\n  previousIndex(): number {\n    return this._index - 1;\n  }\n\n  previous(): {value?: T, done: boolean} {\n    do {\n      if (this._pageCursor) {\n        if (this._pageCursor.hasPrevious()) {\n          this._index -= 1;\n          return this._pageCursor.previous();\n        } else {\n          this._pageCursor = void 0;\n        }\n      } else if (this._pageIndex > 0) {\n        this._pageCursor = this.reversePageCursor(this._pages[this._pageIndex - 1]);\n        this._pageIndex -= 1;\n      } else {\n        this._pageIndex = 0;\n        return {done: true};\n      }\n    } while (true);\n  }\n\n  set(newValue: T): void {\n    this._pageCursor!.set(newValue);\n  }\n\n  delete(): void {\n    this._pageCursor!.delete();\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Objects} from \"@swim/util\";\nimport {BTreePage} from \"./BTreePage\";\n\n/** @hidden */\nexport abstract class BTreeContext<K, V> {\n  pageSplitSize: number;\n\n  compare(x: K, y: K): number {\n    return Objects.compare(x, y);\n  }\n\n  pageShouldSplit(page: BTreePage<K, V, unknown>): boolean {\n    return page.arity > this.pageSplitSize;\n  }\n\n  pageShouldMerge(page: BTreePage<K, V, unknown>): boolean {\n    return page.arity < this.pageSplitSize >>> 1;\n  }\n}\nBTreeContext.prototype.pageSplitSize = 32;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor, ReducedMap} from \"@swim/util\";\nimport {BTreeContext} from \"./BTreeContext\";\nimport {BTreePage} from \"./BTreePage\";\nimport {BTreeLeaf} from \"./BTreeLeaf\";\nimport {BTreeNode} from \"./BTreeNode\";\nimport {BTreeNodeCursor} from \"./BTreeNodeCursor\";\n\nexport class BTree<K = unknown, V = unknown, U = unknown> extends BTreeContext<K, V> implements ReducedMap<K, V, U> {\n  root: BTreePage<K, V, U>;\n\n  constructor(root: BTreePage<K, V, U> = BTree.Page.empty()) {\n    super();\n    this.root = root;\n  }\n\n  get size(): number {\n    return this.root.size;\n  }\n\n  isEmpty(): boolean {\n    return this.root.isEmpty();\n  }\n\n  has(key: K): boolean {\n    return this.root.has(key, this);\n  }\n\n  get(key: K): V | undefined {\n    return this.root.get(key, this);\n  }\n\n  getEntry(index: number): [K, V] | undefined {\n    return this.root.getEntry(index);\n  }\n\n  firstKey(): K | undefined {\n    const entry = this.root.firstEntry();\n    if (entry) {\n      return entry[0];\n    } else {\n      return void 0;\n    }\n  }\n\n  firstValue(): V | undefined {\n    const entry = this.root.firstEntry();\n    if (entry) {\n      return entry[1];\n    } else {\n      return void 0;\n    }\n  }\n\n  firstEntry(): [K, V] | undefined {\n    return this.root.firstEntry();\n  }\n\n  lastKey(): K | undefined {\n    const entry = this.root.lastEntry();\n    if (entry) {\n      return entry[0];\n    } else {\n      return void 0;\n    }\n  }\n\n  lastValue(): V | undefined {\n    const entry = this.root.lastEntry();\n    if (entry) {\n      return entry[1];\n    } else {\n      return void 0;\n    }\n  }\n\n  lastEntry(): [K, V] | undefined {\n    return this.root.lastEntry();\n  }\n\n  nextKey(key: K): K | undefined {\n    const entry = this.root.nextEntry(key, this);\n    if (entry) {\n      return entry[0];\n    } else {\n      return void 0;\n    }\n  }\n\n  nextValue(key: K): V | undefined {\n    const entry = this.root.nextEntry(key, this);\n    if (entry) {\n      return entry[1];\n    } else {\n      return void 0;\n    }\n  }\n\n  nextEntry(key: K): [K, V] | undefined {\n    return this.root.nextEntry(key, this);\n  }\n\n  previousKey(key: K): K | undefined {\n    const entry = this.root.previousEntry(key, this);\n    if (entry) {\n      return entry[0];\n    } else {\n      return void 0;\n    }\n  }\n\n  previousValue(key: K): V | undefined {\n    const entry = this.root.previousEntry(key, this);\n    if (entry) {\n      return entry[1];\n    } else {\n      return void 0;\n    }\n  }\n\n  previousEntry(key: K): [K, V] | undefined {\n    return this.root.previousEntry(key, this);\n  }\n\n  set(key: K, newValue: V): this {\n    const oldRoot = this.root;\n    let newRoot = this.root.updated(key, newValue, this);\n    if (oldRoot !== newRoot) {\n      if (newRoot.size > oldRoot.size) {\n        newRoot = newRoot.balanced(this);\n      }\n      this.root = newRoot;\n    }\n    return this;\n  }\n\n  delete(key: K): boolean {\n    const oldRoot = this.root;\n    const newRoot = this.root.removed(key, this);\n    if (oldRoot !== newRoot) {\n      this.root = newRoot;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  drop(lower: number): this {\n    if (lower > 0 && this.root.size > 0) {\n      if (lower < this.root.size) {\n        this.root = this.root.drop(lower, this);\n      } else {\n        this.root = BTree.Page.empty();\n      }\n    }\n    return this;\n  }\n\n  take(upper: number): this {\n    if (upper < this.root.size && this.root.size > 0) {\n      if (upper > 0) {\n        this.root = this.root.take(upper, this);\n      } else {\n        this.root = BTree.Page.empty();\n      }\n    }\n    return this;\n  }\n\n  clear(): void {\n    this.root = BTree.Page.empty();\n  }\n\n  updated(key: K, newValue: V): BTree<K, V> {\n    const oldRoot = this.root;\n    let newRoot = oldRoot.updated(key, newValue, this);\n    if (oldRoot !== newRoot) {\n      if (newRoot.size > oldRoot.size) {\n        newRoot = newRoot.balanced(this);\n      }\n      return this.copy(newRoot);\n    } else {\n      return this;\n    }\n  }\n\n  removed(key: K): BTree<K, V> {\n    const oldRoot = this.root;\n    const newRoot = oldRoot.removed(key, this);\n    if (oldRoot !== newRoot) {\n      return this.copy(newRoot);\n    } else {\n      return this;\n    }\n  }\n\n  cleared(): BTree<K, V> {\n    if (!this.root.isEmpty()) {\n      return this.copy(BTree.Page.empty());\n    } else {\n      return this;\n    }\n  }\n\n  reduced(identity: U, accumulator: (result: U, element: V) => U, combiner: (result: U, result2: U) => U): U {\n    const oldRoot = this.root;\n    const newRoot = oldRoot.reduced(identity, accumulator, combiner);\n    if (oldRoot !== newRoot) {\n      this.root = newRoot;\n    }\n    return newRoot.fold()!;\n  }\n\n  forEach<T, S = unknown>(callback: (this: S,\n                                     key: K,\n                                     value: V,\n                                     tree: BTree<K, V>) => T | void,\n                          thisArg?: S): T | undefined {\n    return this.root.forEach(callback, thisArg, this);\n  }\n\n  keys(): Cursor<K> {\n    return this.root.keys();\n  }\n\n  values(): Cursor<V> {\n    return this.root.values();\n  }\n\n  entries(): Cursor<[K, V]> {\n    return this.root.entries();\n  }\n\n  reverseKeys(): Cursor<K> {\n    return this.root.reverseKeys();\n  }\n\n  reverseValues(): Cursor<V> {\n    return this.root.reverseValues();\n  }\n\n  reverseEntries(): Cursor<[K, V]> {\n    return this.root.reverseEntries();\n  }\n\n  clone(): BTree<K, V> {\n    return this.copy(this.root);\n  }\n\n  protected copy(root: BTreePage<K, V, U>): BTree<K, V, U> {\n    const tree = new BTree(root);\n    if (tree.compare !== this.compare) {\n      tree.compare = this.compare;\n    }\n    if (tree.pageSplitSize !== this.pageSplitSize) {\n      tree.pageSplitSize = this.pageSplitSize;\n    }\n    return tree;\n  }\n\n  // Forward type declarations\n  /** @hidden */\n  static Page: typeof BTreePage; // defined by BTreePage\n  /** @hidden */\n  static Leaf: typeof BTreeLeaf; // defined by BTreeLeaf\n  /** @hidden */\n  static Node: typeof BTreeNode; // defined by BTreeNode\n  /** @hidden */\n  static NodeCursor: typeof BTreeNodeCursor; // defined by BTreeNodeCursor\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {KeysCursor} from \"./KeysCursor\";\nimport {ValuesCursor} from \"./ValuesCursor\";\nimport {BTreeContext} from \"./BTreeContext\";\nimport {BTree} from \"./BTree\";\nimport {BTreeLeaf} from \"./BTreeLeaf\";\n\n/** @hidden */\nexport abstract class BTreePage<K, V, U> {\n  abstract get arity(): number;\n\n  abstract get size(): number;\n\n  abstract isEmpty(): boolean;\n\n  abstract fold(): U | undefined;\n\n  abstract minKey(): K;\n\n  abstract maxKey(): K;\n\n  abstract has(key: K, tree: BTreeContext<K, V>): boolean;\n\n  abstract get(key: K, tree: BTreeContext<K, V>): V | undefined;\n\n  abstract getEntry(index: number): [K, V] | undefined;\n\n  abstract firstEntry(): [K, V] | undefined;\n\n  abstract lastEntry(): [K, V] | undefined;\n\n  abstract nextEntry(key: K, tree: BTreeContext<K, V>): [K, V] | undefined;\n\n  abstract previousEntry(key: K, tree: BTreeContext<K, V>): [K, V] | undefined;\n\n  abstract updated(key: K, newValue: V, tree: BTreeContext<K, V>): BTreePage<K, V, U>;\n\n  abstract removed(key: K, tree: BTreeContext<K, V>): BTreePage<K, V, U>;\n\n  abstract drop(lower: number, tree: BTreeContext<K, V>): BTreePage<K, V, U>;\n\n  abstract take(upper: number, tree: BTreeContext<K, V>): BTreePage<K, V, U>;\n\n  abstract balanced(tree: BTreeContext<K, V>): BTreePage<K, V, U>;\n\n  abstract split(index: number): BTreePage<K, V, U>;\n\n  abstract splitLeft(index: number): BTreePage<K, V, U>;\n\n  abstract splitRight(index: number): BTreePage<K, V, U>;\n\n  abstract reduced(identity: U, accumulator: (result: U, element: V) => U,\n                   combiner: (result: U, result2: U) => U): BTreePage<K, V, U>;\n\n  abstract forEach<T, S>(callback: (this: S,\n                                    key: K,\n                                    value: V,\n                                    tree: BTree<K, V>) => T | void,\n                         thisArg: S,\n                         tree: BTree<K, V>): T | undefined;\n\n  keys(): Cursor<K> {\n    return new KeysCursor(this.entries());\n  }\n\n  values(): Cursor<V> {\n    return new ValuesCursor(this.entries());\n  }\n\n  abstract entries(): Cursor<[K, V]>;\n\n  reverseKeys(): Cursor<K> {\n    return new KeysCursor(this.reverseEntries());\n  }\n\n  reverseValues(): Cursor<V> {\n    return new ValuesCursor(this.reverseEntries());\n  }\n\n  abstract reverseEntries(): Cursor<[K, V]>;\n\n  private static _empty: BTreeLeaf<unknown, unknown, unknown>;\n\n  static empty<K, V, U>(): BTreeLeaf<K, V, U> {\n    if (!BTreePage._empty) {\n      BTreePage._empty = new BTree.Leaf([], void 0);\n    }\n    return BTreePage._empty as BTreeLeaf<K, V, U>;\n  }\n}\nBTree.Page = BTreePage;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {BTreeContext} from \"./BTreeContext\";\nimport {BTree} from \"./BTree\";\nimport {BTreePage} from \"./BTreePage\";\nimport {BTreeNode} from \"./BTreeNode\";\n\n/** @hidden */\nexport class BTreeLeaf<K, V, U> extends BTreePage<K, V, U> {\n  readonly _slots: [K, V][];\n  readonly _fold: U | undefined;\n\n  constructor(slots: [K, V][], fold: U | undefined) {\n    super();\n    this._slots = slots;\n    this._fold = fold;\n  }\n\n  get arity(): number {\n    return this._slots.length;\n  }\n\n  get size(): number {\n    return this._slots.length;\n  }\n\n  isEmpty(): boolean {\n    return this._slots.length === 0;\n  }\n\n  fold(): U | undefined {\n    return this._fold;\n  }\n\n  minKey(): K {\n    return this._slots[0][0];\n  }\n\n  maxKey(): K {\n    return this._slots[this._slots.length - 1][0];\n  }\n\n  has(key: K, tree: BTreeContext<K, V>): boolean {\n    return this.lookup(key, tree) >= 0;\n  }\n\n  get(key: K, tree: BTreeContext<K, V>): V | undefined {\n    const x = this.lookup(key, tree);\n    if (x >= 0) {\n      return this._slots[x][1];\n    } else {\n      return void 0;\n    }\n  }\n\n  getEntry(index: number): [K, V] | undefined {\n    return this._slots[index];\n  }\n\n  firstEntry(): [K, V] | undefined {\n    if (this._slots.length) {\n      return this._slots[0];\n    } else {\n      return void 0;\n    }\n  }\n\n  lastEntry(): [K, V] | undefined {\n    if (this._slots.length) {\n      return this._slots[this._slots.length - 1];\n    } else {\n      return void 0;\n    }\n  }\n\n  nextEntry(key: K, tree: BTreeContext<K, V>): [K, V] | undefined {\n    let x = this.lookup(key, tree);\n    if (x >= 0) {\n      x += 1;\n    } else {\n      x = -(x + 1);\n    }\n    return this._slots[x];\n  }\n\n  previousEntry(key: K, tree: BTreeContext<K, V>): [K, V] | undefined {\n    let x = this.lookup(key, tree);\n    if (x >= 0) {\n      x -= 1;\n    } else {\n      x = -(x + 2);\n    }\n    return this._slots[x];\n  }\n\n  updated(key: K, newValue: V, tree: BTreeContext<K, V>): BTreeLeaf<K, V, U> {\n    let x = this.lookup(key, tree);\n    if (x >= 0) {\n      return this.updatedSlot(x, key, newValue);\n    } else {\n      x = -(x + 1);\n      return this.insertedSlot(x, key, newValue);\n    }\n  }\n\n  private updatedSlot(x: number, key: K, newValue: V): BTreeLeaf<K, V, U> {\n    const oldSlots = this._slots;\n    if (newValue !== oldSlots[x][1]) {\n      const newSlots = oldSlots.slice(0);\n      newSlots[x] = [key, newValue];\n      return this.newLeaf(newSlots, void 0);\n    } else {\n      return this;\n    }\n  }\n\n  private insertedSlot(x: number, key: K, newValue: V): BTreeLeaf<K, V, U> {\n    const oldSlots = this._slots;\n    const n = oldSlots.length + 1;\n    const newSlots = new Array<[K, V]>(n);\n    for (let i = 0; i < x; i += 1) {\n      newSlots[i] = oldSlots[i];\n    }\n    newSlots[x] = [key, newValue];\n    for (let i = x; i < n - 1; i += 1) {\n      newSlots[i + 1] = oldSlots[i];\n    }\n    return this.newLeaf(newSlots, void 0);\n  }\n\n  removed(key: K, tree: BTreeContext<K, V>): BTreeLeaf<K, V, U> {\n    const x = this.lookup(key, tree);\n    if (x >= 0) {\n      if (this._slots.length > 1) {\n        return this.removedSlot(x);\n      } else {\n        return BTreePage.empty();\n      }\n    } else {\n      return this;\n    }\n  }\n\n  private removedSlot(x: number): BTreeLeaf<K, V, U> {\n    const oldSlots = this._slots;\n    const newSlots = new Array<[K, V]>(oldSlots.length - 1);\n    for (let i = 0; i < x; i += 1) {\n      newSlots[i] = oldSlots[i];\n    }\n    for (let i = x; i < newSlots.length; i += 1) {\n      newSlots[i] = oldSlots[i + 1];\n    }\n    return this.newLeaf(newSlots, void 0);\n  }\n\n  drop(lower: number, tree: BTreeContext<K, V>): BTreeLeaf<K, V, U> {\n    if (lower > 0) {\n      const oldSlots = this._slots;\n      if (lower < oldSlots.length) {\n        const size = oldSlots.length - lower;\n        const newSlots = new Array<[K, V]>(size);\n        for (let i = 0; i < size; i += 1) {\n          newSlots[i] = oldSlots[i + lower];\n        }\n        return this.newLeaf(newSlots, void 0);\n      } else {\n        return BTreePage.empty();\n      }\n    } else {\n      return this;\n    }\n  }\n\n  take(upper: number, tree: BTreeContext<K, V>): BTreeLeaf<K, V, U> {\n    const oldSlots = this._slots;\n    if (upper < oldSlots.length) {\n      if (upper > 0) {\n        const newSlots = new Array<[K, V]>(upper);\n        for (let i = 0; i < upper; i += 1) {\n          newSlots[i] = oldSlots[i];\n        }\n        return this.newLeaf(newSlots, void 0);\n      } else {\n        return BTreePage.empty();\n      }\n    } else {\n      return this;\n    }\n  }\n\n  balanced(tree: BTreeContext<K, V>): BTreePage<K, V, U> {\n    const n = this._slots.length;\n    if (n > 1 && tree.pageShouldSplit(this)) {\n      const x = n >>> 1;\n      return this.split(x);\n    } else {\n      return this;\n    }\n  }\n\n  split(x: number): BTreeNode<K, V, U> {\n    const newPages = new Array<BTreePage<K, V, U>>(2);\n    const newLeftPage = this.splitLeft(x);\n    const newRightPage = this.splitRight(x);\n    newPages[0] = newLeftPage;\n    newPages[1] = newRightPage;\n\n    const newKnots = new Array<K>(1);\n    newKnots[0] = newRightPage.minKey();\n\n    return this.newNode(newPages, newKnots, void 0, this._slots.length);\n  }\n\n  splitLeft(x: number): BTreeLeaf<K, V, U> {\n    const oldSlots = this._slots;\n    const newSlots = new Array<[K, V]>(x);\n    for (let i = 0; i < x; i += 1) {\n      newSlots[i] = oldSlots[i];\n    }\n    return this.newLeaf(newSlots, void 0);\n  }\n\n  splitRight(x: number): BTreeLeaf<K, V, U> {\n    const oldSlots = this._slots;\n    const y = oldSlots.length - x;\n    const newSlots = new Array<[K, V]>(y);\n    for (let i = 0; i < y; i += 1) {\n      newSlots[i] = oldSlots[i + x];\n    }\n    return this.newLeaf(newSlots, void 0);\n  }\n\n  reduced(identity: U, accumulator: (result: U, element: V) => U,\n          combiner: (result: U, result2: U) => U): BTreeLeaf<K, V, U> {\n    if (this._fold === void 0) {\n      const slots = this._slots;\n      let fold = identity;\n      for (let i = 0, n = slots.length; i < n; i += 1) {\n        fold = accumulator(fold, slots[i][1]);\n      }\n      return this.newLeaf(slots, fold);\n    } else {\n      return this;\n    }\n  }\n\n  forEach<T, S>(callback: (this: S,\n                           key: K,\n                           value: V,\n                           tree: BTree<K, V>) => T | void,\n                thisArg: S,\n                tree: BTree<K, V>): T | undefined {\n    const slots = this._slots;\n    for (let i = 0, n = slots.length; i < n; i += 1) {\n      const slot = slots[i];\n      const result = callback.call(thisArg, slot[0], slot[1], tree);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    return void 0;\n  }\n\n  entries(): Cursor<[K, V]> {\n    return Cursor.array(this._slots);\n  }\n\n  reverseEntries(): Cursor<[K, V]> {\n    return Cursor.array(this._slots, this._slots.length);\n  }\n\n  private lookup(key: K, tree: BTreeContext<K, V>): number {\n    let lo = 0;\n    let hi = this._slots.length - 1;\n    while (lo <= hi) {\n      const mid = (lo + hi) >>> 1;\n      const order = tree.compare(key, this._slots[mid][0]);\n      if (order > 0) {\n        lo = mid + 1;\n      } else if (order < 0) {\n        hi = mid - 1;\n      } else {\n        return mid;\n      }\n    }\n    return -(lo + 1);\n  }\n\n  protected newLeaf(slots: [K, V][], fold: U | undefined): BTreeLeaf<K, V, U> {\n    return new BTreeLeaf(slots, fold);\n  }\n\n  protected newNode(pages: BTreePage<K, V, U>[], knots: K[], fold: U | undefined, size: number): BTreeNode<K, V, U> {\n    return new BTree.Node(pages, knots, fold, size);\n  }\n}\nBTree.Leaf = BTreeLeaf;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {BTreeContext} from \"./BTreeContext\";\nimport {BTree} from \"./BTree\";\nimport {BTreePage} from \"./BTreePage\";\n\n/** @hidden */\nexport class BTreeNode<K, V, U> extends BTreePage<K, V, U> {\n  readonly _pages: BTreePage<K, V, U>[];\n  readonly _knots: K[];\n  readonly _fold: U | undefined;\n  readonly _size: number;\n\n  constructor(pages: BTreePage<K, V, U>[], knots: K[], fold: U | undefined, size: number) {\n    super();\n    this._pages = pages;\n    this._knots = knots;\n    this._fold = fold;\n    this._size = size;\n  }\n\n  get arity(): number {\n    return this._pages.length;\n  }\n\n  get size(): number {\n    return this._size;\n  }\n\n  isEmpty(): boolean {\n    return this._size === 0;\n  }\n\n  fold(): U | undefined {\n    return this._fold;\n  }\n\n  minKey(): K {\n    return this._pages[0].minKey();\n  }\n\n  maxKey(): K {\n    return this._pages[this._pages.length - 1].maxKey();\n  }\n\n  has(key: K, tree: BTreeContext<K, V>): boolean {\n    let xx = this.lookup(key, tree);\n    if (xx > 0) {\n      xx += 1;\n    } else if (xx < 0) {\n      xx = -(xx + 1);\n    } else {\n      return true;\n    }\n    return this._pages[xx].has(key, tree);\n  }\n\n  get(key: K, tree: BTreeContext<K, V>): V | undefined {\n    let x = this.lookup(key, tree);\n    if (x >= 0) {\n      x += 1;\n    } else {\n      x = -(x + 1);\n    }\n    return this._pages[x].get(key, tree);\n  }\n\n  getEntry(x: number): [K, V] | undefined {\n    const pages = this._pages;\n    for (let i = 0, n = pages.length; i < n; i += 1) {\n      const page = pages[i];\n      if (x < page.size) {\n        return page.getEntry(x);\n      } else {\n        x -= page.size;\n      }\n    }\n    return void 0;\n  }\n\n  firstEntry(): [K, V] | undefined {\n    const pages = this._pages;\n    if (pages.length) {\n      return pages[0].firstEntry();\n    } else {\n      return void 0;\n    }\n  }\n\n  lastEntry(): [K, V] | undefined {\n    const pages = this._pages;\n    if (pages.length) {\n      return pages[pages.length - 1].lastEntry();\n    } else {\n      return void 0;\n    }\n  }\n\n  nextEntry(key: K, tree: BTreeContext<K, V>): [K, V] | undefined {\n    let x = this.lookup(key, tree);\n    if (x >= 0) {\n      x += 1;\n    } else {\n      x = -(x + 1);\n    }\n    const pages = this._pages;\n    let entry = pages[x].nextEntry(key, tree);\n    if (entry === void 0 && x + 1 < pages.length) {\n      entry = pages[x + 1].nextEntry(key, tree);\n    }\n    return entry;\n  }\n\n  previousEntry(key: K, tree: BTreeContext<K, V>): [K, V] | undefined {\n    let x = this.lookup(key, tree);\n    if (x >= 0) {\n      x += 1;\n    } else {\n      x = -(x + 1);\n    }\n    const pages = this._pages;\n    let entry = pages[x].previousEntry(key, tree);\n    if (entry === void 0 && x > 0) {\n      entry = pages[x - 1].previousEntry(key, tree);\n    }\n    return entry;\n  }\n\n  updated(key: K, newValue: V, tree: BTreeContext<K, V>): BTreeNode<K, V, U> {\n    let x = this.lookup(key, tree);\n    if (x >= 0) {\n      x += 1;\n    } else {\n      x = -(x + 1);\n    }\n    const oldPage = this._pages[x];\n    const newPage = oldPage.updated(key, newValue, tree);\n    if (oldPage !== newPage) {\n      if (oldPage.size !== newPage.size && tree.pageShouldSplit(newPage)) {\n        return this.updatedPageSplit(x, newPage, oldPage);\n      } else {\n        return this.updatedPage(x, newPage, oldPage);\n      }\n    } else {\n      return this;\n    }\n  }\n\n  private updatedPage(x: number, newPage: BTreePage<K, V, U>, oldPage: BTreePage<K, V, U>): BTreeNode<K, V, U> {\n    const oldPages = this._pages;\n    const newPages = oldPages.slice(0);\n    newPages[x] = newPage;\n\n    const oldKnots = this._knots;\n    let newKnots: K[];\n    if (oldKnots.length > 0) {\n      newKnots = oldKnots.slice(0);\n      if (x > 0) {\n        newKnots[x - 1] = newPage.minKey();\n      }\n    } else {\n      newKnots = [];\n    }\n\n    const newSize = this._size - oldPage.size + newPage.size;\n    return this.newNode(newPages, newKnots, void 0, newSize);\n  }\n\n  private updatedPageSplit(x: number, newPage: BTreePage<K, V, U>, oldPage: BTreePage<K, V, U>): BTreeNode<K, V, U> {\n    const oldPages = this._pages;\n    const newPages = new Array<BTreePage<K, V, U>>(oldPages.length + 1);\n    for (let i = 0; i < x; i += 1) {\n      newPages[i] = oldPages[i];\n    }\n\n    const newLeftPage = newPage.splitLeft(newPage.arity >>> 1);\n    const newRightPage = newPage.splitRight(newPage.arity >>> 1);\n    newPages[x] = newLeftPage;\n    newPages[x + 1] = newRightPage;\n    for (let i = x + 1; i < oldPages.length; i += 1) {\n      newPages[i + 1] = oldPages[i];\n    }\n\n    const oldKnots = this._knots;\n    const newKnots = new Array<K>(oldPages.length);\n    if (x > 0) {\n      for (let i = 0; i < x - 1; i += 1) {\n        newKnots[i] = oldKnots[i];\n      }\n      newKnots[x - 1] = newLeftPage.minKey();\n      newKnots[x] = newRightPage.minKey();\n      for (let i = x; i < oldKnots.length; i += 1) {\n        newKnots[i + 1] = oldKnots[i];\n      }\n    } else {\n      newKnots[0] = newRightPage.minKey();\n      for (let i = 0; i < oldKnots.length; i += 1) {\n        newKnots[i + 1] = oldKnots[i];\n      }\n    }\n\n    const newSize = this._size - oldPage.size + newPage.size;\n    return this.newNode(newPages, newKnots, void 0, newSize);\n  }\n\n  private updatedPageMerge(x: number, newPage: BTreeNode<K, V, U>, oldPage: BTreePage<K, V, U>): BTreeNode<K, V, U> {\n    const oldPages = this._pages;\n    const midPages = newPage._pages;\n    const newPages = new Array<BTreePage<K, V, U>>(oldPages.length + midPages.length - 1);\n    for (let i = 0; i < x; i += 1) {\n      newPages[i] = oldPages[i];\n    }\n    for (let i = 0; i < midPages.length; i += 1) {\n      newPages[i + x] = midPages[i];\n    }\n    for (let i = x + 1; i < oldPages.length; i += 1) {\n      newPages[i + midPages.length - 1] = oldPages[i];\n    }\n\n    const oldKnots = this._knots;\n    const midKnots = newPage._knots;\n    const newKnots = new Array<K>(newPages.length - 1);\n    if (x > 0) {\n      for (let i = 0; i < x - 1; i += 1) {\n        newKnots[i] = oldKnots[i];\n      }\n      newKnots[x - 1] = midPages[0].minKey();\n      for (let i = 0; i < midKnots.length; i += 1) {\n        newKnots[i + x] = midKnots[i];\n      }\n      for (let i = x; i < oldKnots.length; i += 1) {\n        newKnots[i + midKnots.length] = oldKnots[i];\n      }\n    } else {\n      for (let i = 0; i < midKnots.length; i += 1) {\n        newKnots[i] = midKnots[i];\n      }\n      newKnots[midKnots.length] = oldPages[1].minKey();\n      for (let i = 1; i < oldKnots.length; i += 1) {\n        newKnots[i + midKnots.length] = oldKnots[i];\n      }\n    }\n\n    const newSize = this._size - oldPage.size + newPage.size;\n    return this.newNode(newPages, newKnots, void 0, newSize);\n  }\n\n  removed(key: K, tree: BTreeContext<K, V>): BTreePage<K, V, U> {\n    let x = this.lookup(key, tree);\n    if (x >= 0) {\n      x += 1;\n    } else {\n      x = -(x + 1);\n    }\n    const oldPage = this._pages[x];\n    const newPage = oldPage.removed(key, tree);\n    if (oldPage !== newPage) {\n      return this.replacedPage(x, newPage, oldPage, tree);\n    } else {\n      return this;\n    }\n  }\n\n  private replacedPage(x: number, newPage: BTreePage<K, V, U>, oldPage: BTreePage<K, V, U>,\n                       tree: BTreeContext<K, V>): BTreePage<K, V, U> {\n    if (!newPage.isEmpty()) {\n      if (newPage instanceof BTreeNode && tree.pageShouldMerge(newPage)) {\n        return this.updatedPageMerge(x, newPage, oldPage);\n      } else {\n        return this.updatedPage(x, newPage, oldPage);\n      }\n    } else if (this._pages.length > 2) {\n      return this.removedPage(x, newPage, oldPage);\n    } else if (this._pages.length > 1) {\n      if (x === 0) {\n        return this._pages[1];\n      } else {\n        return this._pages[0];\n      }\n    } else {\n      return BTreePage.empty();\n    }\n  }\n\n  private removedPage(x: number, newPage: BTreePage<K, V, U>, oldPage: BTreePage<K, V, U>): BTreeNode<K, V, U> {\n    const oldPages = this._pages;\n    const newPages = new Array<BTreePage<K, V, U>>(oldPages.length - 1);\n    for (let i = 0; i < x; i += 1) {\n      newPages[i] = oldPages[i];\n    }\n    for (let i = x + 1; i < oldPages.length; i += 1) {\n      newPages[i - 1] = oldPages[i];\n    }\n\n    const oldKnots = this._knots;\n    const newKnots = new Array<K>(oldKnots.length - 1);\n    if (x > 0) {\n      for (let i = 0; i < x - 1; i += 1) {\n        newKnots[i] = oldKnots[i];\n      }\n      for (let i = x; i < oldKnots.length; i += 1) {\n        newKnots[i - 1] = oldKnots[i];\n      }\n    } else {\n      for (let i = 1; i < oldKnots.length; i += 1) {\n        newKnots[i - 1] = oldKnots[i];\n      }\n    }\n\n    const newSize = this._size - oldPage.size;\n    return this.newNode(newPages, newKnots, void 0, newSize);\n  }\n\n  drop(lower: number, tree: BTreeContext<K, V>): BTreePage<K, V, U> {\n    if (lower > 0) {\n      let newSize = this._size;\n      if (lower < newSize) {\n        const oldPages = this._pages;\n        let x = 0;\n        while (x < oldPages.length) {\n          const size = oldPages[x].size;\n          if (size <= lower) {\n            newSize -= size;\n            lower -= size;\n            x += 1;\n          } else {\n            break;\n          }\n        }\n        const newArity = oldPages.length - x;\n        if (newArity > 1) {\n          let newNode: BTreeNode<K, V, U>;\n          if (x > 0) {\n            const newPages = new Array<BTreePage<K, V, U>>(newArity);\n            for (let i = 0; i < newArity; i += 1) {\n              newPages[i] = oldPages[i + x];\n            }\n            const newKnots = new Array<K>(newArity - 1);\n            for (let i = 0; i < newKnots.length; i += 1) {\n              newKnots[i] = this._knots[i + x];\n            }\n            newNode = this.newNode(newPages, newKnots, void 0, newSize);\n          } else {\n            newNode = this;\n          }\n          if (lower > 0) {\n            const oldPage = oldPages[x];\n            const newPage = oldPage.drop(lower, tree);\n            return newNode.replacedPage(0, newPage, oldPage, tree);\n          } else {\n            return newNode;\n          }\n        } else {\n          return oldPages[x].drop(lower, tree);\n        }\n      } else {\n        return BTreePage.empty();\n      }\n    } else {\n      return this;\n    }\n  }\n\n  take(upper: number, tree: BTreeContext<K, V>): BTreePage<K, V, U> {\n    if (upper < this._size) {\n      if (upper > 0) {\n        const oldPages = this._pages;\n        let x = 0;\n        let newSize = 0;\n        while (x < oldPages.length && upper > 0) {\n          const size = oldPages[x].size;\n          newSize += size;\n          x += 1;\n          if (size <= upper) {\n            upper -= size;\n          } else {\n            break;\n          }\n        }\n        const newArity = upper === 0 ? x : x + 1;\n        if (newArity > 1) {\n          let newNode: BTreeNode<K, V, U>;\n          if (x < oldPages.length) {\n            const newPages = new Array<BTreePage<K, V, U>>(newArity);\n            for (let i = 0; i < newArity; i += 1) {\n              newPages[i] = oldPages[i];\n            }\n            const newKnots = new Array<K>(newArity - 1);\n            for (let i = 0; i < newKnots.length; i += 1) {\n              newKnots[i] = this._knots[i];\n            }\n            newNode = this.newNode(newPages, newKnots, void 0, newSize);\n          } else {\n            newNode = this;\n          }\n          if (upper > 0) {\n            const oldPage = oldPages[x - 1];\n            const newPage = oldPage.take(upper, tree);\n            return newNode.replacedPage(x - 1, newPage, oldPage, tree);\n          } else {\n            return newNode;\n          }\n        } else if (upper > 0) {\n          return oldPages[0].take(upper, tree);\n        } else {\n          return oldPages[0];\n        }\n      } else {\n        return BTreePage.empty();\n      }\n    } else {\n      return this;\n    }\n  }\n\n  balanced(tree: BTreeContext<K, V>): BTreeNode<K, V, U> {\n    if (this._pages.length > 1 && tree.pageShouldSplit(this)) {\n      const x = this._knots.length >>> 1;\n      return this.split(x);\n    } else {\n      return this;\n    }\n  }\n\n  split(x: number): BTreeNode<K, V, U> {\n    const newPages = new Array<BTreePage<K, V, U>>(2);\n    const newLeftPage = this.splitLeft(x);\n    const newRightPage = this.splitRight(x);\n    newPages[0] = newLeftPage;\n    newPages[1] = newRightPage;\n\n    const newKnots = new Array<K>(1);\n    newKnots[0] = newRightPage.minKey();\n\n    return this.newNode(newPages, newKnots, void 0, this._size);\n  }\n\n  splitLeft(x: number): BTreeNode<K, V, U> {\n    const oldPages = this._pages;\n    const newPages = new Array<BTreePage<K, V, U>>(x + 1);\n    for (let i = 0; i < x + 1; i += 1) {\n      newPages[i] = oldPages[i];\n    }\n\n    const oldKnots = this._knots;\n    const newKnots = new Array<K>(x);\n    for (let i = 0; i < x; i += 1) {\n      newKnots[i] = oldKnots[i];\n    }\n\n    let newSize = 0;\n    for (let i = 0; i <= x; i += 1) {\n      newSize += newPages[i].size;\n    }\n\n    return this.newNode(newPages, newKnots, void 0, newSize);\n  }\n\n  splitRight(x: number): BTreeNode<K, V, U> {\n    const oldPages = this._pages;\n    const newArity = oldPages.length - (x + 1);\n    const newPages = new Array<BTreePage<K, V, U>>(newArity);\n    for (let i = 0; i < newArity; i += 1) {\n      newPages[i] = oldPages[i + (x + 1)];\n    }\n\n    const oldKnots = this._knots;\n    const newKnots = new Array<K>(newArity - 1);\n    for (let i = 0; i < newKnots.length; i += 1) {\n      newKnots[i] = oldKnots[i + (x + 1)];\n    }\n\n    let newSize = 0;\n    for (let i = 0; i < newArity; i += 1) {\n      newSize += newPages[i].size;\n    }\n\n    return this.newNode(newPages, newKnots, void 0, newSize);\n  }\n\n  reduced(identity: U, accumulator: (result: U, element: V) => U,\n          combiner: (result: U, result2: U) => U): BTreeNode<K, V, U> {\n    if (this._fold === void 0) {\n      const oldPages = this._pages;\n      const n = oldPages.length;\n      const newPages = new Array<BTreePage<K, V, U>>(n);\n      for (let i = 0; i < n; i += 1) {\n        newPages[i] = oldPages[i].reduced(identity, accumulator, combiner);\n      }\n      // assert n > 0;\n      let fold: U = newPages[0].fold()!;\n      for (let i = 1; i < n; i += 1) {\n        fold = combiner(fold, newPages[i].fold()!);\n      }\n      return this.newNode(newPages, this._knots, fold, this._size);\n    } else {\n      return this;\n    }\n  }\n\n  forEach<T, S>(callback: (this: S,\n                           key: K,\n                           value: V,\n                           tree: BTree<K, V>) => T | void,\n                thisArg: S,\n                tree: BTree<K, V>): T | undefined {\n    const pages = this._pages;\n    for (let i = 0, n = pages.length; i < n; i += 1) {\n      const result = pages[i].forEach(callback, thisArg, tree);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    return void 0;\n  }\n\n  entries(): Cursor<[K, V]> {\n    return new BTree.NodeCursor(this._pages);\n  }\n\n  reverseEntries(): Cursor<[K, V]> {\n    return new BTree.NodeCursor(this._pages, this._size, this._pages.length);\n  }\n\n  private lookup(key: K, tree: BTreeContext<K, V>): number {\n    let lo = 0;\n    let hi = this._knots.length - 1;\n    while (lo <= hi) {\n      const mid = (lo + hi) >>> 1;\n      const order = tree.compare(key, this._knots[mid]);\n      if (order > 0) {\n        lo = mid + 1;\n      } else if (order < 0) {\n        hi = mid - 1;\n      } else {\n        return mid;\n      }\n    }\n    return -(lo + 1);\n  }\n\n  protected newNode(pages: BTreePage<K, V, U>[], knots: K[], fold: U | undefined, size: number): BTreeNode<K, V, U> {\n    return new BTreeNode(pages, knots, fold, size);\n  }\n}\nBTree.Node = BTreeNode;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {NodeCursor} from \"./NodeCursor\";\nimport {BTree} from \"./BTree\";\nimport {BTreePage} from \"./BTreePage\";\n\nexport class BTreeNodeCursor<K, V, U> extends NodeCursor<[K, V], BTreePage<K, V, U>> {\n  constructor(pages: BTreePage<K, V, U>[], index?: number, pageIndex?: number,\n              subCursor?: Cursor<[K, V]>) {\n    super(pages, index, pageIndex, subCursor);\n  }\n\n  protected pageSize(page: BTreePage<K, V, U>): number {\n    return page.size;\n  }\n\n  protected pageCursor(page: BTreePage<K, V, U>): Cursor<[K, V]> {\n    return page.entries();\n  }\n\n  protected reversePageCursor(page: BTreePage<K, V, U>): Cursor<[K, V]> {\n    return page.reverseEntries();\n  }\n}\nBTree.NodeCursor = BTreeNodeCursor;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Random, Objects} from \"@swim/util\";\nimport {STreePage} from \"./STreePage\";\n\n/** @hidden */\nexport abstract class STreeContext<V, I> {\n  pageSplitSize: number;\n \n  identify(value: V): I {\n    const id = new Uint8Array(6);\n    Random.fillBytes(id);\n    return id as unknown as I;\n  }\n\n  compare(x: I, y: I): number {\n    return Objects.compare(x, y);\n  }\n\n  pageShouldSplit(page: STreePage<V, I>): boolean {\n    return page.arity > this.pageSplitSize;\n  }\n\n  pageShouldMerge(page: STreePage<V, I>): boolean {\n    return page.arity < this.pageSplitSize >>> 1;\n  }\n}\nSTreeContext.prototype.pageSplitSize = 32;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {STreeContext} from \"./STreeContext\";\nimport {STreePage} from \"./STreePage\";\nimport {STreeLeaf} from \"./STreeLeaf\";\nimport {STreeNode} from \"./STreeNode\";\nimport {STreeNodeCursor} from \"./STreeNodeCursor\";\n\nexport class STree<V = unknown, I = unknown> extends STreeContext<V, I> {\n  root: STreePage<V, I>;\n\n  constructor(root: STreePage<V, I> = STree.Page.empty()) {\n    super();\n    this.root = root;\n  }\n\n  get length(): number {\n    return this.root.size;\n  }\n\n  isEmpty(): boolean {\n    return this.root.isEmpty();\n  }\n\n  get(index: number, id?: I): V | undefined {\n    if (id !== void 0) {\n      index = this.lookup(id, index);\n      if (index < 0) {\n        return void 0;\n      }\n    }\n    return this.root.get(index);\n  }\n\n  getEntry(index: number, id?: I): [I, V] | undefined {\n    if (id !== void 0) {\n      index = this.lookup(id, index);\n      if (index < 0) {\n        return void 0;\n      }\n    }\n    return this.root.getEntry(index);\n  }\n\n  set(index: number, newValue: V, id?: I): this {\n    if (id !== void 0) {\n      index = this.lookup(id, index);\n      if (index < 0) {\n        throw new RangeError(\"\" + id);\n      }\n    }\n    const oldRoot = this.root;\n    if (index < 0 || index >= oldRoot.size) {\n      throw new RangeError(\"\" + index);\n    }\n    this.root = oldRoot.updated(index, newValue, this);\n    return this;\n  }\n\n  insert(index: number, newValue: V, id?: I): this {\n    const oldRoot = this.root;\n    if (index < 0 || index > oldRoot.size) {\n      throw new RangeError(\"\" + index);\n    }\n    this.root = oldRoot.inserted(index, newValue, id, this).balanced(this);\n    return this;\n  }\n\n  remove(index: number, id?: I): this {\n    if (id !== void 0) {\n      index = this.lookup(id, index);\n      if (index < 0) {\n        throw new RangeError(\"\" + id);\n      }\n    }\n    const oldRoot = this.root;\n    if (index < 0 || index > oldRoot.size) {\n      throw new RangeError(\"\" + index);\n    }\n    this.root = oldRoot.removed(index, this);\n    return this;\n  }\n\n  push(...newValues: V[]): number {\n    let newRoot = this.root;\n    for (let i = 0; i < newValues.length; i += 1) {\n      newRoot = newRoot.inserted(newRoot.size, newValues[i], void 0, this).balanced(this);\n    }\n    this.root = newRoot;\n    return newRoot.size;\n  }\n\n  pop(): V | undefined {\n    const oldRoot = this.root;\n    const index = oldRoot.size - 1;\n    if (index >= 0) {\n      const oldValue = oldRoot.get(index);\n      this.root = oldRoot.removed(index, this);\n      return oldValue;\n    } else {\n      return void 0;\n    }\n  }\n\n  unshift(...newValues: V[]): number {\n    let newRoot = this.root;\n    for (let i = newValues.length - 1; i >= 0; i -= 1) {\n      newRoot = newRoot.inserted(0, newValues[i], void 0, this).balanced(this);\n    }\n    this.root = newRoot;\n    return newRoot.size;\n  }\n\n  shift(): V | undefined {\n    const oldRoot = this.root;\n    if (oldRoot.size > 0) {\n      const oldValue = oldRoot.get(0);\n      this.root = oldRoot.removed(0, this);\n      return oldValue;\n    } else {\n      return void 0;\n    }\n  }\n\n  move(fromIndex: number, toIndex: number, id?: I): this {\n    if (id !== void 0) {\n      fromIndex = this.lookup(id, fromIndex);\n      if (fromIndex < 0) {\n        throw new RangeError(\"\" + id);\n      }\n    }\n    const oldRoot = this.root;\n    if (fromIndex < 0 || fromIndex >= oldRoot.size) {\n      throw new RangeError(\"\" + fromIndex);\n    }\n    if (toIndex < 0 || toIndex >= oldRoot.size) {\n      throw new RangeError(\"\" + toIndex);\n    }\n    if (fromIndex !== toIndex) {\n      const entry = oldRoot.getEntry(fromIndex)!;\n      this.root = oldRoot.removed(fromIndex, this)\n                         .inserted(toIndex, entry[1], entry[0], this)\n                         .balanced(this);\n    }\n    return this;\n  }\n\n  splice(start: number, deleteCount?: number, ...newValues: V[]): V[] {\n    let newRoot = this.root;\n    if (start < 0) {\n      start = newRoot.size + start;\n    }\n    start = Math.min(Math.max(0, start), newRoot.size);\n    if (deleteCount === void 0) {\n      deleteCount = newRoot.size - start;\n    }\n    const deleted = [] as V[];\n    for (let i = start, n = start + deleteCount; i < n; i += 1) {\n      deleted.push(newRoot.get(start)!);\n      newRoot = newRoot.removed(start, this);\n    }\n    for (let i = 0; i < newValues.length; i += 1) {\n      newRoot = newRoot.inserted(start + i, newValues[i], void 0, this).balanced(this);\n    }\n    this.root = newRoot;\n    return deleted;\n  }\n\n  drop(lower: number): this {\n    const oldRoot = this.root;\n    if (lower > 0 && oldRoot.size > 0) {\n      if (lower < oldRoot.size) {\n        this.root = oldRoot.drop(lower, this);\n      } else {\n        this.root = STree.Page.empty();\n      }\n    }\n    return this;\n  }\n\n  take(upper: number): this {\n    const oldRoot = this.root;\n    if (upper < oldRoot.size && oldRoot.size > 0) {\n      if (upper > 0) {\n        this.root = oldRoot.take(upper, this);\n      } else {\n        this.root = STree.Page.empty();\n      }\n    }\n    return this;\n  }\n\n  clear(): void {\n    this.root = STree.Page.empty();\n  }\n\n  forEach<T, S = unknown>(callback: (this: S,\n                                     value: V,\n                                     index: number,\n                                     tree: STree<V, I>,\n                                     id: I) => T | void,\n                          thisArg?: S): T | undefined {\n    return this.root.forEach(callback, thisArg, 0, this);\n  }\n\n  keys(): Cursor<I> {\n    return this.root.keys();\n  }\n\n  values(): Cursor<V> {\n    return this.root.values();\n  }\n\n  entries(): Cursor<[I, V]> {\n    return this.root.entries();\n  }\n\n  reverseKeys(): Cursor<I> {\n    return this.root.reverseKeys();\n  }\n\n  reverseValues(): Cursor<V> {\n    return this.root.reverseValues();\n  }\n\n  reverseEntries(): Cursor<[I, V]> {\n    return this.root.reverseEntries();\n  }\n\n  clone(): STree<V, I> {\n    return this.copy(this.root);\n  }\n\n  protected copy(root: STreePage<V, I>): STree<V, I> {\n    const tree = new STree(root);\n    if (tree.identify !== this.identify) {\n      tree.identify = this.identify;\n    }\n    if (tree.compare !== this.compare) {\n      tree.compare = this.compare;\n    }\n    if (tree.pageSplitSize !== this.pageSplitSize) {\n      tree.pageSplitSize = this.pageSplitSize;\n    }\n    return tree;\n  }\n\n  lookup(id: I, start: number = 0): number {\n    const root = this.root;\n    start = Math.min(Math.max(0, start), root.size - 1);\n    let index = start;\n    do {\n      const entry = root.getEntry(index);\n      if (entry && this.compare(entry[0], id) === 0) {\n        return index;\n      }\n      index = (index + 1) % root.size;\n    } while (isFinite(index) && index !== start);\n    return -1;\n  }\n\n  // Forward type declarations\n  /** @hidden */\n  static Page: typeof STreePage; // defined by STreePage\n  /** @hidden */\n  static Leaf: typeof STreeLeaf; // defined by STreeLeaf\n  /** @hidden */\n  static Node: typeof STreeNode; // defined by STreeNode\n  /** @hidden */\n  static NodeCursor: typeof STreeNodeCursor; // defined by STreeNodeCursor\n}\nSTree.prototype.pageSplitSize = 32;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {KeysCursor} from \"./KeysCursor\";\nimport {ValuesCursor} from \"./ValuesCursor\";\nimport {STreeContext} from \"./STreeContext\";\nimport {STree} from \"./STree\";\nimport {STreeLeaf} from \"./STreeLeaf\";\n\n/** @hidden */\nexport abstract class STreePage<V = unknown, I = unknown> {\n  abstract get arity(): number;\n\n  abstract get size(): number;\n\n  abstract isEmpty(): boolean;\n\n  abstract get(index: number): V | undefined;\n\n  abstract getEntry(index: number): [I, V] | undefined;\n\n  abstract updated(index: number, newValue: V, tree: STreeContext<V, I>): STreePage<V, I>;\n\n  abstract inserted(index: number, newValue: V, id: I | undefined, tree: STreeContext<V, I>): STreePage<V, I>;\n\n  abstract removed(index: number, tree: STreeContext<V, I>): STreePage<V, I>;\n\n  abstract drop(lower: number, tree: STreeContext<V, I>): STreePage<V, I>;\n\n  abstract take(upper: number, tree: STreeContext<V, I>): STreePage<V, I>;\n\n  abstract balanced(tree: STreeContext<V, I>): STreePage<V, I>;\n\n  abstract split(index: number): STreePage<V, I>;\n\n  abstract splitLeft(index: number): STreePage<V, I>;\n\n  abstract splitRight(index: number): STreePage<V, I>;\n\n  abstract forEach<T, S>(callback: (this: S,\n                                    value: V,\n                                    index: number,\n                                    tree: STree<V, I>,\n                                    id: I) => T | void,\n                         thisArg: S,\n                         offset: number,\n                         tree: STree<V, I>): T | undefined;\n\n  keys(): Cursor<I> {\n    return new KeysCursor(this.entries());\n  }\n\n  values(): Cursor<V> {\n    return new ValuesCursor(this.entries());\n  }\n\n  abstract entries(): Cursor<[I, V]>;\n\n  reverseKeys(): Cursor<I> {\n    return new KeysCursor(this.reverseEntries());\n  }\n\n  reverseValues(): Cursor<V> {\n    return new ValuesCursor(this.reverseEntries());\n  }\n\n  abstract reverseEntries(): Cursor<[I, V]>;\n\n  private static _empty: STreeLeaf<unknown, unknown>;\n\n  static empty<V, I>(): STreeLeaf<V, I> {\n    if (!STreePage._empty) {\n      STreePage._empty = new STree.Leaf([]);\n    }\n    return STreePage._empty as STreeLeaf<V, I>;\n  }\n}\nSTree.Page = STreePage;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {STreeContext} from \"./STreeContext\";\nimport {STree} from \"./STree\";\nimport {STreePage} from \"./STreePage\";\nimport {STreeNode} from \"./STreeNode\";\n\n/** @hidden */\nexport class STreeLeaf<V, I> extends STreePage<V, I> {\n  readonly _slots: [I, V][];\n\n  constructor(slots: [I, V][]) {\n    super();\n    this._slots = slots;\n  }\n\n  get arity(): number {\n    return this._slots.length;\n  }\n\n  get size(): number {\n    return this._slots.length;\n  }\n\n  isEmpty(): boolean {\n    return this._slots.length === 0;\n  }\n\n  get(index: number): V | undefined {\n    const slot = this._slots[index];\n    if (slot) {\n      return slot[1];\n    } else {\n      return void 0;\n    }\n  }\n\n  getEntry(index: number): [I, V] | undefined {\n    return this._slots[index];\n  }\n\n  updated(index: number, newValue: V, tree: STreeContext<V, I>): STreeLeaf<V, I> {\n    if (index < 0 || index >= this._slots.length) {\n      throw new RangeError(\"\" + index);\n    }\n    return this.updatedItem(index, newValue);\n  }\n\n  private updatedItem(index: number, newValue: V): STreeLeaf<V, I> {\n    const oldItems = this._slots;\n    const oldSlot = oldItems[index];\n    if (newValue !== oldSlot[1]) {\n      const newValues = oldItems.slice(0);\n      newValues[index] = [oldSlot[0], newValue];\n      return new STreeLeaf(newValues);\n    } else {\n      return this;\n    }\n  }\n\n  inserted(index: number, newValue: V, id: I | undefined, tree: STreeContext<V, I>): STreeLeaf<V, I> {\n    if (index < 0 || index > this._slots.length) {\n      throw new RangeError(\"\" + index);\n    }\n    return this.insertedItem(index, newValue, id, tree);\n  }\n\n  private insertedItem(index: number, newValue: V, id: I | undefined, tree: STreeContext<V, I>): STreeLeaf<V, I> {\n    if (id === void 0) {\n      id = tree.identify(newValue);\n    }\n    const oldSlots = this._slots;\n    const newSlots = new Array<[I, V]>(oldSlots.length + 1);\n    for (let i = 0; i < index; i += 1) {\n      newSlots[i] = oldSlots[i];\n    }\n    newSlots[index] = [id, newValue];\n    for (let i = index; i < oldSlots.length; i += 1) {\n      newSlots[i + 1] = oldSlots[i];\n    }\n    return new STreeLeaf(newSlots);\n  }\n\n  removed(index: number, tree: STreeContext<V, I>): STreeLeaf<V, I> {\n    if (index < 0 || index >= this._slots.length) {\n      throw new RangeError(\"\" + index);\n    }\n    if (this._slots.length > 1) {\n      return this.removedSlot(index);\n    } else {\n      return STreePage.empty();\n    }\n  }\n\n  private removedSlot(index: number): STreeLeaf<V, I> {\n    const oldSlots = this._slots;\n    const newSlots = new Array<[I, V]>(oldSlots.length - 1);\n    for (let i = 0; i < index; i += 1) {\n      newSlots[i] = oldSlots[i];\n    }\n    for (let i = index; i < newSlots.length; i += 1) {\n      newSlots[i] = oldSlots[i + 1];\n    }\n    return new STreeLeaf(newSlots);\n  }\n\n  drop(lower: number, tree: STreeContext<V, I>): STreeLeaf<V, I> {\n    const oldSlots = this._slots;\n    if (lower > 0 && oldSlots.length > 0) {\n      if (lower < oldSlots.length) {\n        const size = oldSlots.length - lower;\n        const newSlots = new Array<[I, V]>(size);\n        for (let i = 0; i < size; i += 1) {\n          newSlots[i] = oldSlots[i + lower];\n        }\n        return new STreeLeaf(newSlots);\n      } else {\n        return STreePage.empty();\n      }\n    } else {\n      return this;\n    }\n  }\n\n  take(upper: number, tree: STreeContext<V, I>): STreeLeaf<V, I> {\n    const oldSlots = this._slots;\n    if (upper < oldSlots.length && oldSlots.length > 0) {\n      if (upper > 0) {\n        const newSlots = new Array<[I, V]>(upper);\n        for (let i = 0; i < upper; i += 1) {\n          newSlots[i] = oldSlots[i];\n        }\n        return new STreeLeaf(newSlots);\n      } else {\n        return STreePage.empty();\n      }\n    } else {\n      return this;\n    }\n  }\n\n  balanced(tree: STreeContext<V, I>): STreePage<V, I> {\n    const size = this._slots.length;\n    if (size > 1 && tree.pageShouldSplit(this)) {\n      return this.split(size >>> 1);\n    } else {\n      return this;\n    }\n  }\n\n  split(index: number): STreeNode<V, I> {\n    const newPages = new Array<STreePage<V, I>>(2);\n    const newLeftPage = this.splitLeft(index);\n    const newRightPage = this.splitRight(index);\n    newPages[0] = newLeftPage;\n    newPages[1] = newRightPage;\n\n    const newKnots = new Array<number>(1);\n    newKnots[0] = index;\n\n    return new STree.Node(newPages, newKnots, this._slots.length);\n  }\n\n  splitLeft(index: number): STreeLeaf<V, I> {\n    const oldSlots = this._slots;\n    const newSlots = new Array<[I, V]>(index);\n    for (let i = 0; i < index; i += 1) {\n      newSlots[i] = oldSlots[i];\n    }\n    return new STreeLeaf(newSlots);\n  }\n\n  splitRight(index: number): STreeLeaf<V, I> {\n    const oldSlots = this._slots;\n    const newSize = oldSlots.length - index;\n    const newSlots = new Array<[I, V]>(newSize);\n    for (let i = 0; i < newSize; i += 1) {\n      newSlots[i] = oldSlots[i + index];\n    }\n    return new STreeLeaf(newSlots);\n  }\n\n  forEach<T, S>(callback: (this: S,\n                           value: V,\n                           index: number,\n                           tree: STree<V, I>,\n                           id: I) => T | void,\n                thisArg: S,\n                offset: number,\n                tree: STree<V, I>): T | undefined {\n    for (let i = 0; i < this._slots.length; i += 1) {\n      const slot = this._slots[i];\n      const result = callback.call(thisArg, slot[1], offset + i, tree, slot[0]);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    return void 0;\n  }\n\n  entries(): Cursor<[I, V]> {\n    return Cursor.array(this._slots);\n  }\n\n  reverseEntries(): Cursor<[I, V]> {\n    return Cursor.array(this._slots, this._slots.length);\n  }\n}\nSTree.Leaf = STreeLeaf;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {STreeContext} from \"./STreeContext\";\nimport {STree} from \"./STree\";\nimport {STreePage} from \"./STreePage\";\n\n/** @hidden */\nexport class STreeNode<V, I> extends STreePage<V, I> {\n  readonly _pages: STreePage<V, I>[];\n  readonly _knots: number[];\n  readonly _size: number;\n\n  constructor(pages: STreePage<V, I>[], knots?: number[], size?: number) {\n    super();\n    this._pages = pages;\n    if (knots === void 0 || size === void 0) {\n      knots = new Array<number>(pages.length - 1);\n      size = 0;\n      for (let i = 0, n  = knots.length; i < n; i += 1) {\n        size += pages[i].size;\n        knots[i] = size;\n      }\n      size += pages[knots.length].size;\n    }\n    this._knots = knots;\n    this._size = size;\n  }\n\n  get arity(): number {\n    return this._pages.length;\n  }\n\n  get size(): number {\n    return this._size;\n  }\n\n  isEmpty(): boolean {\n    return this._size === 0;\n  }\n\n  get(index: number): V | undefined {\n    let x = this.lookup(index);\n    if (x >= 0) {\n      x += 1;\n    } else {\n      x = -(x + 1);\n    }\n    const i = x === 0 ? index : index - this._knots[x - 1];\n    return this._pages[x].get(i);\n  }\n\n  getEntry(index: number): [I, V] | undefined {\n    let x = this.lookup(index);\n    if (x >= 0) {\n      x += 1;\n    } else {\n      x = -(x + 1);\n    }\n    const i = x === 0 ? index : index - this._knots[x - 1];\n    return this._pages[x].getEntry(i);\n  }\n\n  updated(index: number, newValue: V, tree: STreeContext<V, I>): STreeNode<V, I> {\n    let x = this.lookup(index);\n    if (x >= 0) {\n      x += 1;\n    } else {\n      x = -(x + 1);\n    }\n    const i = x === 0 ? index : index - this._knots[x - 1];\n    const oldPage = this._pages[x];\n    const newPage = oldPage.updated(i, newValue, tree);\n    if (oldPage !== newPage) {\n      if (oldPage.size !== newPage.size && tree.pageShouldSplit(newPage)) {\n        return this.updatedPageSplit(x, newPage, oldPage);\n      } else {\n        return this.updatedPage(x, newPage, oldPage);\n      }\n    } else {\n      return this;\n    }\n  }\n\n  private updatedPage(x: number, newPage: STreePage<V, I>, oldPage: STreePage<V, I>): STreeNode<V, I> {\n    const oldPages = this._pages;\n    const newPages = oldPages.slice(0);\n    newPages[x] = newPage;\n\n    const oldKnots = this._knots;\n    let newKnots: number[];\n    let newSize: number;\n    if (oldPages.length - 1 > 0) {\n      newKnots = oldKnots.slice(0);\n      if (x > 0) {\n        newSize = oldKnots[x - 1];\n      } else {\n        newSize = 0;\n      }\n      for (let i = x; i < newKnots.length; i += 1) {\n        newSize += newPages[i].size;\n        newKnots[i] = newSize;\n      }\n      newSize += newPages[newKnots.length].size;\n    } else {\n      newKnots = [];\n      newSize = 0;\n    }\n\n    return new STreeNode(newPages, newKnots, newSize);\n  }\n\n  private updatedPageSplit(x: number, newPage: STreePage<V, I>, oldPage: STreePage<V, I>): STreeNode<V, I> {\n    const oldPages = this._pages;\n    const newPages = new Array<STreePage<V, I>>(oldPages.length + 1);\n    for (let i = 0; i < x; i += 1) {\n      newPages[i] = oldPages[i];\n    }\n\n    const newLeftPage = newPage.splitLeft(newPage.arity >>> 1);\n    const newRightPage = newPage.splitRight(newPage.arity >>> 1);\n    newPages[x] = newLeftPage;\n    newPages[x + 1] = newRightPage;\n    for (let i = x + 1; i < oldPages.length; i += 1) {\n      newPages[i + 1] = oldPages[i];\n    }\n\n    return new STreeNode(newPages);\n  }\n\n  private updatedPageMerge(x: number, newPage: STreeNode<V, I>, oldPage: STreePage<V, I>): STreeNode<V, I> {\n    const oldPages = this._pages;\n    const midPages = newPage._pages;\n    const newPages = new Array<STreePage<V, I>>(oldPages.length + midPages.length - 1);\n    for (let i = 0; i < x; i += 1) {\n      newPages[i] = oldPages[i];\n    }\n    for (let i = 0; i < midPages.length; i += 1) {\n      newPages[i + x] = midPages[i];\n    }\n    for (let i = x + 1; i < oldPages.length; i += 1) {\n      newPages[i + midPages.length - 1] = oldPages[i];\n    }\n\n    return new STreeNode(newPages);\n  }\n\n  inserted(index: number, newValue: V, id: I | undefined, tree: STreeContext<V, I>): STreeNode<V, I> {\n    let x = this.lookup(index);\n    if (x >= 0) {\n      x += 1;\n    } else {\n      x = -(x + 1);\n    }\n    const subIndex = x === 0 ? index : index - this._knots[x - 1];\n    const oldPage = this._pages[x];\n    const newPage = oldPage.inserted(subIndex, newValue, id, tree);\n    if (oldPage !== newPage) {\n      if (tree.pageShouldSplit(newPage)) {\n        return this.updatedPageSplit(x, newPage, oldPage);\n      } else {\n        return this.updatedPage(x, newPage, oldPage);\n      }\n    } else {\n      return this;\n    }\n  }\n\n  removed(index: number, tree: STreeContext<V, I>): STreePage<V, I> {\n    let x = this.lookup(index);\n    if (x >= 0) {\n      x += 1;\n    } else {\n      x = -(x + 1);\n    }\n    const subIndex = x === 0 ? index : index - this._knots[x - 1];\n    const oldPage = this._pages[x];\n    const newPage = oldPage.removed(subIndex, tree);\n    if (oldPage !== newPage) {\n      return this.replacedPage(x, newPage, oldPage, tree);\n    } else {\n      return this;\n    }\n  }\n\n  private replacedPage(x: number, newPage: STreePage<V, I>, oldPage: STreePage<V, I>,\n                       tree: STreeContext<V, I>): STreePage<V, I> {\n    if (!newPage.isEmpty()) {\n      if (newPage instanceof STreeNode && tree.pageShouldMerge(newPage)) {\n        return this.updatedPageMerge(x, newPage, oldPage);\n      } else {\n        return this.updatedPage(x, newPage, oldPage);\n      }\n    } else if (this._pages.length > 2) {\n      return this.removedPage(x, newPage, oldPage);\n    } else if (this._pages.length > 1) {\n      if (x === 0) {\n        return this._pages[1];\n      } else {\n        return this._pages[0];\n      }\n    } else {\n      return STreePage.empty();\n    }\n  }\n\n  private removedPage(x: number, newPage: STreePage<V, I>, oldPage: STreePage<V, I>): STreeNode<V, I> {\n    const oldPages = this._pages;\n    const newPages = new Array<STreePage<V, I>>(oldPages.length - 1);\n    for (let i = 0; i < x; i += 1) {\n      newPages[i] = oldPages[i];\n    }\n    for (let i = x + 1; i < oldPages.length; i += 1) {\n      newPages[i - 1] = oldPages[i];\n    }\n\n    const oldKnots = this._knots;\n    const newKnots = new Array<number>(oldKnots.length - 1);\n    let newSize: number;\n    if (x > 0) {\n      for (let i = 0; i < x; i += 1) {\n        newKnots[i] = oldKnots[i];\n      }\n      newSize = oldKnots[x - 1];\n    } else {\n      newSize = 0;\n    }\n    for (let i = x; i < newKnots.length; i += 1) {\n      newSize += newPages[i].size;\n      newKnots[i] = newSize;\n    }\n    newSize += newPages[newKnots.length].size;\n\n    return new STreeNode(newPages, newKnots, newSize);\n  }\n\n  drop(lower: number, tree: STreeContext<V, I>): STreePage<V, I> {\n    if (lower > 0) {\n      if (lower < this._size) {\n        let x = this.lookup(lower);\n        if (x >= 0) {\n          x += 1;\n        } else {\n          x = -(x + 1);\n        }\n        lower = x === 0 ? lower : lower - this._knots[x - 1];\n        const oldPages = this._pages;\n        const n = oldPages.length - x;\n        if (n > 1) {\n          let newNode: STreeNode<V, I>;\n          if (x > 0) {\n            const newPages = new Array<STreePage<V, I>>(n);\n            for (let i = 0; i < n; i += 1) {\n              newPages[i] = oldPages[i + x];\n            }\n            newNode = new STreeNode(newPages);\n          } else {\n            newNode = this;\n          }\n          if (lower > 0) {\n            const oldPage = oldPages[x];\n            const newPage = oldPage.drop(lower, tree);\n            return newNode.replacedPage(0, newPage, oldPage, tree);\n          } else {\n            return newNode;\n          }\n        } else {\n          return oldPages[x].drop(lower, tree);\n        }\n      } else {\n        return STreePage.empty();\n      }\n    } else {\n      return this;\n    }\n  }\n\n  take(upper: number, tree: STreeContext<V, I>): STreePage<V, I> {\n    if (upper < this._size) {\n      if (upper > 0) {\n        let x = this.lookup(upper);\n        if (x >= 0) {\n          x += 1;\n        } else {\n          x = -(x + 1);\n        }\n        upper = x === 0 ? upper : upper - this._knots[x - 1];\n        const oldPages = this._pages;\n        const n = upper === 0 ? x : x + 1;\n        if (n > 1) {\n          let newNode: STreeNode<V, I>;\n          if (x < oldPages.length) {\n            const newPages = new Array<STreePage<V, I>>(n);\n            for (let i = 0; i < n; i += 1) {\n              newPages[i] = oldPages[i];\n            }\n            const newKnots = new Array<number>(n - 1);\n            for (let i = 0; i < newKnots.length; i += 1) {\n              newKnots[i] = this._knots[i];\n            }\n            const newSize = newKnots[n - 2] + newPages[n - 1].size;\n            newNode = new STreeNode(newPages, newKnots, newSize);\n          } else {\n            newNode = this;\n          }\n          if (upper > 0) {\n            const oldPage = oldPages[x];\n            const newPage = oldPage.take(upper, tree);\n            return newNode.replacedPage(x, newPage, oldPage, tree);\n          } else {\n            return newNode;\n          }\n        } else if (upper > 0) {\n          return oldPages[0].take(upper, tree);\n        } else {\n          return oldPages[0];\n        }\n      } else {\n        return STreePage.empty();\n      }\n    } else {\n      return this;\n    }\n  }\n\n  balanced(tree: STreeContext<V, I>): STreeNode<V, I> {\n    if (this._pages.length > 1 && tree.pageShouldSplit(this)) {\n      const x = this._knots.length >>> 1;\n      return this.split(x);\n    } else {\n      return this;\n    }\n  }\n\n  split(x: number): STreeNode<V, I> {\n    const newPages = new Array<STreePage<V, I>>(2);\n    const newLeftPage = this.splitLeft(x);\n    const newRightPage = this.splitRight(x);\n    newPages[0] = newLeftPage;\n    newPages[1] = newRightPage;\n\n    const newKnots = new Array<number>(1);\n    newKnots[0] = newLeftPage._size;\n\n    return new STreeNode(newPages, newKnots, this._size);\n  }\n\n  splitLeft(x: number): STreeNode<V, I> {\n    const oldPages = this._pages;\n    const newPages = new Array<STreePage<V, I>>(x + 1);\n    for (let i = 0; i < x + 1; i += 1) {\n      newPages[i] = oldPages[i];\n    }\n\n    const oldKnots = this._knots;\n    const newKnots = new Array<number>(x);\n    for (let i = 0; i < x; i += 1) {\n      newKnots[i] = oldKnots[i];\n    }\n\n    let newSize = 0;\n    for (let i = 0; i <= x; i += 1) {\n      newSize += newPages[i].size;\n    }\n\n    return new STreeNode(newPages, newKnots, newSize);\n  }\n\n  splitRight(x: number): STreeNode<V, I> {\n    const oldPages = this._pages;\n    const y = oldPages.length - (x + 1);\n    const newPages = new Array<STreePage<V, I>>(y);\n    for (let i = 0; i < y; i += 1) {\n      newPages[i] = oldPages[i + (x + 1)];\n    }\n\n    const newKnots = new Array<number>(y - 1);\n    let newSize;\n    if (y > 0) {\n      newSize = newPages[0].size;\n      for (let i = 1; i < y; i += 1) {\n        newKnots[i - 1] = newSize;\n        newSize += newPages[i].size;\n      }\n    } else {\n      newSize = 0;\n    }\n\n    return new STreeNode(newPages, newKnots, newSize);\n  }\n\n  forEach<T, S>(callback: (this: S,\n                           value: V,\n                           index: number,\n                           tree: STree<V, I>,\n                           id: I) => T | void,\n                thisArg: S,\n                offset: number,\n                tree: STree<V, I>): T | undefined {\n    for (let i = 0; i < this._pages.length; i += 1) {\n      const page = this._pages[i];\n      const result = page.forEach(callback, thisArg, offset, tree);\n      if (result !== void 0) {\n        return result;\n      }\n      offset += page.size;\n    }\n    return void 0;\n  }\n\n  entries(): Cursor<[I, V]> {\n    return new STree.NodeCursor(this._pages);\n  }\n\n  reverseEntries(): Cursor<[I, V]> {\n    return new STree.NodeCursor(this._pages, this._size, this._pages.length);\n  }\n\n  private lookup(index: number): number {\n    let lo = 0;\n    let hi = this._knots.length - 1;\n    while (lo <= hi) {\n      const mid = (lo + hi) >>> 1;\n      if (index > this._knots[mid]) {\n        lo = mid + 1;\n      } else if (index < this._knots[mid]) {\n        hi = mid - 1;\n      } else {\n        return mid;\n      }\n    }\n    return -(lo + 1);\n  }\n}\nSTree.Node = STreeNode;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {NodeCursor} from \"./NodeCursor\";\nimport {STree} from \"./STree\";\nimport {STreePage} from \"./STreePage\";\n\n/** @hidden */\nexport class STreeNodeCursor<V, I> extends NodeCursor<[I, V], STreePage<V, I>> {\n  constructor(pages: STreePage<V, I>[], index?: number, pageIndex?: number,\n              subCursor?: Cursor<[I, V]>) {\n    super(pages, index, pageIndex, subCursor);\n  }\n\n  protected pageSize(page: STreePage<V, I>): number {\n    return page.size;\n  }\n\n  protected pageCursor(page: STreePage<V, I>): Cursor<[I, V]> {\n    return page.entries();\n  }\n\n  protected reversePageCursor(page: STreePage<V, I>): Cursor<[I, V]> {\n    return page.reverseEntries();\n  }\n}\nSTree.NodeCursor = STreeNodeCursor;\n"],"names":["Cursor","Objects","Random"],"mappings":"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"}