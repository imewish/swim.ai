import { Cursor } from "@swim/util";
export declare abstract class NodeCursor<T, P> extends Cursor<T> {
    readonly _pages: P[];
    _index: number;
    _pageIndex: number;
    _pageCursor: Cursor<T> | undefined;
    constructor(pages: P[], index?: number, pageIndex?: number, pageCursor?: Cursor<T>);
    protected abstract pageSize(page: P): number;
    protected abstract pageCursor(page: P): Cursor<T>;
    protected abstract reversePageCursor(page: P): Cursor<T>;
    isEmpty(): boolean;
    head(): T;
    step(): void;
    skip(count: number): void;
    hasNext(): boolean;
    nextIndex(): number;
    next(): {
        value?: T;
        done: boolean;
    };
    hasPrevious(): boolean;
    previousIndex(): number;
    previous(): {
        value?: T;
        done: boolean;
    };
    set(newValue: T): void;
    delete(): void;
}
//# sourceMappingURL=NodeCursor.d.ts.map