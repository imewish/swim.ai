import { __extends } from "tslib";
import { MapOutlet } from "../MapOutlet";
import { ReduceFieldsOperator } from "./ReduceFieldsOperator";
var ReduceFieldsCombinator = (function (_super) {
    __extends(ReduceFieldsCombinator, _super);
    function ReduceFieldsCombinator(identity, accumulator, combiner) {
        var _this = _super.call(this) || this;
        _this._identity = identity;
        _this._accumulator = accumulator;
        _this._combiner = combiner;
        return _this;
    }
    ReduceFieldsCombinator.prototype.get = function () {
        return this._state.reduced(this._identity, this._accumulator, this._combiner);
    };
    ReduceFieldsCombinator.prototype.identity = function () {
        return this._identity;
    };
    ReduceFieldsCombinator.prototype.accumulate = function (result, value) {
        return this._accumulator(result, value);
    };
    ReduceFieldsCombinator.prototype.combine = function (result, value) {
        return this._combiner(result, value);
    };
    return ReduceFieldsCombinator;
}(ReduceFieldsOperator));
export { ReduceFieldsCombinator };
MapOutlet.ReduceFieldsCombinator = ReduceFieldsCombinator;
//# sourceMappingURL=ReduceFieldsCombinator.js.map