import { __extends } from "tslib";
import { Outlet } from "../Outlet";
import { WatchValueOperator } from "./WatchValueOperator";
var WatchValueCombinator = (function (_super) {
    __extends(WatchValueCombinator, _super);
    function WatchValueCombinator(func) {
        var _this = _super.call(this) || this;
        _this._func = func;
        return _this;
    }
    WatchValueCombinator.prototype.evaluate = function (value) {
        if (value !== void 0) {
            return this._func(value);
        }
    };
    return WatchValueCombinator;
}(WatchValueOperator));
export { WatchValueCombinator };
Outlet.WatchValueCombinator = WatchValueCombinator;
//# sourceMappingURL=WatchValueCombinator.js.map