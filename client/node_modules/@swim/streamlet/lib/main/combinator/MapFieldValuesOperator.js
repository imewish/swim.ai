import { __extends } from "tslib";
import { Cursor } from "@swim/util";
import { BTree } from "@swim/collections";
import { AbstractMapInoutlet } from "../AbstractMapInoutlet";
var MapFieldValuesOperator = (function (_super) {
    __extends(MapFieldValuesOperator, _super);
    function MapFieldValuesOperator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MapFieldValuesOperator.prototype.has = function (key) {
        if (this._input !== null) {
            return this._input.has(key);
        }
        else {
            return false;
        }
    };
    MapFieldValuesOperator.prototype.get = function (key) {
        if (key === void 0) {
            var output = new BTree();
            var keys = this.keyIterator();
            do {
                var next = keys.next();
                if (!next.done) {
                    var key_1 = next.value;
                    var value = this.evaluate(key_1, this._input.get(key_1));
                    if (value !== void 0) {
                        output.set(key_1, value);
                    }
                    continue;
                }
                break;
            } while (true);
            return output;
        }
        else {
            if (this._input !== null) {
                return this.evaluate(key, this._input.get(key));
            }
            else {
                return void 0;
            }
        }
    };
    MapFieldValuesOperator.prototype.keyIterator = function () {
        if (this._input !== null) {
            return this._input.keyIterator();
        }
        else {
            return Cursor.empty();
        }
    };
    return MapFieldValuesOperator;
}(AbstractMapInoutlet));
export { MapFieldValuesOperator };
//# sourceMappingURL=MapFieldValuesOperator.js.map