import { Iterator, Map } from "@swim/util";
import { KeyEffect } from "../KeyEffect";
import { AbstractMapInletMapOutlet } from "../AbstractMapInletMapOutlet";
export declare abstract class FilterFieldsOperator<K, V, I> extends AbstractMapInletMapOutlet<K, K, V, V, I, Map<K, V>> {
    has(key: K): boolean;
    get(): Map<K, V>;
    get(key: K): V | undefined;
    keyIterator(): Iterator<K>;
    protected onInvalidateOutputKey(key: K, effect: KeyEffect): void;
    protected onReconcileOutputKey(key: K, effect: KeyEffect, version: number): void;
    protected willReconcileInputKey(key: K, effect: KeyEffect, version: number): KeyEffect;
    abstract evaluate(key: K, value: V): boolean;
}
//# sourceMappingURL=FilterFieldsOperator.d.ts.map