import { Map } from "@swim/util";
import { Outlet } from "./Outlet";
import { Inoutlet } from "./Inoutlet";
import { MapInlet } from "./MapInlet";
import { MapOutlet } from "./MapOutlet";
import { MapValueFunction, MapFieldValuesFunction } from "./function";
import { WatchValueFunction, WatchFieldsFunction } from "./function";
export interface MapInoutlet<K, VI, VO, I, O> extends Inoutlet<I, O>, MapInlet<K, VI, I>, MapOutlet<K, VO, O> {
    get(): O | undefined;
    get(key: K): VO | undefined;
    memoize(): MapOutlet<K, VO, O>;
    map<O2>(func: MapValueFunction<O, O2>): Outlet<O2>;
    map<V2>(func: MapFieldValuesFunction<K, VO, V2>): MapOutlet<K, V2, Map<K, V2>>;
    watch(func: WatchValueFunction<O>): this;
    watch(func: WatchFieldsFunction<K, VO>): this;
}
//# sourceMappingURL=MapInoutlet.d.ts.map