var AbstractInlet = (function () {
    function AbstractInlet() {
        this._input = null;
        this._version = -1;
    }
    AbstractInlet.prototype.input = function () {
        return this._input;
    };
    AbstractInlet.prototype.bindInput = function (input) {
        if (this._input !== null) {
            this._input.unbindOutput(this);
        }
        this._input = input;
        if (this._input !== null) {
            this._input.bindOutput(this);
        }
    };
    AbstractInlet.prototype.unbindInput = function () {
        if (this._input !== null) {
            this._input.unbindOutput(this);
        }
        this._input = null;
    };
    AbstractInlet.prototype.disconnectInputs = function () {
        var input = this._input;
        if (input !== null) {
            input.unbindOutput(this);
            this._input = null;
            input.disconnectInputs();
        }
    };
    AbstractInlet.prototype.disconnectOutputs = function () {
    };
    AbstractInlet.prototype.invalidateOutput = function () {
        if (this._version >= 0) {
            this.willInvalidateOutput();
            this._version = -1;
            this.onInvalidateOutput();
            this.didInvalidateOutput();
        }
    };
    AbstractInlet.prototype.reconcileOutput = function (version) {
        if (this._version < 0) {
            this.willReconcileOutput(version);
            this._version = version;
            if (this._input !== null) {
                this._input.reconcileInput(version);
            }
            this.onReconcileOutput(version);
            this.didReconcileOutput(version);
        }
    };
    AbstractInlet.prototype.willInvalidateOutput = function () {
    };
    AbstractInlet.prototype.onInvalidateOutput = function () {
    };
    AbstractInlet.prototype.didInvalidateOutput = function () {
    };
    AbstractInlet.prototype.willReconcileOutput = function (version) {
    };
    AbstractInlet.prototype.onReconcileOutput = function (version) {
    };
    AbstractInlet.prototype.didReconcileOutput = function (version) {
    };
    return AbstractInlet;
}());
export { AbstractInlet };
//# sourceMappingURL=AbstractInlet.js.map