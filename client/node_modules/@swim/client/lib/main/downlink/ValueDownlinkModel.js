import { __extends } from "tslib";
import { Value } from "@swim/structure";
import { DownlinkModel } from "./DownlinkModel";
var ValueDownlinkModel = (function (_super) {
    __extends(ValueDownlinkModel, _super);
    function ValueDownlinkModel(context, hostUri, nodeUri, laneUri, prio, rate, body, state) {
        if (state === void 0) { state = Value.absent(); }
        var _this = _super.call(this, context, hostUri, nodeUri, laneUri, prio, rate, body) || this;
        _this._state = state;
        return _this;
    }
    ValueDownlinkModel.prototype.type = function () {
        return "value";
    };
    ValueDownlinkModel.prototype.get = function () {
        return this._state;
    };
    ValueDownlinkModel.prototype.set = function (newValue) {
        newValue = this.valueWillSet(newValue);
        var oldValue = this._state;
        this.setState(newValue);
        this.valueDidSet(newValue, oldValue);
        this.command(newValue);
    };
    ValueDownlinkModel.prototype.setState = function (state) {
        this._state = state;
    };
    ValueDownlinkModel.prototype.onEventMessage = function (message, host) {
        _super.prototype.onEventMessage.call(this, message, host);
        this.onSetEvent(message.body());
    };
    ValueDownlinkModel.prototype.onSetEvent = function (newValue) {
        newValue = this.valueWillSet(newValue);
        var oldValue = this._state;
        this.setState(newValue);
        this.valueDidSet(newValue, oldValue);
    };
    ValueDownlinkModel.prototype.valueWillSet = function (newValue) {
        for (var i = 0; i < this._views.length; i += 1) {
            newValue = this._views[i].valueWillSet(newValue);
        }
        return newValue;
    };
    ValueDownlinkModel.prototype.valueDidSet = function (newValue, oldValue) {
        for (var i = 0; i < this._views.length; i += 1) {
            this._views[i].valueDidSet(newValue, oldValue);
        }
    };
    return ValueDownlinkModel;
}(DownlinkModel));
export { ValueDownlinkModel };
//# sourceMappingURL=ValueDownlinkModel.js.map