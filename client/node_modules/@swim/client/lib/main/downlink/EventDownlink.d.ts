import { Value } from "@swim/structure";
import { Uri } from "@swim/uri";
import { DownlinkContext } from "./DownlinkContext";
import { DownlinkOwner } from "./DownlinkOwner";
import { DownlinkType, DownlinkObserver, DownlinkInit, Downlink } from "./Downlink";
import { EventDownlinkModel } from "./EventDownlinkModel";
export interface EventDownlinkObserver extends DownlinkObserver {
}
export interface EventDownlinkInit extends EventDownlinkObserver, DownlinkInit {
}
export declare class EventDownlink extends Downlink {
    _observers: ReadonlyArray<EventDownlinkObserver> | null;
    _model: EventDownlinkModel | null;
    constructor(context: DownlinkContext, owner?: DownlinkOwner, init?: EventDownlinkInit, hostUri?: Uri, nodeUri?: Uri, laneUri?: Uri, prio?: number, rate?: number, body?: Value, flags?: number, observers?: ReadonlyArray<EventDownlinkObserver> | EventDownlinkObserver | null);
    protected copy(context: DownlinkContext, owner: DownlinkOwner | undefined, hostUri: Uri, nodeUri: Uri, laneUri: Uri, prio: number, rate: number, body: Value, flags: number, observers: ReadonlyArray<EventDownlinkObserver> | null): this;
    type(): DownlinkType;
    observe(observer: EventDownlinkObserver): this;
    open(): this;
}
//# sourceMappingURL=EventDownlink.d.ts.map