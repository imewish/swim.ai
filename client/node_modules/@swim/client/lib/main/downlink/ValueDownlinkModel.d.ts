import { Value } from "@swim/structure";
import { Uri } from "@swim/uri";
import { EventMessage } from "@swim/warp";
import { Host } from "../host/Host";
import { DownlinkContext } from "./DownlinkContext";
import { DownlinkModel } from "./DownlinkModel";
import { DownlinkType } from "./Downlink";
import { ValueDownlink } from "./ValueDownlink";
export declare class ValueDownlinkModel extends DownlinkModel {
    _views: ValueDownlink<unknown>[];
    _state: Value;
    constructor(context: DownlinkContext, hostUri: Uri, nodeUri: Uri, laneUri: Uri, prio?: number, rate?: number, body?: Value, state?: Value);
    type(): DownlinkType;
    get(): Value;
    set(newValue: Value): void;
    setState(state: Value): void;
    onEventMessage(message: EventMessage, host: Host): void;
    protected onSetEvent(newValue: Value): void;
    protected valueWillSet(newValue: Value): Value;
    protected valueDidSet(newValue: Value, oldValue: Value): void;
}
//# sourceMappingURL=ValueDownlinkModel.d.ts.map