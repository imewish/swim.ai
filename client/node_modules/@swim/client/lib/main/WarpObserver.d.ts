import { Value } from "@swim/structure";
import { Host } from "./host/Host";
import { WarpRef } from "./WarpRef";
export declare type WarpDidConnect = (host: Host, warp: WarpRef) => void;
export declare type WarpDidAuthenticate = (body: Value, host: Host, warp: WarpRef) => void;
export declare type WarpDidDeauthenticate = (body: Value, host: Host, warp: WarpRef) => void;
export declare type WarpDidDisconnect = (host: Host, warp: WarpRef) => void;
export declare type WarpDidFail = (error: unknown, host: Host, warp: WarpRef) => void;
export interface WarpObserver {
    didConnect?: WarpDidConnect;
    didAuthenticate?: WarpDidAuthenticate;
    didDeauthenticate?: WarpDidDeauthenticate;
    didDisconnect?: WarpDidDisconnect;
    didFail?: WarpDidFail;
}
export declare type SwimObserver = WarpObserver;
//# sourceMappingURL=WarpObserver.d.ts.map