{"version":3,"sources":["../../main/host/Host.ts","../../../../../node_modules/tslib/tslib.es6.js","../../main/host/RemoteHost.ts","../../main/downlink/Downlink.ts","../../main/host/WebSocketHost.ts","../../main/downlink/DownlinkModel.ts","../../main/downlink/EventDownlinkModel.ts","../../main/downlink/EventDownlink.ts","../../main/downlink/ListDownlinkModel.ts","../../main/downlink/ListDownlink.ts","../../main/downlink/MapDownlinkModel.ts","../../main/downlink/MapDownlink.ts","../../main/downlink/ValueDownlinkModel.ts","../../main/downlink/ValueDownlink.ts","../../main/downlink/DownlinkRecord.ts","../../main/downlink/ListDownlinkRecord.ts","../../main/downlink/MapDownlinkRecord.ts","../../main/downlink/ValueDownlinkRecord.ts","../../main/downlink/DownlinkTransmuter.ts","../../main/downlink/DownlinkStreamlet.ts","../../main/ref/BaseRef.ts","../../main/ref/LaneRef.ts","../../main/ref/NodeRef.ts","../../main/ref/HostRef.ts","../../main/WarpClient.ts","../../main/index.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__spreadArrays","s","il","k","a","j","jl","DownlinkFlags","RemoteHost","_super","context","hostUri","options","_this","call","_context","_hostUri","_options","_downlinks","BTree","_downlinkCount","_authenticated","_session","Value","absent","_uriCache","UriCache","_sendBuffer","_reconnectTimer","_reconnectTimeout","_idleTimer","credentials","unlinkDelay","maxReconnectTimeout","idleTimeout","sendBufferSize","isAuthenticated","session","isIdle","resolve","relative","unresolve","absolute","authenticate","fromAny","equals","isConnected","request","AuthRequest","of","push","open","openDownlink","downlink","clearIdle","nodeUri","laneUri","nodeDownlinks","get","set","Error","openUp","hostDidConnect","unlinkDownlink","UnlinkRequest","onUnlinkRequest","closeDownlink","delete","isEmpty","watchIdle","closeUp","command","body","Uri","message","CommandMessage","onEnvelope","envelope","EventMessage","onEventMessage","onCommandMessage","LinkRequest","onLinkRequest","LinkedResponse","onLinkedResponse","SyncRequest","onSyncRequest","SyncedResponse","onSyncedResponse","UnlinkedResponse","onUnlinkedResponse","onAuthRequest","AuthedResponse","onAuthedResponse","DeauthRequest","onDeauthRequest","DeauthedResponse","onDeauthedResponse","onUnknownEnvelope","node","lane","resolvedMessage","response","resolvedResponse","hostDidAuthenticate","hostDidDeauthenticate","onConnect","forEach","onDisconnect","hostDidDisconnect","onError","error","hostDidFail","reconnect","Math","min","floor","random","setTimeout","bind","clearReconnect","clearTimeout","checkIdle","close","closeHost","Host","WebSocketHost","WebSocket","require","_socket","readyState","OPEN","WebSocket_1","schemeName","scheme","protocols","toString","onopen","onWebSocketOpen","onmessage","onWebSocketMessage","onclose","onWebSocketClose","onerror","onWebSocketError","isOnline","text","toRecon","send","isDefined","shift","data","Envelope","parseRecon","DownlinkModel","prio","rate","_nodeUri","_laneUri","_prio","_rate","_body","_views","_host","_status","keepLinked","keepSynced","isLinked","isSynced","addDownlink","view","removeDownlink","splice","unlink","doUnlink","host","sync","link","views","Downlink","owner","init","flags","observers","observer","empty","isArray","concat","onEvent","onCommand","willLink","didLink","willSync","didSync","willUnlink","didUnlink","didConnect","didDisconnect","didClose","didFail","_owner","_flags","_model","_observers","copy","observe","oldObservers","n","newObservers","unobserve","oldObserver","found","initForm","_initForm","DownlinkInitForm","tag","mold","header","Record","slot","type","Attr","Item","extant","cast","item","toValue","form","numberValue","stringValue","Form","EventDownlinkModel","EventDownlink","endpoint","model","getDownlink","ListDownlinkModel","state","STree","_state","index","getEntry","newValue","lookup","RangeError","listWillUpdate","oldEntry","listDidUpdate","insert","newEntry","remove","listWillRemove","listDidRemove","attr","newValues","_i","pop","unshift","move","fromIndex","toIndex","entry","listWillMove","listDidMove","start","deleteCount","max","deleted","clear","listWillClear","listDidClear","callback","thisArg","value","tree","values","keys","entries","snapshot","clone","setState","event","head","onUpdateEvent","onInsertEvent","onMoveEvent","onRemoveEvent","onDropEvent","onTakeEvent","onClearEvent","oldValue","lower","listWillDrop","drop","listDidDrop","upper","listWillTake","take","listDidTake","ListDownlink","valueForm","state0","willUpdate","didUpdate","willMove","didMove","willRemove","didRemove","willDrop","didDrop","willTake","didTake","willClear","didClear","_valueForm","forValue","_state0","id","coerce","newObject","newObjects","apply","oldValues","_a","oldObjects","object","cursor","ValueCursor","ValueEntryCursor","newResult","oldObject","initialState","didAliasModel","MapDownlinkModel","size","has","mapWillUpdate","mapDidUpdate","mapWillRemove","mapDidRemove","mapWillDrop","mapDidDrop","mapWillTake","mapDidTake","mapWillClear","mapDidClear","MapDownlink","keyForm","_keyForm","_input","_effects","_outlets","_outputs","_version","keyObject","firstKey","unit","firstValue","firstEntry","lastKey","lastValue","lastEntry","nextKey","nextKeyObject","nextValue","nextObject","nextEntry","previousKey","previousKeyObject","previousValue","previousObject","previousEntry","invalidateInputKey","reconcileInput","keyIterator","input","bindInput","MapOutlet","is","TypeError","unbindOutput","bindOutput","unbindInput","disconnectInputs","outlet","KeyOutlet","updated","outputIterator","Cursor","array","output","oldOutputs","newOutputs","unbindOutputs","disconnectOutputs","outlets","keyOutlet","outputs","invalidateOutputKey","effect","invalidateKey","oldEffects","willInvalidateKey","onInvalidateKey","MapInlet","invalidateOutput","invalidateInput","didInvalidateKey","invalidate","willInvalidate","onInvalidate","didInvalidate","reconcileOutputKey","version","reconcileKey","reconcileInputKey","willReconcileKey","removed","onReconcileKey","didReconcileKey","reconcileOutput","reconcile","willReconcile","onReconcile","didReconcile","memoize","filter","func","combinator","FilterFieldsCombinator","map","MapValueCombinator","MapFieldValuesCombinator","reduce","identity","accumulator","combiner","ReduceFieldsCombinator","watch","WatchValueCombinator","WatchFieldsCombinator","ValueDownlinkModel","valueWillSet","valueDidSet","onSetEvent","ValueDownlink","willSet","didSet","DownlinkRecord","AbstractRecordOutlet","ListDownlinkRecord","_downlink","isObject","getAttr","getSlot","getItem","Num","setAttr","setSlot","setItem","newItem","newItems","MapDownlinkRecord","Slot","result","ValueDownlinkRecord","getField","DownlinkTransmuter","warp","transmute","streamlet","DownlinkStreamlet","compile","Transmuter","scope","inoutlet","bodyValue","getOutput","downlinkRecord","castInput","forString","forNumber","getInput","inputHostUri","inputNodeUri","inputLaneUri","inputPrio","inputRate","inputBody","inputType","client","downlinkMap","downlinkValue","transmuter","_transmuter","Inout","Out","AbstractRecordStreamlet","BaseRef","indexOf","openRef","closeRef","downlinks","didAuthenticate","didDeauthenticate","LaneRef","hostRef","HostRef","nodeRef","NodeRef","laneRef","downlinkList","WarpClient","keepOnline","_hosts","_refs","_online","onOnline","onOffline","watchOnline","online","window","addEventListener","removeEventListener","getHost","openHost","hostDownlinks","ref","refs","hosts"],"mappings":"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","file":"/Users/c9r/Swim/Code/swim-platform/swim-system-js/swim-mesh-js/@swim/client/dist/main/swim-client.min.js","sourcesContent":["// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {Envelope} from \"@swim/warp\";\nimport {HostDownlink} from \"./HostDownlink\";\n\nexport interface HostOptions {\n  credentials?: Value;\n  unlinkDelay?: number;\n  maxReconnectTimeout?: number;\n  idleTimeout?: number;\n  sendBufferSize?: number;\n}\n\n/** @hidden */\nexport abstract class Host {\n  abstract hostUri(): Uri;\n\n  abstract unlinkDelay(): number;\n\n  abstract isConnected(): boolean;\n\n  abstract isAuthenticated(): boolean;\n\n  abstract session(): Value;\n\n  abstract resolve(relative: AnyUri): Uri;\n\n  abstract unresolve(absolute: AnyUri): Uri;\n\n  abstract authenticate(credentials: AnyValue): void;\n\n  abstract openDownlink(downlink: HostDownlink): void;\n\n  abstract unlinkDownlink(downlink: HostDownlink): void;\n\n  abstract closeDownlink(downlink: HostDownlink): void;\n\n  abstract command(nodeUri: AnyUri, laneUri: AnyUri, body: AnyValue): void;\n\n  abstract open(): void;\n\n  abstract close(): void;\n\n  abstract closeUp(): void;\n\n  abstract push(envelope: Envelope): void;\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {BTree} from \"@swim/collections\";\nimport {AnyUri, Uri, UriCache} from \"@swim/uri\";\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {\n  Envelope,\n  EventMessage,\n  CommandMessage,\n  LinkRequest,\n  LinkedResponse,\n  SyncRequest,\n  SyncedResponse,\n  UnlinkRequest,\n  UnlinkedResponse,\n  AuthRequest,\n  AuthedResponse,\n  DeauthRequest,\n  DeauthedResponse,\n} from \"@swim/warp\";\nimport {HostDownlink} from \"./HostDownlink\";\nimport {HostContext} from \"./HostContext\";\nimport {HostOptions, Host} from \"./Host\";\n\nconst UNLINK_DELAY = 0;\nconst MAX_RECONNECT_TIMEOUT = 30000;\nconst IDLE_TIMEOUT = 1000;\nconst SEND_BUFFER_SIZE = 1024;\n\n/** @hidden */\nexport abstract class RemoteHost extends Host {\n  /** @hidden */\n  readonly _context: HostContext;\n  /** @hidden */\n  readonly _hostUri: Uri;\n  /** @hidden */\n  readonly _options: HostOptions;\n  /** @hidden */\n  _downlinks: BTree<Uri, BTree<Uri, HostDownlink>>;\n  /** @hidden */\n  _downlinkCount: number;\n  /** @hidden */\n  _authenticated: boolean;\n  /** @hidden */\n  _session: Value;\n  /** @hidden */\n  _uriCache: UriCache;\n  /** @hidden */\n  _sendBuffer: Envelope[];\n  /** @hidden */\n  _reconnectTimer: number;\n  /** @hidden */\n  _reconnectTimeout: number;\n  /** @hidden */\n  _idleTimer: number;\n\n  constructor(context: HostContext, hostUri: Uri, options: HostOptions = {}) {\n    super();\n    this._context = context;\n    this._hostUri = hostUri;\n    this._options = options;\n    this._downlinks = new BTree();\n    this._downlinkCount = 0;\n    this._authenticated = false;\n    this._session = Value.absent();\n    this._uriCache = new UriCache(hostUri);\n    this._sendBuffer = [];\n    this._reconnectTimer = 0;\n    this._reconnectTimeout = 0;\n    this._idleTimer = 0;\n  }\n\n  hostUri(): Uri {\n    return this._hostUri;\n  }\n\n  credentials(): Value {\n    return this._options.credentials || Value.absent();\n  }\n\n  unlinkDelay(): number {\n    const unlinkDelay = this._options.unlinkDelay;\n    return typeof unlinkDelay === \"number\" ? unlinkDelay : UNLINK_DELAY;\n  }\n\n  maxReconnectTimeout(): number {\n    return this._options.maxReconnectTimeout || MAX_RECONNECT_TIMEOUT;\n  }\n\n  idleTimeout(): number {\n    return this._options.idleTimeout || IDLE_TIMEOUT;\n  }\n\n  sendBufferSize(): number {\n    return this._options.sendBufferSize || SEND_BUFFER_SIZE;\n  }\n\n  abstract isConnected(): boolean;\n\n  isAuthenticated(): boolean {\n    return this._authenticated;\n  }\n\n  session(): Value {\n    return this._session;\n  }\n\n  isIdle(): boolean {\n    return !this._sendBuffer.length && !this._downlinkCount;\n  }\n\n  resolve(relative: AnyUri): Uri {\n    return this._uriCache.resolve(relative);\n  }\n\n  unresolve(absolute: AnyUri): Uri {\n    return this._uriCache.unresolve(absolute);\n  }\n\n  authenticate(credentials: AnyValue): void {\n    credentials = Value.fromAny(credentials);\n    if (!credentials.equals(this._options.credentials)) {\n      this._options.credentials = credentials;\n      if (this.isConnected()) {\n        const request = AuthRequest.of(credentials);\n        this.push(request);\n      } else {\n        this.open();\n      }\n    }\n  }\n\n  openDownlink(downlink: HostDownlink): void {\n    this.clearIdle();\n    const nodeUri = this.resolve(downlink.nodeUri());\n    const laneUri = downlink.laneUri();\n    if (!this._downlinkCount) {\n      this.open();\n    }\n    let nodeDownlinks = this._downlinks.get(nodeUri);\n    if (!nodeDownlinks) {\n      nodeDownlinks = new BTree();\n      this._downlinks.set(nodeUri, nodeDownlinks);\n    }\n    if (nodeDownlinks.get(laneUri)) {\n      throw new Error(\"duplicate downlink\");\n    }\n    nodeDownlinks.set(laneUri, downlink);\n    this._downlinkCount += 1;\n    downlink.openUp(this);\n    if (this.isConnected()) {\n      downlink.hostDidConnect(this);\n    }\n  }\n\n  unlinkDownlink(downlink: HostDownlink): void {\n    const nodeUri = this.resolve(downlink.nodeUri());\n    const laneUri = downlink.laneUri();\n    const nodeDownlinks = this._downlinks.get(nodeUri);\n    if (nodeDownlinks && nodeDownlinks.get(laneUri) && this.isConnected()) {\n      const request = UnlinkRequest.of(this.unresolve(nodeUri), laneUri);\n      downlink.onUnlinkRequest(request, this);\n      this.push(request);\n    }\n  }\n\n  closeDownlink(downlink: HostDownlink): void {\n    const nodeUri = this.resolve(downlink.nodeUri());\n    const laneUri = downlink.laneUri();\n    const nodeDownlinks = this._downlinks.get(nodeUri);\n    if (nodeDownlinks) {\n      if (nodeDownlinks.get(laneUri)) {\n        this._downlinkCount -= 1;\n        nodeDownlinks.delete(laneUri);\n        if (nodeDownlinks.isEmpty()) {\n          this._downlinks.delete(nodeUri);\n        }\n        if (!this._downlinkCount) {\n          this.watchIdle();\n        }\n        downlink.closeUp(this);\n      }\n    }\n  }\n\n  command(nodeUri: AnyUri, laneUri: AnyUri, body: AnyValue): void {\n    nodeUri = Uri.fromAny(nodeUri);\n    nodeUri = this.resolve(nodeUri);\n    laneUri = Uri.fromAny(laneUri);\n    body = Value.fromAny(body);\n    const message = CommandMessage.of(this.unresolve(nodeUri), laneUri, body);\n    this.push(message);\n  }\n\n  protected onEnvelope(envelope: Envelope): void {\n    if (envelope instanceof EventMessage) {\n      this.onEventMessage(envelope);\n    } else if (envelope instanceof CommandMessage) {\n      this.onCommandMessage(envelope);\n    } else if (envelope instanceof LinkRequest) {\n      this.onLinkRequest(envelope);\n    } else if (envelope instanceof LinkedResponse) {\n      this.onLinkedResponse(envelope);\n    } else if (envelope instanceof SyncRequest) {\n      this.onSyncRequest(envelope);\n    } else if (envelope instanceof SyncedResponse) {\n      this.onSyncedResponse(envelope);\n    } else if (envelope instanceof UnlinkRequest) {\n      this.onUnlinkRequest(envelope);\n    } else if (envelope instanceof UnlinkedResponse) {\n      this.onUnlinkedResponse(envelope);\n    } else if (envelope instanceof AuthRequest) {\n      this.onAuthRequest(envelope);\n    } else if (envelope instanceof AuthedResponse) {\n      this.onAuthedResponse(envelope);\n    } else if (envelope instanceof DeauthRequest) {\n      this.onDeauthRequest(envelope);\n    } else if (envelope instanceof DeauthedResponse) {\n      this.onDeauthedResponse(envelope);\n    } else {\n      this.onUnknownEnvelope(envelope);\n    }\n  }\n\n  protected onEventMessage(message: EventMessage): void {\n    const nodeUri = this.resolve(message.node());\n    const laneUri = message.lane();\n    const nodeDownlinks = this._downlinks.get(nodeUri);\n    if (nodeDownlinks) {\n      const downlink = nodeDownlinks.get(laneUri);\n      if (downlink) {\n        const resolvedMessage = message.node(nodeUri);\n        downlink.onEventMessage(resolvedMessage, this);\n      }\n    }\n  }\n\n  protected onCommandMessage(message: CommandMessage): void {\n    // TODO: client agents\n  }\n\n  protected onLinkRequest(request: LinkRequest): void {\n    // TODO: client agents\n  }\n\n  protected onLinkedResponse(response: LinkedResponse): void {\n    const nodeUri = this.resolve(response.node());\n    const laneUri = response.lane();\n    const nodeDownlinks = this._downlinks.get(nodeUri);\n    if (nodeDownlinks) {\n      const downlink = nodeDownlinks.get(laneUri);\n      if (downlink) {\n        const resolvedResponse = response.node(nodeUri);\n        downlink.onLinkedResponse(resolvedResponse, this);\n      }\n    }\n  }\n\n  protected onSyncRequest(request: SyncRequest): void {\n    // TODO: client agents\n  }\n\n  protected onSyncedResponse(response: SyncedResponse): void {\n    const nodeUri = this.resolve(response.node());\n    const laneUri = response.lane();\n    const nodeDownlinks = this._downlinks.get(nodeUri);\n    if (nodeDownlinks) {\n      const downlink = nodeDownlinks.get(laneUri);\n      if (downlink) {\n        const resolvedResponse = response.node(nodeUri);\n        downlink.onSyncedResponse(resolvedResponse, this);\n      }\n    }\n  }\n\n  protected onUnlinkRequest(request: UnlinkRequest): void {\n    // TODO: client agents\n  }\n\n  protected onUnlinkedResponse(response: UnlinkedResponse): void {\n    const nodeUri = this.resolve(response.node());\n    const laneUri = response.lane();\n    const nodeDownlinks = this._downlinks.get(nodeUri);\n    if (nodeDownlinks) {\n      const downlink = nodeDownlinks.get(laneUri);\n      if (downlink) {\n        const resolvedResponse = response.node(nodeUri);\n        downlink.onUnlinkedResponse(resolvedResponse, this);\n      }\n    }\n  }\n\n  protected onAuthRequest(request: AuthRequest): void {\n    // TODO: client agents\n  }\n\n  protected onAuthedResponse(response: AuthedResponse): void {\n    this._authenticated = true;\n    this._session = response.body();\n    this._context.hostDidAuthenticate(response.body(), this);\n  }\n\n  protected onDeauthRequest(request: DeauthRequest): void {\n    // TODO: client agents\n  }\n\n  protected onDeauthedResponse(response: DeauthedResponse): void {\n    this._authenticated = false;\n    this._session = Value.absent();\n    this._context.hostDidDeauthenticate(response.body(), this);\n  }\n\n  protected onUnknownEnvelope(envelope: Envelope | string): void {\n    // nop\n  }\n\n  protected onConnect(): void {\n    this._reconnectTimeout = 0;\n    this._context.hostDidConnect(this);\n    this._downlinks.forEach(function (nodeUri: Uri, nodeDownlinks: BTree<Uri, HostDownlink>): void {\n      nodeDownlinks.forEach(function (laneUri: Uri, downlink: HostDownlink): void {\n        downlink.hostDidConnect(this);\n      }, this);\n    }, this);\n  }\n\n  protected onDisconnect(): void {\n    this._authenticated = false;\n    this._session = Value.absent();\n    this._context.hostDidDisconnect(this);\n    this._downlinks.forEach(function (nodeUri: Uri, nodeDownlinks: BTree<Uri, HostDownlink>): void {\n      nodeDownlinks.forEach(function (laneUri: Uri, downlink: HostDownlink): void {\n        downlink.hostDidDisconnect(this);\n      }, this);\n    }, this);\n  }\n\n  protected onError(error?: unknown): void {\n    this._context.hostDidFail(error, this);\n    this._downlinks.forEach(function (nodeUri: Uri, nodeDownlinks: BTree<Uri, HostDownlink>): void {\n      nodeDownlinks.forEach(function (laneUri: Uri, downlink: HostDownlink): void {\n        downlink.hostDidFail(error, this);\n      }, this);\n    }, this);\n  }\n\n  protected reconnect(): void {\n    if (!this._reconnectTimer) {\n      if (!this._reconnectTimeout) {\n        this._reconnectTimeout = Math.floor(500 + 1000 * Math.random());\n      } else {\n        this._reconnectTimeout = Math.min(Math.floor(1.8 * this._reconnectTimeout), this.maxReconnectTimeout());\n      }\n      this._reconnectTimer = setTimeout(this.open.bind(this), this._reconnectTimeout) as any;\n    }\n  }\n\n  protected clearReconnect(): void {\n    if (this._reconnectTimer) {\n      clearTimeout(this._reconnectTimer);\n      this._reconnectTimer = 0;\n    }\n  }\n\n  protected watchIdle(): void {\n    if (!this._idleTimer && this.isConnected() && this.isIdle()) {\n      this._idleTimer = setTimeout(this.checkIdle.bind(this), this.idleTimeout()) as any;\n    }\n  }\n\n  protected clearIdle(): void {\n    if (this._idleTimer) {\n      clearTimeout(this._idleTimer);\n      this._idleTimer = 0;\n    }\n  }\n\n  protected checkIdle(): void {\n    if (this.isConnected() && this.isIdle()) {\n      this.close();\n    }\n  }\n\n  abstract open(): void;\n\n  close(): void {\n    this._context.closeHost(this);\n  }\n\n  closeUp(): void {\n    this._downlinks.forEach(function (nodeUri: Uri, nodeDownlinks: BTree<Uri, HostDownlink>): void {\n      nodeDownlinks.forEach(function (laneUri: Uri, downlink: HostDownlink): void {\n        downlink.closeUp(this);\n      }, this);\n    }, this);\n  }\n\n  abstract push(envelope: Envelope): void;\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {Item, Attr, AnyValue, Value, Record, Form} from \"@swim/structure\";\nimport {\n  EventMessage,\n  LinkRequest,\n  LinkedResponse,\n  SyncRequest,\n  SyncedResponse,\n  UnlinkRequest,\n  UnlinkedResponse,\n} from \"@swim/warp\";\nimport {Host} from \"../host/Host\";\nimport {DownlinkOwner} from \"./DownlinkOwner\";\nimport {DownlinkContext} from \"./DownlinkContext\";\nimport {DownlinkModel} from \"./DownlinkModel\";\n\nexport type DownlinkType = \"event\" | \"list\" | \"map\" | \"value\";\n\nexport type DownlinkOnEvent = (body: Value, downlink: Downlink) => void;\nexport type DownlinkOnCommand = (body: Value, downlink: Downlink) => void;\nexport type DownlinkWillLink = (downlink: Downlink) => void;\nexport type DownlinkDidLink = (downlink: Downlink) => void;\nexport type DownlinkWillSync = (downlink: Downlink) => void;\nexport type DownlinkDidSync = (downlink: Downlink) => void;\nexport type DownlinkWillUnlink = (downlink: Downlink) => void;\nexport type DownlinkDidUnlink = (downlink: Downlink) => void;\nexport type DownlinkDidConnect = (downlink: Downlink) => void;\nexport type DownlinkDidDisconnect = (downlink: Downlink) => void;\nexport type DownlinkDidClose = (downlink: Downlink) => void;\nexport type DownlinkDidFail = (error: unknown, downlink: Downlink) => void;\n\nexport interface DownlinkObserver {\n  onEvent?: DownlinkOnEvent;\n  onCommand?: DownlinkOnCommand;\n  willLink?: DownlinkWillLink;\n  didLink?: DownlinkDidLink;\n  willSync?: DownlinkWillSync;\n  didSync?: DownlinkDidSync;\n  willUnlink?: DownlinkWillUnlink;\n  didUnlink?: DownlinkDidUnlink;\n  didConnect?: DownlinkDidConnect;\n  didDisconnect?: DownlinkDidDisconnect;\n  didClose?: DownlinkDidClose;\n  didFail?: DownlinkDidFail;\n}\n\nexport interface DownlinkInit extends DownlinkObserver {\n  hostUri?: AnyUri;\n  nodeUri?: AnyUri;\n  laneUri?: AnyUri;\n  prio?: number;\n  rate?: number;\n  body?: AnyValue;\n  type?: DownlinkType;\n}\n\n/** @hidden */\nexport const enum DownlinkFlags {\n  KeepLinked = 1,\n  KeepSynced = 2,\n  KeepLinkedSynced = KeepLinked | KeepSynced,\n}\n\nexport abstract class Downlink {\n  /** @hidden */\n  readonly _context: DownlinkContext;\n  /** @hidden */\n  readonly _owner: DownlinkOwner | undefined;\n  /** @hidden */\n  readonly _hostUri: Uri;\n  /** @hidden */\n  readonly _nodeUri: Uri;\n  /** @hidden */\n  readonly _laneUri: Uri;\n  /** @hidden */\n  readonly _prio: number;\n  /** @hidden */\n  readonly _rate: number;\n  /** @hidden */\n  readonly _body: Value;\n  /** @hidden */\n  readonly _flags: number;\n  /** @hidden */\n  _model: DownlinkModel | null;\n  /** @hidden */\n  _observers: ReadonlyArray<DownlinkObserver> | null;\n\n  constructor(context: DownlinkContext, owner?: DownlinkOwner, init?: DownlinkInit,\n              hostUri: Uri = Uri.empty(), nodeUri: Uri = Uri.empty(), laneUri: Uri = Uri.empty(),\n              prio: number = 0, rate: number = 0, body: Value = Value.absent(),\n              flags: number = 0, observers: ReadonlyArray<DownlinkObserver> | DownlinkObserver | null = null) {\n    let observer: DownlinkObserver | undefined;\n    if (!observers) {\n      observers = [];\n    } else if (!Array.isArray(observers)) {\n      observer = observers as DownlinkObserver;\n      observers = [observer];\n    }\n    if (init) {\n      observer = observer || {};\n      observers = observers ? observers.concat(observer) : [observer];\n      hostUri = init.hostUri !== void 0 ? Uri.fromAny(init.hostUri) : hostUri;\n      nodeUri = init.nodeUri !== void 0 ? Uri.fromAny(init.nodeUri) : nodeUri;\n      laneUri = init.laneUri !== void 0 ? Uri.fromAny(init.laneUri) : laneUri;\n      prio = init.prio !== void 0 ? init.prio : prio;\n      rate = init.rate !== void 0 ? init.rate : rate;\n      body = init.body !== void 0 ? Value.fromAny(init.body) : body;\n      observer.onEvent = init.onEvent || observer.onEvent;\n      observer.onCommand = init.onCommand || observer.onCommand;\n      observer.willLink = init.willLink || observer.willLink;\n      observer.didLink = init.didLink || observer.didLink;\n      observer.willSync = init.willSync || observer.willSync;\n      observer.didSync = init.didSync || observer.didSync;\n      observer.willUnlink = init.willUnlink || observer.willUnlink;\n      observer.didUnlink = init.didUnlink || observer.didUnlink;\n      observer.didConnect = init.didConnect || observer.didConnect;\n      observer.didDisconnect = init.didDisconnect || observer.didDisconnect;\n      observer.didClose = init.didClose || observer.didClose;\n      observer.didFail = init.didFail || observer.didFail;\n    }\n    this._context = context;\n    this._owner = owner;\n    this._hostUri = hostUri;\n    this._nodeUri = nodeUri;\n    this._laneUri = laneUri;\n    this._prio = prio;\n    this._rate = rate;\n    this._body = body;\n    this._flags = flags;\n    this._model = null;\n    this._observers = observers;\n  }\n\n  protected abstract copy(context: DownlinkContext, owner: DownlinkOwner | undefined,\n                          hostUri: Uri, nodeUri: Uri, laneUri: Uri, prio: number, rate: number,\n                          body: Value, flags: number, observers: ReadonlyArray<DownlinkObserver> | null): this;\n\n  hostUri(): Uri;\n  hostUri(hostUri: AnyUri): this;\n  hostUri(hostUri?: AnyUri): Uri | this {\n    if (hostUri === void 0) {\n      return this._hostUri;\n    } else {\n      hostUri = Uri.fromAny(hostUri);\n      return this.copy(this._context, this._owner, hostUri, this._nodeUri, this._laneUri,\n                       this._prio, this._rate, this._body, this._flags, this._observers);\n    }\n  }\n\n  nodeUri(): Uri;\n  nodeUri(nodeUri: AnyUri): this;\n  nodeUri(nodeUri?: AnyUri): Uri | this {\n    if (nodeUri === void 0) {\n      return this._nodeUri;\n    } else {\n      nodeUri = Uri.fromAny(nodeUri);\n      return this.copy(this._context, this._owner, this._hostUri, nodeUri, this._laneUri,\n                       this._prio, this._rate, this._body, this._flags, this._observers);\n    }\n  }\n\n  laneUri(): Uri;\n  laneUri(laneUri: AnyUri): this;\n  laneUri(laneUri?: AnyUri): Uri | this {\n    if (laneUri === void 0) {\n      return this._laneUri;\n    } else {\n      laneUri = Uri.fromAny(laneUri);\n      return this.copy(this._context, this._owner, this._hostUri, this._nodeUri, laneUri,\n                       this._prio, this._rate, this._body, this._flags, this._observers);\n    }\n  }\n\n  prio(): number;\n  prio(prio: number ): this;\n  prio(prio?: number): number | this {\n    if (prio === void 0) {\n      return this._prio;\n    } else {\n      return this.copy(this._context, this._owner, this._hostUri, this._nodeUri, this._laneUri,\n                       prio, this._rate, this._body, this._flags, this._observers);\n    }\n  }\n\n  rate(): number;\n  rate(rate: number): this;\n  rate(rate?: number): number | this {\n    if (rate === void 0) {\n      return this._rate;\n    } else {\n      return this.copy(this._context, this._owner, this._hostUri, this._nodeUri, this._laneUri,\n                       this._prio, rate, this._body, this._flags, this._observers);\n    }\n  }\n\n  body(): Value;\n  body(body: AnyValue): this;\n  body(body?: AnyValue): Value | this {\n    if (body === void 0) {\n      return this._body;\n    } else {\n      body = Value.fromAny(body);\n      return this.copy(this._context, this._owner, this._hostUri, this._nodeUri, this._laneUri,\n                       this._prio, this._rate, body, this._flags, this._observers);\n    }\n  }\n\n  abstract type(): DownlinkType;\n\n  keepLinked(): boolean;\n  keepLinked(keepLinked: boolean): this;\n  keepLinked(keepLinked?: boolean): boolean | this {\n    if (keepLinked === void 0) {\n      return (this._flags & DownlinkFlags.KeepLinked) !== 0;\n    } else {\n      const flags = keepLinked ? this._flags | DownlinkFlags.KeepLinked : this._flags & ~DownlinkFlags.KeepLinked;\n      return this.copy(this._context, this._owner, this._hostUri, this._nodeUri, this._laneUri,\n                       this._prio, this._rate, this._body, flags, this._observers);\n    }\n  }\n\n  keepSynced(): boolean;\n  keepSynced(keepSynced: boolean): this;\n  keepSynced(keepSynced?: boolean): boolean | this {\n    if (keepSynced === void 0) {\n      return (this._flags & DownlinkFlags.KeepSynced) !== 0;\n    } else {\n      const flags = keepSynced ? this._flags | DownlinkFlags.KeepSynced : this._flags & ~DownlinkFlags.KeepSynced;\n      return this.copy(this._context, this._owner, this._hostUri, this._nodeUri, this._laneUri,\n                       this._prio, this._rate, this._body, flags, this._observers);\n    }\n  }\n\n  observe(observer: DownlinkObserver): this {\n    const oldObservers = this._observers;\n    const n = oldObservers ? oldObservers.length : 0;\n    const newObservers = new Array<DownlinkObserver>(n + 1);\n    for (let i = 0; i < n; i += 1) {\n      newObservers[i] = oldObservers![i];\n    }\n    newObservers[n] = observer;\n    this._observers = newObservers;\n    return this;\n  }\n\n  unobserve(observer: unknown): this {\n    const oldObservers = this._observers;\n    const n = oldObservers ? oldObservers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const oldObserver = oldObservers![i] as {[key: string]: unknown};\n      let found = oldObserver === observer; // check object identity\n      if (!found) {\n        for (const key in oldObserver) { // check property identity\n          if (oldObserver[key] === observer) {\n            found = true;\n            break;\n          }\n        }\n      }\n      if (found) {\n        if (n > 1) {\n          const newObservers = new Array<DownlinkObserver>(n - 1);\n          for (let j = 0; j < i; j += 1) {\n            newObservers[j] = oldObservers![j];\n          }\n          for (let j = i + 1; j < n; j += 1) {\n            newObservers[j - 1] = oldObservers![j];\n          }\n          this._observers = newObservers;\n        } else {\n          this._observers = null;\n        }\n        break;\n      }\n    }\n    return this;\n  }\n\n  onEvent(onEvent: DownlinkOnEvent): this {\n    return this.observe({onEvent});\n  }\n\n  onCommand(onCommand: DownlinkOnCommand): this {\n    return this.observe({onCommand});\n  }\n\n  willLink(willLink: DownlinkWillLink): this {\n    return this.observe({willLink});\n  }\n\n  didLink(didLink: DownlinkDidLink): this {\n    return this.observe({didLink});\n  }\n\n  willSync(willSync: DownlinkWillSync): this {\n    return this.observe({willSync});\n  }\n\n  didSync(didSync: DownlinkDidSync): this {\n    return this.observe({didSync});\n  }\n\n  willUnlink(willUnlink: DownlinkWillUnlink): this {\n    return this.observe({willUnlink});\n  }\n\n  didUnlink(didUnlink: DownlinkDidUnlink): this {\n    return this.observe({didUnlink});\n  }\n\n  didConnect(didConnect: DownlinkDidConnect): this {\n    return this.observe({didConnect});\n  }\n\n  didDisconnect(didDisconnect: DownlinkDidDisconnect): this {\n    return this.observe({didDisconnect});\n  }\n\n  didClose(didClose: DownlinkDidClose): this {\n    return this.observe({didClose});\n  }\n\n  didFail(didFail: DownlinkDidFail): this {\n    return this.observe({didFail});\n  }\n\n  isConnected(): boolean {\n    return this._model ? this._model.isConnected() : false;\n  }\n\n  isAuthenticated(): boolean {\n    return this._model ? this._model.isAuthenticated() : false;\n  }\n\n  isLinked(): boolean {\n    return this._model ? this._model.isLinked() : false;\n  }\n\n  isSynced(): boolean {\n    return this._model ? this._model.isSynced() : false;\n  }\n\n  session(): Value {\n    return this._model ? this._model.session() : Value.absent();\n  }\n\n  /** @hidden */\n  onEventMessage(message: EventMessage): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.onEvent) {\n        observer.onEvent(message.body(), this);\n      }\n    }\n  }\n\n  /** @hidden */\n  onCommandMessage(body: Value): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.onCommand) {\n        observer.onCommand(body, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  onLinkRequest(request?: LinkRequest): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.willLink) {\n        observer.willLink(this);\n      }\n    }\n  }\n\n  /** @hidden */\n  onLinkedResponse(response?: LinkedResponse): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didLink) {\n        observer.didLink(this);\n      }\n    }\n  }\n\n  /** @hidden */\n  onSyncRequest(request?: SyncRequest): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.willSync) {\n        observer.willSync(this);\n      }\n    }\n  }\n\n  /** @hidden */\n  onSyncedResponse(response?: SyncedResponse): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didSync) {\n        observer.didSync(this);\n      }\n    }\n  }\n\n  /** @hidden */\n  onUnlinkRequest(request?: UnlinkRequest): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.willUnlink) {\n        observer.willUnlink(this);\n      }\n    }\n  }\n\n  /** @hidden */\n  onUnlinkedResponse(response?: UnlinkedResponse): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didUnlink) {\n        observer.didUnlink(this);\n      }\n    }\n  }\n\n  /** @hidden */\n  hostDidConnect(): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didConnect) {\n        observer.didConnect(this);\n      }\n    }\n  }\n\n  /** @hidden */\n  hostDidDisconnect(): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didDisconnect) {\n        observer.didDisconnect(this);\n      }\n    }\n  }\n\n  /** @hidden */\n  hostDidFail(error: unknown): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didFail) {\n        observer.didFail(error, this);\n      }\n    }\n  }\n\n  command(body: AnyValue): void {\n    this._model!.command(body);\n  }\n\n  abstract open(): this;\n\n  close(): void {\n    if (this._owner) {\n      this._owner.removeDownlink(this);\n    }\n    if (this._model) {\n      this._model.removeDownlink(this);\n    }\n  }\n\n  /** @hidden */\n  openUp(host: Host): void {\n    // nop\n  }\n\n  /** @hidden */\n  closeUp(): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didClose) {\n        observer.didClose(this);\n      }\n    }\n  }\n\n  private static _initForm: Form<DownlinkInit | undefined>;\n\n  static initForm(): Form<DownlinkInit | undefined> {\n    if (!Downlink._initForm) {\n      Downlink._initForm = new DownlinkInitForm();\n    }\n    return Downlink._initForm;\n  }\n}\n\n/** @hidden */\nclass DownlinkInitForm extends Form<DownlinkInit | undefined> {\n  tag(): string;\n  tag(tag: string | undefined): Form<DownlinkInit | undefined>;\n  tag(tag?: string | undefined): string | Form<DownlinkInit | undefined> {\n    if (arguments.length === 0) {\n      return \"link\";\n    } else if (tag !== void 0) {\n      return super.tag(tag);\n    } else {\n      return this;\n    }\n  }\n\n  mold(init: DownlinkInit | undefined): Item {\n    if (init) {\n      const header = Record.create();\n      if (init.hostUri !== void 0) {\n        header.slot(\"host\", Uri.fromAny(init.hostUri).toString());\n      }\n      if (init.nodeUri !== void 0) {\n        header.slot(\"node\", Uri.fromAny(init.nodeUri).toString());\n      }\n      if (init.laneUri !== void 0) {\n        header.slot(\"lane\", Uri.fromAny(init.laneUri).toString());\n      }\n      if (init.prio !== void 0) {\n        header.slot(\"prio\", init.prio);\n      }\n      if (init.rate !== void 0) {\n        header.slot(\"rate\", init.rate);\n      }\n      if (init.body !== void 0) {\n        header.slot(\"body\", init.body);\n      }\n      if (init.type !== void 0) {\n        header.slot(\"type\", init.type);\n      }\n      return Record.of(Attr.of(\"link\", header));\n    } else {\n      return Item.extant();\n    }\n  }\n\n  cast(item: Item): DownlinkInit | undefined {\n    const value = item.toValue();\n    const header = value.get(\"link\");\n    if (header.isDefined()) {\n      const init = {} as DownlinkInit;\n      const host = header.get(\"host\");\n      if (host.isDefined()) {\n        init.hostUri = host.cast(Uri.form());\n      }\n      const node = header.get(\"node\");\n      if (node.isDefined()) {\n        init.nodeUri = node.cast(Uri.form());\n      }\n      const lane = header.get(\"lane\");\n      if (lane.isDefined()) {\n        init.laneUri = lane.cast(Uri.form());\n      }\n      const prio = header.get(\"prio\");\n      if (prio.isDefined()) {\n        init.prio = prio.numberValue();\n      }\n      const rate = header.get(\"rate\");\n      if (rate.isDefined()) {\n        init.rate = rate.numberValue();\n      }\n      const body = header.get(\"body\");\n      if (body.isDefined()) {\n        init.body = body;\n      }\n      const type = header.get(\"type\");\n      if (type.isDefined()) {\n        init.type = type.stringValue() as DownlinkType;\n      }\n      return init;\n    }\n    return void 0;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Uri} from \"@swim/uri\";\nimport {Envelope, CommandMessage, AuthRequest} from \"@swim/warp\";\nimport {HostContext} from \"./HostContext\";\nimport {HostOptions} from \"./Host\";\nimport {RemoteHost} from \"./RemoteHost\";\n\n/** @hidden */\nexport type WebSocketConstructor = {new(url: string, protocols?: string | string[]): WebSocket};\n\nexport interface WebSocketHostOptions extends HostOptions {\n  protocols?: string | string[];\n  WebSocket?: WebSocketConstructor;\n}\n\n/** @hidden */\nexport class WebSocketHost extends RemoteHost {\n  /** @hidden */\n  readonly _options: WebSocketHostOptions;\n  /** @hidden */\n  _socket: WebSocket | undefined;\n\n  constructor(context: HostContext, hostUri: Uri, options: WebSocketHostOptions = {}) {\n    super(context, hostUri, options);\n  }\n\n  get WebSocket(): WebSocketConstructor | undefined {\n    return this._options.WebSocket\n        || typeof WebSocket !== \"undefined\" && WebSocket\n        || typeof require === \"function\" && require(\"ws\") as WebSocketConstructor\n        || void 0;\n  }\n\n  isConnected(): boolean {\n    return this._socket ? this._socket.readyState === this._socket.OPEN : false;\n  }\n\n  open(): void {\n    this.clearReconnect();\n    if (!this._socket) {\n      const WebSocket = this.WebSocket;\n      if (!WebSocket) {\n        throw new Error(\"WebSocket undefined\");\n      }\n      let hostUri = this._hostUri;\n      const schemeName = hostUri.schemeName();\n      if (schemeName === \"warp\" || schemeName === \"swim\") {\n        hostUri = hostUri.scheme(\"ws\");\n      } else if (schemeName === \"warps\" || schemeName === \"swims\") {\n        hostUri = hostUri.scheme(\"wss\");\n      }\n      if (this._options.protocols) {\n        this._socket = new WebSocket(hostUri.toString(), this._options.protocols);\n      } else {\n        this._socket = new WebSocket(hostUri.toString());\n      }\n      this._socket.onopen = this.onWebSocketOpen.bind(this);\n      this._socket.onmessage = this.onWebSocketMessage.bind(this);\n      this._socket.onclose = this.onWebSocketClose.bind(this);\n      this._socket.onerror = this.onWebSocketError.bind(this);\n    }\n  }\n\n  close(): void {\n    this.clearReconnect();\n    this.clearIdle();\n    if (this._socket) {\n      this._socket.close();\n      if (!this._context.isOnline()) {\n        this.onWebSocketClose(); // force close event\n      }\n    } else {\n      super.close();\n    }\n  }\n\n  push(envelope: Envelope): void {\n    if (this.isConnected()) {\n      this.clearIdle();\n      const text = envelope.toRecon();\n      this._socket!.send(text);\n      this.watchIdle();\n    } else if (envelope instanceof CommandMessage) {\n      if (this._sendBuffer.length < this.sendBufferSize()) {\n        this._sendBuffer.push(envelope);\n      } else {\n        throw new Error(\"send buffer overflow\");\n      }\n      this.open();\n    }\n  }\n\n  protected onWebSocketOpen(): void {\n    if (this.isConnected()) {\n      const credentials = this.credentials();\n      if (credentials.isDefined()) {\n        const request = new AuthRequest(credentials);\n        this.push(request);\n      }\n      this.onConnect();\n      let envelope;\n      while ((envelope = this._sendBuffer.shift()) && this.isConnected()) {\n        this.push(envelope);\n      }\n      this.watchIdle();\n    } else {\n      this.close();\n    }\n  }\n\n  protected onWebSocketMessage(message: MessageEvent): void {\n    const data = message.data;\n    if (typeof data === \"string\") {\n      const envelope = Envelope.parseRecon(data);\n      if (envelope) {\n        this.onEnvelope(envelope);\n      } else {\n        this.onUnknownEnvelope(data);\n      }\n    }\n  }\n\n  protected onWebSocketClose(): void {\n    if (this._socket) {\n      this._socket.onopen = null;\n      this._socket.onmessage = null;\n      this._socket.onclose = null;\n      this._socket.onerror = null;\n      this._socket = void 0;\n    }\n    this.onDisconnect();\n    this.clearIdle();\n    if (!this.isIdle()) {\n      if (this._context.isOnline()) {\n        this.reconnect();\n      }\n    } else {\n      this.close();\n    }\n  }\n\n  protected onWebSocketError(): void {\n    if (this._socket) {\n      this._socket.close();\n      if (!this._context.isOnline()) {\n        this.onWebSocketClose(); // force close event\n      } else {\n        this.onError();\n      }\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Uri} from \"@swim/uri\";\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {\n  EventMessage,\n  LinkRequest,\n  LinkedResponse,\n  SyncRequest,\n  SyncedResponse,\n  UnlinkRequest,\n  UnlinkedResponse,\n} from \"@swim/warp\";\nimport {HostDownlink} from \"../host/HostDownlink\";\nimport {Host} from \"../host/Host\";\nimport {DownlinkContext} from \"./DownlinkContext\";\nimport {DownlinkType, Downlink} from \"./Downlink\";\n\nconst LINKING = 1;\nconst LINKED = 2;\nconst SYNCING = 4;\nconst SYNCED = 8;\nconst UNLINKING = 16;\n\n/** @hidden */\nexport abstract class DownlinkModel implements HostDownlink {\n   /** @hidden */\n  readonly _context: DownlinkContext;\n   /** @hidden */\n  readonly _hostUri: Uri;\n   /** @hidden */\n  readonly _nodeUri: Uri;\n   /** @hidden */\n  readonly _laneUri: Uri;\n   /** @hidden */\n  readonly _prio: number;\n   /** @hidden */\n  readonly _rate: number;\n   /** @hidden */\n  readonly _body: Value;\n  /** @hidden */\n  _views: Downlink[];\n  /** @hidden */\n  _host: Host | null;\n  /** @hidden */\n  _status: number;\n\n  constructor(context: DownlinkContext, hostUri: Uri, nodeUri: Uri, laneUri: Uri,\n              prio: number = 0, rate: number = 0, body: Value = Value.absent()) {\n    this._context = context;\n    this._hostUri = hostUri;\n    this._nodeUri = nodeUri;\n    this._laneUri = laneUri;\n    this._prio = prio;\n    this._rate = rate;\n    this._body = body;\n    this._views = [];\n    this._host = null;\n    this._status = 0;\n  }\n\n  hostUri(): Uri {\n    return this._hostUri;\n  }\n\n  nodeUri(): Uri {\n    return this._nodeUri;\n  }\n\n  laneUri(): Uri {\n    return this._laneUri;\n  }\n\n  prio(): number {\n    return this._prio;\n  }\n\n  rate(): number {\n    return this._rate;\n  }\n\n  body(): Value {\n    return this._body;\n  }\n\n  abstract type(): DownlinkType;\n\n  keepLinked(): boolean {\n    for (let i = 0; i < this._views.length; i += 1) {\n      if (this._views[i].keepLinked()) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  keepSynced(): boolean {\n    for (let i = 0; i < this._views.length; i += 1) {\n      if (this._views[i].keepSynced()) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  unlinkDelay(): number {\n    return this._host ? this._host.unlinkDelay() : 0;\n  }\n\n  isConnected(): boolean {\n    return !!(this._host && this._host.isConnected());\n  }\n\n  isAuthenticated(): boolean {\n    return !!(this._host && this._host.isAuthenticated());\n  }\n\n  isLinked(): boolean {\n    return (this._status & LINKED) !== 0;\n  }\n\n  isSynced(): boolean {\n    return (this._status & SYNCED) !== 0;\n  }\n\n  session(): Value {\n    return this._host ? this._host.session() : Value.absent();\n  }\n\n  addDownlink(view: Downlink): void {\n    this._views.push(view);\n  }\n\n  removeDownlink(view: Downlink): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      if (this._views[i] === view) {\n        this._views.splice(i, 1);\n        view.closeUp();\n      }\n    }\n    if (this._views.length === 0) {\n      const unlinkDelay = this.unlinkDelay();\n      if (unlinkDelay < 0) {\n        this.unlink();\n      } else {\n        setTimeout(this.doUnlink.bind(this), unlinkDelay);\n      }\n    }\n  }\n\n  onEventMessage(message: EventMessage, host: Host): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].onEventMessage(message);\n    }\n  }\n\n  onCommandMessage(body: Value): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].onCommandMessage(body);\n    }\n  }\n\n  onLinkRequest(request: LinkRequest): void {\n    this._status |= LINKING;\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].onLinkRequest(request);\n    }\n  }\n\n  onLinkedResponse(response: LinkedResponse, host: Host): void {\n    this._status = this._status & ~LINKING | LINKED;\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].onLinkedResponse(response);\n    }\n  }\n\n  onSyncRequest(request: SyncRequest): void {\n    this._status |= SYNCING;\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].onSyncRequest(request);\n    }\n  }\n\n  onSyncedResponse(response: SyncedResponse, host: Host): void {\n    this._status = this._status & ~SYNCING | SYNCED;\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].onSyncedResponse(response);\n    }\n  }\n\n  onUnlinkRequest(request: UnlinkRequest, host: Host): void {\n    this._status = this._status & ~(LINKING | SYNCING) | UNLINKING;\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].onUnlinkRequest(request);\n    }\n  }\n\n  onUnlinkedResponse(response: UnlinkedResponse, host: Host): void {\n    this._status &= ~UNLINKING;\n    if (this._views.length === 0 || this._status !== 0) {\n      for (let i = 0; i < this._views.length; i += 1) {\n        this._views[i].onUnlinkedResponse(response);\n      }\n      this.close();\n    } else { // concurrently relinked\n      if (this.keepSynced()) {\n        this.sync();\n      } else {\n        this.link();\n      }\n    }\n  }\n\n  hostDidConnect(host: Host): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].hostDidConnect();\n    }\n    if (this.keepSynced()) {\n      this.sync();\n    } else {\n      this.link();\n    }\n  }\n\n  hostDidDisconnect(host: Host): void {\n    this._status = 0;\n    let keepLinked = false;\n    for (let i = 0; i < this._views.length; i += 1) {\n      const view = this._views[i];\n      view.hostDidDisconnect();\n      keepLinked = keepLinked || view.keepLinked();\n    }\n    if (!keepLinked) {\n      this.close();\n    }\n  }\n\n  hostDidFail(error: unknown, host: Host): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].hostDidFail(error);\n    }\n  }\n\n  command(body: AnyValue): void {\n    body = Value.fromAny(body);\n    this.onCommandMessage(body);\n    this._host!.command(this._nodeUri, this._laneUri, body);\n  }\n\n  sync(): void {\n    const nodeUri = this._host!.unresolve(this._nodeUri);\n    const request = SyncRequest.of(nodeUri, this._laneUri, this._prio, this._rate, this._body);\n    this.onSyncRequest(request);\n    this._host!.push(request);\n  }\n\n  link(): void {\n    const nodeUri = this._host!.unresolve(this._nodeUri);\n    const request = LinkRequest.of(nodeUri, this._laneUri, this._prio, this._rate, this._body);\n    this.onLinkRequest(request);\n    this._host!.push(request);\n  }\n\n  unlink(): void {\n    this._status = UNLINKING;\n    this._context.unlinkDownlink(this);\n  }\n\n  protected doUnlink(): void {\n    if (this._views.length === 0) {\n      this.unlink();\n    }\n  }\n\n  close(): void {\n    this._context.closeDownlink(this);\n  }\n\n  openUp(host: Host): void {\n    this._host = host;\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].openUp(host);\n    }\n  }\n\n  closeUp(): void {\n    const views = this._views;\n    this._views = [];\n    for (let i = 0; i < views.length; i += 1) {\n      views[i].closeUp();\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Value} from \"@swim/structure\";\nimport {Uri} from \"@swim/uri\";\nimport {DownlinkContext} from \"./DownlinkContext\";\nimport {DownlinkModel} from \"./DownlinkModel\";\nimport {DownlinkType} from \"./Downlink\";\nimport {EventDownlink} from \"./EventDownlink\";\n\n/** @hidden */\nexport class EventDownlinkModel extends DownlinkModel {\n  /** @hidden */\n  _views: EventDownlink[];\n\n  constructor(context: DownlinkContext, hostUri: Uri, nodeUri: Uri, laneUri: Uri,\n              prio?: number, rate?: number, body?: Value) {\n    super(context, hostUri, nodeUri, laneUri, prio, rate, body);\n  }\n\n  type(): DownlinkType {\n    return \"event\";\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Value} from \"@swim/structure\";\nimport {Uri} from \"@swim/uri\";\nimport {DownlinkContext} from \"./DownlinkContext\";\nimport {DownlinkOwner} from \"./DownlinkOwner\";\nimport {DownlinkType, DownlinkObserver, DownlinkInit, DownlinkFlags, Downlink} from \"./Downlink\";\nimport {EventDownlinkModel} from \"./EventDownlinkModel\";\n\nexport interface EventDownlinkObserver extends DownlinkObserver {\n}\n\nexport interface EventDownlinkInit extends EventDownlinkObserver, DownlinkInit {\n}\n\nexport class EventDownlink extends Downlink {\n  /** @hidden */\n  _observers: ReadonlyArray<EventDownlinkObserver> | null;\n  /** @hidden */\n  _model: EventDownlinkModel | null;\n\n  /** @hidden */\n  constructor(context: DownlinkContext, owner?: DownlinkOwner, init?: EventDownlinkInit,\n              hostUri?: Uri, nodeUri?: Uri, laneUri?: Uri, prio?: number,\n              rate?: number, body?: Value, flags: number = DownlinkFlags.KeepLinked,\n              observers?: ReadonlyArray<EventDownlinkObserver> | EventDownlinkObserver | null) {\n    super(context, owner, init, hostUri, nodeUri, laneUri, prio, rate, body, flags, observers);\n  }\n\n  protected copy(context: DownlinkContext, owner: DownlinkOwner | undefined,\n                 hostUri: Uri, nodeUri: Uri, laneUri: Uri, prio: number, rate: number,\n                 body: Value, flags: number, observers: ReadonlyArray<EventDownlinkObserver> | null): this {\n    return new EventDownlink(context, owner, void 0, hostUri, nodeUri, laneUri,\n                             prio, rate, body, flags, observers) as this;\n  }\n\n  type(): DownlinkType {\n    return \"event\";\n  }\n\n  observe(observer: EventDownlinkObserver): this {\n    return super.observe(observer);\n  }\n\n  open(): this {\n    const laneUri = this._laneUri;\n    if (laneUri.isEmpty()) {\n      throw new Error(\"no lane\");\n    }\n    let nodeUri = this._nodeUri;\n    if (nodeUri.isEmpty()) {\n      throw new Error(\"no node\");\n    }\n    let hostUri = this._hostUri;\n    if (hostUri.isEmpty()) {\n      hostUri = nodeUri.endpoint();\n      nodeUri = hostUri.unresolve(nodeUri);\n    }\n    let model = this._context.getDownlink(hostUri, nodeUri, laneUri);\n    if (model) {\n      if (!(model instanceof EventDownlinkModel)) {\n        throw new Error(\"downlink type mismatch\");\n      }\n      model.addDownlink(this);\n    } else {\n      model = new EventDownlinkModel(this._context, hostUri, nodeUri, laneUri,\n                                     this._prio, this._rate, this._body);\n      model.addDownlink(this);\n      this._context.openDownlink(model);\n    }\n    this._model = model as EventDownlinkModel;\n    if (this._owner) {\n      this._owner.addDownlink(this);\n    }\n    return this;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {STree} from \"@swim/collections\";\nimport {Attr, Value, Record} from \"@swim/structure\";\nimport {Uri} from \"@swim/uri\";\nimport {EventMessage} from \"@swim/warp\";\nimport {Host} from \"../host/Host\";\nimport {DownlinkContext} from \"./DownlinkContext\";\nimport {DownlinkModel} from \"./DownlinkModel\";\nimport {DownlinkType} from \"./Downlink\";\nimport {ListDownlink} from \"./ListDownlink\";\n\n/** @hidden */\nexport class ListDownlinkModel extends DownlinkModel {\n  /** @hidden */\n  _views: ListDownlink<unknown>[];\n  /** @hidden */\n  _state: STree<Value, Value>;\n\n  constructor(context: DownlinkContext, hostUri: Uri, nodeUri: Uri, laneUri: Uri,\n              prio?: number, rate?: number, body?: Value, state: STree<Value, Value> = new STree()) {\n    super(context, hostUri, nodeUri, laneUri, prio, rate, body);\n    this._state = state;\n  }\n\n  type(): DownlinkType {\n    return \"list\";\n  }\n\n  isEmpty(): boolean {\n    return this._state.isEmpty();\n  }\n\n  get length(): number {\n    return this._state.length;\n  }\n\n  get(index: number, key?: Value): Value {\n    return this._state.get(index, key) || Value.absent();\n  }\n\n  getEntry(index: number, key?: Value): [Value, Value] | undefined {\n    return this._state.getEntry(index, key);\n  }\n\n  set(index: number, newValue: Value, key?: Value): this {\n    if (key !== void 0) {\n      index = this._state.lookup(key, index);\n      if (index < 0) {\n        throw new RangeError(\"\" + key);\n      }\n    }\n    if (index < 0 || index >= this._state.length) {\n      throw new RangeError(\"\" + index);\n    }\n    newValue = this.listWillUpdate(index, newValue);\n    const oldEntry = this._state.getEntry(index)!;\n    this._state.set(index, newValue);\n    this.listDidUpdate(index, newValue, oldEntry[1]);\n    const header = Record.create(2).slot(\"key\", oldEntry[0]).slot(\"index\", index);\n    this.command(Attr.of(\"update\", header).concat(newValue));\n    return this;\n  }\n\n  insert(index: number, newValue: Value, key?: Value): this {\n    if (index < 0 || index > this._state.length) {\n      throw new RangeError(\"\" + index);\n    }\n    newValue = this.listWillUpdate(index, newValue);\n    this._state.insert(index, newValue, key);\n    const newEntry = this._state.getEntry(index)!;\n    this.listDidUpdate(index, newValue, Value.absent());\n    const header = Record.create(2).slot(\"key\", newEntry[0]).slot(\"index\", index);\n    this.command(Attr.of(\"update\", header).concat(newValue));\n    return this;\n  }\n\n  remove(index: number, key?: Value): this {\n    if (key !== void 0) {\n      index = this._state.lookup(key, index);\n      if (index < 0) {\n        throw new RangeError(\"\" + key);\n      }\n    }\n    if (index < 0 || index > this._state.length) {\n      throw new RangeError(\"\" + index);\n    }\n    this.listWillRemove(index);\n    const oldEntry = this._state.getEntry(index)!;\n    this._state.remove(index);\n    this.listDidRemove(index, oldEntry[1]);\n    const header = Record.create(2).slot(\"key\", oldEntry[0]).slot(\"index\", index);\n    this.command(Record.create(1).attr(\"remove\", header));\n    return this;\n  }\n\n  push(...newValues: Value[]): number {\n    for (let i = 0; i < newValues.length; i += 1) {\n      const index = this._state.length + i;\n      const newValue = this.listWillUpdate(index, newValues[i]);\n      this._state.insert(index, newValue);\n      const newEntry = this._state.getEntry(index)!;\n      this.listDidUpdate(index, newValue, Value.absent());\n      const header = Record.create(2).slot(\"key\", newEntry[0]).slot(\"index\", index);\n      this.command(Attr.of(\"update\", header).concat(newValue));\n    }\n    return this._state.length;\n  }\n\n  pop(): Value {\n    const index = this._state.length - 1;\n    if (index >= 0) {\n      this.listWillRemove(index);\n      const oldEntry = this._state.getEntry(index)!;\n      this._state.remove(index);\n      this.listDidRemove(index, oldEntry[1]);\n      const header = Record.create(2).slot(\"key\", oldEntry[0]).slot(\"index\", index);\n      this.command(Record.create(1).attr(\"remove\", header));\n      return oldEntry[1];\n    } else {\n      return Value.absent();\n    }\n  }\n\n  unshift(...newValues: Value[]): number {\n    for (let i = newValues.length - 1; i >= 0; i -= 1) {\n      const newValue = this.listWillUpdate(0, newValues[i]);\n      this._state.insert(0, newValue);\n      const newEntry = this._state.getEntry(0)!;\n      this.listDidUpdate(0, newValue, Value.absent());\n      const header = Record.create(2).slot(\"key\", newEntry[0]).slot(\"index\", 0);\n      this.command(Attr.of(\"update\", header).concat(newValue));\n    }\n    return this._state.length;\n  }\n\n  shift(): Value {\n    if (this._state.length > 0) {\n      this.listWillRemove(0);\n      const oldEntry = this._state.getEntry(0)!;\n      this._state.remove(0);\n      this.listDidRemove(0, oldEntry[1]);\n      const header = Record.create(2).slot(\"key\", oldEntry[0]).slot(\"index\", 0);\n      this.command(Record.create(1).attr(\"remove\", header));\n      return oldEntry[1];\n    } else {\n      return Value.absent();\n    }\n  }\n\n  move(fromIndex: number, toIndex: number, key?: Value): this {\n    if (key !== void 0) {\n      fromIndex = this._state.lookup(key, fromIndex);\n      if (fromIndex < 0) {\n        throw new RangeError(\"\" + key);\n      }\n    }\n    if (fromIndex < 0 || fromIndex >= this._state.length) {\n      throw new RangeError(\"\" + fromIndex);\n    }\n    if (toIndex < 0 || toIndex >= this._state.length) {\n      throw new RangeError(\"\" + toIndex);\n    }\n    if (fromIndex !== toIndex) {\n      const entry = this._state.getEntry(fromIndex)!;\n      this.listWillMove(fromIndex, toIndex, entry[1]);\n      this._state.remove(fromIndex).insert(toIndex, entry[1], entry[0]);\n      this.listDidMove(fromIndex, toIndex, entry[1]);\n      const header = Record.create(2).slot(\"key\", entry[0]).slot(\"from\", fromIndex).slot(\"to\", toIndex);\n      this.command(Record.create(1).attr(\"move\", header));\n    }\n    return this;\n  }\n\n  splice(start: number, deleteCount?: number, ...newValues: Value[]): Value[] {\n    if (start < 0) {\n      start = this._state.length + start;\n    }\n    start = Math.min(Math.max(0, start), this._state.length);\n    if (deleteCount === void 0) {\n      deleteCount = this._state.length - start;\n    }\n    const deleted = [] as Value[];\n    for (let i = start, n = start + deleteCount; i < n; i += 1) {\n      this.listWillRemove(start);\n      const oldEntry = this._state.getEntry(start)!;\n      deleted.push(oldEntry[1]);\n      this._state.remove(start);\n      this.listDidRemove(start, oldEntry[1]);\n      const header = Record.create(2).slot(\"key\", oldEntry[0]).slot(\"index\", start);\n      this.command(Record.create(1).attr(\"remove\", header));\n    }\n    for (let i = 0; i < newValues.length; i += 1) {\n      const index = start + i;\n      const newValue = this.listWillUpdate(index, newValues[i]);\n      this._state.insert(index, newValue);\n      const newEntry = this._state.getEntry(index)!;\n      this.listDidUpdate(index, newValue, Value.absent());\n      const header = Record.create(2).slot(\"key\", newEntry[0]).slot(\"index\", index);\n      this.command(Attr.of(\"update\", header).concat(newValue));\n    }\n    return deleted;\n  }\n\n  clear(): void {\n    this.listWillClear();\n    this._state.clear();\n    this.listDidClear();\n    this.command(Record.create(1).attr(\"clear\"));\n  }\n\n  forEach<T, S = unknown>(callback: (this: typeof thisArg,\n                                     value: Value,\n                                     index: number,\n                                     downlink: ListDownlinkModel,\n                                     key: Value) => T | void,\n                          thisArg?: S): T | undefined {\n    return this._state.forEach(function (value: Value, index: number, tree: STree<Value, Value>, key: Value): T | void {\n      return callback.call(thisArg, value, index, this, key);\n    }, this);\n  }\n\n  values(): Cursor<Value> {\n    return this._state.values();\n  }\n\n  keys(): Cursor<Value> {\n    return this._state.keys();\n  }\n\n  entries(): Cursor<[Value, Value]> {\n    return this._state.entries();\n  }\n\n  snapshot(): STree<Value, Value> {\n    return this._state.clone();\n  }\n\n  setState(state: STree<Value, Value>): void {\n    this._state = state;\n  }\n\n  onEventMessage(message: EventMessage, host: Host): void {\n    super.onEventMessage(message, host);\n    const event = message.body();\n    const tag = event.tag();\n    if (tag === \"update\") {\n      const header = event.head().toValue();\n      const index = this._state.lookup(header.get(\"key\"), header.get(\"index\").numberValue());\n      if (index >= 0) {\n        this.onUpdateEvent(index, event.body(), header.get(\"key\"));\n      } else {\n        this.onInsertEvent(header.get(\"index\").numberValue(0), event.body(), header.get(\"key\"));\n      }\n    } else if (tag === \"move\") {\n      const header = event.head().toValue();\n      const index = this._state.lookup(header.get(\"key\"), header.get(\"from\").numberValue());\n      if (index >= 0) {\n        this.onMoveEvent(index, header.get(\"to\").numberValue(0), header.get(\"key\"));\n      }\n    } else if (tag === \"remove\") {\n      const header = event.head().toValue();\n      const index = this._state.lookup(header.get(\"key\"), header.get(\"index\").numberValue());\n      if (index >= 0) {\n        this.onRemoveEvent(index, header.get(\"key\"));\n      }\n    } else if (tag === \"drop\") {\n      const header = event.head();\n      this.onDropEvent(header.numberValue(0));\n    } else if (tag === \"take\") {\n      const header = event.head();\n      this.onTakeEvent(header.numberValue(0));\n    } else if (tag === \"clear\") {\n      this.onClearEvent();\n    }\n  }\n\n  protected onInsertEvent(index: number, newValue: Value, key: Value): void {\n    newValue = this.listWillUpdate(index, newValue);\n    this._state.insert(index, newValue, key);\n    this.listDidUpdate(index, newValue, Value.absent());\n  }\n\n  protected onUpdateEvent(index: number, newValue: Value, key: Value): void {\n    newValue = this.listWillUpdate(index, newValue);\n    const oldValue = this._state.get(index) || Value.absent();\n    this._state.set(index, newValue);\n    this.listDidUpdate(index, newValue, oldValue);\n  }\n\n  protected onMoveEvent(fromIndex: number, toIndex: number, key: Value): void {\n    toIndex = Math.min(Math.max(0, toIndex), this._state.length);\n    if (fromIndex !== toIndex) {\n      const value = this._state.get(fromIndex) || Value.absent();\n      this.listWillMove(fromIndex, toIndex, value);\n      this._state.remove(fromIndex).insert(toIndex, value, key);\n      this.listDidMove(fromIndex, toIndex, value);\n    }\n  }\n\n  protected onRemoveEvent(index: number, key: Value): void {\n    this.listWillRemove(index);\n    const oldValue = this._state.get(index) || Value.absent();\n    this._state.remove(index);\n    this.listDidRemove(index, oldValue);\n  }\n\n  protected onDropEvent(lower: number): void {\n    this.listWillDrop(lower);\n    this._state.drop(lower);\n    this.listDidDrop(lower);\n  }\n\n  protected onTakeEvent(upper: number): void {\n    this.listWillTake(upper);\n    this._state.take(upper);\n    this.listDidTake(upper);\n  }\n\n  protected onClearEvent(): void {\n    this.listWillClear();\n    this._state.clear();\n    this.listDidClear();\n  }\n\n  protected listWillUpdate(index: number, newValue: Value): Value {\n    for (let i = 0; i < this._views.length; i += 1) {\n      newValue = this._views[i].listWillUpdate(index, newValue);\n    }\n    return newValue;\n  }\n\n  protected listDidUpdate(index: number, newValue: Value, oldValue: Value): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].listDidUpdate(index, newValue, oldValue);\n    }\n  }\n\n  protected listWillMove(fromIndex: number, toIndex: number, value: Value): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].listWillMove(fromIndex, toIndex, value);\n    }\n  }\n\n  protected listDidMove(fromIndex: number, toIndex: number, value: Value): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].listDidMove(fromIndex, toIndex, value);\n    }\n  }\n\n  protected listWillRemove(index: number): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].listWillRemove(index);\n    }\n  }\n\n  protected listDidRemove(index: number, oldValue: Value): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].listDidRemove(index, oldValue);\n    }\n  }\n\n  protected listWillDrop(lower: number): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].listWillDrop(lower);\n    }\n  }\n\n  protected listDidDrop(lower: number): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].listDidDrop(lower);\n    }\n  }\n\n  protected listWillTake(upper: number): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].listWillTake(upper);\n    }\n  }\n\n  protected listDidTake(upper: number): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].listDidTake(upper);\n    }\n  }\n\n  protected listWillClear() {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].listWillClear();\n    }\n  }\n\n  protected listDidClear() {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].listDidClear();\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {STree} from \"@swim/collections\";\nimport {Value, Form, ValueCursor, ValueEntryCursor} from \"@swim/structure\";\nimport {Uri} from \"@swim/uri\";\nimport {DownlinkContext} from \"./DownlinkContext\";\nimport {DownlinkOwner} from \"./DownlinkOwner\";\nimport {DownlinkType, DownlinkObserver, DownlinkInit, DownlinkFlags, Downlink} from \"./Downlink\";\nimport {ListDownlinkModel} from \"./ListDownlinkModel\";\n\nexport type ListDownlinkWillUpdate<V extends VU, VU = V> = (index: number, newValue: V, downlink: ListDownlink<V, VU>) => V | void;\nexport type ListDownlinkDidUpdate<V extends VU, VU = V> = (index: number, newValue: V, oldValue: V, downlink: ListDownlink<V, VU>) => void;\nexport type ListDownlinkWillMove<V extends VU, VU = V> = (fromIndex: number, toIndex: number, value: V, downlink: ListDownlink<V, VU>) => void;\nexport type ListDownlinkDidMove<V extends VU, VU = V> = (fromIndex: number, toIndex: number, value: V, downlink: ListDownlink<V, VU>) => void;\nexport type ListDownlinkWillRemove<V extends VU, VU = V> = (index: number, downlink: ListDownlink<V, VU>) => void;\nexport type ListDownlinkDidRemove<V extends VU, VU = V> = (index: number, oldValue: V, downlink: ListDownlink<V, VU>) => void;\nexport type ListDownlinkWillDrop<V extends VU, VU = V> = (lower: number, downlink: ListDownlink<V, VU>) => void;\nexport type ListDownlinkDidDrop<V extends VU, VU = V> = (lower: number, downlink: ListDownlink<V, VU>) => void;\nexport type ListDownlinkWillTake<V extends VU, VU = V> = (upper: number, downlink: ListDownlink<V, VU>) => void;\nexport type ListDownlinkDidTake<V extends VU, VU = V> = (upper: number, downlink: ListDownlink<V, VU>) => void;\nexport type ListDownlinkWillClear<V extends VU, VU = V> = (downlink: ListDownlink<V, VU>) => void;\nexport type ListDownlinkDidClear<V extends VU, VU = V> = (downlink: ListDownlink<V, VU>) => void;\n\nexport interface ListDownlinkObserver<V extends VU, VU = V> extends DownlinkObserver {\n  willUpdate?: ListDownlinkWillUpdate<V, VU>;\n  didUpdate?: ListDownlinkDidUpdate<V, VU>;\n  willMove?: ListDownlinkWillMove<V, VU>;\n  didMove?: ListDownlinkDidMove<V, VU>;\n  willRemove?: ListDownlinkWillRemove<V, VU>;\n  didRemove?: ListDownlinkDidRemove<V, VU>;\n  willDrop?: ListDownlinkWillDrop<V, VU>;\n  didDrop?: ListDownlinkDidDrop<V, VU>;\n  willTake?: ListDownlinkWillTake<V, VU>;\n  didTake?: ListDownlinkDidTake<V, VU>;\n  willClear?: ListDownlinkWillClear<V, VU>;\n  didClear?: ListDownlinkDidClear<V, VU>;\n}\n\nexport interface ListDownlinkInit<V extends VU, VU = V> extends ListDownlinkObserver<V, VU>, DownlinkInit {\n  valueForm?: Form<V, VU>;\n}\n\nexport class ListDownlink<V extends VU, VU = V> extends Downlink {\n  /** @hidden */\n  _observers: ReadonlyArray<ListDownlinkObserver<V, VU>> | null;\n  /** @hidden */\n  _model: ListDownlinkModel | null;\n  /** @hidden */\n  _valueForm: Form<V, VU>;\n  /** @hidden */\n  _state0: STree<Value, Value> | undefined;\n\n  /** @hidden */\n  constructor(context: DownlinkContext, owner?: DownlinkOwner, init?: ListDownlinkInit<V, VU>,\n              hostUri?: Uri, nodeUri?: Uri, laneUri?: Uri, prio?: number, rate?: number,\n              body?: Value, flags: number = DownlinkFlags.KeepLinkedSynced,\n              observers?: ReadonlyArray<ListDownlinkObserver<V, VU>> | ListDownlinkObserver<V, VU> | null,\n              valueForm?: Form<V, VU>, state0?: STree<Value, Value>) {\n    super(context, owner, init, hostUri, nodeUri, laneUri, prio, rate, body, flags, observers);\n    if (init) {\n      const observer = this._observers![this._observers!.length - 1];\n      observer.willUpdate = init.willUpdate || observer.willUpdate;\n      observer.didUpdate = init.didUpdate || observer.didUpdate;\n      observer.willMove = init.willMove || observer.willMove;\n      observer.didMove = init.didMove || observer.didMove;\n      observer.willRemove = init.willRemove || observer.willRemove;\n      observer.didRemove = init.didRemove || observer.didRemove;\n      observer.willDrop = init.willDrop || observer.willDrop;\n      observer.didDrop = init.didDrop || observer.didDrop;\n      observer.willTake = init.willTake || observer.willTake;\n      observer.didTake = init.didTake || observer.didTake;\n      observer.willClear = init.willClear || observer.willClear;\n      observer.didClear = init.didClear || observer.didClear;\n      valueForm = init.valueForm ? init.valueForm : valueForm;\n    }\n    this._valueForm = valueForm || Form.forValue() as any;\n    this._state0 = state0;\n  }\n\n  protected copy(context: DownlinkContext, owner: DownlinkOwner | undefined,\n                 hostUri: Uri, nodeUri: Uri, laneUri: Uri, prio: number, rate: number,\n                 body: Value, flags: number, observers: ReadonlyArray<ListDownlinkObserver<V, VU>> | null,\n                 valueForm?: Form<V, VU>, state0?: STree<Value, Value>): this {\n    if (arguments.length === 10) {\n      valueForm = this._valueForm;\n      state0 = this._state0;\n    }\n    return new ListDownlink(context, owner, void 0, hostUri, nodeUri, laneUri,\n                            prio, rate, body, flags, observers, valueForm, state0) as this;\n  }\n\n  type(): DownlinkType {\n    return \"list\";\n  }\n\n  valueForm(): Form<V, VU>;\n  valueForm<V2 extends V2U, V2U = V2>(valueForm: Form<V2, V2U>): ListDownlink<V2, V2U>;\n  valueForm<V2 extends V2U, V2U = V2>(valueForm?: Form<V2, V2U>): Form<V, VU> | ListDownlink<V2, V2U> {\n    if (valueForm === void 0) {\n      return this._valueForm;\n    } else {\n      return this.copy(this._context, this._owner, this._hostUri, this._nodeUri, this._laneUri,\n                       this._prio, this._rate, this._body, this._flags, this._observers,\n                       valueForm as any, this._state0) as any;\n    }\n  }\n\n  isEmpty(): boolean {\n    return this._model!.isEmpty();\n  }\n\n  get length(): number {\n    return this._model!.length;\n  }\n\n  get(index: number, id?: Value): V {\n    const value = this._model!.get(index, id);\n    return value.coerce(this._valueForm);\n  }\n\n  getEntry(index: number, id?: Value): [V, Value] | undefined {\n    const entry = this._model!.getEntry(index, id);\n    if (entry) {\n      return [entry[0].coerce(this._valueForm), entry[1]];\n    }\n    return void 0;\n  }\n\n  set(index: number, newObject: VU, id?: Value): this {\n    const newValue = this._valueForm.mold(newObject);\n    this._model!.set(index, newValue, id);\n    return this;\n  }\n\n  insert(index: number, newObject: VU, id?: Value): this {\n    const newValue = this._valueForm.mold(newObject);\n    this._model!.insert(index, newValue, id);\n    return this;\n  }\n\n  remove(index: number, id?: Value): this {\n    this._model!.remove(index, id);\n    return this;\n  }\n\n  push(...newObjects: VU[]): number {\n    const newValues = new Array(newObjects.length);\n    for (let i = 0; i < newObjects.length; i += 1) {\n      newValues[i] = this._valueForm.mold(newObjects[i]);\n    }\n    return this._model!.push.apply(this._model, newValues);\n  }\n\n  pop(): V {\n    const value = this._model!.pop();\n    return value.coerce(this._valueForm);\n  }\n\n  unshift(...newObjects: VU[]): number {\n    const newValues = new Array(newObjects.length);\n    for (let i = 0; i < newObjects.length; i += 1) {\n      newValues[i] = this._valueForm.mold(newObjects[i]);\n    }\n    return this._model!.unshift.apply(this._model, newValues);\n  }\n\n  shift(): V {\n    const value = this._model!.shift();\n    return value.coerce(this._valueForm);\n  }\n\n  move(fromIndex: number, toIndex: number, id?: Value): this {\n    this._model!.move(fromIndex, toIndex, id);\n    return this;\n  }\n\n  splice(start: number, deleteCount?: number, ...newObjects: VU[]): V[] {\n    const newValues = new Array(newObjects.length);\n    for (let i = 0; i < newObjects.length; i += 1) {\n      newValues[i] = this._valueForm.mold(newObjects[i]);\n    }\n    const oldValues = this._model!.splice(start, deleteCount, ...newValues);\n    const oldObjects = new Array(oldValues.length);\n    for (let i = 0; i < oldValues.length; i += 1) {\n      oldObjects[i] = oldValues[i].coerce(this._valueForm);\n    }\n    return oldObjects;\n  }\n\n  clear(): void {\n    this._model!.clear();\n  }\n\n  forEach<T, S = unknown>(callback: (this: S,\n                                     value: V,\n                                     index: number,\n                                     downlink: ListDownlink<V, VU>,\n                                     id: Value) => T | void,\n                          thisArg?: S): T | undefined {\n    if (this._valueForm as any === Form.forValue()) {\n      return this._model!._state.forEach(callback as any, thisArg);\n    } else {\n      return this._model!._state.forEach(function (value: Value, index: number, tree: STree<Value, Value>, id: Value): T | void {\n        const object = value.coerce(this._valueForm);\n        return callback.call(thisArg, object, index, this, id);\n      }, this);\n    }\n  }\n\n  values(): Cursor<V> {\n    const cursor = this._model!.values();\n    if (this._valueForm as any === Form.forValue()) {\n      return cursor as any;\n    } else {\n      return new ValueCursor(cursor, this._valueForm);\n    }\n  }\n\n  keys(): Cursor<Value> {\n    return this._model!.keys();\n  }\n\n  entries(): Cursor<[Value, V]> {\n    const cursor = this._model!.entries();\n    if (this._valueForm as any === Form.forValue()) {\n      return cursor as any;\n    } else {\n      return new ValueEntryCursor(cursor, Form.forValue(), this._valueForm);\n    }\n  }\n\n  snapshot(): STree<Value, Value> {\n    return this._model!.snapshot();\n  }\n\n  setState(state: STree<Value, Value>): void {\n    this._model!.setState(state);\n  }\n\n  observe(observer: ListDownlinkObserver<V, VU>): this {\n    return super.observe(observer);\n  }\n\n  willUpdate(willUpdate: ListDownlinkWillUpdate<V, VU>): this {\n    return this.observe({willUpdate});\n  }\n\n  didUpdate(didUpdate: ListDownlinkDidUpdate<V, VU>): this {\n    return this.observe({didUpdate});\n  }\n\n  willMove(willMove: ListDownlinkWillMove<V, VU>): this {\n    return this.observe({willMove});\n  }\n\n  didMove(didMove: ListDownlinkDidMove<V, VU>): this {\n    return this.observe({didMove});\n  }\n\n  willRemove(willRemove: ListDownlinkWillRemove<V, VU>): this {\n    return this.observe({willRemove});\n  }\n\n  didRemove(didRemove: ListDownlinkDidRemove<V, VU>): this {\n    return this.observe({didRemove});\n  }\n\n  willDrop(willDrop: ListDownlinkWillDrop<V, VU>): this {\n    return this.observe({willDrop});\n  }\n\n  didDrop(didDrop: ListDownlinkDidDrop<V, VU>): this {\n    return this.observe({didDrop});\n  }\n\n  willTake(willTake: ListDownlinkWillTake<V, VU>): this {\n    return this.observe({willTake});\n  }\n\n  didTake(didTake: ListDownlinkDidTake<V, VU>): this {\n    return this.observe({didTake});\n  }\n\n  willClear(willClear: ListDownlinkWillClear<V, VU>): this {\n    return this.observe({willClear});\n  }\n\n  didClear(didClear: ListDownlinkDidClear<V, VU>): this {\n    return this.observe({didClear});\n  }\n\n  /** @hidden */\n  listWillUpdate(index: number, newValue: Value): Value {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    let newObject: V | undefined;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.willUpdate) {\n        if (newObject === void 0) {\n          newObject = newValue.coerce(this._valueForm);\n        }\n        const newResult = observer.willUpdate(index, newObject, this);\n        if (newResult !== void 0) {\n          newObject = newResult;\n          newValue = this._valueForm.mold(newObject);\n        }\n      }\n    }\n    return newValue;\n  }\n\n  /** @hidden */\n  listDidUpdate(index: number, newValue: Value, oldValue: Value): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    let newObject: V | undefined;\n    let oldObject: V | undefined;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didUpdate) {\n        if (newObject === void 0) {\n          newObject = newValue.coerce(this._valueForm);\n        }\n        if (oldObject === void 0) {\n          oldObject = oldValue.coerce(this._valueForm);\n        }\n        observer.didUpdate(index, newObject, oldObject, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  listWillMove(fromIndex: number, toIndex: number, value: Value): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    let object: V | undefined;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.willMove) {\n        if (object === void 0) {\n          object = value.coerce(this._valueForm);\n        }\n        observer.willMove(fromIndex, toIndex, object, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  listDidMove(fromIndex: number, toIndex: number, value: Value): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    let object: V | undefined;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didMove) {\n        if (object === void 0) {\n          object = value.coerce(this._valueForm);\n        }\n        observer.didMove(fromIndex, toIndex, object, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  listWillRemove(index: number): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.willRemove) {\n        observer.willRemove(index, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  listDidRemove(index: number, oldValue: Value): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    let oldObject: V | undefined;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didRemove) {\n        if (oldObject === void 0) {\n          oldObject = oldValue.coerce(this._valueForm);\n        }\n        observer.didRemove(index, oldObject, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  listWillDrop(lower: number): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.willDrop) {\n        observer.willDrop(lower, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  listDidDrop(lower: number): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didDrop) {\n        observer.didDrop(lower, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  listWillTake(upper: number): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.willTake) {\n        observer.willTake(upper, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  listDidTake(upper: number): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didTake) {\n        observer.didTake(upper, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  listWillClear(): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.willClear) {\n        observer.willClear(this);\n      }\n    }\n  }\n\n  /** @hidden */\n  listDidClear(): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didClear) {\n        observer.didClear(this);\n      }\n    }\n  }\n\n  initialState(): STree<Value, Value> | null;\n  initialState(state0: STree<Value, Value> | null): this;\n  initialState(state0?: STree<Value, Value> | null): STree<Value, Value> | null | this {\n    if (state0 === void 0) {\n      return this._state0 || null;\n    } else {\n      return this.copy(this._context, this._owner, this._hostUri, this._nodeUri, this._laneUri,\n                       this._prio, this._rate, this._body, this._flags, this._observers,\n                       this._valueForm, state0 || void 0);\n    }\n  }\n\n  /** @hidden */\n  protected didAliasModel(): void {\n    this.onLinkedResponse();\n    this._model!._state.forEach(function (value: Value, index: number) {\n      this.listDidUpdate(index, value, Value.absent());\n    }, this);\n    this.onSyncedResponse();\n  }\n\n  open(): this {\n    const laneUri = this._laneUri;\n    if (laneUri.isEmpty()) {\n      throw new Error(\"no lane\");\n    }\n    let nodeUri = this._nodeUri;\n    if (nodeUri.isEmpty()) {\n      throw new Error(\"no node\");\n    }\n    let hostUri = this._hostUri;\n    if (hostUri.isEmpty()) {\n      hostUri = nodeUri.endpoint();\n      nodeUri = hostUri.unresolve(nodeUri);\n    }\n    let model = this._context.getDownlink(hostUri, nodeUri, laneUri);\n    if (model) {\n      if (!(model instanceof ListDownlinkModel)) {\n        throw new Error(\"downlink type mismatch\");\n      }\n      model.addDownlink(this);\n      this._model = model as ListDownlinkModel;\n      setTimeout(this.didAliasModel.bind(this));\n    } else {\n      model = new ListDownlinkModel(this._context, hostUri, nodeUri, laneUri, this._prio,\n                                    this._rate, this._body, this._state0);\n      model.addDownlink(this);\n      this._context.openDownlink(model);\n      this._model = model as ListDownlinkModel;\n    }\n    if (this._owner) {\n      this._owner.addDownlink(this);\n    }\n    return this;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {BTree} from \"@swim/collections\";\nimport {Attr, Value, Record} from \"@swim/structure\";\nimport {Uri} from \"@swim/uri\";\nimport {EventMessage} from \"@swim/warp\";\nimport {Host} from \"../host/Host\";\nimport {DownlinkContext} from \"./DownlinkContext\";\nimport {DownlinkModel} from \"./DownlinkModel\";\nimport {DownlinkType} from \"./Downlink\";\nimport {MapDownlink} from \"./MapDownlink\";\n\n/** @hidden */\nexport class MapDownlinkModel extends DownlinkModel {\n  /** @hidden */\n  _views: MapDownlink<unknown, unknown>[];\n  /** @hidden */\n  _state: BTree<Value, Value>;\n\n  constructor(context: DownlinkContext, hostUri: Uri, nodeUri: Uri, laneUri: Uri,\n              prio?: number, rate?: number, body?: Value, state: BTree<Value, Value> = new BTree()) {\n    super(context, hostUri, nodeUri, laneUri, prio, rate, body);\n    this._state = state;\n  }\n\n  type(): DownlinkType {\n    return \"map\";\n  }\n\n  get size(): number {\n    return this._state.size;\n  }\n\n  isEmpty(): boolean {\n    return this._state.isEmpty();\n  }\n\n  has(key: Value): boolean {\n    return this._state.has(key);\n  }\n\n  get(key: Value): Value {\n    return this._state.get(key) || Value.absent();\n  }\n\n  getEntry(index: number): [Value, Value] | undefined {\n    return this._state.getEntry(index);\n  }\n\n  set(key: Value, newValue: Value): this {\n    newValue = this.mapWillUpdate(key, newValue);\n    const oldValue = this._state.get(key) || Value.absent();\n    this._state.set(key, newValue);\n    this.mapDidUpdate(key, newValue, oldValue);\n    const header = Record.create(1).slot(\"key\", key);\n    this.command(Attr.of(\"update\", header).concat(newValue));\n    return this;\n  }\n\n  delete(key: Value): boolean {\n    if (this._state.has(key)) {\n      this.mapWillRemove(key);\n      const oldValue = this._state.get(key) || Value.absent();\n      this._state.delete(key);\n      this.mapDidRemove(key, oldValue);\n      const header = Record.create(1).slot(\"key\", key);\n      this.command(Record.create(1).attr(\"remove\", header));\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  drop(lower: number): this {\n    this.mapWillDrop(lower);\n    this._state.drop(lower);\n    this.mapDidDrop(lower);\n    this.command(Record.create(1).attr(\"drop\", lower));\n    return this;\n  }\n\n  take(upper: number): this {\n    this.mapWillTake(upper);\n    this._state.take(upper);\n    this.mapDidTake(upper);\n    this.command(Record.create(1).attr(\"take\", upper));\n    return this;\n  }\n\n  clear(): void {\n    this.mapWillClear();\n    this._state.clear();\n    this.mapDidClear();\n    this.command(Record.create(1).attr(\"clear\"));\n  }\n\n  forEach<T, S = unknown>(callback: (this: S,\n                                     key: Value,\n                                     value: Value,\n                                     downlink: MapDownlinkModel) => T | void,\n                          thisArg?: S): T | undefined {\n    return this._state.forEach(function (key: Value, value: Value): T | void {\n      return callback.call(thisArg, key, value, this);\n    }, this);\n  }\n\n  keys(): Cursor<Value> {\n    return this._state.keys();\n  }\n\n  values(): Cursor<Value> {\n    return this._state.values();\n  }\n\n  entries(): Cursor<[Value, Value]> {\n    return this._state.entries();\n  }\n\n  snapshot(): BTree<Value, Value> {\n    return this._state.clone();\n  }\n\n  setState(state: BTree<Value, Value>): void {\n    this._state = state;\n  }\n\n  onEventMessage(message: EventMessage, host: Host): void {\n    super.onEventMessage(message, host);\n    const event = message.body();\n    const tag = event.tag();\n    if (tag === \"update\") {\n      const header = event.head().toValue();\n      this.onUpdateEvent(header.get(\"key\"), event.body());\n    } else if (tag === \"remove\") {\n      const header = event.head().toValue();\n      this.onRemoveEvent(header.get(\"key\"));\n    } else if (tag === \"drop\") {\n      const header = event.head().toValue();\n      this.onDropEvent(header.numberValue(0));\n    } else if (tag === \"take\") {\n      const header = event.head().toValue();\n      this.onTakeEvent(header.numberValue(0));\n    } else if (tag === \"clear\") {\n      this.onClearEvent();\n    }\n  }\n\n  protected onUpdateEvent(key: Value, newValue: Value): void {\n    newValue = this.mapWillUpdate(key, newValue);\n    const oldValue = this._state.get(key) || Value.absent();\n    this._state.set(key, newValue);\n    this.mapDidUpdate(key, newValue, oldValue);\n  }\n\n  protected onRemoveEvent(key: Value): void {\n    this.mapWillRemove(key);\n    const oldValue = this._state.get(key) || Value.absent();\n    this._state.delete(key);\n    this.mapDidRemove(key, oldValue);\n  }\n\n  protected onDropEvent(lower: number): void {\n    this.mapWillDrop(lower);\n    this._state.drop(lower);\n    this.mapDidDrop(lower);\n  }\n\n  protected onTakeEvent(upper: number): void {\n    this.mapWillTake(upper);\n    this._state.take(upper);\n    this.mapDidTake(upper);\n  }\n\n  protected onClearEvent(): void {\n    this.mapWillClear();\n    this._state.clear();\n    this.mapDidClear();\n  }\n\n  protected mapWillUpdate(key: Value, newValue: Value): Value {\n    for (let i = 0; i < this._views.length; i += 1) {\n      newValue = this._views[i].mapWillUpdate(key, newValue);\n    }\n    return newValue;\n  }\n\n  protected mapDidUpdate(key: Value, newValue: Value, oldValue: Value): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].mapDidUpdate(key, newValue, oldValue);\n    }\n  }\n\n  protected mapWillRemove(key: Value): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].mapWillRemove(key);\n    }\n  }\n\n  protected mapDidRemove(key: Value, oldValue: Value): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].mapDidRemove(key, oldValue);\n    }\n  }\n\n  protected mapWillDrop(lower: number): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].mapWillDrop(lower);\n    }\n  }\n\n  protected mapDidDrop(lower: number): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].mapDidDrop(lower);\n    }\n  }\n\n  protected mapWillTake(upper: number): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].mapWillTake(upper);\n    }\n  }\n\n  protected mapDidTake(upper: number): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].mapDidTake(upper);\n    }\n  }\n\n  protected mapWillClear(): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].mapWillClear();\n    }\n  }\n\n  protected mapDidClear(): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].mapDidClear();\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor, Map, OrderedMap} from \"@swim/util\";\nimport {BTree} from \"@swim/collections\";\nimport {Value, Form, ValueCursor, ValueEntryCursor} from \"@swim/structure\";\nimport {Inlet, Outlet, KeyEffect, MapInlet, MapOutlet, KeyOutlet} from \"@swim/streamlet\";\nimport {FilterFieldsFunction, FilterFieldsCombinator} from \"@swim/streamlet\";\nimport {MapValueFunction, MapValueCombinator} from \"@swim/streamlet\";\nimport {MapFieldValuesFunction, MapFieldValuesCombinator} from \"@swim/streamlet\";\nimport {ReduceFieldsCombinator} from \"@swim/streamlet\";\nimport {WatchValueFunction, WatchValueCombinator} from \"@swim/streamlet\";\nimport {WatchFieldsFunction, WatchFieldsCombinator} from \"@swim/streamlet\";\nimport {Uri} from \"@swim/uri\";\nimport {DownlinkContext} from \"./DownlinkContext\";\nimport {DownlinkOwner} from \"./DownlinkOwner\";\nimport {DownlinkType, DownlinkObserver, DownlinkInit, DownlinkFlags, Downlink} from \"./Downlink\";\nimport {MapDownlinkModel} from \"./MapDownlinkModel\";\n\nexport type MapDownlinkWillUpdate<K extends KU, V extends VU, KU = K, VU = V> = (key: K, newValue: V, downlink: MapDownlink<K, V, KU, VU>) => V | void;\nexport type MapDownlinkDidUpdate<K extends KU, V extends VU, KU = K, VU = V> = (key: K, newValue: V, oldValue: V, downlink: MapDownlink<K, V, KU, VU>) => void;\nexport type MapDownlinkWillRemove<K extends KU, V extends VU, KU = K, VU = V> = (key: K, downlink: MapDownlink<K, V, KU, VU>) => void;\nexport type MapDownlinkDidRemove<K extends KU, V extends VU, KU = K, VU = V> = (key: K, oldValue: V, downlink: MapDownlink<K, V, KU, VU>) => void;\nexport type MapDownlinkWillDrop<K extends KU, V extends VU, KU = K, VU = V> = (lower: number, downlink: MapDownlink<K, V, KU, VU>) => void;\nexport type MapDownlinkDidDrop<K extends KU, V extends VU, KU = K, VU = V> = (lower: number, downlink: MapDownlink<K, V, KU, VU>) => void;\nexport type MapDownlinkWillTake<K extends KU, V extends VU, KU = K, VU = V> = (upper: number, downlink: MapDownlink<K, V, KU, VU>) => void;\nexport type MapDownlinkDidTake<K extends KU, V extends VU, KU = K, VU = V> = (upper: number, downlink: MapDownlink<K, V, KU, VU>) => void;\nexport type MapDownlinkWillClear<K extends KU, V extends VU, KU = K, VU = V> = (downlink: MapDownlink<K, V, KU, VU>) => void;\nexport type MapDownlinkDidClear<K extends KU, V extends VU, KU = K, VU = V> = (downlink: MapDownlink<K, V, KU, VU>) => void;\n\nexport interface MapDownlinkObserver<K extends KU, V extends VU, KU = K, VU = V> extends DownlinkObserver {\n  willUpdate?: MapDownlinkWillUpdate<K, V, KU, VU>;\n  didUpdate?: MapDownlinkDidUpdate<K, V, KU, VU>;\n  willRemove?: MapDownlinkWillRemove<K, V, KU, VU>;\n  didRemove?: MapDownlinkDidRemove<K, V, KU, VU>;\n  willDrop?: MapDownlinkWillDrop<K, V, KU, VU>;\n  didDrop?: MapDownlinkDidDrop<K, V, KU, VU>;\n  willTake?: MapDownlinkWillTake<K, V, KU, VU>;\n  didTake?: MapDownlinkDidTake<K, V, KU, VU>;\n  willClear?: MapDownlinkWillClear<K, V, KU, VU>;\n  didClear?: MapDownlinkDidClear<K, V, KU, VU>;\n}\n\nexport interface MapDownlinkInit<K extends KU, V extends VU, KU = K, VU = V> extends MapDownlinkObserver<K, V, KU, VU>, DownlinkInit {\n  keyForm?: Form<K, KU>;\n  valueForm?: Form<V, VU>;\n}\n\nexport class MapDownlink<K extends KU, V extends VU, KU = K, VU = V> extends Downlink implements OrderedMap<K, V>, MapInlet<K, V, Map<K, V>>, MapOutlet<K, V, MapDownlink<K, V, KU, VU>> {\n  /** @hidden */\n  _observers: ReadonlyArray<MapDownlinkObserver<K, V, KU, VU>> | null;\n  /** @hidden */\n  _model: MapDownlinkModel | null;\n  /** @hidden */\n  _keyForm: Form<K, KU>;\n  /** @hidden */\n  _valueForm: Form<V, VU>;\n  /** @hidden */\n  _state0: BTree<Value, Value> | undefined;\n  /** @hidden */\n  protected _input: MapOutlet<K, V, Map<K, V>> | null;\n  /** @hidden */\n  protected _effects: BTree<K, KeyEffect>;\n  /** @hidden */\n  protected _outlets: BTree<K, KeyOutlet<K, V>>; // TODO: unify with observers\n  /** @hidden */\n  protected _outputs: ReadonlyArray<Inlet<MapDownlink<K, V>>> | null;\n  /** @hidden */\n  protected _version: number;\n\n  /** @hidden */\n  constructor(context: DownlinkContext, owner?: DownlinkOwner, init?: MapDownlinkInit<K, V, KU, VU>,\n              hostUri?: Uri, nodeUri?: Uri, laneUri?: Uri, prio?: number, rate?: number,\n              body?: Value, flags: number = DownlinkFlags.KeepLinkedSynced,\n              observers?: ReadonlyArray<MapDownlinkObserver<K, V, KU, VU>> | MapDownlinkObserver<K, V, KU, VU> | null,\n              keyForm?: Form<K, KU>, valueForm?: Form<V, VU>, state0?: BTree<Value, Value>) {\n    super(context, owner, init, hostUri, nodeUri, laneUri, prio, rate, body, flags, observers);\n    if (init) {\n      const observer = this._observers![this._observers!.length - 1];\n      observer.willUpdate = init.willUpdate || observer.willUpdate;\n      observer.didUpdate = init.didUpdate || observer.didUpdate;\n      observer.willRemove = init.willRemove || observer.willRemove;\n      observer.didRemove = init.didRemove || observer.didRemove;\n      observer.willDrop = init.willDrop || observer.willDrop;\n      observer.didDrop = init.didDrop || observer.didDrop;\n      observer.willTake = init.willTake || observer.willTake;\n      observer.didTake = init.didTake || observer.didTake;\n      observer.willClear = init.willClear || observer.willClear;\n      observer.didClear = init.didClear || observer.didClear;\n      keyForm = init.keyForm ? init.keyForm : keyForm;\n      valueForm = init.valueForm ? init.valueForm : valueForm;\n    }\n    this._keyForm = keyForm || Form.forValue() as any;\n    this._valueForm = valueForm || Form.forValue() as any;\n    this._state0 = state0;\n    this._input = null;\n    this._effects = new BTree();\n    this._outlets = new BTree();\n    this._outputs = null;\n    this._version = -1;\n  }\n\n  protected copy(context: DownlinkContext, owner: DownlinkOwner | undefined,\n                 hostUri: Uri, nodeUri: Uri, laneUri: Uri, prio: number, rate: number,\n                 body: Value, flags: number, observers: ReadonlyArray<MapDownlinkObserver<K, V, KU, VU>> | null,\n                 keyForm?: Form<K, KU>, valueForm?: Form<V, VU>, state0?: BTree<Value, Value>): this {\n    if (arguments.length === 10) {\n      state0 = this._state0;\n      keyForm = this._keyForm;\n      valueForm = this._valueForm;\n    }\n    return new MapDownlink(context, owner, void 0, hostUri, nodeUri, laneUri,\n                           prio, rate, body, flags, observers, keyForm, valueForm,\n                           state0) as this;\n  }\n\n  type(): DownlinkType {\n    return \"map\";\n  }\n\n  keyForm(): Form<K, KU>;\n  keyForm<K2 extends K2U, K2U = K2>(keyForm: Form<K2, K2U>): MapDownlink<K2, V, K2U, VU>;\n  keyForm<K2 extends K2U, K2U = K2>(keyForm?: Form<K2, K2U>): Form<K, KU> | MapDownlink<K2, V, K2U, VU> {\n    if (keyForm === void 0) {\n      return this._keyForm;\n    } else {\n      return this.copy(this._context, this._owner, this._hostUri, this._nodeUri, this._laneUri,\n                       this._prio, this._rate, this._body, this._flags, this._observers,\n                       keyForm as any, this._valueForm, this._state0) as any;\n    }\n  }\n\n  valueForm(): Form<V, VU>;\n  valueForm<V2 extends V2U, V2U = V2>(valueForm: Form<V2, V2U>): MapDownlink<K, V2, KU, V2U>;\n  valueForm<V2 extends V2U, V2U = V2>(valueForm?: Form<V2, V2U>): Form<V, VU> | MapDownlink<K, V2, KU, V2U> {\n    if (valueForm === void 0) {\n      return this._valueForm;\n    } else {\n      return this.copy(this._context, this._owner, this._hostUri, this._nodeUri, this._laneUri,\n                       this._prio, this._rate, this._body, this._flags, this._observers,\n                       this._keyForm, valueForm as any, this._state0) as any;\n    }\n  }\n\n  get size(): number {\n    return this._model!.size;\n  }\n\n  isEmpty(): boolean {\n    return this._model!.isEmpty();\n  }\n\n  has(key: KU): boolean {\n    const keyObject = this._keyForm.mold(key);\n    return this._model!.has(keyObject);\n  }\n\n  get(): MapDownlink<K, V, KU, VU>;\n  get(key: KU): V;\n  get(key?: KU): MapDownlink<K, V, KU, VU> | V {\n    if (key === void 0) {\n      return this;\n    } else {\n      const keyObject = this._keyForm.mold(key);\n      const value = this._model!.get(keyObject);\n      return value.coerce(this._valueForm);\n    }\n  }\n\n  getEntry(index: number): [K, V] | undefined {\n    const entry = this._model!.getEntry(index);\n    if (entry) {\n      return [entry[0].coerce(this._keyForm), entry[1].coerce(this._valueForm)];\n    }\n    return void 0;\n  }\n\n  firstKey(): K | undefined {\n    const key = this._model!._state.firstKey();\n    if (key !== void 0) {\n      const keyObject = this._keyForm.cast(key);\n      if (keyObject !== void 0) {\n        return keyObject;\n      }\n    }\n    return this._keyForm.unit();\n  }\n\n  firstValue(): V | undefined {\n    const value = this._model!._state.firstValue();\n    if (value !== void 0) {\n      const object = this._valueForm.cast(value);\n      if (object !== void 0) {\n        return object;\n      }\n    }\n    return this._valueForm.unit();\n  }\n\n  firstEntry(): [K, V] | undefined {\n    const entry = this._model!._state.firstEntry();\n    if (entry !== void 0) {\n      const keyObject: K = this._keyForm.cast(entry[0])!;\n      const object: V = this._valueForm.cast(entry[1])!;\n      return [keyObject, object];\n    }\n    return void 0;\n  }\n\n  lastKey(): K | undefined {\n    const key = this._model!._state.lastKey();\n    if (key !== void 0) {\n      const keyObject = this._keyForm.cast(key);\n      if (keyObject !== void 0) {\n        return keyObject;\n      }\n    }\n    return this._keyForm.unit();\n  }\n\n  lastValue(): V | undefined {\n    const value = this._model!._state.lastValue();\n    if (value !== void 0) {\n      const object = this._valueForm.cast(value);\n      if (object !== void 0) {\n        return object;\n      }\n    }\n    return this._valueForm.unit();\n  }\n\n  lastEntry(): [K, V] | undefined {\n    const entry = this._model!._state.lastEntry();\n    if (entry !== void 0) {\n      const keyObject: K = this._keyForm.cast(entry[0])!;\n      const object: V = this._valueForm.cast(entry[1])!;\n      return [keyObject, object];\n    }\n    return void 0;\n  }\n\n  nextKey(keyObject: K): K | undefined {\n    const key = this._keyForm.mold(keyObject);\n    const nextKey = this._model!._state.nextKey(key);\n    if (nextKey !== void 0) {\n      const nextKeyObject = this._keyForm.cast(nextKey);\n      if (nextKeyObject !== void 0) {\n        return nextKeyObject;\n      }\n    }\n    return this._keyForm.unit();\n  }\n\n  nextValue(keyObject: K): V | undefined {\n    const key = this._keyForm.mold(keyObject);\n    const nextValue = this._model!._state.nextValue(key);\n    if (nextValue !== void 0) {\n      const nextObject = this._valueForm.cast(nextValue);\n      if (nextObject !== void 0) {\n        return nextObject;\n      }\n    }\n    return this._valueForm.unit();\n  }\n\n  nextEntry(keyObject: K): [K, V] | undefined {\n    const key = this._keyForm.mold(keyObject);\n    const entry = this._model!._state.nextEntry(key);\n    if (entry !== void 0) {\n      const keyObject: K = this._keyForm.cast(entry[0])!;\n      const object: V = this._valueForm.cast(entry[1])!;\n      return [keyObject, object];\n    }\n    return void 0;\n  }\n\n  previousKey(keyObject: K): K | undefined {\n    const key = this._keyForm.mold(keyObject);\n    const previousKey = this._model!._state.previousKey(key);\n    if (previousKey !== void 0) {\n      const previousKeyObject = this._keyForm.cast(previousKey);\n      if (previousKeyObject !== void 0) {\n        return previousKeyObject;\n      }\n    }\n    return this._keyForm.unit();\n  }\n\n  previousValue(keyObject: K): V | undefined {\n    const key = this._keyForm.mold(keyObject);\n    const previousValue = this._model!._state.previousValue(key);\n    if (previousValue !== void 0) {\n      const previousObject = this._valueForm.cast(previousValue);\n      if (previousObject !== void 0) {\n        return previousObject;\n      }\n    }\n    return this._valueForm.unit();\n  }\n\n  previousEntry(keyObject: K): [K, V] | undefined {\n    const key = this._keyForm.mold(keyObject);\n    const entry = this._model!._state.previousEntry(key);\n    if (entry !== void 0) {\n      const keyObject: K = this._keyForm.cast(entry[0])!;\n      const object: V = this._valueForm.cast(entry[1])!;\n      return [keyObject, object];\n    }\n    return void 0;\n  }\n\n  set(key: KU, newValue: VU): this {\n    const keyObject = this._keyForm.mold(key);\n    const newObject = this._valueForm.mold(newValue);\n    this._model!.set(keyObject, newObject);\n    return this;\n  }\n\n  delete(key: KU): boolean {\n    const keyObject = this._keyForm.mold(key);\n    return this._model!.delete(keyObject);\n  }\n\n  drop(lower: number): this {\n    this._model!.drop(lower);\n    return this;\n  }\n\n  take(upper: number): this {\n    this._model!.take(upper);\n    return this;\n  }\n\n  clear(): void {\n    this._model!.clear();\n  }\n\n  forEach<T, S = unknown>(callback: (this: S,\n                                     key: K,\n                                     value: V,\n                                     downlink: MapDownlink<K, V, KU, VU>) => T | void,\n                          thisArg?: S): T | undefined {\n    if (this._keyForm as any === Form.forValue() && this._valueForm as any === Form.forValue()) {\n      return this._model!._state.forEach(callback as any, thisArg);\n    } else {\n      return this._model!._state.forEach(function (key: Value, value: Value): T | void {\n        const keyObject = key.coerce(this._keyForm);\n        const object = value.coerce(this._valueForm);\n        return callback.call(thisArg, keyObject, object, this);\n      }, this);\n    }\n  }\n\n  keys(): Cursor<K> {\n    const cursor = this._model!.keys();\n    if (this._keyForm as any === Form.forValue()) {\n      return cursor as any;\n    } else {\n      return new ValueCursor(cursor, this._keyForm);\n    }\n  }\n\n  values(): Cursor<V> {\n    const cursor = this._model!.values();\n    if (this._valueForm as any === Form.forValue()) {\n      return cursor as any;\n    } else {\n      return new ValueCursor(cursor, this._valueForm);\n    }\n  }\n\n  entries(): Cursor<[K, V]> {\n    const cursor = this._model!.entries();\n    if (this._keyForm as any === Form.forValue() && this._valueForm as any === Form.forValue()) {\n      return cursor as any;\n    } else {\n      return new ValueEntryCursor(cursor, this._keyForm, this._valueForm);\n    }\n  }\n\n  snapshot(): BTree<Value, Value> {\n    return this._model!.snapshot();\n  }\n\n  setState(state: BTree<Value, Value>): void {\n    this._model!.setState(state);\n  }\n\n  observe(observer: MapDownlinkObserver<K, V, KU, VU>): this {\n    return super.observe(observer);\n  }\n\n  willUpdate(willUpdate: MapDownlinkWillUpdate<K, V, KU, VU>): this {\n    return this.observe({willUpdate});\n  }\n\n  didUpdate(didUpdate: MapDownlinkDidUpdate<K, V, KU, VU>): this {\n    return this.observe({didUpdate});\n  }\n\n  willRemove(willRemove: MapDownlinkWillRemove<K, V, KU, VU>): this {\n    return this.observe({willRemove});\n  }\n\n  didRemove(didRemove: MapDownlinkDidRemove<K, V, KU, VU>): this {\n    return this.observe({didRemove});\n  }\n\n  willDrop(willDrop: MapDownlinkWillDrop<K, V, KU, VU>): this {\n    return this.observe({willDrop});\n  }\n\n  didDrop(didDrop: MapDownlinkDidDrop<K, V, KU, VU>): this {\n    return this.observe({didDrop});\n  }\n\n  willTake(willTake: MapDownlinkWillTake<K, V, KU, VU>): this {\n    return this.observe({willTake});\n  }\n\n  didTake(didTake: MapDownlinkDidTake<K, V, KU, VU>): this {\n    return this.observe({didTake});\n  }\n\n  willClear(willClear: MapDownlinkWillClear<K, V, KU, VU>): this {\n    return this.observe({willClear});\n  }\n\n  didClear(didClear: MapDownlinkDidClear<K, V, KU, VU>): this {\n    return this.observe({didClear});\n  }\n\n  /** @hidden */\n  mapWillUpdate(key: Value, newValue: Value): Value {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    let keyObject: K | undefined;\n    let newObject: V | undefined;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.willUpdate) {\n        if (keyObject === void 0) {\n          keyObject = key.coerce(this._keyForm);\n        }\n        if (newObject === void 0) {\n          newObject = newValue.coerce(this._valueForm);\n        }\n        const newResult = observer.willUpdate(keyObject, newObject, this);\n        if (newResult !== void 0) {\n          newObject = newResult;\n          newValue = this._valueForm.mold(newObject);\n        }\n      }\n    }\n    return newValue;\n  }\n\n  /** @hidden */\n  mapDidUpdate(key: Value, newValue: Value, oldValue: Value): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    const keyObject = key.coerce(this._keyForm);\n    let newObject: V | undefined;\n    let oldObject: V | undefined;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didUpdate) {\n        if (newObject === void 0) {\n          newObject = newValue.coerce(this._valueForm);\n        }\n        if (oldObject === void 0) {\n          oldObject = oldValue.coerce(this._valueForm);\n        }\n        observer.didUpdate(keyObject, newObject, oldObject, this);\n      }\n    }\n    this.invalidateInputKey(keyObject, KeyEffect.Update);\n    this.reconcileInput(0); // TODO: debounce and track version\n  }\n\n  /** @hidden */\n  mapWillRemove(key: Value): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    let keyObject: K | undefined;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.willRemove) {\n        if (keyObject === void 0) {\n          keyObject = key.coerce(this._keyForm);\n        }\n        observer.willRemove(keyObject, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  mapDidRemove(key: Value, oldValue: Value): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    const keyObject = key.coerce(this._keyForm);\n    let oldObject: V | undefined;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didRemove) {\n        if (oldObject === void 0) {\n          oldObject = oldValue.coerce(this._valueForm);\n        }\n        observer.didRemove(keyObject, oldObject, this);\n      }\n    }\n    this.invalidateInputKey(keyObject, KeyEffect.Remove);\n    this.reconcileInput(0); // TODO: debounce and track version\n  }\n\n  /** @hidden */\n  mapWillDrop(lower: number): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.willDrop) {\n        observer.willDrop(lower, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  mapDidDrop(lower: number): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didDrop) {\n        observer.didDrop(lower, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  mapWillTake(upper: number): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.willTake) {\n        observer.willTake(upper, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  mapDidTake(upper: number): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didTake) {\n        observer.didTake(upper, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  mapWillClear(): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.willClear) {\n        observer.willClear(this);\n      }\n    }\n  }\n\n  /** @hidden */\n  mapDidClear(): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didClear) {\n        observer.didClear(this);\n      }\n    }\n  }\n\n  initialState(): BTree<Value, Value> | null;\n  initialState(state0: BTree<Value, Value> | null): this;\n  initialState(state0?: BTree<Value, Value> | null): BTree | null | this {\n    if (state0 === void 0) {\n      return this._state0 || null;\n    } else {\n      return this.copy(this._context, this._owner, this._hostUri, this._nodeUri, this._laneUri,\n                       this._prio, this._rate, this._body, this._flags, this._observers,\n                       this._keyForm, this._valueForm, state0 || void 0);\n    }\n  }\n\n  /** @hidden */\n  protected didAliasModel(): void {\n    this.onLinkedResponse();\n    this._model!._state.forEach(function (key: Value, value: Value): void {\n      this.mapDidUpdate(key, value, Value.absent());\n    }, this);\n    this.onSyncedResponse();\n  }\n\n  open(): this {\n    const laneUri = this._laneUri;\n    if (laneUri.isEmpty()) {\n      throw new Error(\"no lane\");\n    }\n    let nodeUri = this._nodeUri;\n    if (nodeUri.isEmpty()) {\n      throw new Error(\"no node\");\n    }\n    let hostUri = this._hostUri;\n    if (hostUri.isEmpty()) {\n      hostUri = nodeUri.endpoint();\n      nodeUri = hostUri.unresolve(nodeUri);\n    }\n    let model = this._context.getDownlink(hostUri, nodeUri, laneUri);\n    if (model) {\n      if (!(model instanceof MapDownlinkModel)) {\n        throw new Error(\"downlink type mismatch\");\n      }\n      model.addDownlink(this);\n      this._model = model as MapDownlinkModel;\n      setTimeout(this.didAliasModel.bind(this));\n    } else {\n      model = new MapDownlinkModel(this._context, hostUri, nodeUri, laneUri, this._prio,\n                                   this._rate, this._body, this._state0);\n      model.addDownlink(this);\n      this._context.openDownlink(model);\n      this._model = model as MapDownlinkModel;\n    }\n    if (this._owner) {\n      this._owner.addDownlink(this);\n    }\n    return this;\n  }\n\n  keyIterator(): Cursor<K> {\n    return this.keys();\n  }\n\n  input(): MapOutlet<K, V, Map<K, V>> | null {\n    return this._input;\n  }\n\n  bindInput(input: MapOutlet<K, V, Map<K, V>>): void {\n    if (!MapOutlet.is(input)) {\n      throw new TypeError(\"\" + input);\n    }\n    if (this._input !== null) {\n      this._input.unbindOutput(this);\n    }\n    this._input = input;\n    if (this._input !== null) {\n      this._input.bindOutput(this);\n    }\n  }\n\n  unbindInput(): void {\n    if (this._input !== null) {\n      this._input.unbindOutput(this);\n    }\n    this._input = null;\n  }\n\n  disconnectInputs(): void {\n    const input = this._input;\n    if (input !== null) {\n      input.unbindOutput(this);\n      this._input = null;\n      input.disconnectInputs();\n    }\n  }\n\n  outlet(key: K): Outlet<V> {\n    let outlet = this._outlets.get(key);\n    if (outlet === void 0) {\n      outlet = new KeyOutlet<K, V>(this, key);\n      this._outlets = this._outlets.updated(key, outlet);\n    }\n    return outlet;\n  }\n\n  outputIterator(): Cursor<Inlet<MapDownlink<K, V>>> {\n    return this._outputs !== null ? Cursor.array(this._outputs) : Cursor.empty();\n  }\n\n  bindOutput(output: Inlet<MapDownlink<K, V>>): void {\n    const oldOutputs = this._outputs;\n    const n = oldOutputs !== null ? oldOutputs.length : 0;\n    const newOutputs = new Array<Inlet<MapDownlink<K, V>>>(n + 1);\n    for (let i = 0; i < n; i += 1) {\n      newOutputs[i] = oldOutputs![i];\n    }\n    newOutputs[n] = output;\n    this._outputs = newOutputs;\n  }\n\n  unbindOutput(output: Inlet<MapDownlink<K, V>>): void {\n    const oldOutputs = this._outputs;\n    const n = oldOutputs !== null ? oldOutputs.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      if (oldOutputs![i] === output) {\n        if (n > 1) {\n          const newOutputs = new Array<Inlet<MapDownlink<K, V>>>(n - 1);\n          for (let j = 0; j < i; j += 1) {\n            newOutputs[j] = oldOutputs![j];\n          }\n          for (let j = i; j < n - 1; j += 1) {\n            newOutputs[j] = oldOutputs![j + 1];\n          }\n          this._outputs = newOutputs;\n        } else {\n          this._outputs = null;\n        }\n        break;\n      }\n    }\n  }\n\n  unbindOutputs(): void {\n    const oldOutputs = this._outputs;\n    if (oldOutputs !== null) {\n      this._outputs = null;\n      for (let i = 0, n = oldOutputs.length; i < n; i += 1) {\n        oldOutputs[i].unbindInput();\n      }\n    }\n  }\n\n  disconnectOutputs(): void {\n    const outlets = this._outlets;\n    if (outlets.isEmpty()) {\n      this._outlets = new BTree();\n      outlets.forEach(function (key: K, keyOutlet: KeyOutlet<K, V>) {\n        keyOutlet.disconnectOutputs();\n      }, this);\n    }\n    const outputs = this._outputs;\n    if (outputs !== null) {\n      this._outputs = null;\n      for (let i = 0, n = outputs.length; i < n; i += 1) {\n        const output = outputs[i];\n        output.unbindInput();\n        output.disconnectOutputs();\n      }\n    }\n  }\n\n  invalidateOutputKey(key: K, effect: KeyEffect): void {\n    this.invalidateKey(key, effect);\n  }\n\n  invalidateInputKey(key: K, effect: KeyEffect): void {\n    this.invalidateKey(key, effect);\n  }\n\n  invalidateKey(key: K, effect: KeyEffect): void {\n    const oldEffects = this._effects;\n    if (oldEffects.get(key) !== effect) {\n      this.willInvalidateKey(key, effect);\n      this._effects = oldEffects.updated(key, effect);\n      this._version = -1;\n      this.onInvalidateKey(key, effect);\n      const n = this._outputs !== null ? this._outputs.length : 0;\n      for (let i = 0; i < n; i += 1) {\n        const output = this._outputs![i];\n        if (MapInlet.is(output)) {\n          output.invalidateOutputKey(key, effect);\n        } else {\n          output.invalidateOutput();\n        }\n      }\n      const outlet = this._outlets.get(key);\n      if (outlet !== void 0) {\n        outlet.invalidateInput();\n      }\n      this.didInvalidateKey(key, effect);\n    }\n  }\n\n  invalidateOutput(): void {\n    this.invalidate();\n  }\n\n  invalidateInput(): void {\n    this.invalidate();\n  }\n\n  invalidate(): void {\n    if (this._version >= 0) {\n      this.willInvalidate();\n      this._version = -1;\n      this.onInvalidate();\n      const n = this._outputs !== null ? this._outputs.length : 0;\n      for (let i = 0; i < n; i += 1) {\n        this._outputs![i].invalidateOutput();\n      }\n      this._outlets.forEach(function (key: K, outlet: KeyOutlet<K, V>): void {\n        outlet.invalidateInput();\n      }, this);\n      this.didInvalidate();\n    }\n  }\n\n  reconcileOutputKey(key: K, version: number): void {\n    this.reconcileKey(key, version);\n  }\n\n  reconcileInputKey(key: K, version: number): void {\n    this.reconcileKey(key, version);\n  }\n\n  reconcileKey(key: K, version: number): void {\n    if (this._version < 0) {\n      const oldEffects = this._effects;\n      const effect = oldEffects.get(key);\n      if (effect !== void 0) {\n        this.willReconcileKey(key, effect, version);\n        this._effects = oldEffects.removed(key);\n        if (this._input !== null) {\n          this._input.reconcileInputKey(key, version);\n        }\n        this.onReconcileKey(key, effect, version);\n        for (let i = 0, n = this._outputs !== null ? this._outputs.length : 0; i < n; i += 1) {\n          const output = this._outputs![i];\n          if (MapInlet.is(output)) {\n            output.reconcileOutputKey(key, version);\n          }\n        }\n        const outlet = this._outlets.get(key);\n        if (outlet !== void 0) {\n          outlet.reconcileInput(version);\n        }\n        this.didReconcileKey(key, effect, version);\n      }\n    }\n  }\n\n  reconcileOutput(version: number): void {\n    this.reconcile(version);\n  }\n\n  reconcileInput(version: number): void {\n    this.reconcile(version);\n  }\n\n  reconcile(version: number): void {\n    if (this._version < 0) {\n      this.willReconcile(version);\n      this._effects.forEach(function (key: K): void {\n        this.reconcileKey(key, version);\n      }, this);\n      this._version = version;\n      this.onReconcile(version);\n      for (let i = 0, n = this._outputs !== null ? this._outputs.length : 0; i < n; i += 1) {\n        this._outputs![i].reconcileOutput(version);\n      }\n      this.didReconcile(version);\n    }\n  }\n\n  protected willInvalidateKey(key: K, effect: KeyEffect): void {\n    // stub\n  }\n\n  protected onInvalidateKey(key: K, effect: KeyEffect): void {\n    // stub\n  }\n\n  protected didInvalidateKey(key: K, effect: KeyEffect): void {\n    // stub\n  }\n\n  protected willInvalidate(): void {\n    // stub\n  }\n\n  protected onInvalidate(): void {\n    // stub\n  }\n\n  protected didInvalidate(): void {\n    // stub\n  }\n\n  protected willReconcileKey(key: K, effect: KeyEffect, version: number): void {\n    // stub\n  }\n\n  protected onReconcileKey(key: K, effect: KeyEffect, version: number): void {\n    if (effect === KeyEffect.Update) {\n      if (this._input !== null) {\n        const value = this._input.get(key);\n        if (value !== void 0) {\n          this.set(key, value);\n        } else {\n          this.delete(key);\n        }\n      }\n    } else if (effect === KeyEffect.Remove) {\n      this.delete(key);\n    }\n  }\n\n  protected didReconcileKey(key: K, effect: KeyEffect, version: number): void {\n    // stub\n  }\n\n  protected willReconcile(version: number): void {\n    // stub\n  }\n\n  protected onReconcile(version: number): void {\n    // stub\n  }\n\n  protected didReconcile(version: number): void {\n    // stub\n  }\n\n  memoize(): MapOutlet<K, V, MapDownlink<K, V, KU, VU>> {\n    return this;\n  }\n\n  filter(func: FilterFieldsFunction<K, V>): MapOutlet<K, V, Map<K, V>> {\n    const combinator = new FilterFieldsCombinator<K, V, MapDownlink<K, V, KU, VU>>(func);\n    combinator.bindInput(this);\n    return combinator;\n  }\n\n  map<O2>(func: MapValueFunction<MapDownlink<K, V, KU, VU>, O2>): Outlet<O2>;\n  map<V2>(func: MapFieldValuesFunction<K, V, V2>): MapOutlet<K, V2, Map<K, V2>>;\n  map<V2>(func: MapValueFunction<MapDownlink<K, V, KU, VU>, V2> | MapFieldValuesFunction<K, V, V2>): Outlet<V2> | MapOutlet<K, V2, Map<K, V2>> {\n    if (func.length === 1) {\n      const combinator = new MapValueCombinator<MapDownlink<K, V, KU, VU>, V2>(func as MapValueFunction<MapDownlink<K, V, KU, VU>, V2>);\n      combinator.bindInput(this);\n      return combinator;\n    } else {\n      const combinator = new MapFieldValuesCombinator<K, V, V2, MapDownlink<K, V, KU, VU>>(func as MapFieldValuesFunction<K, V, V2>);\n      combinator.bindInput(this);\n      return combinator;\n    }\n  }\n\n  reduce<U>(identity: U, accumulator: (result: U, element: V) => U, combiner: (result: U, result2: U) => U): Outlet<U> {\n    const combinator = new ReduceFieldsCombinator<K, V, MapDownlink<K, V, KU, VU>, U>(identity, accumulator, combiner);\n    combinator.bindInput(this);\n    return combinator;\n  }\n\n  watch(func: WatchValueFunction<MapDownlink<K, V, KU, VU>>): this;\n  watch(func: WatchFieldsFunction<K, V>): this;\n  watch(func: WatchValueFunction<MapDownlink<K, V, KU, VU>> | WatchFieldsFunction<K, V>): this {\n    if (func.length === 1) {\n      const combinator = new WatchValueCombinator<MapDownlink<K, V, KU, VU>>(func as WatchValueFunction<MapDownlink<K, V, KU, VU>>);\n      combinator.bindInput(this);\n      return this;\n    } else {\n      const combinator = new WatchFieldsCombinator<K, V, MapDownlink<K, V, KU, VU>>(func as WatchFieldsFunction<K, V>);\n      combinator.bindInput(this);\n      return this;\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Value} from \"@swim/structure\";\nimport {Uri} from \"@swim/uri\";\nimport {EventMessage} from \"@swim/warp\";\nimport {Host} from \"../host/Host\";\nimport {DownlinkContext} from \"./DownlinkContext\";\nimport {DownlinkModel} from \"./DownlinkModel\";\nimport {DownlinkType} from \"./Downlink\";\nimport {ValueDownlink} from \"./ValueDownlink\";\n\n/** @hidden */\nexport class ValueDownlinkModel extends DownlinkModel {\n  /** @hidden */\n  _views: ValueDownlink<unknown>[];\n  /** @hidden */\n  _state: Value;\n\n  constructor(context: DownlinkContext, hostUri: Uri, nodeUri: Uri, laneUri: Uri,\n              prio?: number, rate?: number, body?: Value, state: Value = Value.absent()) {\n    super(context, hostUri, nodeUri, laneUri, prio, rate, body);\n    this._state = state;\n  }\n\n  type(): DownlinkType {\n    return \"value\";\n  }\n\n  get(): Value {\n    return this._state;\n  }\n\n  set(newValue: Value): void {\n    newValue = this.valueWillSet(newValue);\n    const oldValue = this._state;\n    this.setState(newValue);\n    this.valueDidSet(newValue, oldValue);\n    this.command(newValue);\n  }\n\n  setState(state: Value): void {\n    this._state = state;\n  }\n\n  onEventMessage(message: EventMessage, host: Host): void {\n    super.onEventMessage(message, host);\n    this.onSetEvent(message.body());\n  }\n\n  protected onSetEvent(newValue: Value): void {\n    newValue = this.valueWillSet(newValue);\n    const oldValue = this._state;\n    this.setState(newValue);\n    this.valueDidSet(newValue, oldValue);\n  }\n\n  protected valueWillSet(newValue: Value): Value {\n    for (let i = 0; i < this._views.length; i += 1) {\n      newValue = this._views[i].valueWillSet(newValue);\n    }\n    return newValue;\n  }\n\n  protected valueDidSet(newValue: Value, oldValue: Value): void {\n    for (let i = 0; i < this._views.length; i += 1) {\n      this._views[i].valueDidSet(newValue, oldValue);\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {Value, Form} from \"@swim/structure\";\nimport {Inlet, Outlet} from \"@swim/streamlet\";\nimport {MapValueFunction, MapValueCombinator} from \"@swim/streamlet\";\nimport {WatchValueFunction, WatchValueCombinator} from \"@swim/streamlet\";\nimport {Uri} from \"@swim/uri\";\nimport {DownlinkContext} from \"./DownlinkContext\";\nimport {DownlinkOwner} from \"./DownlinkOwner\";\nimport {DownlinkType, DownlinkObserver, DownlinkInit, DownlinkFlags, Downlink} from \"./Downlink\";\nimport {ValueDownlinkModel} from \"./ValueDownlinkModel\";\n\nexport type ValueDownlinkWillSet<V extends VU, VU = V> = (newValue: V, downlink: ValueDownlink<V, VU>) => V | void;\nexport type VaueDownlinkDidSet<V extends VU, VU = V> = (newValue: V, oldValue: V, downlink: ValueDownlink<V, VU>) => void;\n\nexport interface ValueDownlinkObserver<V extends VU, VU = V> extends DownlinkObserver {\n  willSet?: ValueDownlinkWillSet<V, VU>;\n  didSet?: VaueDownlinkDidSet<V, VU>;\n}\n\nexport interface ValueDownlinkInit<V extends VU, VU = V> extends ValueDownlinkObserver<V, VU>, DownlinkInit {\n  valueForm?: Form<V, VU>;\n}\n\nexport class ValueDownlink<V extends VU, VU = V> extends Downlink implements Inlet<V>, Outlet<V> {\n  /** @hidden */\n  _observers: ReadonlyArray<ValueDownlinkObserver<V, VU>> | null;\n  /** @hidden */\n  _model: ValueDownlinkModel | null;\n  /** @hidden */\n  _valueForm: Form<V, VU>;\n  /** @hidden */\n  _state0: Value;\n  /** @hidden */\n  _input: Outlet<V> | null;\n  /** @hidden */\n  _outputs: ReadonlyArray<Inlet<V>> | null; // TODO: unify with observers\n  /** @hidden */\n  _version: number;\n\n  /** @hidden */\n  constructor(context: DownlinkContext, owner?: DownlinkOwner, init?: ValueDownlinkInit<V, VU>,\n              hostUri?: Uri, nodeUri?: Uri, laneUri?: Uri, prio?: number, rate?: number,\n              body?: Value, flags: number = DownlinkFlags.KeepLinkedSynced,\n              observers?: ReadonlyArray<ValueDownlinkObserver<V, VU>> | ValueDownlinkObserver<V, VU> | null,\n              valueForm?: Form<V, VU>, state0: Value = Value.absent()) {\n    super(context, owner, init, hostUri, nodeUri, laneUri, prio, rate, body, flags, observers);\n    if (init) {\n      const observer = this._observers![this._observers!.length - 1];\n      observer.willSet = init.willSet || observer.willSet;\n      observer.didSet = init.didSet || observer.didSet;\n      valueForm = init.valueForm ? init.valueForm : valueForm;\n    }\n    this._valueForm = valueForm || Form.forValue() as any;\n    this._state0 = state0;\n    this._input = null;\n    this._outputs = null;\n    this._version = -1;\n  }\n\n  protected copy(context: DownlinkContext, owner: DownlinkOwner | undefined,\n                 hostUri: Uri, nodeUri: Uri, laneUri: Uri, prio: number, rate: number,\n                 body: Value, flags: number, observers: ReadonlyArray<ValueDownlinkObserver<V, VU>> | null,\n                 valueForm?: Form<V, VU>, state0?: Value): this {\n    if (arguments.length === 10) {\n      state0 = this._state0;\n      valueForm = this._valueForm;\n    }\n    return new ValueDownlink(context, owner, void 0, hostUri, nodeUri, laneUri,\n                             prio, rate, body, flags, observers, valueForm, state0) as this;\n  }\n\n  type(): DownlinkType {\n    return \"value\";\n  }\n\n  valueForm(): Form<V, VU>;\n  valueForm<V2 extends V2U, V2U = V2>(valueForm: Form<V2, V2U>): ValueDownlink<V2, V2U>;\n  valueForm<V2 extends V2U, V2U = V2>(valueForm?: Form<V2, V2U>): Form<V, VU> | ValueDownlink<V2, V2U> {\n    if (valueForm === void 0) {\n      return this._valueForm;\n    } else {\n      return this.copy(this._context, this._owner, this._hostUri, this._nodeUri, this._laneUri,\n                       this._prio, this._rate, this._body, this._flags, this._observers,\n                       valueForm as any, this._state0) as any;\n    }\n  }\n\n  get(): V {\n    const value = this._model!.get();\n    const object = value.coerce(this._valueForm);\n    return object;\n  }\n\n  set(newObject: VU): void {\n    const newValue = this._valueForm.mold(newObject);\n    this._model!.set(newValue);\n  }\n\n  setState(state: Value): void {\n    this._model!.setState(state);\n  }\n\n  observe(observer: ValueDownlinkObserver<V, VU>): this {\n    return super.observe(observer);\n  }\n\n  willSet(willSet: ValueDownlinkWillSet<V, VU>): this {\n    return this.observe({willSet});\n  }\n\n  didSet(didSet: VaueDownlinkDidSet<V, VU>): this {\n    return this.observe({didSet});\n  }\n\n  /** @hidden */\n  valueWillSet(newValue: Value): Value {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    let newObject: V | undefined;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.willSet) {\n        if (newObject === void 0) {\n          newObject = newValue.coerce(this._valueForm);\n        }\n        const newResult = observer.willSet(newObject, this);\n        if (newResult !== void 0) {\n          newObject = newResult;\n          newValue = this._valueForm.mold(newObject);\n        }\n      }\n    }\n    return newValue;\n  }\n\n  /** @hidden */\n  valueDidSet(newValue: Value, oldValue: Value) {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    let newObject: V | undefined;\n    let oldObject: V | undefined;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didSet) {\n        if (newObject === void 0) {\n          newObject = newValue.coerce(this._valueForm);\n        }\n        if (oldObject === void 0) {\n          oldObject = oldValue.coerce(this._valueForm);\n        }\n        observer.didSet(newObject, oldObject, this);\n      }\n    }\n    this.invalidate();\n    this.reconcile(0); // TODO: debounce update; track version\n  }\n\n  initialState(): Value;\n  initialState(state0: Value): this;\n  initialState(state0?: Value): Value | this {\n    if (state0 === void 0) {\n      return this._state0;\n    } else {\n      return this.copy(this._context, this._owner, this._hostUri, this._nodeUri, this._laneUri,\n                       this._prio, this._rate, this._body, this._flags, this._observers,\n                       this._valueForm, state0);\n    }\n  }\n\n  /** @hidden */\n  protected didAliasModel(): void {\n    this.onLinkedResponse();\n    this.valueDidSet(this._model!.get(), Value.absent());\n    this.onSyncedResponse();\n  }\n\n  open(): this {\n    const laneUri = this._laneUri;\n    if (laneUri.isEmpty()) {\n      throw new Error(\"no lane\");\n    }\n    let nodeUri = this._nodeUri;\n    if (nodeUri.isEmpty()) {\n      throw new Error(\"no node\");\n    }\n    let hostUri = this._hostUri;\n    if (hostUri.isEmpty()) {\n      hostUri = nodeUri.endpoint();\n      nodeUri = hostUri.unresolve(nodeUri);\n    }\n    let model = this._context.getDownlink(hostUri, nodeUri, laneUri);\n    if (model) {\n      if (!(model instanceof ValueDownlinkModel)) {\n        throw new Error(\"downlink type mismatch\");\n      }\n      model.addDownlink(this);\n      this._model = model as ValueDownlinkModel;\n      setTimeout(this.didAliasModel.bind(this));\n    } else {\n      model = new ValueDownlinkModel(this._context, hostUri, nodeUri, laneUri, this._prio,\n                                     this._rate, this._body, this._state0);\n      model.addDownlink(this);\n      this._context.openDownlink(model);\n      this._model = model as ValueDownlinkModel;\n    }\n    if (this._owner) {\n      this._owner.addDownlink(this);\n    }\n    return this;\n  }\n\n  input(): Outlet<V> | null {\n    return this._input;\n  }\n\n  bindInput(input: Outlet<V> | null): void {\n    if (this._input !== null) {\n      this._input.unbindOutput(this);\n    }\n    this._input = input;\n    if (this._input !== null) {\n      this._input.bindOutput(this);\n    }\n  }\n\n  unbindInput(): void {\n    if (this._input !== null) {\n      this._input.unbindOutput(this);\n    }\n    this._input = null;\n  }\n\n  disconnectInputs(): void {\n    const input = this._input;\n    if (input !== null) {\n      input.unbindOutput(this);\n      this._input = null;\n      input.disconnectInputs();\n    }\n  }\n\n  outputIterator(): Cursor<Inlet<V>> {\n    return this._outputs !== null ? Cursor.array(this._outputs) : Cursor.empty();\n  }\n\n  bindOutput(output: Inlet<V>): void {\n    const oldOutputs = this._outputs;\n    const n = oldOutputs !== null ? oldOutputs.length : 0;\n    const newOutputs = new Array<Inlet<V>>(n + 1);\n    for (let i = 0; i < n; i += 1) {\n      newOutputs[i] = oldOutputs![i];\n    }\n    newOutputs[n] = output;\n    this._outputs = newOutputs;\n  }\n\n  unbindOutput(output: Inlet<V>): void {\n    const oldOutputs = this._outputs;\n    const n = oldOutputs !== null ? oldOutputs.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      if (oldOutputs![i] === output) {\n        if (n > 1) {\n          const newOutputs = new Array<Inlet<V>>(n - 1);\n          for (let j = 0; j < i; j += 1) {\n            newOutputs[j] = oldOutputs![j];\n          }\n          for (let j = i; j < n - 1; j += 1) {\n            newOutputs[j] = oldOutputs![j + 1];\n          }\n          this._outputs = newOutputs;\n        } else {\n          this._outputs = null;\n        }\n        break;\n      }\n    }\n  }\n\n  unbindOutputs(): void {\n    const oldOutputs = this._outputs;\n    if (oldOutputs !== null) {\n      this._outputs = null;\n      for (let i = 0, n = oldOutputs.length; i < n; i += 1) {\n        oldOutputs[i].unbindInput();\n      }\n    }\n  }\n\n  disconnectOutputs(): void {\n    const outputs = this._outputs;\n    if (outputs !== null) {\n      this._outputs = null;\n      for (let i = 0, n = outputs.length; i < n; i += 1) {\n        const output = outputs[i];\n        output.unbindInput();\n        output.disconnectOutputs();\n      }\n    }\n  }\n\n  invalidateOutput(): void {\n    this.invalidate();\n  }\n\n  invalidateInput(): void {\n    this.invalidate();\n  }\n\n  invalidate(): void {\n    if (this._version >= 0) {\n      this.willInvalidate();\n      this._version = -1;\n      this.onInvalidate();\n      const n = this._outputs !== null ? this._outputs.length : 0;\n      for (let i = 0; i < n; i += 1) {\n        this._outputs![i].invalidateOutput();\n      }\n      this.didInvalidate();\n    }\n  }\n\n  reconcileOutput(version: number): void {\n    this.reconcile(version);\n  }\n\n  reconcileInput(version: number): void {\n    this.reconcile(version);\n  }\n\n  reconcile(version: number): void {\n    if (this._version < 0) {\n      this.willReconcile(version);\n      this._version = version;\n      if (this._input !== null) {\n        this._input.reconcileInput(version);\n      }\n      this.onReconcile(version);\n      const n = this._outputs !== null ? this._outputs.length : 0;\n      for (let i = 0; i < n; i += 1) {\n        this._outputs![i].reconcileOutput(version);\n      }\n      this.didReconcile(version);\n    }\n  }\n\n  protected willInvalidate(): void {\n    // stub\n  }\n\n  protected onInvalidate(): void {\n    // stub\n  }\n\n  protected didInvalidate(): void {\n    // stub\n  }\n\n  protected willReconcile(version: number): void {\n    // stub\n  }\n\n  protected onReconcile(version: number): void {\n    if (this._input !== null) {\n      const value = this._input.get();\n      if (value !== void 0) {\n        this.set(value);\n      }\n    }\n  }\n\n  protected didReconcile(version: number): void {\n    // stub\n  }\n\n  memoize(): Outlet<V> {\n    return this;\n  }\n\n  map<V2>(func: MapValueFunction<V, V2>): Outlet<V2> {\n    const combinator = new MapValueCombinator<V, V2>(func);\n    combinator.bindInput(this);\n    return combinator;\n  }\n\n  watch(func: WatchValueFunction<V>): this {\n    const combinator = new WatchValueCombinator<V>(func);\n    combinator.bindInput(this);\n    return this;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AbstractRecordOutlet} from \"@swim/dataflow\";\nimport {Downlink} from \"./Downlink\";\n\nexport abstract class DownlinkRecord extends AbstractRecordOutlet {\n  readonly downlink: Downlink;\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {AnyItem, Item, AnyValue, Value, Record, AnyText, AnyNum, Num} from \"@swim/structure\";\nimport {DownlinkRecord} from \"./DownlinkRecord\";\nimport {ListDownlink} from \"./ListDownlink\";\n\nexport class ListDownlinkRecord extends DownlinkRecord {\n  /** @hidden */\n  readonly _downlink: ListDownlink<Value, AnyValue>;\n\n  constructor(downlink: ListDownlink<Value, AnyValue>) {\n    super();\n    this._downlink = downlink;\n  }\n\n  get downlink(): ListDownlink<Value, AnyValue> {\n    return this._downlink;\n  }\n\n  isEmpty(): boolean {\n    return this._downlink.isEmpty();\n  }\n\n  isArray(): boolean {\n    return true;\n  }\n\n  isObject(): boolean {\n    return this._downlink.isEmpty();\n  }\n\n  get length(): number {\n    return this._downlink.length;\n  }\n\n  get size(): number {\n    return this._downlink.length;\n  }\n\n  has(key: AnyValue): boolean {\n    return false;\n  }\n\n  get(): Record;\n  get(key: AnyValue): Value;\n  get(key?: AnyValue): Value {\n    if (key === void 0) {\n      return this;\n    } else {\n      return Value.absent();\n    }\n  }\n\n  getAttr(key: AnyText): Value {\n    return Value.absent();\n  }\n\n  getSlot(key: AnyValue): Value {\n    return Value.absent();\n  }\n\n  getItem(index: AnyNum): Item {\n    if (index instanceof Num) {\n      index = index.value;\n    }\n    const n = this._downlink.length;\n    if (index < 0) {\n      index = n + index;\n    }\n    index = Math.min(Math.max(0, index), n - 1);\n    if (index >= 0) {\n      return this._downlink.get(index);\n    }\n    return Item.absent();\n  }\n\n  set(key: AnyValue, newValue: AnyValue): this {\n    throw new Error(\"unsupported\");\n  }\n\n  setAttr(key: AnyText, newValue: AnyValue): this {\n    throw new Error(\"unsupported\");\n  }\n\n  setSlot(key: AnyValue, newValue: AnyValue): this {\n    throw new Error(\"unsupported\");\n  }\n\n  setItem(index: AnyNum, newItem: AnyItem): this {\n    if (index instanceof Num) {\n      index = index.value;\n    }\n    const n = this._downlink.length;\n    if (index < 0) {\n      index = n + index;\n    }\n    index = Math.min(Math.max(0, index), n - 1);\n    if (index >= 0) {\n      this._downlink.set(index, Value.fromAny(newItem));\n    }\n    return this;\n  }\n\n  push(...newItems: AnyItem[]): number {\n    return this._downlink.push.apply(this._downlink, arguments);\n  }\n\n  splice(start: number, deleteCount?: number, ...newItems: AnyItem[]): Item[] {\n    return this._downlink.splice.apply(this._downlink, arguments);\n  }\n\n  delete(key: AnyValue): Item {\n    return Item.absent();\n  }\n\n  clear(): void {\n    this._downlink.clear();\n  }\n\n  forEach<T, S = unknown>(callback: (this: S, item: Item, index: number) => T | void,\n                          thisArg?: S): T | undefined {\n    return this._downlink.forEach(function (value: Value, index: number): T | void {\n      return callback.call(thisArg, value, index);\n    });\n  }\n\n  keyIterator(): Cursor<Value> {\n    return Cursor.empty();\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {AnyItem, Item, Slot, AnyValue, Value, Record, AnyText, AnyNum, Num} from \"@swim/structure\";\nimport {KeyEffect} from \"@swim/streamlet\";\nimport {DownlinkRecord} from \"./DownlinkRecord\";\nimport {MapDownlink} from \"./MapDownlink\";\n\nexport class MapDownlinkRecord extends DownlinkRecord {\n  /** @hidden */\n  readonly _downlink: MapDownlink<Value, Value, AnyValue, AnyValue>;\n\n  constructor(downlink: MapDownlink<Value, Value, AnyValue, AnyValue>) {\n    super();\n    this._downlink = downlink;\n    this._downlink.observe(this);\n  }\n\n  get downlink(): MapDownlink<Value, Value, AnyValue, AnyValue> {\n    return this._downlink;\n  }\n\n  isEmpty(): boolean {\n    return this._downlink.isEmpty();\n  }\n\n  isArray(): boolean {\n    return this._downlink.isEmpty();\n  }\n\n  isObject(): boolean {\n    return true;\n  }\n\n  get length(): number {\n    return this._downlink.size;\n  }\n\n  has(key: AnyValue): boolean {\n    return this._downlink.has(key);\n  }\n\n  get(): Record;\n  get(key: AnyValue): Value;\n  get(key?: AnyValue): Value {\n    if (key === void 0) {\n      return this;\n    } else {\n      return this._downlink.get(key);\n    }\n  }\n\n  getAttr(key: AnyText): Value {\n    return Value.absent();\n  }\n\n  getSlot(key: AnyValue): Value {\n    return this.get(key);\n  }\n\n  getItem(index: AnyNum): Item {\n    if (index instanceof Num) {\n      index = index.value;\n    }\n    const n = this._downlink.size;\n    if (index < 0) {\n      index = n + index;\n    }\n    index = Math.min(Math.max(0, index), n - 1);\n    if (index >= 0) {\n      const entry = this._downlink.getEntry(index)!;\n      return Slot.of(entry[0], entry[1]);\n    }\n    return Item.absent();\n  }\n\n  set(key: AnyValue, newValue: AnyValue): this {\n    this._downlink.set(key, newValue);\n    return this;\n  }\n\n  setAttr(key: AnyText, newValue: AnyValue): this {\n    throw new Error(\"unsupported\");\n  }\n\n  setSlot(key: AnyValue, newValue: AnyValue): this {\n    return this.set(key, newValue);\n  }\n\n  setItem(index: number, newItem: AnyItem): this {\n    throw new Error(\"unsupported\");\n  }\n\n  push(...newItems: AnyItem[]): number {\n    throw new Error(\"unsupported\");\n  }\n\n  splice(start: number, deleteCount?: number, ...newItems: AnyItem[]): Item[] {\n    throw new Error(\"unsupported\");\n  }\n\n  delete(key: AnyValue): Item {\n    key = Value.fromAny(key);\n    const oldValue = this._downlink.get(key);\n    if (this._downlink.delete(key)) {\n      return Slot.of(key, oldValue);\n    }\n    return Item.absent();\n  }\n\n  clear(): void {\n    this._downlink.clear();\n  }\n\n  forEach<T, S = unknown>(callback: (this: S, item: Item, index: number) => T | void,\n                          thisArg?: S): T | undefined {\n    let index = 0;\n    return this._downlink.forEach(function (key: Value, value: Value): T | void {\n      const result = callback.call(thisArg, Slot.of(key, value), index);\n      index += 1;\n      return result;\n    });\n  }\n\n  keyIterator(): Cursor<Value> {\n    return this._downlink.keys();\n  }\n\n  didUpdate(key: Value, newValue: Value, oldValue: Value): void {\n    this.invalidateInputKey(key, KeyEffect.Update);\n    this.reconcileInput(0); // TODO: debounce\n  }\n\n  didRemove(key: Value, oldValue: Value): void {\n    this.invalidateInputKey(key, KeyEffect.Remove);\n    this.reconcileInput(0); // TODO: debounce\n  }\n\n  didDrop(lower: number): void {\n    // TODO\n  }\n\n  didTake(upper: number): void {\n    // TODO\n  }\n\n  didClear(): void {\n    // TODO\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {AnyItem, Item, Field, AnyValue, Value, Record, AnyText, AnyNum} from \"@swim/structure\";\nimport {DownlinkRecord} from \"./DownlinkRecord\";\nimport {ValueDownlink} from \"./ValueDownlink\";\n\nexport class ValueDownlinkRecord extends DownlinkRecord {\n  /** @hidden */\n  readonly _downlink: ValueDownlink<Value, AnyValue>;\n\n  constructor(downlink: ValueDownlink<Value, AnyValue>) {\n    super();\n    this._downlink = downlink;\n    this._downlink.observe(this);\n  }\n\n  get downlink(): ValueDownlink<Value, AnyValue> {\n    return this._downlink;\n  }\n\n  isEmpty(): boolean {\n    const value = this._downlink.get();\n    if (value instanceof Record) {\n      return value.isEmpty();\n    } else {\n      return !value.isDefined();\n    }\n  }\n\n  isArray(): boolean {\n    const value = this._downlink.get();\n    if (value instanceof Record) {\n      return value.isArray();\n    } else {\n      return true;\n    }\n  }\n\n  isObject(): boolean {\n    const value = this._downlink.get();\n    if (value instanceof Record) {\n      return value.isObject();\n    } else {\n      return !value.isDefined();\n    }\n  }\n\n  get length(): number {\n    const value = this._downlink.get();\n    if (value instanceof Record) {\n      return value.length;\n    } else if (value.isDefined()) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n\n  has(key: AnyValue): boolean {\n    const value = this._downlink.get();\n    if (value instanceof Record) {\n      return value.has(key);\n    } else {\n      return false;\n    }\n  }\n\n  get(): Record;\n  get(key: AnyValue): Value;\n  get(key?: AnyValue): Value {\n    if (key === void 0) {\n      return this;\n    } else {\n      const value = this._downlink.get();\n      if (value instanceof Record) {\n        return value.get(key);\n      } else {\n        return Value.absent();\n      }\n    }\n  }\n\n  getAttr(key: AnyText): Value {\n    const value = this._downlink.get();\n    if (value instanceof Record) {\n      return value.getAttr(key);\n    } else {\n      return Value.absent();\n    }\n  }\n\n  getSlot(key: AnyValue): Value {\n    const value = this._downlink.get();\n    if (value instanceof Record) {\n      return value.getSlot(key);\n    } else {\n      return Value.absent();\n    }\n  }\n\n  getField(key: AnyValue): Field | undefined {\n    const value = this._downlink.get();\n    if (value instanceof Record) {\n      return value.getField(key);\n    } else {\n      return void 0;\n    }\n  }\n\n  getItem(index: AnyNum): Item {\n    const value = this._downlink.get();\n    if (value instanceof Record) {\n      return value.getItem(index);\n    } else {\n      return value;\n    }\n  }\n\n  set(key: AnyValue, newValue: AnyValue): this {\n    const value = this._downlink.get();\n    if (value instanceof Record) {\n      value.set(key, newValue);\n    } else {\n      throw new Error(\"unsupported\");\n    }\n    return this;\n  }\n\n  setAttr(key: AnyText, newValue: AnyValue): this {\n    const value = this._downlink.get();\n    if (value instanceof Record) {\n      value.setAttr(key, newValue);\n    } else {\n      throw new Error(\"unsupported\");\n    }\n    return this;\n  }\n\n  setSlot(key: AnyValue, newValue: AnyValue): this {\n    const value = this._downlink.get();\n    if (value instanceof Record) {\n      value.setSlot(key, newValue);\n    } else {\n      throw new Error(\"unsupported\");\n    }\n    return this;\n  }\n\n  setItem(index: number, newItem: AnyItem): this {\n    const value = this._downlink.get();\n    if (value instanceof Record) {\n      value.setItem(index, newItem);\n    } else {\n      this._downlink.set(Item.fromAny(newItem).toValue());\n    }\n    return this;\n  }\n\n  push(...newItems: AnyItem[]): number {\n    const value = this._downlink.get();\n    if (value instanceof Record) {\n      return value.push.apply(value, arguments);\n    } else {\n      throw new Error(\"unsupported\");\n    }\n  }\n\n  splice(start: number, deleteCount?: number, ...newItems: AnyItem[]): Item[] {\n    const value = this._downlink.get();\n    if (value instanceof Record) {\n      return value.splice.apply(value, arguments);\n    } else {\n      throw new Error(\"unsupported\");\n    }\n  }\n\n  delete(key: AnyValue): Item {\n    const value = this._downlink.get();\n    if (value instanceof Record) {\n      return value.delete(key);\n    } else {\n      return Value.absent();\n    }\n  }\n\n  clear(): void {\n    const value = this._downlink.get();\n    if (value instanceof Record) {\n      value.clear();\n    } else {\n      throw new Error(\"unsupported\");\n    }\n  }\n\n  forEach<T, S = unknown>(callback: (this: S, item: Item, index: number) => T | void,\n                          thisArg?: S): T | undefined {\n    const value = this._downlink.get();\n    return value.forEach(callback, thisArg);\n  }\n\n  keyIterator(): Cursor<Value> {\n    const value = this._downlink.get();\n    if (value instanceof Record) {\n      throw new Error(); // TODO\n    } else {\n      return Cursor.empty();\n    }\n  }\n\n  didSet(newValue: Value, oldValue: Value): void {\n    this.invalidateInput();\n    this.reconcileInput(0); // TODO: debounce\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Record} from \"@swim/structure\";\nimport {RecordModel, Transmuter} from \"@swim/dataflow\";\nimport {DownlinkStreamlet} from \"./DownlinkStreamlet\";\nimport {WarpRef} from \"../WarpRef\";\n\n/** @hidden */\nexport class DownlinkTransmuter extends Transmuter {\n  warp: WarpRef | undefined;\n\n  constructor(warp?: WarpRef) {\n    super();\n    this.warp = warp;\n  }\n\n  transmute(model: RecordModel): Record {\n    if (model.tag() === \"link\") {\n      const streamlet = new DownlinkStreamlet(this.warp, model);\n      streamlet.compile();\n      return streamlet;\n    }\n    return model;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Map} from \"@swim/util\";\nimport {Value, Form} from \"@swim/structure\";\nimport {Outlet, Inoutlet, StreamletScope, Out, Inout} from \"@swim/streamlet\";\nimport {AbstractRecordStreamlet, Transmuter} from \"@swim/dataflow\";\nimport {DownlinkType, Downlink} from \"./Downlink\";\nimport {ValueDownlink} from \"./ValueDownlink\";\nimport {DownlinkRecord} from \"./DownlinkRecord\";\nimport {MapDownlinkRecord} from \"./MapDownlinkRecord\";\nimport {DownlinkTransmuter} from \"./DownlinkTransmuter\";\nimport {WarpRef} from \"../WarpRef\";\nimport {client} from \"..\";\n\nexport class DownlinkStreamlet extends AbstractRecordStreamlet {\n  warp: WarpRef | undefined;\n  downlink: Downlink | undefined;\n  /** @hidden */\n  downlinkRecord: DownlinkRecord | undefined;\n  /** @hidden */\n  inputHostUri: string | undefined;\n  /** @hidden */\n  inputNodeUri: string | undefined;\n  /** @hidden */\n  inputLaneUri: string | undefined;\n  /** @hidden */\n  inputPrio: number | undefined;\n  /** @hidden */\n  inputRate: number | undefined;\n  /** @hidden */\n  inputBody: Value | undefined;\n  /** @hidden */\n  inputType: DownlinkType | undefined;\n\n  constructor(warp?: WarpRef, scope?: StreamletScope<Value> | null) {\n    super(scope);\n    this.warp = warp;\n  }\n\n  @Inout\n  hostUri: Inoutlet<Value> = this.inoutlet();\n\n  @Inout\n  nodeUri: Inoutlet<Value> = this.inoutlet();\n\n  @Inout\n  laneUri: Inoutlet<Value> = this.inoutlet();\n\n  @Inout\n  prio: Inoutlet<Value> = this.inoutlet();\n\n  @Inout\n  rate: Inoutlet<Value> = this.inoutlet();\n\n  @Inout(\"body\")\n  bodyValue: Inoutlet<Value> = this.inoutlet();\n\n  @Inout\n  type: Inoutlet<Value> = this.inoutlet();\n\n  @Out\n  state: Outlet<Value | Map<Value, Value>>;\n\n  getOutput(outlet: Outlet<Value> | string): Value | undefined {\n    outlet = this.outlet(outlet)!;\n    if (outlet === this.state) {\n      if (this.downlink instanceof ValueDownlink) {\n        return this.downlink.get();\n      } else if (this.downlinkRecord) {\n        return this.downlinkRecord;\n      }\n    }\n    return void 0;\n  }\n\n  protected onReconcile(version: number): void {\n    const hostUri = this.castInput(this.hostUri, Form.forString());\n    const nodeUri = this.castInput(this.nodeUri, Form.forString());\n    const laneUri = this.castInput(this.laneUri, Form.forString());\n    const prio = this.castInput(this.prio, Form.forNumber(), 0);\n    const rate = this.castInput(this.rate, Form.forNumber(), 0);\n    const body = this.getInput(this.bodyValue);\n    const type = this.castInput(this.type, Form.forString(), void 0) as DownlinkType | undefined;\n    if (hostUri !== this.inputHostUri || nodeUri !== this.inputNodeUri || laneUri !== this.inputLaneUri\n        || prio !== this.inputPrio || rate !== this.inputRate\n        || (body === void 0 ? this.inputBody !== void 0 : !body.equals(this.inputBody))\n        || type !== this.inputType) {\n      if (this.downlink) {\n        this.downlink.close();\n        this.downlink = void 0;\n        this.downlinkRecord = void 0;\n      }\n      this.inputHostUri = hostUri;\n      this.inputNodeUri = nodeUri;\n      this.inputLaneUri = laneUri;\n      this.inputPrio = prio;\n      this.inputRate = rate;\n      this.inputBody = body;\n      this.inputType = type;\n      const warp = this.warp || client;\n      if (type === \"map\") {\n        let downlink = warp.downlinkMap();\n        if (hostUri !== void 0) {\n          downlink = downlink.hostUri(hostUri);\n        }\n        if (nodeUri !== void 0) {\n          downlink = downlink.nodeUri(nodeUri);\n        }\n        if (laneUri !== void 0) {\n          downlink = downlink.laneUri(laneUri);\n        }\n        if (prio !== 0) {\n          downlink = downlink.prio(prio);\n        }\n        if (rate !== 0) {\n          downlink = downlink.rate(rate);\n        }\n        if (body !== void 0) {\n          downlink = downlink.body(body);\n        }\n        downlink = downlink.open();\n        this.state = downlink;\n        this.downlink = downlink;\n        this.downlinkRecord = new MapDownlinkRecord(downlink);\n      } else if (type === \"value\") {\n        let downlink = warp.downlinkValue();\n        if (hostUri !== void 0) {\n          downlink = downlink.hostUri(hostUri);\n        }\n        if (nodeUri !== void 0) {\n          downlink = downlink.nodeUri(nodeUri);\n        }\n        if (laneUri !== void 0) {\n          downlink = downlink.laneUri(laneUri);\n        }\n        if (prio !== void 0) {\n          downlink = downlink.prio(prio);\n        }\n        if (rate !== void 0) {\n          downlink = downlink.rate(rate);\n        }\n        if (body !== void 0) {\n          downlink = downlink.body(body);\n        }\n        downlink = downlink.open();\n        this.state = downlink;\n        this.downlink = downlink;\n      }\n    }\n  }\n\n  private static _transmuter: DownlinkTransmuter | undefined;\n\n  static transmuter(warp?: WarpRef): Transmuter {\n    if (warp === void 0) {\n      if (!DownlinkStreamlet._transmuter) {\n        DownlinkStreamlet._transmuter = new DownlinkTransmuter();\n      }\n      return DownlinkStreamlet._transmuter;\n    } else {\n      return new DownlinkTransmuter(warp);\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {Uri} from \"@swim/uri\";\nimport {Host} from \"../host/Host\";\nimport {DownlinkOwner} from \"../downlink/DownlinkOwner\";\nimport {Downlink} from \"../downlink/Downlink\";\nimport {EventDownlinkInit, EventDownlink} from \"../downlink/EventDownlink\";\nimport {ListDownlinkInit, ListDownlink} from \"../downlink/ListDownlink\";\nimport {MapDownlinkInit, MapDownlink} from \"../downlink/MapDownlink\";\nimport {ValueDownlinkInit, ValueDownlink} from \"../downlink/ValueDownlink\";\nimport {RefContext} from \"./RefContext\";\nimport {WarpRef} from \"../WarpRef\";\nimport {\n  WarpDidConnect,\n  WarpDidAuthenticate,\n  WarpDidDeauthenticate,\n  WarpDidDisconnect,\n  WarpDidFail,\n  WarpObserver,\n} from \"../WarpObserver\";\n\nexport abstract class BaseRef implements DownlinkOwner, WarpRef {\n  /** @hidden */\n  readonly _context: RefContext;\n  /** @hidden */\n  _host: Host | undefined;\n  /** @hidden */\n  _downlinks: Downlink[];\n  /** @hidden */\n  _downlinkCount: number;\n  /** @hidden */\n  _observers: ReadonlyArray<WarpObserver> | null;\n\n  constructor(context: RefContext) {\n    this._context = context;\n    this._host = void 0;\n    this._downlinks = [];\n    this._observers = null;\n  }\n\n  abstract hostUri(): Uri;\n\n  isConnected(): boolean {\n    return this._host ? this._host.isConnected() : false;\n  }\n\n  isAuthenticated(): boolean {\n    return this._host ? this._host.isAuthenticated() : false;\n  }\n\n  session(): Value {\n    return this._host ? this._host.session() : Value.absent();\n  }\n\n  authenticate(credentials: AnyValue): void {\n    this._context.authenticate(this.hostUri(), credentials);\n  }\n\n  abstract downlink(init?: EventDownlinkInit): EventDownlink;\n\n  abstract downlinkList(init?: ListDownlinkInit<Value, AnyValue>): ListDownlink<Value, AnyValue>;\n  abstract downlinkList<V extends VU, VU = V>(init?: ListDownlinkInit<V, VU>): ListDownlink<V, VU>;\n\n  abstract downlinkMap(init?: MapDownlinkInit<Value, Value, AnyValue, AnyValue>): MapDownlink<Value, Value, AnyValue, AnyValue>;\n  abstract downlinkMap<K extends KU, V extends VU, KU = K, VU = V>(init?: MapDownlinkInit<K, V, KU, VU>): MapDownlink<K, V, KU, VU>;\n\n  abstract downlinkValue(init?: ValueDownlinkInit<Value, AnyValue>): ValueDownlink<Value, AnyValue>;\n  abstract downlinkValue<V extends VU, VU = V>(init?: ValueDownlinkInit<V, VU>): ValueDownlink<V, VU>;\n\n  /** @hidden */\n  addDownlink(downlink: Downlink): void {\n    if (this._downlinks.length === 0) {\n      this.open();\n    }\n    this._downlinks.push(downlink);\n  }\n\n  /** @hidden */\n  removeDownlink(downlink: Downlink): void {\n    const i = this._downlinks.indexOf(downlink);\n    if (i >= 0) {\n      this._downlinks.splice(i, 1);\n      if (this._downlinks.length === 0) {\n        this.close();\n      }\n    }\n  }\n\n  open(): void {\n    this._context.openRef(this);\n  }\n\n  close(): void {\n    this._context.closeRef(this);\n  }\n\n  /** @hidden */\n  closeUp(): void {\n    const downlinks = this._downlinks;\n    this._downlinks = [];\n    for (let i = 0, n = downlinks.length; i < n; i += 1) {\n      downlinks[i].close();\n    }\n  }\n\n  observe(observer: WarpObserver): this {\n    const oldObservers = this._observers;\n    const n = oldObservers ? oldObservers.length : 0;\n    const newObservers = new Array<WarpObserver>(n + 1);\n    for (let i = 0; i < n; i += 1) {\n      newObservers[i] = oldObservers![i];\n    }\n    newObservers[n] = observer;\n    this._observers = newObservers;\n    return this;\n  }\n\n  unobserve(observer: unknown): this {\n    const oldObservers = this._observers;\n    const n = oldObservers ? oldObservers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const oldObserver = oldObservers![i] as {[key: string]: unknown};\n      let found = oldObserver === observer; // check object identity\n      if (!found) {\n        for (const key in oldObserver) { // check property identity\n          if (oldObserver[key] === observer) {\n            found = true;\n            break;\n          }\n        }\n      }\n      if (found) {\n        if (n > 1) {\n          const newObservers = new Array<WarpObserver>(n - 1);\n          for (let j = 0; j < i; j += 1) {\n            newObservers[j] = oldObservers![j];\n          }\n          for (let j = i + 1; j < n; j += 1) {\n            newObservers[j - 1] = oldObservers![j];\n          }\n          this._observers = newObservers;\n        } else {\n          this._observers = null;\n        }\n        break;\n      }\n    }\n    return this;\n  }\n\n  didConnect(didConnect: WarpDidConnect): this {\n    return this.observe({didConnect});\n  }\n\n  didAuthenticate(didAuthenticate: WarpDidAuthenticate): this {\n    return this.observe({didAuthenticate});\n  }\n\n  didDeauthenticate(didDeauthenticate: WarpDidDeauthenticate): this {\n    return this.observe({didDeauthenticate});\n  }\n\n  didDisconnect(didDisconnect: WarpDidDisconnect): this {\n    return this.observe({didDisconnect});\n  }\n\n  didFail(didFail: WarpDidFail): this {\n    return this.observe({didFail});\n  }\n\n  /** @hidden */\n  hostDidConnect(host: Host): void {\n    this._host = host;\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didConnect) {\n        observer.didConnect(host, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  hostDidAuthenticate(body: Value, host: Host): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didAuthenticate) {\n        observer.didAuthenticate(body, host, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  hostDidDeauthenticate(body: Value, host: Host): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didDeauthenticate) {\n        observer.didDeauthenticate(body, host, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  hostDidDisconnect(host: Host): void {\n    this._host = void 0;\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didDisconnect) {\n        observer.didDisconnect(host, this);\n      }\n    }\n  }\n\n  /** @hidden */\n  hostDidFail(error: unknown, host: Host): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didFail) {\n        observer.didFail(error, host, this);\n      }\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Value, AnyValue} from \"@swim/structure\";\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {EventDownlinkInit, EventDownlink} from \"../downlink/EventDownlink\";\nimport {ListDownlinkInit, ListDownlink} from \"../downlink/ListDownlink\";\nimport {MapDownlinkInit, MapDownlink} from \"../downlink/MapDownlink\";\nimport {ValueDownlinkInit, ValueDownlink} from \"../downlink/ValueDownlink\";\nimport {RefContext} from \"./RefContext\";\nimport {BaseRef} from \"./BaseRef\";\nimport {HostRef} from \"./HostRef\";\nimport {NodeRef} from \"./NodeRef\";\n\nexport class LaneRef extends BaseRef {\n  /** @hidden */\n  readonly _hostUri: Uri;\n  /** @hidden */\n  readonly _nodeUri: Uri;\n  /** @hidden */\n  readonly _laneUri: Uri;\n\n  constructor(context: RefContext, hostUri: Uri, nodeUri: Uri, laneUri: Uri) {\n    super(context);\n    this._hostUri = hostUri;\n    this._nodeUri = nodeUri;\n    this._laneUri = laneUri;\n  }\n\n  hostUri(): Uri {\n    return this._hostUri;\n  }\n\n  nodeUri(): Uri {\n    return this._nodeUri;\n  }\n\n  laneUri(): Uri {\n    return this._laneUri;\n  }\n\n  hostRef(hostUri: AnyUri): HostRef {\n    hostUri = Uri.fromAny(hostUri);\n    return new HostRef(this._context, hostUri);\n  }\n\n  nodeRef(nodeUri: AnyUri): NodeRef {\n    nodeUri = Uri.fromAny(nodeUri);\n    return new NodeRef(this._context, this._hostUri, nodeUri);\n  }\n\n  laneRef(laneUri: AnyUri): LaneRef {\n    laneUri = Uri.fromAny(laneUri);\n    return new LaneRef(this._context, this._hostUri, this._nodeUri, laneUri);\n  }\n\n  downlink(init?: EventDownlinkInit): EventDownlink {\n    return new EventDownlink(this._context, this, init, this._hostUri, this._nodeUri, this._laneUri);\n  }\n\n  downlinkList(init?: ListDownlinkInit<Value, AnyValue>): ListDownlink<Value, AnyValue>;\n  downlinkList<V extends VU, VU = V>(init?: ListDownlinkInit<V, VU>): ListDownlink<V, VU>;\n  downlinkList<V extends VU, VU = V>(init?: ListDownlinkInit<V, VU>): ListDownlink<V, VU> {\n    return new ListDownlink(this._context, this, init, this._hostUri, this._nodeUri, this._laneUri);\n  }\n\n  downlinkMap(init?: MapDownlinkInit<Value, Value, AnyValue, AnyValue>): MapDownlink<Value, Value, AnyValue, AnyValue>;\n  downlinkMap<K extends KU, V extends VU, KU = K, VU = V>(init?: MapDownlinkInit<K, V, KU, VU>): MapDownlink<K, V, KU, VU>;\n  downlinkMap<K extends KU, V extends VU, KU = K, VU = V>(init?: MapDownlinkInit<K, V, KU, VU>): MapDownlink<K, V, KU, VU> {\n    return new MapDownlink(this._context, this, init, this._hostUri, this._nodeUri, this._laneUri);\n  }\n\n  downlinkValue(init?: ValueDownlinkInit<Value, AnyValue>): ValueDownlink<Value, AnyValue>;\n  downlinkValue<V extends VU, VU = V>(init?: ValueDownlinkInit<V, VU>): ValueDownlink<V, VU>;\n  downlinkValue<V extends VU, VU = V>(init?: ValueDownlinkInit<V, VU>): ValueDownlink<V, VU> {\n    return new ValueDownlink(this._context, this, init, this._hostUri, this._nodeUri, this._laneUri);\n  }\n\n  command(body: AnyValue): void {\n    this._context.command(this._hostUri, this._nodeUri, this._laneUri, body);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Value, AnyValue} from \"@swim/structure\";\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {EventDownlinkInit, EventDownlink} from \"../downlink/EventDownlink\";\nimport {ListDownlinkInit, ListDownlink} from \"../downlink/ListDownlink\";\nimport {MapDownlinkInit, MapDownlink} from \"../downlink/MapDownlink\";\nimport {ValueDownlinkInit, ValueDownlink} from \"../downlink/ValueDownlink\";\nimport {RefContext} from \"./RefContext\";\nimport {BaseRef} from \"./BaseRef\";\nimport {HostRef} from \"./HostRef\";\nimport {LaneRef} from \"./LaneRef\";\n\nexport class NodeRef extends BaseRef {\n  /** @hidden */\n  readonly _hostUri: Uri;\n  /** @hidden */\n  readonly _nodeUri: Uri;\n\n  constructor(context: RefContext, hostUri: Uri, nodeUri: Uri) {\n    super(context);\n    this._hostUri = hostUri;\n    this._nodeUri = nodeUri;\n  }\n\n  hostUri(): Uri {\n    return this._hostUri;\n  }\n\n  nodeUri(): Uri {\n    return this._nodeUri;\n  }\n\n  hostRef(hostUri: AnyUri): HostRef {\n    hostUri = Uri.fromAny(hostUri);\n    return new HostRef(this._context, hostUri);\n  }\n\n  nodeRef(nodeUri: AnyUri): NodeRef {\n    nodeUri = Uri.fromAny(nodeUri);\n    return new NodeRef(this._context, this._hostUri, nodeUri);\n  }\n\n  laneRef(laneUri: AnyUri): LaneRef {\n    laneUri = Uri.fromAny(laneUri);\n    return new LaneRef(this._context, this._hostUri, this._nodeUri, laneUri);\n  }\n\n  downlink(init?: EventDownlinkInit): EventDownlink {\n    return new EventDownlink(this._context, this, init, this._hostUri, this._nodeUri);\n  }\n\n  downlinkList(init?: ListDownlinkInit<Value, AnyValue>): ListDownlink<Value, AnyValue>;\n  downlinkList<V extends VU, VU = V>(init?: ListDownlinkInit<V, VU>): ListDownlink<V, VU>;\n  downlinkList<V extends VU, VU = V>(init?: ListDownlinkInit<V, VU>): ListDownlink<V, VU> {\n    return new ListDownlink(this._context, this, init, this._hostUri, this._nodeUri);\n  }\n\n  downlinkMap(init?: MapDownlinkInit<Value, Value, AnyValue, AnyValue>): MapDownlink<Value, Value, AnyValue, AnyValue>;\n  downlinkMap<K extends KU, V extends VU, KU = K, VU = V>(init?: MapDownlinkInit<K, V, KU, VU>): MapDownlink<K, V, KU, VU>;\n  downlinkMap<K extends KU, V extends VU, KU = K, VU = V>(init?: MapDownlinkInit<K, V, KU, VU>): MapDownlink<K, V, KU, VU> {\n    return new MapDownlink(this._context, this, init, this._hostUri, this._nodeUri);\n  }\n\n  downlinkValue(init?: ValueDownlinkInit<Value, AnyValue>): ValueDownlink<Value, AnyValue>;\n  downlinkValue<V extends VU, VU = V>(init?: ValueDownlinkInit<V, VU>): ValueDownlink<V, VU>;\n  downlinkValue<V extends VU, VU = V>(init?: ValueDownlinkInit<V, VU>): ValueDownlink<V, VU> {\n    return new ValueDownlink(this._context, this, init, this._hostUri, this._nodeUri);\n  }\n\n  command(laneUri: AnyUri, body: AnyValue): void {\n    this._context.command(this._hostUri, this._nodeUri, laneUri, body);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Value, AnyValue} from \"@swim/structure\";\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {EventDownlinkInit, EventDownlink} from \"../downlink/EventDownlink\";\nimport {ListDownlinkInit, ListDownlink} from \"../downlink/ListDownlink\";\nimport {MapDownlinkInit, MapDownlink} from \"../downlink/MapDownlink\";\nimport {ValueDownlinkInit, ValueDownlink} from \"../downlink/ValueDownlink\";\nimport {RefContext} from \"./RefContext\";\nimport {BaseRef} from \"./BaseRef\";\nimport {NodeRef} from \"./NodeRef\";\nimport {LaneRef} from \"./LaneRef\";\n\nexport class HostRef extends BaseRef {\n  /** @hidden */\n  readonly _hostUri: Uri;\n\n  constructor(context: RefContext, hostUri: Uri) {\n    super(context);\n    this._hostUri = hostUri;\n  }\n\n  hostUri(): Uri {\n    return this._hostUri;\n  }\n\n  hostRef(hostUri: AnyUri): HostRef {\n    hostUri = Uri.fromAny(hostUri);\n    return new HostRef(this._context, hostUri);\n  }\n\n  nodeRef(nodeUri: AnyUri): NodeRef {\n    nodeUri = Uri.fromAny(nodeUri);\n    return new NodeRef(this._context, this._hostUri, nodeUri);\n  }\n\n  laneRef(nodeUri: AnyUri, laneUri: AnyUri): LaneRef {\n    nodeUri = Uri.fromAny(nodeUri);\n    laneUri = Uri.fromAny(laneUri);\n    return new LaneRef(this._context, this._hostUri, nodeUri, laneUri);\n  }\n\n  downlink(init?: EventDownlinkInit): EventDownlink {\n    return new EventDownlink(this._context, this, init, this._hostUri);\n  }\n\n  downlinkList(init?: ListDownlinkInit<Value, AnyValue>): ListDownlink<Value, AnyValue>;\n  downlinkList<V extends VU, VU = V>(init?: ListDownlinkInit<V, VU>): ListDownlink<V, VU>;\n  downlinkList<V extends VU, VU = V>(init?: ListDownlinkInit<V, VU>): ListDownlink<V, VU> {\n    return new ListDownlink(this._context, this, init, this._hostUri);\n  }\n\n  downlinkMap(init?: MapDownlinkInit<Value, Value, AnyValue, AnyValue>): MapDownlink<Value, Value, AnyValue, AnyValue>;\n  downlinkMap<K extends KU, V extends VU, KU = K, VU = V>(init?: MapDownlinkInit<K, V, KU, VU>): MapDownlink<K, V, KU, VU>;\n  downlinkMap<K extends KU, V extends VU, KU = K, VU = V>(init?: MapDownlinkInit<K, V, KU, VU>): MapDownlink<K, V, KU, VU> {\n    return new MapDownlink(this._context, this, init, this._hostUri);\n  }\n\n  downlinkValue(init?: ValueDownlinkInit<Value, AnyValue>): ValueDownlink<Value, AnyValue>;\n  downlinkValue<V extends VU, VU = V>(init?: ValueDownlinkInit<V, VU>): ValueDownlink<V, VU>;\n  downlinkValue<V extends VU, VU = V>(init?: ValueDownlinkInit<V, VU>): ValueDownlink<V, VU> {\n    return new ValueDownlink(this._context, this, init, this._hostUri);\n  }\n\n  command(nodeUri: AnyUri, laneUri: AnyUri, body: AnyValue): void {\n    this._context.command(this._hostUri, nodeUri, laneUri, body);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {BTree} from \"@swim/collections\";\nimport {AnyValue, Value} from \"@swim/structure\";\nimport {AnyUri, Uri} from \"@swim/uri\";\nimport {HostContext} from \"./host/HostContext\";\nimport {HostOptions, Host} from \"./host/Host\";\nimport {WebSocketHost} from \"./host/WebSocketHost\";\nimport {DownlinkModel} from \"./downlink/DownlinkModel\";\nimport {EventDownlinkInit, EventDownlink} from \"./downlink/EventDownlink\";\nimport {ListDownlinkInit, ListDownlink} from \"./downlink/ListDownlink\";\nimport {MapDownlinkInit, MapDownlink} from \"./downlink/MapDownlink\";\nimport {ValueDownlinkInit, ValueDownlink} from \"./downlink/ValueDownlink\";\nimport {WarpRef} from \"./WarpRef\";\nimport {\n  WarpDidConnect,\n  WarpDidAuthenticate,\n  WarpDidDeauthenticate,\n  WarpDidDisconnect,\n  WarpDidFail,\n  WarpObserver,\n} from \"./WarpObserver\";\nimport {RefContext} from \"./ref/RefContext\";\nimport {BaseRef} from \"./ref/BaseRef\";\nimport {HostRef} from \"./ref/HostRef\";\nimport {NodeRef} from \"./ref/NodeRef\";\nimport {LaneRef} from \"./ref/LaneRef\";\n\nexport interface WarpClientOptions extends HostOptions {\n  keepOnline?: boolean;\n}\n\nexport class WarpClient implements HostContext, RefContext, WarpRef {\n  /** @hidden */\n  readonly _options: WarpClientOptions;\n  /** @hidden */\n  _hosts: BTree<Uri, Host>;\n  /** @hidden */\n  _downlinks: BTree<Uri, BTree<Uri, BTree<Uri, DownlinkModel>>>;\n  /** @hidden */\n  _downlinkCount: number;\n  /** @hidden */\n  _refs: BaseRef[];\n  /** @hidden */\n  _online: boolean;\n  /** @hidden */\n  _observers: ReadonlyArray<WarpObserver> | null;\n\n  constructor(options: WarpClientOptions = {}) {\n    if (options.keepOnline === void 0) {\n      options.keepOnline = true;\n    }\n    this._options = options;\n    this._hosts = new BTree();\n    this._downlinks = new BTree();\n    this._downlinkCount = 0;\n    this._refs = [];\n    this._online = true;\n    this._observers = null;\n\n    this.onOnline = this.onOnline.bind(this);\n    this.onOffline = this.onOffline.bind(this);\n    this.watchOnline(!!options.keepOnline);\n  }\n\n  isOnline(): boolean;\n  isOnline(online: boolean): this;\n  isOnline(online?: boolean): boolean | this {\n    if (online === void 0) {\n      return this._online;\n    } else {\n      if (this._online !== online) {\n        this._online = online;\n        if (online) {\n          this._hosts.forEach(function (hostUri, host) {\n            host.open();\n          }, this);\n        }\n      }\n      return this;\n    }\n  }\n\n  keepOnline(): boolean;\n  keepOnline(keepOnline: boolean): this;\n  keepOnline(keepOnline?: boolean): boolean | this {\n    if (keepOnline === void 0) {\n      return !!this._options.keepOnline;\n    } else {\n      if (this._options.keepOnline !== keepOnline) {\n        this._options.keepOnline = keepOnline;\n        this.watchOnline(keepOnline);\n      }\n      return this;\n    }\n  }\n\n  protected watchOnline(keepOnline: boolean): void {\n    if (typeof window === \"object\") {\n      if (keepOnline) {\n        window.addEventListener(\"online\", this.onOnline);\n        window.addEventListener(\"offline\", this.onOffline);\n      } else {\n        window.removeEventListener(\"online\", this.onOnline);\n        window.removeEventListener(\"offline\", this.onOffline);\n      }\n    }\n  }\n\n  protected onOnline(event: Event): void {\n    this.isOnline(true);\n  }\n\n  protected onOffline(event: Event): void {\n    this.isOnline(false);\n  }\n\n  /** @hidden */\n  getHost(hostUri: AnyUri): Host | undefined {\n    hostUri = Uri.fromAny(hostUri);\n    return this._hosts.get(hostUri);\n  }\n\n  /** @hidden */\n  openHost(hostUri: AnyUri): Host {\n    hostUri = Uri.fromAny(hostUri);\n    let host = this._hosts.get(hostUri);\n    if (!host) {\n      host = new WebSocketHost(this, hostUri, this._options);\n      this._hosts.set(hostUri, host);\n    }\n    return host;\n  }\n\n  /** @hidden */\n  closeHost(host: Host): void {\n    if (this._hosts.get(host.hostUri())) {\n      this._hosts.delete(host.hostUri());\n      host.closeUp();\n    }\n  }\n\n  /** @hidden */\n  getDownlink(hostUri: Uri, nodeUri: Uri, laneUri: Uri): DownlinkModel | undefined {\n    const hostDownlinks = this._downlinks.get(hostUri);\n    if (hostDownlinks) {\n      const nodeDownlinks = hostDownlinks.get(nodeUri);\n      if (nodeDownlinks) {\n        return nodeDownlinks.get(laneUri);\n      }\n    }\n    return void 0;\n  }\n\n  /** @hidden */\n  openDownlink(downlink: DownlinkModel): void {\n    const hostUri = downlink.hostUri();\n    const nodeUri = downlink.nodeUri();\n    const laneUri = downlink.laneUri();\n    let hostDownlinks = this._downlinks.get(hostUri);\n    if (!hostDownlinks) {\n      hostDownlinks = new BTree();\n      this._downlinks.set(hostUri, hostDownlinks);\n    }\n    let nodeDownlinks = hostDownlinks.get(nodeUri);\n    if (!nodeDownlinks) {\n      nodeDownlinks = new BTree();\n      hostDownlinks.set(nodeUri, nodeDownlinks);\n    }\n    if (nodeDownlinks.has(laneUri)) {\n      throw new Error(\"duplicate downlink\");\n    }\n    nodeDownlinks.set(laneUri, downlink);\n    this._downlinkCount += 1;\n    const host = this.openHost(hostUri);\n    host.openDownlink(downlink);\n  }\n\n  /** @hidden */\n  unlinkDownlink(downlink: DownlinkModel): void {\n    const hostUri = downlink.hostUri();\n    const host = this.getHost(hostUri);\n    if (host) {\n      host.unlinkDownlink(downlink);\n    }\n  }\n\n  /** @hidden */\n  closeDownlink(downlink: DownlinkModel): void {\n    const hostUri = downlink.hostUri();\n    const nodeUri = downlink.nodeUri();\n    const laneUri = downlink.laneUri();\n    const hostDownlinks = this._downlinks.get(hostUri);\n    if (hostDownlinks) {\n      const nodeDownlinks = hostDownlinks.get(nodeUri);\n      if (nodeDownlinks) {\n        if (nodeDownlinks.get(laneUri)) {\n          this._downlinkCount -= 1;\n          nodeDownlinks.delete(laneUri);\n          if (nodeDownlinks.isEmpty()) {\n            hostDownlinks.delete(nodeUri);\n            if (hostDownlinks.isEmpty()) {\n              this._downlinks.delete(hostUri);\n            }\n          }\n          const host = this.getHost(hostUri);\n          if (host) {\n            host.closeDownlink(downlink);\n          }\n        }\n      }\n    }\n  }\n\n  downlink(init?: EventDownlinkInit): EventDownlink {\n    return new EventDownlink(this, void 0, init);\n  }\n\n  downlinkList(init?: ListDownlinkInit<Value, AnyValue>): ListDownlink<Value, AnyValue>;\n  downlinkList<V extends VU, VU = V>(init?: ListDownlinkInit<V, VU>): ListDownlink<V, VU>;\n  downlinkList<V extends VU, VU = V>(init?: ListDownlinkInit<V, VU>): ListDownlink<V, VU> {\n    return new ListDownlink(this, void 0, init);\n  }\n\n  downlinkMap(init?: MapDownlinkInit<Value, Value, AnyValue, AnyValue>): MapDownlink<Value, Value, AnyValue, AnyValue>;\n  downlinkMap<K extends KU, V extends VU, KU = K, VU = V>(init?: MapDownlinkInit<K, V, KU, VU>): MapDownlink<K, V, KU, VU>;\n  downlinkMap<K extends KU, V extends VU, KU = K, VU = V>(init?: MapDownlinkInit<K, V, KU, VU>): MapDownlink<K, V, KU, VU> {\n    return new MapDownlink(this, void 0, init);\n  }\n\n  downlinkValue(init?: ValueDownlinkInit<Value, AnyValue>): ValueDownlink<Value, AnyValue>;\n  downlinkValue<V extends VU, VU = V>(init?: ValueDownlinkInit<V, VU>): ValueDownlink<V, VU>;\n  downlinkValue<V extends VU, VU = V>(init?: ValueDownlinkInit<V, VU>): ValueDownlink<V, VU> {\n    return new ValueDownlink(this, void 0, init);\n  }\n\n  /** @hidden */\n  openRef(ref: BaseRef): void {\n    this._refs.push(ref);\n  }\n\n  /** @hidden */\n  closeRef(ref: BaseRef): void {\n    const index = this._refs.indexOf(ref);\n    if (index >= 0) {\n      this._refs.splice(index, 1);\n      ref.closeUp();\n    }\n  }\n\n  hostRef(hostUri: AnyUri): HostRef {\n    hostUri = Uri.fromAny(hostUri);\n    return new HostRef(this, hostUri);\n  }\n\n  nodeRef(hostUri: AnyUri, nodeUri: AnyUri): NodeRef;\n  nodeRef(nodeUri: AnyUri): NodeRef;\n  nodeRef(hostUri: AnyUri, nodeUri?: AnyUri): NodeRef {\n    hostUri = Uri.fromAny(hostUri);\n    if (nodeUri === void 0) {\n      nodeUri = hostUri;\n      hostUri = nodeUri.endpoint();\n      nodeUri = hostUri.unresolve(nodeUri);\n    } else {\n      nodeUri = Uri.fromAny(nodeUri);\n    }\n    return new NodeRef(this, hostUri, nodeUri);\n  }\n\n  laneRef(hostUri: AnyUri, nodeUri: AnyUri, laneUri: AnyUri): LaneRef;\n  laneRef(nodeUri: AnyUri, laneUri: AnyUri): LaneRef;\n  laneRef(hostUri: AnyUri, nodeUri: AnyUri, laneUri?: AnyUri): LaneRef {\n    hostUri = Uri.fromAny(hostUri);\n    nodeUri = Uri.fromAny(nodeUri);\n    if (laneUri === void 0) {\n      laneUri = nodeUri;\n      nodeUri = hostUri;\n      hostUri = nodeUri.endpoint();\n      nodeUri = hostUri.unresolve(nodeUri);\n    } else {\n      laneUri = Uri.fromAny(laneUri);\n    }\n    return new LaneRef(this, hostUri, nodeUri, laneUri);\n  }\n\n  authenticate(hostUri: AnyUri, credentials: AnyValue): void {\n    hostUri = Uri.fromAny(hostUri);\n    credentials = Value.fromAny(credentials);\n    const host = this.openHost(hostUri);\n    host.authenticate(credentials);\n  }\n\n  command(hostUri: AnyUri, nodeUri: AnyUri, laneUri: AnyUri, body: AnyValue): void;\n  command(nodeUri: AnyUri, laneUri: AnyUri, body: AnyValue): void;\n  command(hostUri: AnyUri, nodeUri: AnyUri, laneUri: AnyUri | AnyValue, body?: AnyValue): void {\n    hostUri = Uri.fromAny(hostUri);\n    nodeUri = Uri.fromAny(nodeUri);\n    if (arguments.length === 3) {\n      body = laneUri as Value;\n      laneUri = nodeUri;\n      nodeUri = hostUri;\n      hostUri = nodeUri.endpoint();\n      nodeUri = hostUri.unresolve(nodeUri);\n    } else {\n      laneUri = Uri.fromAny(laneUri as AnyUri);\n    }\n    body = Value.fromAny(body);\n    const host = this.openHost(hostUri);\n    host.command(nodeUri, laneUri, body);\n  }\n\n  close(): void {\n    const refs = this._refs;\n    this._refs = [];\n    for (let i = 0; i < refs.length; i += 1) {\n      refs[i].closeUp();\n    }\n    const downlinks = this._downlinks.clone();\n    this._downlinks.clear();\n    this._downlinkCount = 0;\n    downlinks.forEach(function (hostUri: Uri, hostDownlinks: BTree<Uri, BTree<Uri, DownlinkModel>>): void {\n      hostDownlinks.forEach(function (nodeUri: Uri, nodeDownlinks: BTree<Uri, DownlinkModel>): void {\n        nodeDownlinks.forEach(function (laneUri: Uri, downlink: DownlinkModel): void {\n          downlink.closeUp();\n          const host = this.getHost(hostUri);\n          if (host) {\n            host.closeDownlink(downlink);\n          }\n        }, this);\n      }, this);\n    }, this);\n    const hosts = this._hosts.clone();\n    this._hosts.clear();\n    hosts.forEach(function (hostUri: Uri, host: Host): void {\n      host.closeUp();\n    }, this);\n  }\n\n  observe(observer: WarpObserver): this {\n    const oldObservers = this._observers;\n    const n = oldObservers ? oldObservers.length : 0;\n    const newObservers = new Array<WarpObserver>(n + 1);\n    for (let i = 0; i < n; i += 1) {\n      newObservers[i] = oldObservers![i];\n    }\n    newObservers[n] = observer;\n    this._observers = newObservers;\n    return this;\n  }\n\n  unobserve(observer: unknown): this {\n    const oldObservers = this._observers;\n    const n = oldObservers ? oldObservers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const oldObserver = oldObservers![i] as {[key: string]: unknown};\n      let found = oldObserver === observer; // check object identity\n      if (!found) {\n        for (const key in oldObserver) { // check property identity\n          if (oldObserver[key] === observer) {\n            found = true;\n            break;\n          }\n        }\n      }\n      if (found) {\n        if (n > 1) {\n          const newObservers = new Array<WarpObserver>(n - 1);\n          for (let j = 0; j < i; j += 1) {\n            newObservers[j] = oldObservers![j];\n          }\n          for (let j = i + 1; j < n; j += 1) {\n            newObservers[j - 1] = oldObservers![j];\n          }\n          this._observers = newObservers;\n        } else {\n          this._observers = null;\n        }\n        break;\n      }\n    }\n    return this;\n  }\n\n  didConnect(didConnect: WarpDidConnect): this {\n    return this.observe({didConnect});\n  }\n\n  didAuthenticate(didAuthenticate: WarpDidAuthenticate): this {\n    return this.observe({didAuthenticate});\n  }\n\n  didDeauthenticate(didDeauthenticate: WarpDidDeauthenticate): this {\n    return this.observe({didDeauthenticate});\n  }\n\n  didDisconnect(didDisconnect: WarpDidDisconnect): this {\n    return this.observe({didDisconnect});\n  }\n\n  didFail(didFail: WarpDidFail): this {\n    return this.observe({didFail});\n  }\n\n  /** @hidden */\n  hostDidConnect(host: Host): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didConnect) {\n        observer.didConnect(host, this);\n      }\n    }\n    for (let i = 0; i < this._refs.length; i += 1) {\n      const ref = this._refs[i];\n      if (ref.hostUri().equals(host.hostUri())) {\n        ref.hostDidConnect(host);\n      }\n    }\n  }\n\n  /** @hidden */\n  hostDidAuthenticate(body: Value, host: Host): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didAuthenticate) {\n        observer.didAuthenticate(body, host, this);\n      }\n    }\n    for (let i = 0; i < this._refs.length; i += 1) {\n      const ref = this._refs[i];\n      if (ref.hostUri().equals(host.hostUri())) {\n        ref.hostDidAuthenticate(body, host);\n      }\n    }\n  }\n\n  /** @hidden */\n  hostDidDeauthenticate(body: Value, host: Host): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didDeauthenticate) {\n        observer.didDeauthenticate(body, host, this);\n      }\n    }\n    for (let i = 0; i < this._refs.length; i += 1) {\n      const ref = this._refs[i];\n      if (ref.hostUri().equals(host.hostUri())) {\n        ref.hostDidDeauthenticate(body, host);\n      }\n    }\n  }\n\n  /** @hidden */\n  hostDidDisconnect(host: Host): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didDisconnect) {\n        observer.didDisconnect(host, this);\n      }\n    }\n    for (let i = 0; i < this._refs.length; i += 1) {\n      const ref = this._refs[i];\n      if (ref.hostUri().equals(host.hostUri())) {\n        ref.hostDidDisconnect(host);\n      }\n    }\n  }\n\n  /** @hidden */\n  hostDidFail(error: unknown, host: Host): void {\n    const observers = this._observers;\n    const n = observers ? observers.length : 0;\n    for (let i = 0; i < n; i += 1) {\n      const observer = observers![i];\n      if (observer.didFail) {\n        observer.didFail(error, host, this);\n      }\n    }\n    for (let i = 0; i < this._refs.length; i += 1) {\n      const ref = this._refs[i];\n      if (ref.hostUri().equals(host.hostUri())) {\n        ref.hostDidFail(error, host);\n      }\n    }\n  }\n}\n\n/**\n * @deprecated\n */\nexport type SwimClientOptions = WarpClientOptions;\n\n/**\n * @deprecated\n */\nexport type SwimClient = WarpClient;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport * from \"./host\";\n\nexport * from \"./downlink\";\n\nexport * from \"./ref\";\n\nexport {WarpRef, SwimRef} from \"./WarpRef\";\nexport {WarpObserver, SwimObserver} from \"./WarpObserver\";\n\nexport {\n  WarpClientOptions, SwimClientOptions,\n  WarpClient, SwimClient,\n} from \"./WarpClient\";\n\nimport {WarpClient} from \"./WarpClient\";\nexport const client = new WarpClient();\nexport const isOnline = client.isOnline.bind(client);\nexport const keepOnline = client.keepOnline.bind(client);\nexport const downlink = client.downlink.bind(client);\nexport const downlinkList = client.downlinkList.bind(client);\nexport const downlinkMap = client.downlinkMap.bind(client);\nexport const downlinkValue = client.downlinkValue.bind(client);\nexport const hostRef = client.hostRef.bind(client);\nexport const nodeRef = client.nodeRef.bind(client);\nexport const laneRef = client.laneRef.bind(client);\nexport const authenticate = client.authenticate.bind(client);\nexport const command = client.command.bind(client);\n"]}