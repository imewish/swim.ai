import { __extends } from "tslib";
import { Cursor } from "./Cursor";
var CursorUnary = (function (_super) {
    __extends(CursorUnary, _super);
    function CursorUnary(value) {
        var _this = _super.call(this) || this;
        _this._value = value;
        _this._index = 0;
        return _this;
    }
    CursorUnary.prototype.isEmpty = function () {
        return this._index !== 0;
    };
    CursorUnary.prototype.head = function () {
        if (this._index === 0) {
            return this._value;
        }
        else {
            throw new Error("empty");
        }
    };
    CursorUnary.prototype.step = function () {
        if (this._index === 0) {
            this._index = 1;
        }
        else {
            throw new Error("empty");
        }
    };
    CursorUnary.prototype.skip = function (count) {
        this._index = Math.min(Math.max(0, this._index + count), 1);
    };
    CursorUnary.prototype.hasNext = function () {
        return this._index === 0;
    };
    CursorUnary.prototype.nextIndex = function () {
        return this._index;
    };
    CursorUnary.prototype.next = function () {
        if (this._index === 0) {
            this._index = 1;
            return { value: this._value, done: true };
        }
        else {
            return { done: true };
        }
    };
    CursorUnary.prototype.hasPrevious = function () {
        return this._index === 1;
    };
    CursorUnary.prototype.previousIndex = function () {
        return this._index - 1;
    };
    CursorUnary.prototype.previous = function () {
        if (this._index === 1) {
            this._index = 0;
            return { value: this._value, done: true };
        }
        else {
            return { done: true };
        }
    };
    return CursorUnary;
}(Cursor));
export { CursorUnary };
Cursor.Unary = CursorUnary;
//# sourceMappingURL=CursorUnary.js.map