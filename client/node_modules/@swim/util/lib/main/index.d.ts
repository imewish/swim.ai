declare global {
    interface String {
        codePointAt(index: number): number | undefined;
        offsetByCodePoints(index: number, count: number): number;
    }
}
import "./String";
export { Comparable } from "./Comparable";
export { Equals } from "./Equals";
export { HashCode } from "./HashCode";
export { ByteOrder, NativeOrder } from "./ByteOrder";
export { Random } from "./Random";
export { Murmur3 } from "./Murmur3";
export { Objects } from "./Objects";
export { FromAny, ToAny } from "./Any";
export { Iterator } from "./Iterator";
export { Cursor } from "./Cursor";
export { CursorEmpty } from "./CursorEmpty";
export { CursorUnary } from "./CursorUnary";
export { CursorArray } from "./CursorArray";
export { Builder } from "./Builder";
export { PairBuilder } from "./PairBuilder";
export { Map } from "./Map";
export { OrderedMap } from "./OrderedMap";
export { ReducedMap } from "./ReducedMap";
export { AssertException } from "./AssertException";
export { Assert, assert } from "./Assert";
export { Severity } from "./Severity";
export { HashGenCacheMap } from "./HashGenCacheMap";
export { HashGenCacheSet } from "./HashGenCacheSet";
//# sourceMappingURL=index.d.ts.map