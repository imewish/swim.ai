import { Iterator } from "./Iterator";
export interface Map<K = unknown, V = unknown> {
    readonly size: number;
    isEmpty(): boolean;
    has(key: K): boolean;
    get(key: K): V | undefined;
    set(key: K, newValue: V): this;
    delete(key: K): boolean;
    clear(): void;
    forEach<T, S = unknown>(callback: (this: S, key: K, value: V) => T | void, thisArg?: S): T | undefined;
    keys(): Iterator<K>;
    values(): Iterator<V>;
    entries(): Iterator<[K, V]>;
}
//# sourceMappingURL=Map.d.ts.map