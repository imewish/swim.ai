"use strict";
function codePointAt(index) {
    var size = this.length;
    index = index ? Number(index) : 0;
    if (index !== index) {
        index = 0;
    }
    if (index >= 0 && index < size) {
        var c1 = this.charCodeAt(index);
        if (c1 <= 0xd7ff || c1 >= 0xe000) {
            return c1;
        }
        else if (c1 <= 0xdbff && index + 1 < size) {
            var c2 = this.charCodeAt(index + 1);
            if (c2 >= 0xdc00 && c2 <= 0xdfff) {
                return ((c1 & 0x03ff) << 10 + c2 & 0x03ff) + 0x10000;
            }
        }
    }
    return void 0;
}
function offsetByCodePoints(index, count) {
    if (count > 0) {
        var size = this.length;
        while (count > 0 && index < size) {
            var c1 = this.charCodeAt(index);
            if (c1 <= 0xd7ff || c1 >= 0xe000) {
                index += 1;
            }
            else if (c1 <= 0xdbff && index + 1 < size) {
                var c2 = this.charCodeAt(index + 1);
                if (c2 >= 0xdc00 && c2 <= 0xdfff) {
                    index += 2;
                }
                else {
                    index += 1;
                }
            }
            else {
                index += 1;
            }
            count -= 1;
        }
    }
    else if (count < 0) {
        while (count < 0 && index > 0) {
            var c2 = this.charCodeAt(index - 1);
            if (c2 <= 0xd7ff || c2 >= 0xe000) {
                index -= 1;
            }
            else if (c2 >= 0xdc00 && c2 <= 0xdfff && index - 1 > 0) {
                var c1 = this.charCodeAt(index - 2);
                if (c1 >= 0xd800 && c1 <= 0xdfff) {
                    index -= 2;
                }
                else {
                    index -= 1;
                }
            }
            else {
                index -= 1;
            }
            count -= 1;
        }
    }
    return index;
}
if (!String.prototype.codePointAt) {
    Object.defineProperty(String.prototype, "codePointAt", {
        value: codePointAt,
        configurable: true,
        writable: true,
    });
}
if (!String.prototype.offsetByCodePoints) {
    Object.defineProperty(String.prototype, "offsetByCodePoints", {
        value: offsetByCodePoints,
        configurable: true,
        writable: true,
    });
}
//# sourceMappingURL=String.js.map