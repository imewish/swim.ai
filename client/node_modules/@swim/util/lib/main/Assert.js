import { Objects } from "./Objects";
import { AssertException } from "./AssertException";
export var assert = function (condition, message) {
    if (!condition) {
        throw new AssertException(message);
    }
};
assert.ok = function (condition, message) {
    if (!condition) {
        throw new AssertException(message);
    }
};
assert.notOk = function (condition, message) {
    if (condition) {
        throw new AssertException(message);
    }
};
assert.equal = function (lhs, rhs, message) {
    if (!Objects.equal(lhs, rhs)) {
        throw new AssertException(message);
    }
};
assert.notEqual = function (lhs, rhs, message) {
    if (Objects.equal(lhs, rhs)) {
        throw new AssertException(message);
    }
};
assert.identity = function (lhs, rhs, message) {
    if (lhs !== rhs) {
        throw new AssertException(message);
    }
};
assert.notIdentity = function (lhs, rhs, message) {
    if (lhs === rhs) {
        throw new AssertException(message);
    }
};
assert.compareLessThan = function (lhs, rhs, message) {
    if (!(Objects.compare(lhs, rhs) < 0)) {
        throw new AssertException(message);
    }
};
assert.compareNotLessThan = function (lhs, rhs, message) {
    if (Objects.compare(lhs, rhs) < 0) {
        throw new AssertException(message);
    }
};
assert.compareLessThanOrEqual = function (lhs, rhs, message) {
    if (!(Objects.compare(lhs, rhs) <= 0)) {
        throw new AssertException(message);
    }
};
assert.compareNotLessThanOrEqual = function (lhs, rhs, message) {
    if (Objects.compare(lhs, rhs) <= 0) {
        throw new AssertException(message);
    }
};
assert.compareEqual = function (lhs, rhs, message) {
    if (!(Objects.compare(lhs, rhs) === 0)) {
        throw new AssertException(message);
    }
};
assert.compareNotEqual = function (lhs, rhs, message) {
    if (Objects.compare(lhs, rhs) === 0) {
        throw new AssertException(message);
    }
};
assert.compareGreaterThanOrEqual = function (lhs, rhs, message) {
    if (!(Objects.compare(lhs, rhs) >= 0)) {
        throw new AssertException(message);
    }
};
assert.compareNotGreaterThanOrEqual = function (lhs, rhs, message) {
    if (Objects.compare(lhs, rhs) >= 0) {
        throw new AssertException(message);
    }
};
assert.compareGreaterThan = function (lhs, rhs, message) {
    if (!(Objects.compare(lhs, rhs) > 0)) {
        throw new AssertException(message);
    }
};
assert.compareNotGreaterThan = function (lhs, rhs, message) {
    if (Objects.compare(lhs, rhs) > 0) {
        throw new AssertException(message);
    }
};
//# sourceMappingURL=Assert.js.map