{"version":3,"sources":["../../main/ByteOrder.ts","../../main/String.ts","../../main/Random.ts","../../main/Murmur3.ts","../../main/Objects.ts","../../main/Cursor.ts","../../../../../node_modules/tslib/tslib.es6.js","../../main/CursorEmpty.ts","../../main/CursorUnary.ts","../../main/CursorArray.ts","../../main/AssertException.ts","../../main/Assert.ts","../../main/Severity.ts","../../main/HashGenCacheMap.ts","../../main/HashGenCacheSet.ts","../../main/Any.ts"],"names":["ByteOrder","String","prototype","codePointAt","Object","defineProperty","value","index","size","this","length","Number","c1","charCodeAt","c2","configurable","writable","offsetByCodePoints","count","NativeOrder","bom","ArrayBuffer","Uint16Array","b","Uint8Array","Error","nativeOrder","crypto","window","msCrypto","fillBytesCrypto","typedArray","getRandomValues","fillBytesMath","Int8Array","i","Math","round","random","Int16Array","Int32Array","Uint32Array","TypeError","Random","fillBytes","hashArrayBuffer","hashFloat64Array","Float64Array","hashInt32Array","rotl","distance","Murmur3","seed","constructor","name","toString","hash","mash","mix","undefined","mixUint8ArrayBE","code","array","offset","limit","word","mixUInt8ArrayLE","mixStringBE","string","k","n","utf8Length","c","mixStringLE","Objects","compare","x","y","Date","getTime","isNaN","compareTo","order","Array","isArray","compareArray","compareObject","p","q","min","xKeys","keys","yKeys","xKey","yKey","equal","equals","equalArray","equalObject","key","hashCode","hashArray","hashObject","h","Cursor","set","newValue","delete","empty","_empty","Empty","unary","Unary","extendStatics","d","setPrototypeOf","__proto__","hasOwnProperty","__extends","__","create","CursorEmpty","_super","isEmpty","head","step","skip","hasNext","nextIndex","next","done","hasPrevious","previousIndex","previous","CursorUnary","_this","call","_value","_index","max","CursorArray","_array","_limit","AssertException","message","assert","condition","ok","notOk","lhs","rhs","notEqual","identity","notIdentity","compareLessThan","compareNotLessThan","compareLessThanOrEqual","compareNotLessThanOrEqual","compareEqual","compareNotEqual","compareGreaterThanOrEqual","compareNotGreaterThanOrEqual","compareGreaterThan","compareNotGreaterThan","Severity","level","label","_level","_label","isTrace","TRACE_LEVEL","isDebug","DEBUG_LEVEL","isInfo","INFO_LEVEL","isNote","NOTE_LEVEL","isWarning","WARNING_LEVEL","isError","ERROR_LEVEL","isAlert","ALERT_LEVEL","isFatal","FATAL_LEVEL","that","localeCompare","_hashSeed","trace","debug","info","note","warning","error","alert","fatal","_trace","_debug","_info","_note","_warning","_error","_alert","_fatal","HashGenCacheMap","_buckets","_gen4Hits","_gen3Hits","_gen2Hits","_gen1Hits","_misses","get","abs","bucket","gen4Key","_gen4Key","gen4Val","_gen4Val","_gen4Weight","gen3Key","_gen3Key","gen3Val","_gen3Val","_gen3Weight","HashGenCacheMapBucket","_gen2Key","_gen2Val","_gen2Weight","_gen1Key","_gen1Val","_gen1Weight","gen2Key","gen2Val","gen1Key","gen1Val","put","remove","clear","hits","hitRatio","gen4Weight","gen3Weight","gen2Weight","gen1Weight","HashGenCacheSet","HashGenCacheSetBucket","is","object","fromAny","toAny"],"mappings":";0MAiBA,IAAkBA,ECyDbC,OAAOC,UAAUC,aACpBC,OAAOC,eAAeJ,OAAOC,UAAW,cAAe,CACrDI,MA9DJ,SAAmCC,GACjC,IAAMC,EAAOC,KAAKC,OAKlB,IAJAH,EAAQA,EAAQI,OAAOJ,GAAS,IAClBA,IACZA,EAAQ,GAENA,GAAS,GAAKA,EAAQC,EAAM,CAC9B,IAAMI,EAAKH,KAAKI,WAAWN,GAC3B,GAAIK,GAAM,OAAUA,GAAM,MACxB,OAAOA,EACF,GAAIA,GAAM,OAAUL,EAAQ,EAAIC,EAAM,CAC3C,IAAMM,EAAKL,KAAKI,WAAWN,EAAQ,GACnC,GAAIO,GAAM,OAAUA,GAAM,MACxB,OAA6C,QAA/B,KAALF,IAAgB,GAAKE,EAAK,SAkDvCC,cAAc,EACdC,UAAU,IAITf,OAAOC,UAAUe,oBACpBb,OAAOC,eAAeJ,OAAOC,UAAW,qBAAsB,CAC5DI,MAlDJ,SAA0CC,EAAeW,GACvD,GAAIA,EAAQ,EAEV,IADA,IAAMV,EAAOC,KAAKC,OACXQ,EAAQ,GAAKX,EAAQC,GAAM,CAEhC,IADMI,EAAKH,KAAKI,WAAWN,KACjB,OAAUK,GAAM,MACxBL,GAAS,OACJ,GAAIK,GAAM,OAAUL,EAAQ,EAAIC,EAAM,CAGzCD,IAFIO,EAAKL,KAAKI,WAAWN,EAAQ,KACzB,OAAUO,GAAM,MACf,EAEA,OAGXP,GAAS,EAEXW,GAAS,OAEN,GAAIA,EAAQ,EACjB,KAAOA,EAAQ,GAAKX,EAAQ,GAAG,CAC7B,IAAMO,EACN,IADMA,EAAKL,KAAKI,WAAWN,EAAQ,KACzB,OAAUO,GAAM,MACxBP,GAAS,OACJ,GAAIO,GAAM,OAAUA,GAAM,OAAUP,EAAQ,EAAI,EAAG,CACxD,IAAMK,EAEJL,IAFIK,EAAKH,KAAKI,WAAWN,EAAQ,KACzB,OAAUK,GAAM,MACf,EAEA,OAGXL,GAAS,EAEXW,GAAS,EAGb,OAAOX,GAcLQ,cAAc,EACdC,UAAU,KDrEIhB,EAAAA,EAAAA,YAAAA,EAAAA,UAAS,KAIzB,UAAA,KAIAA,EAAA,aAAA,KAmBF,IAAamB,EAhBb,WACE,IAAMC,EAAM,IAAIC,YAAY,GAC5B,IAAIC,YAAYF,GAAK,GAAK,MAC1B,IAAMG,EAAI,IAAIC,WAAWJ,GACzB,GAAa,MAATG,EAAE,IAAwB,MAATA,EAAE,GACrB,MAAA,KACK,GAAa,MAATA,EAAE,IAAwB,MAATA,EAAE,GAC5B,MAAA,KAEA,MAAM,IAAIE,MAOwBC,GE7BhCC,EACc,oBAAXC,SACNA,OAAOD,QAAWC,OAAeC,UAIpC,SAASC,EAAgBC,GAGvBJ,EAAQK,gBAAgBD,GAI1B,SAASE,EAAcF,GAGrB,GAAIA,aAAsBG,UACxB,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAWrB,OAAQyB,GAAK,EAC1CJ,EAAWI,GAAK,IAAMC,KAAKC,MAAsB,IAAhBD,KAAKE,eAEnC,GAAIP,aAAsBP,WAC/B,IAASW,EAAI,EAAGA,EAAIJ,EAAWrB,OAAQyB,GAAK,EAC1CJ,EAAWI,GAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,eAE7B,GAAIP,aAAsBQ,WAC/B,IAASJ,EAAI,EAAGA,EAAIJ,EAAWrB,OAAQyB,GAAK,EAC1CJ,EAAWI,GAAK,MAAQC,KAAKC,MAAsB,MAAhBD,KAAKE,eAErC,GAAIP,aAAsBT,YAC/B,IAASa,EAAI,EAAGA,EAAIJ,EAAWrB,OAAQyB,GAAK,EAC1CJ,EAAWI,GAAKC,KAAKC,MAAsB,MAAhBD,KAAKE,eAE7B,GAAIP,aAAsBS,WAC/B,IAASL,EAAI,EAAGA,EAAIJ,EAAWrB,OAAQyB,GAAK,EAC1CJ,EAAWI,GAAK,WAAaC,KAAKC,MAAsB,WAAhBD,KAAKE,cAE1C,CAAA,KAAIP,aAAsBU,aAK/B,MAAM,IAAIC,UAAU,GAAKX,GAJzB,IAASI,EAAI,EAAGA,EAAIJ,EAAWrB,OAAQyB,GAAK,EAC1CJ,EAAWI,GAAKC,KAAKC,MAAsB,WAAhBD,KAAKE,WAQtC,IAAAK,EAAA,WACE,SAAAA,KAIF,OADSA,EAAAC,UAAYjB,EAASG,EAAkBG,EAChDU,EALA,GC7CME,EAAkB,IAAIxB,YAAY,GAClCyB,EAAmB,IAAIC,aAAaF,GACpCG,EAAiB,IAAIR,WAAWK,GAKtC,SAASI,EAAK3C,EAAe4C,GAC3B,OAAQ5C,GAAS4C,EAAa5C,IAAW,GAAK4C,EAOhD,IAAAC,EAAA,WACE,SAAAA,KA6RF,OAtRSA,EAAAC,KAAP,SAAY9C,GAQV,MAPqB,iBAAVA,GAAsBA,IAE7BA,EADEA,EAAM+C,aAA0D,iBAAnC/C,EAAM+C,YAAoBC,KAChDhD,EAAM+C,YAAoBC,KAE3BhD,EAAMiD,YAGXJ,EAAQK,KAAKlD,IAMf6C,EAAAK,KAAP,SAAYlD,GACV,GAAIA,aAAiBkB,YAA+B,iBAAVlB,EACxC,OAAO6C,EAAQM,KAAKN,EAAQO,IAAI,EAAGpD,IAC9B,GAAqB,iBAAVA,EAChB,QAAMA,IAAUA,IACLA,GAEXwC,EAAiB,GAAKxC,EACf0C,EAAe,GAAKA,EAAe,IACrC,GAAqB,kBAAV1C,EAChB,OAAOA,EAAQ,EAAI,EACd,GAAc,OAAVA,EACT,OAAO,EACF,QAAcqD,IAAVrD,EACT,OAAO,EAEP,MAAM,IAAIoC,UAAU,GAAKpC,IAKtB6C,EAAAS,gBAAP,SAAuBC,EAAcC,GAGnC,IAFA,IAAIC,EAAS,EACPC,EAAQF,EAAMpD,OACbqD,EAAS,EAAIC,GAAO,CACzB,IAAMC,GAA4B,IAApBH,EAAMC,KAAuB,IAA0B,IAApBD,EAAMC,EAAS,KAAc,IAC5C,IAApBD,EAAMC,EAAS,KAAe,EAAyB,IAApBD,EAAMC,EAAS,GAChEF,EAAOV,EAAQO,IAAIG,EAAMI,GACzBF,GAAU,EAEZ,GAAIA,EAASC,EAAO,CACdC,GAAwB,IAAhBH,EAAMC,KAAmB,GACjCA,EAAS,EAAIC,IACfC,IAA6B,IAApBH,EAAMC,EAAS,KAAc,GAClCA,EAAS,EAAIC,IACfC,IAA6B,IAApBH,EAAMC,EAAS,KAAc,IAO1CF,GADAI,EAA0B,WAAV,OADhBA,EAAOhB,EADPgB,EAA0B,YAAV,MAAPA,KAAiD,YAAfA,IAAS,IAAmB,QAAW,IAAM,WACtE,QACwC,WAAfA,IAAS,IAAmB,QAAW,IAAM,WAG1F,OAAOJ,EAAOG,GAGTb,EAAAe,gBAAP,SAAuBL,EAAcC,GAGnC,IAFA,IAAIC,EAAS,EACPC,EAAQF,EAAMpD,OACbqD,EAAS,EAAIC,GAAO,CACzB,IAAMC,EAA4B,IAApBH,EAAMC,IAAiD,IAApBD,EAAMC,EAAS,KAAe,GAC7C,IAApBD,EAAMC,EAAS,KAAc,IAA0B,IAApBD,EAAMC,EAAS,KAAc,GAC9EF,EAAOV,EAAQO,IAAIG,EAAMI,GACzBF,GAAU,EAEZ,GAAIA,EAASC,EAAO,CACdC,EAAuB,IAAhBH,EAAMC,GACbA,EAAS,EAAIC,IACfC,IAA6B,IAApBH,EAAMC,EAAS,KAAc,EAClCA,EAAS,EAAIC,IACfC,IAA6B,IAApBH,EAAMC,EAAS,KAAc,KAO1CF,GADAI,EAA0B,WAAV,OADhBA,EAAOhB,EADPgB,EAA0B,YAAV,MAAPA,KAAiD,YAAfA,IAAS,IAAmB,QAAW,IAAM,WACtE,QACwC,WAAfA,IAAS,IAAmB,QAAW,IAAM,WAG1F,OAAOJ,EAAOG,GAITb,EAAAgB,YAAP,SAAmBN,EAAcO,GAM/B,IALA,IAAIH,EAAO,EACPI,EAAI,GACJlC,EAAI,EACFmC,EAAIF,EAAO1D,OACb6D,EAAa,EACVpC,EAAImC,GAAG,CACZ,IAAIE,EAAIJ,EAAOjE,YAAYgC,QACjB,IAANqC,IACFA,EAAIJ,EAAOvD,WAAWsB,IAEpBqC,GAAK,GAAKA,GAAK,KAEjBP,GAAQO,IADRH,GAAK,GAEK,IAANA,IAAWR,EAAOV,EAAQO,IAAIG,EAAMI,GAAOA,EAAO,EAAGI,EAAI,IAC7DE,GAAc,GACLC,GAAK,KAAQA,GAAK,MAE3BP,IAAS,IAAQO,IAAM,KADvBH,GAAK,GAEK,IAANA,IAAWR,EAAOV,EAAQO,IAAIG,EAAMI,GAAOA,EAAO,EAAGI,EAAI,IAE7DJ,IAAS,IAAY,GAAJO,KADjBH,GAAK,GAEK,IAANA,IAAWR,EAAOV,EAAQO,IAAIG,EAAMI,GAAOA,EAAO,EAAGI,EAAI,IAC7DE,GAAc,GACLC,GAAK,MAAUA,GAAK,OACpBA,GAAK,OAAUA,GAAK,OAE7BP,IAAS,IAAQO,IAAO,MADxBH,GAAK,GAEK,IAANA,IAAWR,EAAOV,EAAQO,IAAIG,EAAMI,GAAOA,EAAO,EAAGI,EAAI,IAE7DJ,IAAS,IAASO,IAAO,EAAK,MAD9BH,GAAK,GAEK,IAANA,IAAWR,EAAOV,EAAQO,IAAIG,EAAMI,GAAOA,EAAO,EAAGI,EAAI,IAE7DJ,IAAS,IAAY,GAAJO,KADjBH,GAAK,GAEK,IAANA,IAAWR,EAAOV,EAAQO,IAAIG,EAAMI,GAAOA,EAAO,EAAGI,EAAI,IAC7DE,GAAc,GACLC,GAAK,OAAWA,GAAK,SAE9BP,IAAS,IAAQO,IAAO,MADxBH,GAAK,GAEK,IAANA,IAAWR,EAAOV,EAAQO,IAAIG,EAAMI,GAAOA,EAAO,EAAGI,EAAI,IAE7DJ,IAAS,IAASO,IAAM,GAAM,MAD9BH,GAAK,GAEK,IAANA,IAAWR,EAAOV,EAAQO,IAAIG,EAAMI,GAAOA,EAAO,EAAGI,EAAI,IAE7DJ,IAAS,IAASO,IAAO,EAAK,MAD9BH,GAAK,GAEK,IAANA,IAAWR,EAAOV,EAAQO,IAAIG,EAAMI,GAAOA,EAAO,EAAGI,EAAI,IAE7DJ,IAAS,IAAY,GAAJO,KADjBH,GAAK,GAEK,IAANA,IAAWR,EAAOV,EAAQO,IAAIG,EAAMI,GAAOA,EAAO,EAAGI,EAAI,IAC7DE,GAAc,IAGdN,GAAQ,MADRI,GAAK,GAEK,IAANA,IAAWR,EAAOV,EAAQO,IAAIG,EAAMI,GAAOA,EAAO,EAAGI,EAAI,IAE7DJ,GAAQ,MADRI,GAAK,GAEK,IAANA,IAAWR,EAAOV,EAAQO,IAAIG,EAAMI,GAAOA,EAAO,EAAGI,EAAI,IAE7DJ,GAAQ,MADRI,GAAK,GAEK,IAANA,IAAWR,EAAOV,EAAQO,IAAIG,EAAMI,GAAOA,EAAO,EAAGI,EAAI,IAC7DE,GAAc,GAEhBpC,EAAIiC,EAAOnD,mBAAmBkB,EAAG,GAQnC,OANU,KAANkC,IAIFR,GADAI,EAA0B,WAAV,OADhBA,EAAOhB,EADPgB,EAA0B,YAAV,MAAPA,KAAiD,YAAfA,IAAS,IAAmB,QAAW,IAAM,WACtE,QACwC,WAAfA,IAAS,IAAmB,QAAW,IAAM,YAGnFJ,EAAOU,GAGTpB,EAAAsB,YAAP,SAAmBZ,EAAcO,GAM/B,IALA,IAAIH,EAAO,EACPI,EAAI,EACJlC,EAAI,EACFmC,EAAIF,EAAO1D,OACb6D,EAAa,EACVpC,EAAImC,GAAG,CACZ,IAAIE,EAAIJ,EAAOjE,YAAYgC,QACjB,IAANqC,IACFA,EAAIJ,EAAOvD,WAAWsB,IAEpBqC,GAAK,GAAKA,GAAK,KACjBP,GAAQO,GAAKH,EAEH,MADVA,GAAK,KACWR,EAAOV,EAAQO,IAAIG,EAAMI,GAAOA,EAAO,EAAGI,EAAI,GAC9DE,GAAc,GACLC,GAAK,KAAQA,GAAK,MAC3BP,IAAS,IAAQO,IAAM,IAAOH,EAEpB,MADVA,GAAK,KACWR,EAAOV,EAAQO,IAAIG,EAAMI,GAAOA,EAAO,EAAGI,EAAI,GAC9DJ,IAAS,IAAY,GAAJO,IAAcH,EAErB,MADVA,GAAK,KACWR,EAAOV,EAAQO,IAAIG,EAAMI,GAAOA,EAAO,EAAGI,EAAI,GAC9DE,GAAc,GACLC,GAAK,MAAUA,GAAK,OACpBA,GAAK,OAAUA,GAAK,OAC7BP,IAAS,IAAQO,IAAO,KAAQH,EAEtB,MADVA,GAAK,KACWR,EAAOV,EAAQO,IAAIG,EAAMI,GAAOA,EAAO,EAAGI,EAAI,GAC9DJ,IAAS,IAASO,IAAO,EAAK,KAAUH,EAE9B,MADVA,GAAK,KACWR,EAAOV,EAAQO,IAAIG,EAAMI,GAAOA,EAAO,EAAGI,EAAI,GAC9DJ,IAAS,IAAY,GAAJO,IAAcH,EAErB,MADVA,GAAK,KACWR,EAAOV,EAAQO,IAAIG,EAAMI,GAAOA,EAAO,EAAGI,EAAI,GAC9DE,GAAc,GACLC,GAAK,OAAWA,GAAK,SAC9BP,IAAS,IAAQO,IAAO,KAAQH,EAEtB,MADVA,GAAK,KACWR,EAAOV,EAAQO,IAAIG,EAAMI,GAAOA,EAAO,EAAGI,EAAI,GAC9DJ,IAAS,IAASO,IAAM,GAAM,KAAUH,EAE9B,MADVA,GAAK,KACWR,EAAOV,EAAQO,IAAIG,EAAMI,GAAOA,EAAO,EAAGI,EAAI,GAC9DJ,IAAS,IAASO,IAAO,EAAK,KAAUH,EAE9B,MADVA,GAAK,KACWR,EAAOV,EAAQO,IAAIG,EAAMI,GAAOA,EAAO,EAAGI,EAAI,GAC9DJ,IAAS,IAAY,GAAJO,IAAcH,EAErB,MADVA,GAAK,KACWR,EAAOV,EAAQO,IAAIG,EAAMI,GAAOA,EAAO,EAAGI,EAAI,GAC9DE,GAAc,IAEdN,GAAQ,KAAQI,EAEN,MADVA,GAAK,KACWR,EAAOV,EAAQO,IAAIG,EAAMI,GAAOA,EAAO,EAAGI,EAAI,GAC9DJ,GAAQ,KAAQI,EAEN,MADVA,GAAK,KACWR,EAAOV,EAAQO,IAAIG,EAAMI,GAAOA,EAAO,EAAGI,EAAI,GAC9DJ,GAAQ,KAAQI,EAEN,MADVA,GAAK,KACWR,EAAOV,EAAQO,IAAIG,EAAMI,GAAOA,EAAO,EAAGI,EAAI,GAC9DE,GAAc,GAEhBpC,EAAIiC,EAAOnD,mBAAmBkB,EAAG,GAQnC,OANU,KAANkC,IAIFR,GADAI,EAA0B,WAAV,OADhBA,EAAOhB,EADPgB,EAA0B,YAAV,MAAPA,KAAiD,YAAfA,IAAS,IAAmB,QAAW,IAAM,WACtE,QACwC,WAAfA,IAAS,IAAmB,QAAW,IAAM,YAGnFJ,EAAOU,GAUTpB,EAAAO,IAAP,SAAWG,EAAcvD,GACvB,GAAqB,iBAAVA,EAQT,OANAA,EAAQ2C,EADR3C,EAA4B,YAAV,MAARA,KAAmD,YAAhBA,IAAU,IAAmB,QAAW,IAAM,WACvE,IAKpBuD,EAA0B,OAAV,OADhBA,EAA0B,GAAV,OADhBA,EAAOZ,EADPY,GADAvD,EAA4B,WAAV,MAARA,KAAmD,WAAhBA,IAAU,IAAmB,QAAW,IAAM,WAEzE,QAC+B,GAAfuD,IAAS,IAAU,QAAW,IAAM,eAChB,OAAfA,IAAS,IAAe,QAAW,IAErE,GAAqB,iBAAVvD,EAAoB,CACpC,GAAe,OAAXa,EACF,OAAOgC,EAAQgB,YAAYN,EAAMvD,GAC5B,GAAe,OAAXa,EACT,OAAOgC,EAAQsB,YAAYZ,EAAMvD,QAE9B,GAAIA,aAAiBkB,WAAY,CACtC,GAAe,OAAXL,EACF,OAAOgC,EAAQS,gBAAgBC,EAAMvD,GAChC,GAAe,OAAXa,EACT,OAAOgC,EAAQe,gBAAgBL,EAAMvD,GAGzC,MAAM,IAAIoC,UAAU,GAAKpC,IAMpB6C,EAAAM,KAAP,SAAYI,GAMV,OAJAA,EAA0B,YAAV,OADhBA,GAAQA,IAAS,OACyC,YAAfA,IAAS,IAAmB,QAAW,IAAM,WAExFA,EAA0B,YAAV,OADhBA,GAAQA,IAAS,OACyC,YAAfA,IAAS,IAAmB,QAAW,IAAM,YACxFA,GAAQA,IAAS,MACD,GAEpBV,EA9RA,gBCPE,SAAAuB,KAyNF,OAjNSA,EAAAC,QAAP,SAAeC,EAAYC,GAQzB,GAPID,aAAaE,OACfF,EAAIA,EAAEG,WAEJF,aAAaC,OACfD,EAAIA,EAAEE,gBAGE,IAANH,EACF,YAAU,IAANC,EACK,EAEA,EAEJ,GAAU,OAAND,EACT,YAAU,IAANC,GACM,EACO,OAANA,EACF,EAEA,EAEJ,GAAiB,iBAAND,EAChB,OAAIC,MAAAA,GACM,EACc,iBAANA,EACTD,EAAIC,GAAK,EAAID,EAAIC,EAAI,EAAIG,MAAMH,GAAMG,MAAMJ,GAAK,GAAK,EAAKI,MAAMJ,GAAK,EAAI,EAEzE,EAEJ,GAAiB,iBAANA,EAChB,OAAIC,MAAAA,GAA2C,iBAANA,GAC/B,EACc,iBAANA,EACTD,EAAIC,GAAK,EAAID,EAAIC,EAAI,EAAI,EAEzB,EAEJ,GAAiB,iBAAND,GAAkD,mBAAxBA,EAAUK,UAA0B,CAC9E,IAAMC,EAASN,EAAsBK,UAAUJ,GAC/C,OAAOK,EAAQ,GAAK,EAAIA,EAAQ,EAAI,EAAI,EACnC,OAAIC,MAAMC,QAAQR,GACnBC,MAAAA,GAA2C,iBAANA,GAA+B,iBAANA,GACxD,EACCM,MAAMC,QAAQP,GAChBH,EAAQW,aAAaT,EAAGC,GAExB,EAGLA,MAAAA,GAA2C,iBAANA,GAA+B,iBAANA,GAAkBM,MAAMC,QAAQP,IACxF,EAEDH,EAAQY,cAAcV,EAAUC,IAWtCH,EAAAW,aAAP,SAAoBT,EAAuBC,GAIzC,IAHA,IAAMU,EAAIX,EAAElE,OACN8E,EAAIX,EAAEnE,OACRwE,EAAQ,EACH/C,EAAI,EAAGmC,EAAIlC,KAAKqD,IAAIF,EAAGC,GAAIrD,EAAImC,GAAe,IAAVY,EAAa/C,GAAK,EAC7D+C,EAAQR,EAAQC,QAAQC,EAAEzC,GAAI0C,EAAE1C,IAElC,OAAiB,IAAV+C,EAAcA,EAAQK,EAAIC,EAAI,EAAID,EAAIC,GAAK,EAAI,GAQjDd,EAAAY,cAAP,SAAqBV,EAAWC,GAO9B,IANA,IAAMa,EAAQtF,OAAOuF,KAAKf,GACpBgB,EAAQxF,OAAOuF,KAAKd,GACpBU,EAAIG,EAAMhF,OACV8E,EAAII,EAAMlF,OACV4D,EAAIlC,KAAKqD,IAAIF,EAAGC,GAClBN,EAAQ,EACH/C,EAAI,EAAGA,EAAImC,GAAe,IAAVY,EAAa/C,GAAK,EAAG,CAC5C,IAAM0D,EAAOH,EAAMvD,GACb2D,EAAOF,EAAMzD,GAEL,KADd+C,EAAQR,EAAQC,QAAQkB,EAAMC,MAE5BZ,EAAQR,EAAQC,QAASC,EAAUiB,GAAQhB,EAAUiB,KAGzD,OAAiB,IAAVZ,EAAcA,EAAQK,EAAIC,EAAI,EAAID,EAAIC,GAAK,EAAI,GAOjDd,EAAAqB,MAAP,SAAanB,EAAYC,GAQvB,GAPID,aAAaE,OACfF,EAAIA,EAAEG,WAEJF,aAAaC,OACfD,EAAIA,EAAEE,WAGJH,IAAMC,EACR,OAAO,EACF,GAAiB,iBAAND,GAChB,GAAiB,iBAANC,EACT,OAAOG,MAAMJ,IAAMI,MAAMH,OAEtB,CAAA,GAAiB,iBAAND,GAAkBA,GAAkC,mBAArBA,EAAUoB,OACzD,OAAQpB,EAAaoB,OAAOnB,GACvB,GAAIM,MAAMC,QAAQR,IACvB,GAAIO,MAAMC,QAAQP,GAChB,OAAOH,EAAQuB,WAAWrB,EAAGC,QAE1B,GAAiB,iBAAND,GAAkBA,GACjB,iBAANC,GAAkBA,EAC3B,OAAOH,EAAQwB,YAAYtB,EAAGC,GAGlC,OAAO,GAOFH,EAAAuB,WAAP,SAAkBrB,EAAuBC,GACvC,IAAMP,EAAIM,EAAElE,OACZ,GAAI4D,IAAMO,EAAEnE,OACV,OAAO,EAET,IAAK,IAAIyB,EAAI,EAAGA,EAAImC,EAAGnC,GAAK,EAC1B,IAAKuC,EAAQqB,MAAMnB,EAAEzC,GAAI0C,EAAE1C,IACzB,OAAO,EAGX,OAAO,GAOFuC,EAAAwB,YAAP,SAAmBtB,EAAWC,GAC5B,IAAMa,EAAQtF,OAAOuF,KAAKf,GACpBgB,EAAQxF,OAAOuF,KAAKd,GACpBP,EAAIoB,EAAMhF,OAChB,GAAI4D,IAAMsB,EAAMlF,OACd,OAAO,EAET,IAAK,IAAIyB,EAAI,EAAGA,EAAImC,EAAGnC,GAAK,EAAG,CAC7B,IAAMgE,EAAMT,EAAMvD,GAClB,GAAIgE,IAAQP,EAAMzD,KAAOuC,EAAQqB,MAAOnB,EAAUuB,GAAOtB,EAAUsB,IACjE,OAAO,EAGX,OAAO,GAMFzB,EAAAlB,KAAP,SAAYoB,GACV,GAAIA,MAAAA,GAA2C,kBAANA,GACrB,iBAANA,GAA+B,iBAANA,EACrC,OAAOzB,EAAQK,KAAKoB,GACf,GAAiB,iBAANA,GAAiD,mBAAvBA,EAAUwB,SACpD,OAAQxB,EAAewB,WAClB,GAAIjB,MAAMC,QAAQR,GACvB,OAAOF,EAAQ2B,UAAUzB,GACpB,GAAiB,iBAANA,EAChB,OAAOF,EAAQ4B,WAAW1B,GAE1B,MAAM,IAAIlC,UAAU,GAAKkC,IAOtBF,EAAA2B,UAAP,SAAiBzB,GAGf,IAFA,IAAI2B,EAAI,EACFjC,EAAIM,EAAElE,OACHyB,EAAI,EAAGA,EAAImC,EAAGnC,GAAK,EAC1BoE,EAAIpD,EAAQO,IAAI6C,EAAG7B,EAAQlB,KAAKoB,EAAEzC,KAEpC,OAAOgB,EAAQM,KAAK8C,IAMf7B,EAAA4B,WAAP,SAAkB1B,GAIhB,IAHA,IAAI2B,EAAI,EACFZ,EAAOvF,OAAOuF,KAAKf,GACnBN,EAAIqB,EAAKjF,OACNyB,EAAI,EAAGA,EAAImC,EAAGnC,GAAK,EAAG,CAC7B,IAAMgE,EAAMR,EAAKxD,GACjBoE,EAAIpD,EAAQO,IAAIP,EAAQO,IAAI6C,EAAGpD,EAAQK,KAAK2C,IAAQvB,EAAUuB,IAEhE,OAAOhD,EAAQM,KAAK8C,IAExB7B,kBC9NA,SAAA8B,KAoDA,OA/BEA,EAAAtG,UAAAuG,IAAA,SAAIC,GACF,MAAM,IAAIjF,MAAM,cAGlB+E,EAAAtG,UAAAyG,OAAA,WACE,MAAM,IAAIlF,MAAM,cAIX+E,EAAAI,MAAP,WAIE,OAHKJ,EAAOK,SACVL,EAAOK,OAAS,IAAIL,EAAOM,OAEtBN,EAAOK,QAGTL,EAAAO,MAAP,SAAgBzG,GACd,OAAO,IAAIkG,EAAOQ,MAAS1G,IAGtBkG,EAAA1C,MAAP,SAAgBA,EAAyBvD,EAAmByD,GAC1D,YADuC,IAAAzD,IAAAA,EAAA,QAAmB,IAAAyD,IAAAA,EAAgBF,EAAMpD,QACzE,IAAI8F,EAAOrB,MAASrB,EAAOvD,EAAOyD,IAU7CwC,KCvDIS,EAAgB,SAASC,EAAG3F,GAI5B,OAHA0F,EAAgB7G,OAAO+G,gBAClB,CAAEC,UAAW,cAAgBjC,OAAS,SAAU+B,EAAG3F,GAAK2F,EAAEE,UAAY7F,IACvE,SAAU2F,EAAG3F,GAAK,IAAK,IAAIgE,KAAKhE,EAAOA,EAAE8F,eAAe9B,KAAI2B,EAAE3B,GAAKhE,EAAEgE,MACpD2B,EAAG3F,IAGrB,SAAS+F,EAAUJ,EAAG3F,GAEzB,SAASgG,IAAO9G,KAAK4C,YAAc6D,EADnCD,EAAcC,EAAG3F,GAEjB2F,EAAEhH,UAAkB,OAANqB,EAAanB,OAAOoH,OAAOjG,IAAMgG,EAAGrH,UAAYqB,EAAErB,UAAW,IAAIqH,qBCTnF,SAAAE,mDAwCA,OAxCiCH,EAAAG,EAAAC,GAC/BD,EAAAvH,UAAAyH,QAAA,WACE,OAAO,GAGTF,EAAAvH,UAAA0H,KAAA,WACE,MAAM,IAAInG,MAAM,UAGlBgG,EAAAvH,UAAA2H,KAAA,WACE,MAAM,IAAIpG,MAAM,UAGlBgG,EAAAvH,UAAA4H,KAAA,SAAK5G,KAILuG,EAAAvH,UAAA6H,QAAA,WACE,OAAO,GAGTN,EAAAvH,UAAA8H,UAAA,WACE,OAAO,GAGTP,EAAAvH,UAAA+H,KAAA,WACE,MAAO,CAACC,MAAM,IAGhBT,EAAAvH,UAAAiI,YAAA,WACE,OAAO,GAGTV,EAAAvH,UAAAkI,cAAA,WACE,OAAQ,GAGVX,EAAAvH,UAAAmI,SAAA,WACE,MAAO,CAACH,MAAM,IAElBT,GAxCiCjB,GAyCjCA,EAAOM,MAAQW,oBCrCb,SAAAa,EAAYhI,GAAZ,IAAAiI,EACEb,EAAAc,KAAA/H,OAAOA,YACP8H,EAAKE,OAASnI,EACdiI,EAAKG,OAAS,IA4DlB,OAnEoCpB,EAAAgB,EAAAZ,GAUlCY,EAAApI,UAAAyH,QAAA,WACE,OAAuB,IAAhBlH,KAAKiI,QAGdJ,EAAApI,UAAA0H,KAAA,WACE,GAAoB,IAAhBnH,KAAKiI,OACP,OAAOjI,KAAKgI,OAEZ,MAAM,IAAIhH,MAAM,UAIpB6G,EAAApI,UAAA2H,KAAA,WACE,GAAoB,IAAhBpH,KAAKiI,OAGP,MAAM,IAAIjH,MAAM,SAFhBhB,KAAKiI,OAAS,GAMlBJ,EAAApI,UAAA4H,KAAA,SAAK5G,GACHT,KAAKiI,OAAStG,KAAKqD,IAAIrD,KAAKuG,IAAI,EAAGlI,KAAKiI,OAASxH,GAAQ,IAG3DoH,EAAApI,UAAA6H,QAAA,WACE,OAAuB,IAAhBtH,KAAKiI,QAGdJ,EAAApI,UAAA8H,UAAA,WACE,OAAOvH,KAAKiI,QAGdJ,EAAApI,UAAA+H,KAAA,WACE,OAAoB,IAAhBxH,KAAKiI,QACPjI,KAAKiI,OAAS,EACP,CAACpI,MAAOG,KAAKgI,OAAQP,MAAM,IAE3B,CAACA,MAAM,IAIlBI,EAAApI,UAAAiI,YAAA,WACE,OAAuB,IAAhB1H,KAAKiI,QAGdJ,EAAApI,UAAAkI,cAAA,WACE,OAAO3H,KAAKiI,OAAS,GAGvBJ,EAAApI,UAAAmI,SAAA,WACE,OAAoB,IAAhB5H,KAAKiI,QACPjI,KAAKiI,OAAS,EACP,CAACpI,MAAOG,KAAKgI,OAAQP,MAAM,IAE3B,CAACA,MAAM,IAGpBI,GAnEoC9B,GAoEpCA,EAAOQ,MAAQsB,oBC/Db,SAAAM,EAAY9E,EAAyBvD,EAAeyD,GAApD,IAAAuE,EACEb,EAAAc,KAAA/H,OAAOA,YACP8H,EAAKM,OAAS/E,EACdyE,EAAKG,OAASnI,EACdgI,EAAKO,OAAS9E,IAgElB,OAzEoCsD,EAAAsB,EAAAlB,GAYlCkB,EAAA1I,UAAAyH,QAAA,WACE,OAAOlH,KAAKiI,QAAUjI,KAAKqI,QAG7BF,EAAA1I,UAAA0H,KAAA,WACE,GAAInH,KAAKiI,OAASjI,KAAKqI,OACrB,OAAOrI,KAAKoI,OAAOpI,KAAKiI,QAExB,MAAM,IAAIjH,MAAM,UAIpBmH,EAAA1I,UAAA2H,KAAA,WACE,KAAIpH,KAAKiI,OAASjI,KAAKqI,QAGrB,MAAM,IAAIrH,MAAM,SAFhBhB,KAAKiI,OAAS,GAMlBE,EAAA1I,UAAA4H,KAAA,SAAK5G,GACHT,KAAKiI,OAAStG,KAAKqD,IAAIhF,KAAKiI,OAASxH,EAAOT,KAAKqI,SAGnDF,EAAA1I,UAAA6H,QAAA,WACE,OAAOtH,KAAKiI,OAASjI,KAAKqI,QAG5BF,EAAA1I,UAAA8H,UAAA,WACE,OAAOvH,KAAKiI,QAGdE,EAAA1I,UAAA+H,KAAA,WACE,IAAM1H,EAAQE,KAAKiI,OACnB,OAAInI,EAAQE,KAAKqI,QACfrI,KAAKiI,OAASnI,EAAQ,EACf,CAACD,MAAOG,KAAKoI,OAAOtI,GAAQ2H,KAAMzH,KAAKiI,SAAWjI,KAAKqI,UAE9DrI,KAAKiI,OAASjI,KAAKqI,OACZ,CAACZ,MAAM,KAIlBU,EAAA1I,UAAAiI,YAAA,WACE,OAAO1H,KAAKiI,OAAS,GAGvBE,EAAA1I,UAAAkI,cAAA,WACE,OAAO3H,KAAKiI,OAAS,GAGvBE,EAAA1I,UAAAmI,SAAA,WACE,IAAM9H,EAAQE,KAAKiI,OAAS,EAC5B,OAAInI,GAAS,GACXE,KAAKiI,OAASnI,EACP,CAACD,MAAOG,KAAKoI,OAAOtI,GAAQ2H,KAAgB,IAAV3H,KAEzCE,KAAKiI,OAAS,EACP,CAACR,MAAM,KAGpBU,GAzEoCpC,GA0EpCA,EAAOrB,MAAQyD,oBCzEb,SAAAG,EAAYC,GAAZ,IAAAT,EACEb,EAAAc,KAAA/H,KAAMuI,IAAQvI,YACb8H,EAAanB,UAAY2B,EAAgB7I,YAE9C,OALqCoH,EAAAyB,EAAArB,GAKrCqB,GALqCtH,OC2HxBwH,EAAS,SAAUC,EAAoBF,GAClD,IAAKE,EACH,MAAM,IAAIH,EAAgBC,IAI9BC,EAAOE,GAAK,SAAUD,EAAoBF,GACxC,IAAKE,EACH,MAAM,IAAIH,EAAgBC,IAI9BC,EAAOG,MAAQ,SAAUF,EAAoBF,GAC3C,GAAIE,EACF,MAAM,IAAIH,EAAgBC,IAI9BC,EAAOlD,MAAQ,SAAUsD,EAAcC,EAAcN,GACnD,IAAKtE,EAAQqB,MAAMsD,EAAKC,GACtB,MAAM,IAAIP,EAAgBC,IAI9BC,EAAOM,SAAW,SAAUF,EAAcC,EAAcN,GACtD,GAAItE,EAAQqB,MAAMsD,EAAKC,GACrB,MAAM,IAAIP,EAAgBC,IAI9BC,EAAOO,SAAW,SAAUH,EAAcC,EAAcN,GACtD,GAAIK,IAAQC,EACV,MAAM,IAAIP,EAAgBC,IAI9BC,EAAOQ,YAAc,SAAUJ,EAAcC,EAAcN,GACzD,GAAIK,IAAQC,EACV,MAAM,IAAIP,EAAgBC,IAI9BC,EAAOS,gBAAkB,SAAUL,EAAcC,EAAcN,GAC7D,KAAMtE,EAAQC,QAAQ0E,EAAKC,GAAO,GAChC,MAAM,IAAIP,EAAgBC,IAI9BC,EAAOU,mBAAqB,SAAUN,EAAcC,EAAcN,GAChE,GAAItE,EAAQC,QAAQ0E,EAAKC,GAAO,EAC9B,MAAM,IAAIP,EAAgBC,IAI9BC,EAAOW,uBAAyB,SAAUP,EAAcC,EAAcN,GACpE,KAAMtE,EAAQC,QAAQ0E,EAAKC,IAAQ,GACjC,MAAM,IAAIP,EAAgBC,IAI9BC,EAAOY,0BAA4B,SAAUR,EAAcC,EAAcN,GACvE,GAAItE,EAAQC,QAAQ0E,EAAKC,IAAQ,EAC/B,MAAM,IAAIP,EAAgBC,IAI9BC,EAAOa,aAAe,SAAUT,EAAcC,EAAcN,GAC1D,GAAoC,IAA9BtE,EAAQC,QAAQ0E,EAAKC,GACzB,MAAM,IAAIP,EAAgBC,IAI9BC,EAAOc,gBAAkB,SAAUV,EAAcC,EAAcN,GAC7D,GAAkC,IAA9BtE,EAAQC,QAAQ0E,EAAKC,GACvB,MAAM,IAAIP,EAAgBC,IAI9BC,EAAOe,0BAA4B,SAAUX,EAAcC,EAAcN,GACvE,KAAMtE,EAAQC,QAAQ0E,EAAKC,IAAQ,GACjC,MAAM,IAAIP,EAAgBC,IAI9BC,EAAOgB,6BAA+B,SAAUZ,EAAcC,EAAcN,GAC1E,GAAItE,EAAQC,QAAQ0E,EAAKC,IAAQ,EAC/B,MAAM,IAAIP,EAAgBC,IAI9BC,EAAOiB,mBAAqB,SAAUb,EAAcC,EAAcN,GAChE,KAAMtE,EAAQC,QAAQ0E,EAAKC,GAAO,GAChC,MAAM,IAAIP,EAAgBC,IAI9BC,EAAOkB,sBAAwB,SAAUd,EAAcC,EAAcN,GACnE,GAAItE,EAAQC,QAAQ0E,EAAKC,GAAO,EAC9B,MAAM,IAAIP,EAAgBC,qBCnN5B,SAAAoB,EAAoBC,EAAeC,GACjC7J,KAAK8J,OAASF,EACd5J,KAAK+J,OAASF,EAyRlB,OA9QEF,EAAAlK,UAAAmK,MAAA,WACE,OAAO5J,KAAK8J,QAcdH,EAAAlK,UAAAoK,MAAA,SAAMA,GACJ,YAAc,IAAVA,EACK7J,KAAK+J,OAELJ,EAAS5C,OAAO/G,KAAK8J,OAAQD,IAOxCF,EAAAlK,UAAAuK,QAAA,WACE,OAAOhK,KAAK8J,SAAWH,EAASM,aAMlCN,EAAAlK,UAAAyK,QAAA,WACE,OAAOlK,KAAK8J,SAAWH,EAASQ,aAMlCR,EAAAlK,UAAA2K,OAAA,WACE,OAAOpK,KAAK8J,SAAWH,EAASU,YAMlCV,EAAAlK,UAAA6K,OAAA,WACE,OAAOtK,KAAK8J,SAAWH,EAASY,YAMlCZ,EAAAlK,UAAA+K,UAAA,WACE,OAAOxK,KAAK8J,SAAWH,EAASc,eAMlCd,EAAAlK,UAAAiL,QAAA,WACE,OAAO1K,KAAK8J,SAAWH,EAASgB,aAMlChB,EAAAlK,UAAAmL,QAAA,WACE,OAAO5K,KAAK8J,SAAWH,EAASkB,aAMlClB,EAAAlK,UAAAqL,QAAA,WACE,OAAO9K,KAAK8J,SAAWH,EAASoB,aAGlCpB,EAAAlK,UAAA+E,UAAA,SAAUwG,GACR,OAAIhL,OAASgL,EACJ,EACEhL,KAAK8J,OAASkB,EAAKlB,QACpB,EACC9J,KAAK8J,OAASkB,EAAKlB,OACrB,EAEA9J,KAAK+J,OAAOkB,cAAcD,EAAKjB,SAI1CJ,EAAAlK,UAAA8F,OAAA,SAAOyF,GACL,OAAIhL,OAASgL,GAEFA,aAAgBrB,IAClB3J,KAAK8J,SAAWkB,EAAKlB,QAAU9J,KAAK+J,SAAWiB,EAAKjB,SAK/DJ,EAAAlK,UAAAkG,SAAA,WAIE,YAH2B,IAAvBgE,EAASuB,YACXvB,EAASuB,UAAYxI,EAAQC,KAAKgH,IAE7BjH,EAAQM,KAAKN,EAAQO,IAAIP,EAAQO,IAAI0G,EAASuB,UACjDlL,KAAK8J,QAASpH,EAAQK,KAAK/C,KAAK+J,WAGtCJ,EAAAlK,UAAAqD,SAAA,WACE,OAAO9C,KAAK+J,QA4BPJ,EAAA5C,OAAP,SAAc6C,EAAeC,GAC3B,OAAQD,GACN,KAAKD,EAASM,YAAa,OAAON,EAASwB,MAAMtB,GACjD,KAAKF,EAASQ,YAAa,OAAOR,EAASyB,MAAMvB,GACjD,KAAKF,EAASU,WAAY,OAAOV,EAAS0B,KAAKxB,GAC/C,KAAKF,EAASY,WAAY,OAAOZ,EAAS2B,KAAKzB,GAC/C,KAAKF,EAASc,cAAe,OAAOd,EAAS4B,QAAQ1B,GACrD,KAAKF,EAASgB,YAAa,OAAOhB,EAAS6B,MAAM3B,GACjD,KAAKF,EAASkB,YAAa,OAAOlB,EAAS8B,MAAM5B,GACjD,KAAKF,EAASoB,YAAa,OAAOpB,EAAS+B,MAAM7B,GACjD,QAAS,MAAM,IAAI7I,MAAM,GAAK4I,KAQ3BD,EAAAwB,MAAP,SAAatB,GACX,YADW,IAAAA,IAAAA,EAAA,SACG,UAAVA,GACGF,EAASgC,SACZhC,EAASgC,OAAS,IAAIhC,EAASA,EAASM,YAAaJ,IAEhDF,EAASgC,QAET,IAAIhC,EAASA,EAASM,YAAaJ,IAQvCF,EAAAyB,MAAP,SAAavB,GACX,YADW,IAAAA,IAAAA,EAAA,SACG,UAAVA,GACGF,EAASiC,SACZjC,EAASiC,OAAS,IAAIjC,EAASA,EAASQ,YAAaN,IAEhDF,EAASiC,QAET,IAAIjC,EAASA,EAASQ,YAAaN,IAQvCF,EAAA0B,KAAP,SAAYxB,GACV,YADU,IAAAA,IAAAA,EAAA,QACI,SAAVA,GACGF,EAASkC,QACZlC,EAASkC,MAAQ,IAAIlC,EAASA,EAASU,WAAYR,IAE9CF,EAASkC,OAET,IAAIlC,EAASA,EAASU,WAAYR,IAQtCF,EAAA2B,KAAP,SAAYzB,GACV,YADU,IAAAA,IAAAA,EAAA,QACI,SAAVA,GACGF,EAASmC,QACZnC,EAASmC,MAAQ,IAAInC,EAASA,EAASY,WAAYV,IAE9CF,EAASmC,OAET,IAAInC,EAASA,EAASY,WAAYV,IAQtCF,EAAA4B,QAAP,SAAe1B,GACb,YADa,IAAAA,IAAAA,EAAA,WACC,YAAVA,GACGF,EAASoC,WACZpC,EAASoC,SAAW,IAAIpC,EAASA,EAASc,cAAeZ,IAEpDF,EAASoC,UAET,IAAIpC,EAASA,EAASc,cAAeZ,IAQzCF,EAAA6B,MAAP,SAAa3B,GACX,YADW,IAAAA,IAAAA,EAAA,SACG,UAAVA,GACGF,EAASqC,SACZrC,EAASqC,OAAS,IAAIrC,EAASA,EAASgB,YAAad,IAEhDF,EAASqC,QAET,IAAIrC,EAASA,EAASgB,YAAad,IAQvCF,EAAA8B,MAAP,SAAa5B,GACX,YADW,IAAAA,IAAAA,EAAA,SACG,UAAVA,GACGF,EAASsC,SACZtC,EAASsC,OAAS,IAAItC,EAASA,EAASkB,YAAahB,IAEhDF,EAASsC,QAET,IAAItC,EAASA,EAASkB,YAAahB,IAQvCF,EAAA+B,MAAP,SAAa7B,GACX,YADW,IAAAA,IAAAA,EAAA,SACG,UAAVA,GACGF,EAASuC,SACZvC,EAASuC,OAAS,IAAIvC,EAASA,EAASoB,YAAalB,IAEhDF,EAASuC,QAET,IAAIvC,EAASA,EAASoB,YAAalB,IA3J9BF,EAAAM,YAAsB,EACtBN,EAAAQ,YAAsB,EACtBR,EAAAU,WAAqB,EACrBV,EAAAY,WAAqB,EACrBZ,EAAAc,cAAwB,EACxBd,EAAAgB,YAAsB,EACtBhB,EAAAkB,YAAsB,EACtBlB,EAAAoB,YAAsB,EAuJxCpB,kBC7QE,SAAAwC,EAAYpM,GACVC,KAAKoM,SAAW,IAAI1H,MAAM3E,GAC1BC,KAAKqM,UAAY,EACjBrM,KAAKsM,UAAY,EACjBtM,KAAKuM,UAAY,EACjBvM,KAAKwM,UAAY,EACjBxM,KAAKyM,QAAU,EA+QnB,OA5QEN,EAAA1M,UAAAiN,IAAA,SAAIhH,GACF,GAA6B,IAAzB1F,KAAKoM,SAASnM,OAAlB,CAGA,IAAMH,EAAQ6B,KAAKgL,IAAI1I,EAAQlB,KAAK2C,IAAQ1F,KAAKoM,SAASnM,OACpD2M,EAAS5M,KAAKoM,SAAStM,GAC7B,GAAK8M,EAAL,CAIA,IAAMC,EAAUD,EAAOE,SACvB,QAAgB,IAAZD,GAAsB5I,EAAQqB,MAAMI,EAAKmH,GAAU,CACrD,IAAME,EAAUH,EAAOI,SACvB,QAAgB,IAAZD,EAGF,OAFA/M,KAAKqM,WAAa,EAClBO,EAAOK,cACAF,EAEPH,EAAOE,cAAW,EAItB,IAAMI,EAAUN,EAAOO,SACvB,QAAgB,IAAZD,GAAsBjJ,EAAQqB,MAAMI,EAAKwH,GAAU,CACrD,IAAME,EAAUR,EAAOS,SACvB,QAAgB,IAAZD,EASF,OARApN,KAAKsM,WAAa,EACdM,EAAOU,cAAgBV,EAAOK,cAChCjN,KAAKoM,SAAStM,GAAS,IAAIyN,EACvBX,EAAOO,SAAUP,EAAOS,SAAUT,EAAOU,YACzCV,EAAOE,SAAUF,EAAOI,SAAUJ,EAAOK,YACzCL,EAAOY,SAAUZ,EAAOa,SAAUb,EAAOc,YACzCd,EAAOe,SAAUf,EAAOgB,SAAUhB,EAAOiB,cAExCT,EAEPR,EAAOO,cAAW,EAItB,IAAMW,EAAUlB,EAAOY,SACvB,QAAgB,IAAZM,GAAsB7J,EAAQqB,MAAMI,EAAKoI,GAAU,CACrD,IAAMC,EAAUnB,EAAOa,SACvB,QAAgB,IAAZM,EASF,OARA/N,KAAKuM,WAAa,EACdK,EAAOc,cAAgBd,EAAOU,cAChCtN,KAAKoM,SAAStM,GAAS,IAAIyN,EACvBX,EAAOE,SAAUF,EAAOI,SAAUJ,EAAOK,YACzCL,EAAOY,SAAUZ,EAAOa,SAAUb,EAAOc,YACzCd,EAAOO,SAAUP,EAAOS,SAAUT,EAAOU,YACzCV,EAAOe,SAAUf,EAAOgB,SAAUhB,EAAOiB,cAExCE,EAEPnB,EAAOY,cAAW,EAItB,IAAMQ,EAAUpB,EAAOe,SACvB,QAAgB,IAAZK,GAAsB/J,EAAQqB,MAAMI,EAAKsI,GAAU,CACrD,IAAMC,EAAUrB,EAAOgB,SACvB,QAAgB,IAAZK,EASF,OARAjO,KAAKwM,WAAa,EACdI,EAAOiB,cAAgBjB,EAAOc,cAChC1N,KAAKoM,SAAStM,GAAS,IAAIyN,EACvBX,EAAOE,SAAUF,EAAOI,SAAUJ,EAAOK,YACzCL,EAAOO,SAAUP,EAAOS,SAAUT,EAAOU,YACzCV,EAAOe,SAAUf,EAAOgB,SAAUhB,EAAOiB,YACzCjB,EAAOY,SAAUZ,EAAOa,SAAUb,EAAOc,cAExCO,EAEPrB,EAAOe,cAAW,EAItB3N,KAAKyM,SAAW,KAIlBN,EAAA1M,UAAAyO,IAAA,SAAIxI,EAAQ7F,GACV,GAA6B,IAAzBG,KAAKoM,SAASnM,OAChB,OAAOJ,EAET,IAAMC,EAAQ6B,KAAKgL,IAAI1I,EAAQlB,KAAK2C,IAAQ1F,KAAKoM,SAASnM,OACpD2M,EAAS5M,KAAKoM,SAAStM,IAAU,IAAIyN,EAEvCV,EAAUD,EAAOE,SACrB,QAAgB,IAAZD,GAAsB5I,EAAQqB,MAAMI,EAAKmH,GAAU,CACrD,IAAME,EAAUH,EAAOI,SACvB,QAAgB,IAAZD,EAGF,OAFA/M,KAAKqM,WAAa,EAClBO,EAAOK,cACAF,EAEPH,EAAOE,cAAW,EAClBD,OAAU,EAId,IAAIK,EAAUN,EAAOO,SACrB,QAAgB,IAAZD,GAAsBjJ,EAAQqB,MAAMI,EAAKwH,GAAU,CACrD,IAAME,EAAUR,EAAOS,SACvB,QAAgB,IAAZD,EASF,OARApN,KAAKsM,WAAa,EACdM,EAAOU,cAAgBV,EAAOK,cAChCjN,KAAKoM,SAAStM,GAAS,IAAIyN,EACvBX,EAAOO,SAAUP,EAAOS,SAAUT,EAAOU,YACzCV,EAAOE,SAAUF,EAAOI,SAAUJ,EAAOK,YACzCL,EAAOY,SAAUZ,EAAOa,SAAUb,EAAOc,YACzCd,EAAOe,SAAUf,EAAOgB,SAAUhB,EAAOiB,cAExCT,EAEPR,EAAOO,cAAW,EAClBD,OAAU,EAId,IAAIY,EAAUlB,EAAOY,SACrB,QAAgB,IAAZM,GAAsB7J,EAAQqB,MAAMI,EAAKoI,GAAU,CACrD,IAAMC,EAAUnB,EAAOa,SACvB,QAAgB,IAAZM,EASF,OARA/N,KAAKuM,WAAa,EACdK,EAAOc,cAAgBd,EAAOU,cAChCtN,KAAKoM,SAAStM,GAAS,IAAIyN,EACvBX,EAAOE,SAAUF,EAAOI,SAAUJ,EAAOK,YACzCL,EAAOY,SAAUZ,EAAOa,SAAUb,EAAOc,YACzCd,EAAOO,SAAUP,EAAOS,SAAUT,EAAOU,YACzCV,EAAOe,SAAUf,EAAOgB,SAAUhB,EAAOiB,cAExCE,EAEPnB,EAAOY,cAAW,EAClBM,OAAU,EAId,IAAIE,EAAUpB,EAAOe,SACrB,QAAgB,IAAZK,GAAsB/J,EAAQqB,MAAMI,EAAKsI,GAAU,CACrD,IAAMC,EAAUrB,EAAOgB,SACvB,QAAgB,IAAZK,EASF,OARAjO,KAAKwM,WAAa,EACdI,EAAOiB,cAAgBjB,EAAOc,cAChC1N,KAAKoM,SAAStM,GAAS,IAAIyN,EACvBX,EAAOE,SAAUF,EAAOI,SAAUJ,EAAOK,YACzCL,EAAOO,SAAUP,EAAOS,SAAUT,EAAOU,YACzCV,EAAOe,SAAUf,EAAOgB,SAAUhB,EAAOiB,YACzCjB,EAAOY,SAAUZ,EAAOa,SAAUb,EAAOc,cAExCO,EAEPrB,EAAOe,cAAW,EAClBK,OAAU,EAwCd,OApCAhO,KAAKyM,SAAW,EAEdzM,KAAKoM,SAAStM,QADA,IAAZ+M,EACqB,IAAIU,EACvBX,EAAOO,SAAUP,EAAOS,SAAUT,EAAOU,YACzCV,EAAOY,SAAUZ,EAAOa,SAAUb,EAAOc,YACzCd,EAAOe,SAAUf,EAAOgB,SAAUhB,EAAOiB,YACzCnI,EAAK7F,EAAO,QACK,IAAZqN,EACc,IAAIK,EACvBX,EAAOE,SAAUF,EAAOI,SAAUJ,EAAOK,YACzCL,EAAOY,SAAUZ,EAAOa,SAAUb,EAAOc,YACzCd,EAAOe,SAAUf,EAAOgB,SAAUhB,EAAOiB,YACzCnI,EAAK7F,EAAO,QACK,IAAZiO,EACc,IAAIP,EACvBX,EAAOE,SAAUF,EAAOI,SAAUJ,EAAOK,YACzCL,EAAOO,SAAUP,EAAOS,SAAUT,EAAOU,YACzCV,EAAOe,SAAUf,EAAOgB,SAAUhB,EAAOiB,YACzCnI,EAAK7F,EAAO,QACK,IAAZmO,EACc,IAAIT,EACvBX,EAAOE,SAAUF,EAAOI,SAAUJ,EAAOK,YACzCL,EAAOO,SAAUP,EAAOS,SAAUT,EAAOU,YACzCV,EAAOY,SAAUZ,EAAOa,SAAUb,EAAOc,YACzChI,EAAK7F,EAAO,GAKO,IAAI0N,EACvBX,EAAOE,SAAUF,EAAOI,SAAUJ,EAAOK,YAAc,EACvDL,EAAOO,SAAUP,EAAOS,SAAUT,EAAOU,YAAc,EACvDV,EAAOe,SAAUf,EAAOgB,SAAUhB,EAAOiB,YACzCnI,EAAK7F,EAAO,GAGXA,GAGTsM,EAAA1M,UAAA0O,OAAA,SAAOzI,GACL,GAA6B,IAAzB1F,KAAKoM,SAASnM,OAAlB,CAGA,IAAMH,EAAQ6B,KAAKgL,IAAI1I,EAAQlB,KAAK2C,IAAQ1F,KAAKoM,SAASnM,OACpD2M,EAAS5M,KAAKoM,SAAStM,GAC7B,GAAK8M,EAAL,CAIA,IAAMC,EAAUD,EAAOE,SACvB,QAAgB,IAAZD,GAAsB5I,EAAQqB,MAAMI,EAAKmH,GAAU,CACrD,IAAME,EAAUH,EAAOI,SAMvB,OALAhN,KAAKoM,SAAStM,GAAS,IAAIyN,EACvBX,EAAOO,SAAUP,EAAOS,SAAUT,EAAOU,YACzCV,EAAOY,SAAUZ,EAAOa,SAAUb,EAAOc,YACzCd,EAAOe,SAAUf,EAAOgB,SAAUhB,EAAOiB,iBACzC,OAAQ,EAAQ,GACbd,EAGT,IAAMG,EAAUN,EAAOO,SACvB,QAAgB,IAAZD,GAAsBjJ,EAAQqB,MAAMI,EAAKwH,GAAU,CACrD,IAAME,EAAUR,EAAOS,SAMvB,OALArN,KAAKoM,SAAStM,GAAS,IAAIyN,EACvBX,EAAOE,SAAUF,EAAOI,SAAUJ,EAAOK,YACzCL,EAAOY,SAAUZ,EAAOa,SAAUb,EAAOc,YACzCd,EAAOe,SAAUf,EAAOgB,SAAUhB,EAAOiB,iBACzC,OAAQ,EAAQ,GACbT,EAGT,IAAMU,EAAUlB,EAAOY,SACvB,QAAgB,IAAZM,GAAsB7J,EAAQqB,MAAMI,EAAKoI,GAAU,CACrD,IAAMC,EAAUnB,EAAOa,SAMvB,OALAzN,KAAKoM,SAAStM,GAAS,IAAIyN,EACvBX,EAAOE,SAAUF,EAAOI,SAAUJ,EAAOK,YACzCL,EAAOO,SAAUP,EAAOS,SAAUT,EAAOU,YACzCV,EAAOe,SAAUf,EAAOgB,SAAUhB,EAAOiB,iBACzC,OAAQ,EAAQ,GACbE,EAGT,IAAMC,EAAUpB,EAAOe,SACvB,QAAgB,IAAZK,GAAsB/J,EAAQqB,MAAMI,EAAKsI,GAAU,CACrD,IAAMC,EAAUrB,EAAOgB,SAMvB,OALA5N,KAAKoM,SAAStM,GAAS,IAAIyN,EACvBX,EAAOE,SAAUF,EAAOI,SAAUJ,EAAOK,YACzCL,EAAOO,SAAUP,EAAOS,SAAUT,EAAOU,YACzCV,EAAOY,SAAUZ,EAAOa,SAAUb,EAAOc,iBACzC,OAAQ,EAAQ,GACbO,MAMX9B,EAAA1M,UAAA2O,MAAA,WACE,IAAK,IAAI1M,EAAI,EAAGA,EAAI1B,KAAKoM,SAASnM,OAAQyB,GAAK,EAC7C1B,KAAKoM,SAAS1K,QAAK,GAKvByK,EAAA1M,UAAA4O,KAAA,WACE,OAAOrO,KAAKqM,UAAYrM,KAAKsM,UAAYtM,KAAKuM,UAAYvM,KAAKwM,WAGjEL,EAAA1M,UAAA6O,SAAA,WACE,IAAMD,EAAOrO,KAAKqO,OAClB,OAAOA,GAAQA,EAAOrO,KAAKyM,UAE/BN,KAGAoB,EA0BE,SAAYV,EAAaE,EAAawB,EAC1BrB,EAAaE,EAAaoB,EAC1BV,EAAaC,EAAaU,EAC1BT,EAAaC,EAAaS,QAHA,IAAAH,IAAAA,EAAA,QACA,IAAAC,IAAAA,EAAA,QACA,IAAAC,IAAAA,EAAA,QACA,IAAAC,IAAAA,EAAA,GACpC1O,KAAK8M,SAAWD,EAChB7M,KAAKgN,SAAWD,EAChB/M,KAAKiN,YAAcsB,EACnBvO,KAAKmN,SAAWD,EAChBlN,KAAKqN,SAAWD,EAChBpN,KAAKsN,YAAckB,EACnBxO,KAAKwN,SAAWM,EAChB9N,KAAKyN,SAAWM,EAChB/N,KAAK0N,YAAce,EACnBzO,KAAK2N,SAAWK,EAChBhO,KAAK4N,SAAWK,EAChBjO,KAAK6N,YAAca,gBClUrB,SAAAC,EAAY5O,GACVC,KAAKoM,SAAW,IAAI1H,MAAM3E,GAC1BC,KAAKqM,UAAY,EACjBrM,KAAKsM,UAAY,EACjBtM,KAAKuM,UAAY,EACjBvM,KAAKwM,UAAY,EACjBxM,KAAKyM,QAAU,EAmKnB,OAhKEkC,EAAAlP,UAAAyO,IAAA,SAAIrO,GACF,GAA6B,IAAzBG,KAAKoM,SAASnM,OAChB,OAAOJ,EAET,IAAMC,EAAQ6B,KAAKgL,IAAI1I,EAAQlB,KAAKlD,IAAUG,KAAKoM,SAASnM,OACtD2M,EAAS5M,KAAKoM,SAAStM,IAAU,IAAI8O,EAErC7B,EAAUH,EAAOI,SACvB,QAAgB,IAAZD,GAAsB9I,EAAQqB,MAAMzF,EAAOkN,GAG7C,OAFA/M,KAAKqM,WAAa,EAClBO,EAAOK,cACAF,EAGT,IAAMK,EAAUR,EAAOS,SACvB,QAAgB,IAAZD,GAAsBnJ,EAAQqB,MAAMzF,EAAOuN,GAS7C,OARApN,KAAKsM,WAAa,EACdM,EAAOU,cAAgBV,EAAOK,cAChCjN,KAAKoM,SAAStM,GAAS,IAAI8O,EACvBhC,EAAOS,SAAUT,EAAOU,YACxBV,EAAOI,SAAUJ,EAAOK,YACxBL,EAAOa,SAAUb,EAAOc,YACxBd,EAAOgB,SAAUhB,EAAOiB,cAEvBT,EAGT,IAAMW,EAAUnB,EAAOa,SACvB,QAAgB,IAAZM,GAAsB9J,EAAQqB,MAAMzF,EAAOkO,GAS7C,OARA/N,KAAKuM,WAAa,EACdK,EAAOc,cAAgBd,EAAOU,cAChCtN,KAAKoM,SAAStM,GAAS,IAAI8O,EACvBhC,EAAOI,SAAUJ,EAAOK,YACxBL,EAAOa,SAAUb,EAAOc,YACxBd,EAAOS,SAAUT,EAAOU,YACxBV,EAAOgB,SAAUhB,EAAOiB,cAEvBE,EAGT,IAAME,EAAUrB,EAAOgB,SACvB,YAAgB,IAAZK,GAAsBhK,EAAQqB,MAAMzF,EAAOoO,IAC7CjO,KAAKwM,WAAa,EACdI,EAAOiB,cAAgBjB,EAAOc,cAChC1N,KAAKoM,SAAStM,GAAS,IAAI8O,EACvBhC,EAAOI,SAAUJ,EAAOK,YACxBL,EAAOS,SAAUT,EAAOU,YACxBV,EAAOgB,SAAUhB,EAAOiB,YACxBjB,EAAOa,SAAUb,EAAOc,cAEvBO,IAGTjO,KAAKyM,SAAW,EAEdzM,KAAKoM,SAAStM,QADA,IAAZiN,EACqB,IAAI6B,EACvBhC,EAAOS,SAAUT,EAAOU,YACxBV,EAAOa,SAAUb,EAAOc,YACxBd,EAAOgB,SAAUhB,EAAOiB,YACxBhO,EAAO,QACU,IAAZuN,EACc,IAAIwB,EACvBhC,EAAOI,SAAUJ,EAAOK,YACxBL,EAAOa,SAAUb,EAAOc,YACxBd,EAAOgB,SAAUhB,EAAOiB,YACxBhO,EAAO,QACU,IAAZkO,EACc,IAAIa,EACvBhC,EAAOI,SAAUJ,EAAOK,YACxBL,EAAOS,SAAUT,EAAOU,YACxBV,EAAOgB,SAAUhB,EAAOiB,YACxBhO,EAAO,QACU,IAAZoO,EACc,IAAIW,EACvBhC,EAAOI,SAAUJ,EAAOK,YACxBL,EAAOS,SAAUT,EAAOU,YACxBV,EAAOa,SAAUb,EAAOc,YACxB7N,EAAO,GAKY,IAAI+O,EACvBhC,EAAOI,SAAUJ,EAAOK,YAAc,EACtCL,EAAOS,SAAUT,EAAOU,YAAc,EACtCV,EAAOgB,SAAUhB,EAAOiB,YACxBhO,EAAO,GAGNA,IAGT8O,EAAAlP,UAAA0O,OAAA,SAAOtO,GACL,GAA6B,IAAzBG,KAAKoM,SAASnM,OAChB,OAAO,EAET,IAAMH,EAAQ6B,KAAKgL,IAAI1I,EAAQlB,KAAKlD,IAAUG,KAAKoM,SAASnM,OACtD2M,EAAS5M,KAAKoM,SAAStM,GAC7B,IAAK8M,EACH,OAAO,EAGT,IAAMG,EAAUH,EAAOI,SACvB,QAAgB,IAAZD,GAAsB9I,EAAQqB,MAAMzF,EAAOkN,GAM7C,OALA/M,KAAKoM,SAAStM,GAAS,IAAI8O,EACvBhC,EAAOS,SAAUT,EAAOU,YACxBV,EAAOa,SAAUb,EAAOc,YACxBd,EAAOgB,SAAUhB,EAAOiB,iBACxB,EAAQ,IACL,EAGT,IAAMT,EAAUR,EAAOS,SACvB,QAAgB,IAAZD,GAAsBnJ,EAAQqB,MAAMzF,EAAOuN,GAM7C,OALApN,KAAKoM,SAAStM,GAAS,IAAI8O,EACvBhC,EAAOI,SAAUJ,EAAOK,YACxBL,EAAOa,SAAUb,EAAOc,YACxBd,EAAOgB,SAAUhB,EAAOiB,iBACxB,EAAQ,IACL,EAGT,IAAME,EAAUnB,EAAOa,SACvB,QAAgB,IAAZM,GAAsB9J,EAAQqB,MAAMzF,EAAOkO,GAM7C,OALA/N,KAAKoM,SAAStM,GAAS,IAAI8O,EACvBhC,EAAOI,SAAUJ,EAAOK,YACxBL,EAAOS,SAAUT,EAAOU,YACxBV,EAAOgB,SAAUhB,EAAOiB,iBACxB,EAAQ,IACL,EAGT,IAAMI,EAAUrB,EAAOgB,SACvB,aAAgB,IAAZK,IAAsBhK,EAAQqB,MAAMzF,EAAOoO,MAC7CjO,KAAKoM,SAAStM,GAAS,IAAI8O,EACvBhC,EAAOI,SAAUJ,EAAOK,YACxBL,EAAOS,SAAUT,EAAOU,YACxBV,EAAOa,SAAUb,EAAOc,iBACxB,EAAQ,IACL,IAMXiB,EAAAlP,UAAA2O,MAAA,WACE,IAAK,IAAI1M,EAAI,EAAGA,EAAI1B,KAAKoM,SAASnM,OAAQyB,GAAK,EAC7C1B,KAAKoM,SAAS1K,QAAK,GAKvBiN,EAAAlP,UAAA4O,KAAA,WACE,OAAOrO,KAAKqM,UAAYrM,KAAKsM,UAAYtM,KAAKuM,UAAYvM,KAAKwM,WAGjEmC,EAAAlP,UAAA6O,SAAA,WACE,IAAMD,EAAOrO,KAAKqO,OAClB,OAAOA,GAAQA,EAAOrO,KAAKyM,UAE/BkC,KAGAC,EAkBE,SAAY7B,EAAawB,EACbnB,EAAaoB,EACbT,EAAaU,EACbR,EAAaS,QAHA,IAAAH,IAAAA,EAAA,QACA,IAAAC,IAAAA,EAAA,QACA,IAAAC,IAAAA,EAAA,QACA,IAAAC,IAAAA,EAAA,GACvB1O,KAAKgN,SAAWD,EAChB/M,KAAKiN,YAAcsB,EACnBvO,KAAKqN,SAAWD,EAChBpN,KAAKsN,YAAckB,EACnBxO,KAAKyN,SAAWM,EAChB/N,KAAK0N,YAAce,EACnBzO,KAAK4N,SAAWK,EAChBjO,KAAK6N,YAAca,4FC9NA,CACrBG,GAAA,SAAaC,GACX,SAAsB,iBAAXA,GAAuBA,GAA4B,mBAAXA,IACG,mBAArCA,EAAyBC,0HAWzB,CACnBF,GAAA,SAAMC,GACJ,QAAsB,iBAAXA,IAAuBA,IACa,mBAA9BA,EAAoBE","file":"/Users/c9r/Swim/Code/swim-platform/swim-system-js/swim-core-js/@swim/util/dist/main/swim-util.min.js","sourcesContent":["// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Endianness of multi-byte datums.\n */\nexport const enum ByteOrder {\n  /**\n   * Most significant byte first.\n   */\n  BigEndian = \"BE\",\n  /**\n   * Least significant byte first.\n   */\n  LittleEndian = \"LE\",\n}\n\nfunction nativeOrder(): ByteOrder {\n  const bom = new ArrayBuffer(2);\n  new Uint16Array(bom)[0] = 0xfeff;\n  const b = new Uint8Array(bom);\n  if (b[0] === 0xfe && b[1] === 0xff) {\n    return ByteOrder.BigEndian;\n  } else if (b[0] === 0xff && b[1] === 0xfe) {\n    return ByteOrder.LittleEndian;\n  } else {\n    throw new Error();\n  }\n}\n\n/**\n * `ByteOrder` of the host machine.\n */\nexport const NativeOrder: ByteOrder = nativeOrder();\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nfunction codePointAt(this: String, index: number): number | undefined {\n  const size = this.length;\n  index = index ? Number(index) : 0; // Coerce to number.\n  if (index !== index) { // Convert NaN to zero.\n    index = 0;\n  }\n  if (index >= 0 && index < size) {\n    const c1 = this.charCodeAt(index);\n    if (c1 <= 0xd7ff || c1 >= 0xe000) { // U+0000..U+D7FF | U+E000..U+FFFF\n      return c1;\n    } else if (c1 <= 0xdbff && index + 1 < size) {\n      const c2 = this.charCodeAt(index + 1);\n      if (c2 >= 0xdc00 && c2 <= 0xdfff) { // U+10000..U+10FFFF\n        return ((c1 & 0x03ff) << 10 + c2 & 0x03ff) + 0x10000;\n      }\n    }\n  }\n  return void 0;\n}\n\nfunction offsetByCodePoints(this: String, index: number, count: number): number {\n  if (count > 0) {\n    const size = this.length;\n    while (count > 0 && index < size) {\n      const c1 = this.charCodeAt(index);\n      if (c1 <= 0xd7ff || c1 >= 0xe000) { // U+0000..U+D7FF | U+E000..U+FFFF\n        index += 1;\n      } else if (c1 <= 0xdbff && index + 1 < size) {\n        const c2 = this.charCodeAt(index + 1);\n        if (c2 >= 0xdc00 && c2 <= 0xdfff) { // U+10000..U+10FFFF\n          index += 2;\n        } else {\n          index += 1;\n        }\n      } else {\n        index += 1;\n      }\n      count -= 1;\n    }\n  } else if (count < 0) {\n    while (count < 0 && index > 0) {\n      const c2 = this.charCodeAt(index - 1);\n      if (c2 <= 0xd7ff || c2 >= 0xe000) { // U+0000..U+D7FF | U+E000..U+FFFF\n        index -= 1;\n      } else if (c2 >= 0xdc00 && c2 <= 0xdfff && index - 1 > 0) {\n        const c1 = this.charCodeAt(index - 2);\n        if (c1 >= 0xd800 && c1 <= 0xdfff) { // U+10000..U+10FFFF\n          index -= 2;\n        } else {\n          index -= 1;\n        }\n      } else {\n        index -= 1;\n      }\n      count -= 1;\n    }\n  }\n  return index;\n}\n\nif (!String.prototype.codePointAt) {\n  Object.defineProperty(String.prototype, \"codePointAt\", {\n    value: codePointAt,\n    configurable: true,\n    writable: true,\n  });\n}\n\nif (!String.prototype.offsetByCodePoints) {\n  Object.defineProperty(String.prototype, \"offsetByCodePoints\", {\n    value: offsetByCodePoints,\n    configurable: true,\n    writable: true,\n  });\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/** @hidden */\nconst crypto = (\n  typeof window !== \"undefined\" &&\n  (window.crypto || (window as any).msCrypto)\n) as RandomSource | undefined;\n\n/** @hidden */\nfunction fillBytesCrypto(typedArray: Int8Array | Uint8Array\n                                   | Int16Array | Uint16Array\n                                   | Int32Array | Uint32Array): void {\n  crypto!.getRandomValues(typedArray);\n}\n\n/** @hidden */\nfunction fillBytesMath(typedArray: Int8Array | Uint8Array\n                                 | Int16Array | Uint16Array\n                                 | Int32Array | Uint32Array): void {\n  if (typedArray instanceof Int8Array) {\n    for (let i = 0; i < typedArray.length; i += 1) {\n      typedArray[i] = 128 - Math.round(Math.random() * 256);\n    }\n  } else if (typedArray instanceof Uint8Array) {\n    for (let i = 0; i < typedArray.length; i += 1) {\n      typedArray[i] = Math.round(Math.random() * 256);\n    }\n  } else if (typedArray instanceof Int16Array) {\n    for (let i = 0; i < typedArray.length; i += 1) {\n      typedArray[i] = 32768 - Math.round(Math.random() * 65536);\n    }\n  } else if (typedArray instanceof Uint16Array) {\n    for (let i = 0; i < typedArray.length; i += 1) {\n      typedArray[i] = Math.round(Math.random() * 65536);\n    }\n  } else if (typedArray instanceof Int32Array) {\n    for (let i = 0; i < typedArray.length; i += 1) {\n      typedArray[i] = 2147483648 - Math.round(Math.random() * 4294967296);\n    }\n  } else if (typedArray instanceof Uint32Array) {\n    for (let i = 0; i < typedArray.length; i += 1) {\n      typedArray[i] = Math.round(Math.random() * 4294967296);\n    }\n  } else {\n    throw new TypeError(\"\" + typedArray);\n  }\n}\n\n/** @hidden */\nexport class Random {\n  private constructor() {\n  }\n\n  static fillBytes = crypto ? fillBytesCrypto : fillBytesMath;\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {ByteOrder, NativeOrder} from \"./ByteOrder\";\n\nconst hashArrayBuffer = new ArrayBuffer(8);\nconst hashFloat64Array = new Float64Array(hashArrayBuffer);\nconst hashInt32Array = new Int32Array(hashArrayBuffer);\n\n/**\n * Left-rotates the bits in a 32-bit `value` by `distance` bits.\n */\nfunction rotl(value: number, distance: number): number {\n  return (value << distance) | (value >>> (32 - distance));\n}\n\n/**\n * 32-bit [MurmurHash](https://en.wikipedia.org/wiki/MurmurHash) algorithm,\n * version 3.\n */\nexport class Murmur3 {\n  private constructor() {\n  }\n\n  /**\n   * Returns the hash code of the name of a prototype object `value`, or for a\n   * primitive value.\n   */\n  static seed(value: object | string | number | boolean | null | undefined) {\n    if (typeof value === \"object\" && value) {\n      if (value.constructor && typeof (value.constructor as any).name === \"string\") {\n        value = (value.constructor as any).name as string;\n      } else {\n        value = value.toString();\n      }\n    }\n    return Murmur3.hash(value as any);\n  }\n\n  /**\n   * Returns the hash code of a primitive `value`.\n   */\n  static hash(value: Uint8Array | string | number | boolean | null | undefined): number {\n    if (value instanceof Uint8Array || typeof value === \"string\") {\n      return Murmur3.mash(Murmur3.mix(0, value));\n    } else if (typeof value === \"number\") {\n      if (~~value === value) {\n        return ~~value;\n      }\n      hashFloat64Array[0] = value;\n      return hashInt32Array[0] ^ hashInt32Array[1];\n    } else if (typeof value === \"boolean\") {\n      return value ? 3 : 2;\n    } else if (value === null) {\n      return 1;\n    } else if (value === undefined) {\n      return 0;\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n\n  /** @hidden */\n  static mixUint8ArrayBE(code: number, array: Uint8Array): number {\n    let offset = 0;\n    const limit = array.length;\n    while (offset + 3 < limit) {\n      const word = (array[offset    ] & 0xff) << 24 | (array[offset + 1] & 0xff) << 16\n                 | (array[offset + 2] & 0xff) <<  8 |  array[offset + 3] & 0xff;\n      code = Murmur3.mix(code, word);\n      offset += 4;\n    }\n    if (offset < limit) {\n      let word = (array[offset] & 0xff) << 24;\n      if (offset + 1 < limit) {\n        word |= (array[offset + 1] & 0xff) << 16;\n        if (offset + 2 < limit) {\n          word |= (array[offset + 2] & 0xff) << 8;\n          //assert offset + 3 === limit;\n        }\n      }\n      word = ((word & 0xffff) * 0xcc9e2d51) + (((word >>> 16) * 0xcc9e2d51 & 0xffff) << 16) & 0xffffffff;\n      word = rotl(word, 15);\n      word = ((word & 0xffff) * 0x1b873593) + (((word >>> 16) * 0x1b873593 & 0xffff) << 16) & 0xffffffff;\n      code ^= word;\n    }\n    return code ^ limit;\n  }\n  /** @hidden */\n  static mixUInt8ArrayLE(code: number, array: Uint8Array): number {\n    let offset = 0;\n    const limit = array.length;\n    while (offset + 3 < limit) {\n      const word =  array[offset    ] & 0xff        | (array[offset + 1] & 0xff) <<  8\n                 | (array[offset + 2] & 0xff) << 16 | (array[offset + 3] & 0xff) << 24;\n      code = Murmur3.mix(code, word);\n      offset += 4;\n    }\n    if (offset < limit) {\n      let word = array[offset] & 0xff;\n      if (offset + 1 < limit) {\n        word |= (array[offset + 1] & 0xff) << 8;\n        if (offset + 2 < limit) {\n          word |= (array[offset + 2] & 0xff) << 16;\n          //assert offset + 3 === limit;\n        }\n      }\n      word = ((word & 0xffff) * 0xcc9e2d51) + (((word >>> 16) * 0xcc9e2d51 & 0xffff) << 16) & 0xffffffff;\n      word = rotl(word, 15);\n      word = ((word & 0xffff) * 0x1b873593) + (((word >>> 16) * 0x1b873593 & 0xffff) << 16) & 0xffffffff;\n      code ^= word;\n    }\n    return code ^ limit;\n  }\n\n  /** @hidden */\n  static mixStringBE(code: number, string: string): number {\n    let word = 0;\n    let k = 32;\n    let i = 0;\n    const n = string.length;\n    let utf8Length = 0;\n    while (i < n) {\n      let c = string.codePointAt(i);\n      if (c === void 0) {\n        c = string.charCodeAt(i);\n      }\n      if (c >= 0 && c <= 0x7f) { // U+0000..U+007F\n        k -= 8;\n        word |= c << k;\n        if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n        utf8Length += 1;\n      } else if (c >= 0x80 && c <= 0x7ff) { // U+0080..U+07FF\n        k -= 8;\n        word |= (0xc0 | (c >>> 6)) << k;\n        if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n        k -= 8;\n        word |= (0x80 | (c & 0x3f)) << k;\n        if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n        utf8Length += 2;\n      } else if (c >= 0x0800 && c <= 0xffff || // U+0800..U+D7FF\n                 c >= 0xe000 && c <= 0xffff) { // U+E000..U+FFFF\n        k -= 8;\n        word |= (0xe0 | (c  >>> 12)) << k;\n        if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n        k -= 8;\n        word |= (0x80 | ((c >>>  6) & 0x3f)) << k;\n        if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n        k -= 8;\n        word |= (0x80 | (c & 0x3f)) << k;\n        if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n        utf8Length += 3;\n      } else if (c >= 0x10000 && c <= 0x10ffff) { // U+10000..U+10FFFF\n        k -= 8;\n        word |= (0xf0 | (c  >>> 18)) << k;\n        if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n        k -= 8;\n        word |= (0x80 | ((c >>> 12) & 0x3f)) << k;\n        if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n        k -= 8;\n        word |= (0x80 | ((c >>>  6) & 0x3f)) << k;\n        if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n        k -= 8;\n        word |= (0x80 | (c & 0x3f)) << k;\n        if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n        utf8Length += 4;\n      } else { // surrogate or invalid code point\n        k -= 8;\n        word |= 0xef << k;\n        if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n        k -= 8;\n        word |= 0xbf << k;\n        if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n        k -= 8;\n        word |= 0xbd << k;\n        if (k === 0) { code = Murmur3.mix(code, word); word = 0; k = 32; }\n        utf8Length += 3;\n      }\n      i = string.offsetByCodePoints(i, 1);\n    }\n    if (k !== 32) {\n      word = ((word & 0xffff) * 0xcc9e2d51) + (((word >>> 16) * 0xcc9e2d51 & 0xffff) << 16) & 0xffffffff;\n      word = rotl(word, 15);\n      word = ((word & 0xffff) * 0x1b873593) + (((word >>> 16) * 0x1b873593 & 0xffff) << 16) & 0xffffffff;\n      code ^= word;\n    }\n    return code ^ utf8Length;\n  }\n  /** @hidden */\n  static mixStringLE(code: number, string: string): number {\n    let word = 0;\n    let k = 0;\n    let i = 0;\n    const n = string.length;\n    let utf8Length = 0;\n    while (i < n) {\n      let c = string.codePointAt(i);\n      if (c === void 0) {\n        c = string.charCodeAt(i);\n      }\n      if (c >= 0 && c <= 0x7f) { // U+0000..U+007F\n        word |= c << k;\n        k += 8;\n        if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n        utf8Length += 1;\n      } else if (c >= 0x80 && c <= 0x7ff) { // U+0080..U+07FF\n        word |= (0xc0 | (c >>> 6)) << k;\n        k += 8;\n        if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n        word |= (0x80 | (c & 0x3f)) << k;\n        k += 8;\n        if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n        utf8Length += 2;\n      } else if (c >= 0x0800 && c <= 0xffff || // U+0800..U+D7FF\n                 c >= 0xe000 && c <= 0xffff) { // U+E000..U+FFFF\n        word |= (0xe0 | (c  >>> 12)) << k;\n        k += 8;\n        if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n        word |= (0x80 | ((c >>>  6) & 0x3f)) << k;\n        k += 8;\n        if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n        word |= (0x80 | (c & 0x3f)) << k;\n        k += 8;\n        if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n        utf8Length += 3;\n      } else if (c >= 0x10000 && c <= 0x10ffff) { // U+10000..U+10FFFF\n        word |= (0xf0 | (c  >>> 18)) << k;\n        k += 8;\n        if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n        word |= (0x80 | ((c >>> 12) & 0x3f)) << k;\n        k += 8;\n        if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n        word |= (0x80 | ((c >>>  6) & 0x3f)) << k;\n        k += 8;\n        if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n        word |= (0x80 | (c & 0x3f)) << k;\n        k += 8;\n        if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n        utf8Length += 4;\n      } else { // surrogate or invalid code point\n        word |= 0xef << k;\n        k += 8;\n        if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n        word |= 0xbf << k;\n        k += 8;\n        if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n        word |= 0xbd << k;\n        k += 8;\n        if (k === 32) { code = Murmur3.mix(code, word); word = 0; k = 0; }\n        utf8Length += 3;\n      }\n      i = string.offsetByCodePoints(i, 1);\n    }\n    if (k !== 32) {\n      word = ((word & 0xffff) * 0xcc9e2d51) + (((word >>> 16) * 0xcc9e2d51 & 0xffff) << 16) & 0xffffffff;\n      word = rotl(word, 15);\n      word = ((word & 0xffff) * 0x1b873593) + (((word >>> 16) * 0x1b873593 & 0xffff) << 16) & 0xffffffff;\n      code ^= word;\n    }\n    return code ^ utf8Length;\n  }\n\n  /**\n   * Mixes a new hash `value` into the accumulated hash `code`.  If {@code\n   * value} is an array; mixes each consecutive 4-byte word in the into the\n   * accumulated hash `code`.  If {@code value} is a string, mixes each\n   * consecutive 4-byte word in its UTF-8 encoding into the accumulated hash\n   * {@code code}.\n   */\n  static mix(code: number, value: number | string | Uint8Array): number {\n    if (typeof value === \"number\") {\n      value = ((value & 0xffff) * 0xcc9e2d51) + (((value >>> 16) * 0xcc9e2d51 & 0xffff) << 16) & 0xffffffff;\n      value = rotl(value, 15);\n      value = ((value & 0xffff) * 0x1b873593) + (((value >>> 16) * 0x1b873593 & 0xffff) << 16) & 0xffffffff;\n      code ^= value;\n      code = rotl(code, 13);\n      code = ((code & 0xffff) * 5) + (((code >>> 16) * 5 & 0xffff) << 16) & 0xffffffff;\n      code = ((code & 0xffff) + 0x6b64) + (((code >>> 16) + 0xe654 & 0xffff) << 16);\n      return code;\n    } else if (typeof value === \"string\") {\n      if (NativeOrder === ByteOrder.BigEndian) {\n        return Murmur3.mixStringBE(code, value);\n      } else if (NativeOrder === ByteOrder.LittleEndian) {\n        return Murmur3.mixStringLE(code, value);\n      }\n    } else if (value instanceof Uint8Array) {\n      if (NativeOrder === ByteOrder.BigEndian) {\n        return Murmur3.mixUint8ArrayBE(code, value);\n      } else if (NativeOrder === ByteOrder.LittleEndian) {\n        return Murmur3.mixUInt8ArrayLE(code, value);\n      }\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  /**\n   * Finalizes a hash `code`.\n   */\n  static mash(code: number): number {\n    code ^= code >>> 16;\n    code = ((code & 0xffff) * 0x85ebca6b) + (((code >>> 16) * 0x85ebca6b & 0xffff) << 16) & 0xffffffff;\n    code ^= code >>> 13;\n    code = ((code & 0xffff) * 0xc2b2ae35) + (((code >>> 16) * 0xc2b2ae35 & 0xffff) << 16) & 0xffffffff;\n    code ^= code >>> 16;\n    return code >>> 0;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Comparable} from \"./Comparable\";\nimport {Equals} from \"./Equals\";\nimport {HashCode} from \"./HashCode\";\nimport {Murmur3} from \"./Murmur3\";\n\n/**\n * Utilities for comparing, equating, and hashing structural values.\n * A structural value is typed by object structure, rather than by name.\n */\nexport class Objects {\n  private constructor() {\n  }\n\n  /**\n   * Returns the relative order of two structural values.  Returns `-1` if `x`\n   * orders before `y`; returns `1` if `x` orders after `y`; returns `0` if `x`\n   * and `y` are equivalent; and returns `NaN` if `x` is not comparable to `y`.\n   */\n  static compare(x: unknown, y: unknown): 0 | 1 | -1 {\n    if (x instanceof Date) {\n      x = x.getTime();\n    }\n    if (y instanceof Date) {\n      y = y.getTime();\n    }\n\n    if (x === void 0) {\n      if (y === void 0) {\n        return 0;\n      } else {\n        return 1;\n      }\n    } else if (x === null) {\n      if (y === void 0) {\n        return -1;\n      } else if (y === null) {\n        return 0;\n      } else {\n        return 1;\n      }\n    } else if (typeof x === \"number\") {\n      if (y === void 0 || y === null) {\n        return -1;\n      } else if (typeof y === \"number\") {\n        return x < y ? -1 : x > y ? 1 : isNaN(y) ? (isNaN(x) ? 0 : -1) : isNaN(x) ? 1 : 0;\n      } else {\n        return 1;\n      }\n    } else if (typeof x === \"string\") {\n      if (y === void 0 || y === null || typeof y === \"number\") {\n        return -1;\n      } else if (typeof y === \"string\") {\n        return x < y ? -1 : x > y ? 1 : 0;\n      } else {\n        return 1;\n      }\n    } else if (typeof x === \"object\" && typeof (x as any).compareTo === \"function\") {\n      const order = (x as Comparable<any>).compareTo(y);\n      return order < 0 ? -1 : order > 0 ? 1 : 0;\n    } else if (Array.isArray(x)) {\n      if (y === void 0 || y === null || typeof y === \"number\" || typeof y === \"string\") {\n        return -1;\n      } else if (Array.isArray(y)) {\n        return Objects.compareArray(x, y);\n      } else {\n        return 1;\n      }\n    } else {\n      if (y === void 0 || y === null || typeof y === \"number\" || typeof y === \"string\" || Array.isArray(y)) {\n        return -1;\n      } else {\n        return Objects.compareObject(x as any, y as any);\n      }\n    }\n  }\n\n  /**\n   * Returns the relative order of two arrays of structural values.  Returns\n   * `-1` if `x` orders before `y`; returns `1` if `x` orders after `y`;\n   * returns `0` if `x` and `y` are equivalent; and returns `NaN` if `x` is not\n   * comparable to `y`.\n   */\n  static compareArray(x: ReadonlyArray<any>, y: ReadonlyArray<any>): 0 | 1 | -1 {\n    const p = x.length as number;\n    const q = y.length as number;\n    let order = 0 as 0 | 1 | -1;\n    for (let i = 0, n = Math.min(p, q); i < n && order === 0; i += 1) {\n      order = Objects.compare(x[i], y[i]);\n    }\n    return order !== 0 ? order : p > q ? 1 : p < q ? -1 : 0;\n  }\n\n  /**\n   * Returns the relative order of two structural objects.  Returns `-1` if `x`\n   * orders before `y`; returns `1` if `x` orders after `y`; returns `0` if `x`\n   * and `y` are equivalent; and returns `NaN` if `x` is not comparable to `y`.\n   */\n  static compareObject(x: Object, y: Object): 0 | 1 | -1 {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    const p = xKeys.length;\n    const q = yKeys.length;\n    const n = Math.min(p, q);\n    let order = 0 as 0 | 1 | -1;\n    for (let i = 0; i < n && order === 0; i += 1) {\n      const xKey = xKeys[i];\n      const yKey = yKeys[i];\n      order = Objects.compare(xKey, yKey);\n      if (order === 0) {\n        order = Objects.compare((x as any)[xKey], (y as any)[yKey]);\n      }\n    }\n    return order !== 0 ? order : p > q ? 1 : p < q ? -1 : 0;\n  }\n\n  /**\n   * Compares two structural values for equality.  Returns `true` if `x` and\n   * `y` are structurally equal, otherwise returns `false`.\n   */\n  static equal(x: unknown, y: unknown): boolean {\n    if (x instanceof Date) {\n      x = x.getTime();\n    }\n    if (y instanceof Date) {\n      y = y.getTime();\n    }\n\n    if (x === y) {\n      return true;\n    } else if (typeof x === \"number\") {\n      if (typeof y === \"number\") {\n        return isNaN(x) && isNaN(y);\n      }\n    } else if (typeof x === \"object\" && x && typeof (x as any).equals === \"function\") {\n      return (x as Equals).equals(y);\n    } else if (Array.isArray(x)) {\n      if (Array.isArray(y)) {\n        return Objects.equalArray(x, y);\n      }\n    } else if (typeof x === \"object\" && x) {\n      if (typeof y === \"object\" && y) {\n        return Objects.equalObject(x, y);\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Compares two arrays of structural values for equality.  Returns `true` if\n   * `x` and `y` are structurally equal, otherwise returns `false`.\n   */\n  static equalArray(x: ReadonlyArray<any>, y: ReadonlyArray<any>): boolean {\n    const n = x.length;\n    if (n !== y.length) {\n      return false;\n    }\n    for (let i = 0; i < n; i += 1) {\n      if (!Objects.equal(x[i], y[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Compares two structural objects for equality.  Returns `true` if `x` and\n   * `y` are structurally equal, otherwise returns `false`.\n   */\n  static equalObject(x: Object, y: Object): boolean {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    const n = xKeys.length;\n    if (n !== yKeys.length) {\n      return false;\n    }\n    for (let i = 0; i < n; i += 1) {\n      const key = xKeys[i];\n      if (key !== yKeys[i] || !Objects.equal((x as any)[key], (y as any)[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Returns a hash code for a structural value.\n   */\n  static hash(x: unknown): number {\n    if (x === void 0 || x === null || typeof x === \"boolean\"\n        || typeof x === \"number\" || typeof x === \"string\") {\n      return Murmur3.hash(x as any);\n    } else if (typeof x === \"object\" && typeof (x as any).hashCode === \"function\") {\n      return (x as HashCode).hashCode();\n    } else if (Array.isArray(x)) {\n      return Objects.hashArray(x);\n    } else if (typeof x === \"object\") {\n      return Objects.hashObject(x as any);\n    } else {\n      throw new TypeError(\"\" + x);\n    }\n  }\n\n  /**\n   * Returns a hash code for an array of structural values.\n   */\n  static hashArray(x: ReadonlyArray<any>): number {\n    let h = 0;\n    const n = x.length;\n    for (let i = 0; i < n; i += 1) {\n      h = Murmur3.mix(h, Objects.hash(x[i]));\n    }\n    return Murmur3.mash(h);\n  }\n\n  /**\n   * Returns a hash code for a structural object.\n   */\n  static hashObject(x: Object): number {\n    let h = 0;\n    const keys = Object.keys(x);\n    const n = keys.length;\n    for (let i = 0; i < n; i += 1) {\n      const key = keys[i];\n      h = Murmur3.mix(Murmur3.mix(h, Murmur3.hash(key)), (x as any)[key]);\n    }\n    return Murmur3.mash(h);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Iterator} from \"./Iterator\";\nimport {CursorEmpty} from \"./CursorEmpty\";\nimport {CursorUnary} from \"./CursorUnary\";\nimport {CursorArray} from \"./CursorArray\";\n\nexport abstract class Cursor<T> implements Iterator<T> {\n  abstract isEmpty(): boolean;\n\n  abstract head(): T;\n\n  abstract step(): void;\n\n  abstract skip(count: number): void;\n\n  abstract hasNext(): boolean;\n\n  abstract nextIndex(): number;\n\n  abstract next(): {value?: T, done: boolean};\n\n  abstract hasPrevious(): boolean;\n\n  abstract previousIndex(): number;\n\n  abstract previous(): {value?: T, done: boolean};\n\n  set(newValue: T): void {\n    throw new Error(\"immutable\");\n  }\n\n  delete(): void {\n    throw new Error(\"immutable\");\n  }\n\n  private static _empty?: Cursor<any>;\n  static empty<T>(): Cursor<T> {\n    if (!Cursor._empty) {\n      Cursor._empty = new Cursor.Empty();\n    }\n    return Cursor._empty;\n  }\n\n  static unary<T>(value: T): Cursor<T> {\n    return new Cursor.Unary<T>(value);\n  }\n\n  static array<T>(array: ReadonlyArray<T>, index: number = 0, limit: number = array.length): Cursor<T> {\n    return new Cursor.Array<T>(array, index, limit);\n  }\n\n  // Forward type declarations\n  /** @hidden */\n  static Empty: typeof CursorEmpty; // defined by CursorEmpty\n  /** @hidden */\n  static Unary: typeof CursorUnary; // defined by CursorUnary\n  /** @hidden */\n  static Array: typeof CursorArray; // defined by CursorArray\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"./Cursor\";\n\n/** @hidden */\nexport class CursorEmpty extends Cursor<any> {\n  isEmpty(): boolean {\n    return true;\n  }\n\n  head(): any {\n    throw new Error(\"empty\");\n  }\n\n  step(): void {\n    throw new Error(\"empty\");\n  }\n\n  skip(count: number): void {\n    // nop\n  }\n\n  hasNext(): boolean {\n    return false;\n  }\n\n  nextIndex(): number {\n    return 0;\n  }\n\n  next(): {value?: any, done: boolean} {\n    return {done: true};\n  }\n\n  hasPrevious(): boolean {\n    return false;\n  }\n\n  previousIndex(): number {\n    return -1;\n  }\n\n  previous(): {value?: any, done: boolean} {\n    return {done: true};\n  }\n}\nCursor.Empty = CursorEmpty;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"./Cursor\";\n\n/** @hidden */\nexport class CursorUnary<T> extends Cursor<T> {\n  private readonly _value: T;\n  private _index: number;\n\n  constructor(value: T) {\n    super();\n    this._value = value;\n    this._index = 0;\n  }\n\n  isEmpty(): boolean {\n    return this._index !== 0;\n  }\n\n  head(): T {\n    if (this._index === 0) {\n      return this._value;\n    } else {\n      throw new Error(\"empty\");\n    }\n  }\n\n  step(): void {\n    if (this._index === 0) {\n      this._index = 1;\n    } else {\n      throw new Error(\"empty\");\n    }\n  }\n\n  skip(count: number): void {\n    this._index = Math.min(Math.max(0, this._index + count), 1);\n  }\n\n  hasNext(): boolean {\n    return this._index === 0;\n  }\n\n  nextIndex(): number {\n    return this._index;\n  }\n\n  next(): {value?: T, done: boolean} {\n    if (this._index === 0) {\n      this._index = 1;\n      return {value: this._value, done: true};\n    } else {\n      return {done: true};\n    }\n  }\n\n  hasPrevious(): boolean {\n    return this._index === 1;\n  }\n\n  previousIndex(): number {\n    return this._index - 1;\n  }\n\n  previous(): {value?: T, done: boolean} {\n    if (this._index === 1) {\n      this._index = 0;\n      return {value: this._value, done: true};\n    } else {\n      return {done: true};\n    }\n  }\n}\nCursor.Unary = CursorUnary;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"./Cursor\";\n\n/** @hidden */\nexport class CursorArray<T> extends Cursor<T> {\n  private readonly _array: ReadonlyArray<T>;\n  private _index: number;\n  private _limit: number;\n\n  constructor(array: ReadonlyArray<T>, index: number, limit: number) {\n    super();\n    this._array = array;\n    this._index = index;\n    this._limit = limit;\n  }\n\n  isEmpty(): boolean {\n    return this._index >= this._limit;\n  }\n\n  head(): T {\n    if (this._index < this._limit) {\n      return this._array[this._index];\n    } else {\n      throw new Error(\"empty\");\n    }\n  }\n\n  step(): void {\n    if (this._index < this._limit) {\n      this._index = 1;\n    } else {\n      throw new Error(\"empty\");\n    }\n  }\n\n  skip(count: number): void {\n    this._index = Math.min(this._index + count, this._limit);\n  }\n\n  hasNext(): boolean {\n    return this._index < this._limit;\n  }\n\n  nextIndex(): number {\n    return this._index;\n  }\n\n  next(): {value?: T, done: boolean} {\n    const index = this._index;\n    if (index < this._limit) {\n      this._index = index + 1;\n      return {value: this._array[index], done: this._index === this._limit};\n    } else {\n      this._index = this._limit;\n      return {done: true};\n    }\n  }\n\n  hasPrevious(): boolean {\n    return this._index > 0;\n  }\n\n  previousIndex(): number {\n    return this._index - 1;\n  }\n\n  previous(): {value?: T, done: boolean} {\n    const index = this._index - 1;\n    if (index >= 0) {\n      this._index = index;\n      return {value: this._array[index], done: index === 0};\n    } else {\n      this._index = 0;\n      return {done: true};\n    }\n  }\n}\nCursor.Array = CursorArray;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Exception thrown when an [[Assert]] fails.\n */\nexport class AssertException extends Error {\n  constructor(message?: string) {\n    super(message);\n    (this as any).__proto__ = AssertException.prototype;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Objects} from \"./Objects\";\nimport {AssertException} from \"./AssertException\";\n\n/**\n * Type that implements common assertion functions.\n */\nexport interface Assert {\n  /**\n   * Asserts that `condition` is truthy.\n   *\n   * @throws [[AssertException]] with `message` if `condition` is falsy.\n   */\n  ok(condition: unknown, message?: string): void;\n\n  /**\n   * Asserts that `condition` is falsy.\n   *\n   * @throws [[AssertException]] with `message` if `condition` is truthy.\n   */\n  notOk(condition: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` is [[Objects.equal structurally equal]] to `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` is not structurally equal to `rhs`.\n   */\n  equal(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` is not [[Objects.equal structurally equal]] to `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` is structurally equal to `rhs`.\n   */\n  notEqual(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` is identical (`===`) to `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` is not identical (`!==`) to `rhs`.\n   */\n  identity(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` is not identical (`!==`) to `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` is identical (`===`) to `rhs`.\n   */\n  notIdentity(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` [[Objects.compare structurally orders before]] `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` does not structurally order before `rhs`.\n   */\n  compareLessThan(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` does not [[Objects.compare structurally order before]] `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` does structurally order before `rhs`.\n   */\n  compareNotLessThan(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` [[Objects.compare structurally orders before or the same as]] `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` does not structurally order before or the same as `rhs`.\n   */\n  compareLessThanOrEqual(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` does not [[Objects.compare structurally order before or the same as]] `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` does structurally order before or the same as `rhs`.\n   */\n  compareNotLessThanOrEqual(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` [[Objects.compare structurally orders the same as]] `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` does not structurally order before or the same as `rhs`.\n   */\n  compareEqual(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` does not [[Objects.compare structurally order the same as]] `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` does structurally order before or the same as `rhs`.\n   */\n  compareNotEqual(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` [[Objects.compare structurally orders after or the same as]] `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` does not structurally order after or the same as `rhs`.\n   */\n  compareGreaterThanOrEqual(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` does not [[Objects.compare structurally order after or the same as]] `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` does structurally order after or the same as `rhs`.\n   */\n  compareNotGreaterThanOrEqual(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` [[Objects.compare structurally orders after]] `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` does not structurally order after `rhs`.\n   */\n  compareGreaterThan(lhs: unknown, rhs: unknown, message?: string): void;\n\n  /**\n   * Asserts that `lhs` does not [[Objects.compare structurally order after]] `rhs`.\n   *\n   * @throws [[AssertException]] with `message` if `lhs` does structurally order after `rhs`.\n   */\n  compareNotGreaterThan(lhs: unknown, rhs: unknown, message?: string): void;\n}\n\n/**\n * General `Assert` implementation.  When called as a function, asserts that\n * `condition` is truthy.\n *\n * @throws [[AssertException]] with `message` if `condition` is falsy.\n */\nexport const assert = function (condition: unknown, message?: string): void {\n  if (!condition) {\n    throw new AssertException(message);\n  }\n} as Assert & ((condition: unknown, message?: string) => void);\n\nassert.ok = function (condition: unknown, message?: string): void {\n  if (!condition) {\n    throw new AssertException(message);\n  }\n};\n\nassert.notOk = function (condition: unknown, message?: string): void {\n  if (condition) {\n    throw new AssertException(message);\n  }\n};\n\nassert.equal = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (!Objects.equal(lhs, rhs)) {\n    throw new AssertException(message);\n  }\n};\n\nassert.notEqual = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (Objects.equal(lhs, rhs)) {\n    throw new AssertException(message);\n  }\n};\n\nassert.identity = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (lhs !== rhs) {\n    throw new AssertException(message);\n  }\n};\n\nassert.notIdentity = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (lhs === rhs) {\n    throw new AssertException(message);\n  }\n};\n\nassert.compareLessThan = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (!(Objects.compare(lhs, rhs) < 0)) {\n    throw new AssertException(message);\n  }\n};\n\nassert.compareNotLessThan = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (Objects.compare(lhs, rhs) < 0) {\n    throw new AssertException(message);\n  }\n};\n\nassert.compareLessThanOrEqual = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (!(Objects.compare(lhs, rhs) <= 0)) {\n    throw new AssertException(message);\n  }\n};\n\nassert.compareNotLessThanOrEqual = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (Objects.compare(lhs, rhs) <= 0) {\n    throw new AssertException(message);\n  }\n};\n\nassert.compareEqual = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (!(Objects.compare(lhs, rhs) === 0)) {\n    throw new AssertException(message);\n  }\n};\n\nassert.compareNotEqual = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (Objects.compare(lhs, rhs) === 0) {\n    throw new AssertException(message);\n  }\n};\n\nassert.compareGreaterThanOrEqual = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (!(Objects.compare(lhs, rhs) >= 0)) {\n    throw new AssertException(message);\n  }\n};\n\nassert.compareNotGreaterThanOrEqual = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (Objects.compare(lhs, rhs) >= 0) {\n    throw new AssertException(message);\n  }\n};\n\nassert.compareGreaterThan = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (!(Objects.compare(lhs, rhs) > 0)) {\n    throw new AssertException(message);\n  }\n};\n\nassert.compareNotGreaterThan = function (lhs: unknown, rhs: unknown, message?: string): void {\n  if (Objects.compare(lhs, rhs) > 0) {\n    throw new AssertException(message);\n  }\n};\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Comparable} from \"./Comparable\";\nimport {HashCode} from \"./HashCode\";\nimport {Murmur3} from \"./Murmur3\";\n\n/**\n * Level of importance.  Used for log levels and diagnostic classifications.\n */\nexport class Severity implements Comparable<Severity>, HashCode {\n  /** @hidden */\n  readonly _level: number;\n  /** @hidden */\n  readonly _label: string;\n\n  private constructor(level: number, label: string) {\n    this._level = level;\n    this._label = label;\n  }\n\n  /**\n   * Returns the integer level of importance of this `Severity`, with higher\n   * levels signifying greater importance.\n   *\n   * @return an integer between `0` and `7`, inclusive.  One of `TRACE_LEVEL`,\n   *         `DEBUG_LEVEL`, `INFO_LEVEL`, `NOTE_LEVEL`, `WARNING_LEVEL`,\n   *         `ERROR_LEVEL`, `ALERT_LEVEL`, `FATAL_LEVEL`.\n   */\n  level(): number {\n    return this._level;\n  }\n\n  /**\n   * Returns a descriptive label for this `Severity`.\n   */\n  label(): string;\n\n  /**\n   * Returns a new `Severity` with the same level as this `Severity`, but with\n   * a new descriptive `label`.\n   */\n  label(label: string): Severity;\n\n  label(label?: string): string | Severity {\n    if (label === void 0) {\n      return this._label;\n    } else {\n      return Severity.create(this._level, label);\n    }\n  }\n\n  /**\n   * Returns `true` if this `Severity` has `TRACE_LEVEL` of importance.\n   */\n  isTrace(): boolean {\n    return this._level === Severity.TRACE_LEVEL;\n  }\n\n  /**\n   * Returns `true` if this `Severity` has `DEBUG_LEVEL` of importance.\n   */\n  isDebug(): boolean {\n    return this._level === Severity.DEBUG_LEVEL;\n  }\n\n  /**\n   * Returns `true` if this `Severity` has `INFO_LEVEL` of importance.\n   */\n  isInfo(): boolean {\n    return this._level === Severity.INFO_LEVEL;\n  }\n\n  /**\n   * Returns `true` if this `Severity` has `NOTE_LEVEL` of importance.\n   */\n  isNote(): boolean {\n    return this._level === Severity.NOTE_LEVEL;\n  }\n\n  /**\n   * Returns `true` if this `Severity` has `WARNING_LEVEL` of importance.\n   */\n  isWarning(): boolean {\n    return this._level === Severity.WARNING_LEVEL;\n  }\n\n  /**\n   * Returns `true` if this `Severity` has `ERROR_LEVEL` of importance.\n   */\n  isError(): boolean {\n    return this._level === Severity.ERROR_LEVEL;\n  }\n\n  /**\n   * Returns `true` if this `Severity` has `ALERT_LEVEL` of importance.\n   */\n  isAlert(): boolean {\n    return this._level === Severity.ALERT_LEVEL;\n  }\n\n  /**\n   * Returns `true` if this `Severity` has `FATAL_LEVEL` of importance.\n   */\n  isFatal(): boolean {\n    return this._level === Severity.FATAL_LEVEL;\n  }\n\n  compareTo(that: Severity): number {\n    if (this === that) {\n      return 0;\n    } else if (this._level < that._level) {\n      return -1;\n    } else if (this._level > that._level) {\n      return 1;\n    } else {\n      return this._label.localeCompare(that._label);\n    }\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Severity) {\n      return this._level === that._level && this._label === that._label;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (Severity._hashSeed === void 0) {\n      Severity._hashSeed = Murmur3.seed(Severity);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Severity._hashSeed,\n        this._level), Murmur3.hash(this._label)));\n  }\n\n  toString(): string {\n    return this._label;\n  }\n\n  static readonly TRACE_LEVEL: number = 0;\n  static readonly DEBUG_LEVEL: number = 1;\n  static readonly INFO_LEVEL: number = 2;\n  static readonly NOTE_LEVEL: number = 3;\n  static readonly WARNING_LEVEL: number = 4;\n  static readonly ERROR_LEVEL: number = 5;\n  static readonly ALERT_LEVEL: number = 6;\n  static readonly FATAL_LEVEL: number = 7;\n\n  private static _hashSeed?: number;\n  private static _trace?: Severity;\n  private static _debug?: Severity;\n  private static _info?: Severity;\n  private static _note?: Severity;\n  private static _warning?: Severity;\n  private static _error?: Severity;\n  private static _alert?: Severity;\n  private static _fatal?: Severity;\n\n  /**\n   * Returns a `Severity` with the given importance `level`, and optional\n   * descriptive `label`.\n   *\n   * @throws `Error` if `level` is not a valid level of importance.\n   */\n  static create(level: number, label?: string): Severity {\n    switch (level) {\n      case Severity.TRACE_LEVEL: return Severity.trace(label);\n      case Severity.DEBUG_LEVEL: return Severity.debug(label);\n      case Severity.INFO_LEVEL: return Severity.info(label);\n      case Severity.NOTE_LEVEL: return Severity.note(label);\n      case Severity.WARNING_LEVEL: return Severity.warning(label);\n      case Severity.ERROR_LEVEL: return Severity.error(label);\n      case Severity.ALERT_LEVEL: return Severity.alert(label);\n      case Severity.FATAL_LEVEL: return Severity.fatal(label);\n      default: throw new Error(\"\" + level);\n    }\n  }\n\n  /**\n   * Returns a `Severity` with `TRACE_LEVEL` of importance, and an optional\n   * descriptive `label`.\n   */\n  static trace(label: string = \"trace\"): Severity {\n    if (label === \"trace\") {\n      if (!Severity._trace) {\n        Severity._trace = new Severity(Severity.TRACE_LEVEL, label);\n      }\n      return Severity._trace;\n    } else {\n      return new Severity(Severity.TRACE_LEVEL, label);\n    }\n  }\n\n  /**\n   * Returns a `Severity` with `DEBUG_LEVEL` of importance, and an optional\n   * descriptive `label`.\n   */\n  static debug(label: string = \"debug\"): Severity {\n    if (label === \"debug\") {\n      if (!Severity._debug) {\n        Severity._debug = new Severity(Severity.DEBUG_LEVEL, label);\n      }\n      return Severity._debug;\n    } else {\n      return new Severity(Severity.DEBUG_LEVEL, label);\n    }\n  }\n\n  /**\n   * Returns a `Severity` with `INFO_LEVEL` of importance, and an optional\n   * descriptive `label`.\n   */\n  static info(label: string = \"info\"): Severity {\n    if (label === \"info\") {\n      if (!Severity._info) {\n        Severity._info = new Severity(Severity.INFO_LEVEL, label);\n      }\n      return Severity._info;\n    } else {\n      return new Severity(Severity.INFO_LEVEL, label);\n    }\n  }\n\n  /**\n   * Returns a `Severity` with `NOTE_LEVEL` of importance, and an optional\n   * descriptive `label`.\n   */\n  static note(label: string = \"note\"): Severity {\n    if (label === \"note\") {\n      if (!Severity._note) {\n        Severity._note = new Severity(Severity.NOTE_LEVEL, label);\n      }\n      return Severity._note;\n    } else {\n      return new Severity(Severity.NOTE_LEVEL, label);\n    }\n  }\n\n  /**\n   * Returns a `Severity` with `WARNING_LEVEL` of importance, and an optional\n   * descriptive `label`.\n   */\n  static warning(label: string = \"warning\"): Severity {\n    if (label === \"warning\") {\n      if (!Severity._warning) {\n        Severity._warning = new Severity(Severity.WARNING_LEVEL, label);\n      }\n      return Severity._warning;\n    } else {\n      return new Severity(Severity.WARNING_LEVEL, label);\n    }\n  }\n\n  /**\n   * Returns a `Severity` with `ERROR_LEVEL` of importance, and an optional\n   * descriptive `label`.\n   */\n  static error(label: string = \"error\"): Severity {\n    if (label === \"error\") {\n      if (!Severity._error) {\n        Severity._error = new Severity(Severity.ERROR_LEVEL, label);\n      }\n      return Severity._error;\n    } else {\n      return new Severity(Severity.ERROR_LEVEL, label);\n    }\n  }\n\n  /**\n   * Returns a `Severity` with `ALERT_LEVEL` of importance, and an optional\n   * descriptive `label`.\n   */\n  static alert(label: string = \"alert\"): Severity {\n    if (label === \"alert\") {\n      if (!Severity._alert) {\n        Severity._alert = new Severity(Severity.ALERT_LEVEL, label);\n      }\n      return Severity._alert;\n    } else {\n      return new Severity(Severity.ALERT_LEVEL, label);\n    }\n  }\n\n  /**\n   * Returns a `Severity` with `FATAL_LEVEL` of importance, and an optional\n   * descriptive `label`.\n   */\n  static fatal(label: string = \"fatal\"): Severity {\n    if (label === \"fatal\") {\n      if (!Severity._fatal) {\n        Severity._fatal = new Severity(Severity.FATAL_LEVEL, label);\n      }\n      return Severity._fatal;\n    } else {\n      return new Severity(Severity.FATAL_LEVEL, label);\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Objects} from \"./Objects\";\n\n/**\n * A hashed generational cache map discards the least recently used value\n * with the worst hit rate per hash bucket.  HashGenCacheMap is a concurrent\n * and lock-free LRFU cache, with O(1) access time.\n *\n * Maintaining four \"generations\" of cached values per hash bucket, the cache\n * discards from the younger generations based on least recent usage, and\n * promotes younger generations to older generations based on most frequent\n * usage.  Cache misses count as negative usage of the older generations,\n * biasing the cache against least recently used values with poor hit rates.\n */\nexport class HashGenCacheMap<K, V> {\n  /** @hidden */\n  readonly _buckets: Array<HashGenCacheMapBucket<K, V> | undefined>;\n  /** @hidden */\n  _gen4Hits: number;\n  /** @hidden */\n  _gen3Hits: number;\n  /** @hidden */\n  _gen2Hits: number;\n  /** @hidden */\n  _gen1Hits: number;\n  /** @hidden */\n  _misses: number;\n\n  constructor(size: number) {\n    this._buckets = new Array(size);\n    this._gen4Hits = 0;\n    this._gen3Hits = 0;\n    this._gen2Hits = 0;\n    this._gen1Hits = 0;\n    this._misses = 0;\n  }\n\n  get(key: K): V | undefined {\n    if (this._buckets.length === 0) {\n      return void 0;\n    }\n    const index = Math.abs(Objects.hash(key)) % this._buckets.length;\n    const bucket = this._buckets[index];\n    if (!bucket) {\n      return void 0;\n    }\n\n    const gen4Key = bucket._gen4Key;\n    if (gen4Key !== void 0 && Objects.equal(key, gen4Key)) {\n      const gen4Val = bucket._gen4Val;\n      if (gen4Val !== void 0) {\n        this._gen4Hits += 1;\n        bucket._gen4Weight++;\n        return gen4Val;\n      } else {\n        bucket._gen4Key = void 0;\n      }\n    }\n\n    const gen3Key = bucket._gen3Key;\n    if (gen3Key !== void 0 && Objects.equal(key, gen3Key)) {\n      const gen3Val = bucket._gen3Val;\n      if (gen3Val !== void 0) {\n        this._gen3Hits += 1;\n        if (bucket._gen3Weight++ > bucket._gen4Weight) {\n          this._buckets[index] = new HashGenCacheMapBucket(\n              bucket._gen3Key, bucket._gen3Val, bucket._gen3Weight,\n              bucket._gen4Key, bucket._gen4Val, bucket._gen4Weight,\n              bucket._gen2Key, bucket._gen2Val, bucket._gen2Weight,\n              bucket._gen1Key, bucket._gen1Val, bucket._gen1Weight);\n        }\n        return gen3Val;\n      } else {\n        bucket._gen3Key = void 0;\n      }\n    }\n\n    const gen2Key = bucket._gen2Key;\n    if (gen2Key !== void 0 && Objects.equal(key, gen2Key)) {\n      const gen2Val = bucket._gen2Val;\n      if (gen2Val !== void 0) {\n        this._gen2Hits += 1;\n        if (bucket._gen2Weight++ > bucket._gen3Weight) {\n          this._buckets[index] = new HashGenCacheMapBucket(\n              bucket._gen4Key, bucket._gen4Val, bucket._gen4Weight,\n              bucket._gen2Key, bucket._gen2Val, bucket._gen2Weight,\n              bucket._gen3Key, bucket._gen3Val, bucket._gen3Weight,\n              bucket._gen1Key, bucket._gen1Val, bucket._gen1Weight);\n        }\n        return gen2Val;\n      } else {\n        bucket._gen2Key = void 0;\n      }\n    }\n\n    const gen1Key = bucket._gen1Key;\n    if (gen1Key !== void 0 && Objects.equal(key, gen1Key)) {\n      const gen1Val = bucket._gen1Val;\n      if (gen1Val !== void 0) {\n        this._gen1Hits += 1;\n        if (bucket._gen1Weight++ > bucket._gen2Weight) {\n          this._buckets[index] = new HashGenCacheMapBucket(\n              bucket._gen4Key, bucket._gen4Val, bucket._gen4Weight,\n              bucket._gen3Key, bucket._gen3Val, bucket._gen3Weight,\n              bucket._gen1Key, bucket._gen1Val, bucket._gen1Weight,\n              bucket._gen2Key, bucket._gen2Val, bucket._gen2Weight);\n        }\n        return gen1Val;\n      } else {\n        bucket._gen1Key = void 0;\n      }\n    }\n\n    this._misses += 1;\n    return void 0;\n  }\n\n  put(key: K, value: V): V {\n    if (this._buckets.length === 0) {\n      return value;\n    }\n    const index = Math.abs(Objects.hash(key)) % this._buckets.length;\n    const bucket = this._buckets[index] || new HashGenCacheMapBucket();\n\n    let gen4Key = bucket._gen4Key;\n    if (gen4Key !== void 0 && Objects.equal(key, gen4Key)) {\n      const gen4Val = bucket._gen4Val;\n      if (gen4Val !== void 0) {\n        this._gen4Hits += 1;\n        bucket._gen4Weight++;\n        return gen4Val;\n      } else {\n        bucket._gen4Key = void 0;\n        gen4Key = void 0;\n      }\n    }\n\n    let gen3Key = bucket._gen3Key;\n    if (gen3Key !== void 0 && Objects.equal(key, gen3Key)) {\n      const gen3Val = bucket._gen3Val;\n      if (gen3Val !== void 0) {\n        this._gen3Hits += 1;\n        if (bucket._gen3Weight++ > bucket._gen4Weight) {\n          this._buckets[index] = new HashGenCacheMapBucket(\n              bucket._gen3Key, bucket._gen3Val, bucket._gen3Weight,\n              bucket._gen4Key, bucket._gen4Val, bucket._gen4Weight,\n              bucket._gen2Key, bucket._gen2Val, bucket._gen2Weight,\n              bucket._gen1Key, bucket._gen1Val, bucket._gen1Weight);\n        }\n        return gen3Val;\n      } else {\n        bucket._gen3Key = void 0;\n        gen3Key = void 0;\n      }\n    }\n\n    let gen2Key = bucket._gen2Key;\n    if (gen2Key !== void 0 && Objects.equal(key, gen2Key)) {\n      const gen2Val = bucket._gen2Val;\n      if (gen2Val !== void 0) {\n        this._gen2Hits += 1;\n        if (bucket._gen2Weight++ > bucket._gen3Weight) {\n          this._buckets[index] = new HashGenCacheMapBucket(\n              bucket._gen4Key, bucket._gen4Val, bucket._gen4Weight,\n              bucket._gen2Key, bucket._gen2Val, bucket._gen2Weight,\n              bucket._gen3Key, bucket._gen3Val, bucket._gen3Weight,\n              bucket._gen1Key, bucket._gen1Val, bucket._gen1Weight);\n        }\n        return gen2Val;\n      } else {\n        bucket._gen2Key = void 0;\n        gen2Key = void 0;\n      }\n    }\n\n    let gen1Key = bucket._gen1Key;\n    if (gen1Key !== void 0 && Objects.equal(key, gen1Key)) {\n      const gen1Val = bucket._gen1Val;\n      if (gen1Val !== void 0) {\n        this._gen1Hits += 1;\n        if (bucket._gen1Weight++ > bucket._gen2Weight) {\n          this._buckets[index] = new HashGenCacheMapBucket(\n              bucket._gen4Key, bucket._gen4Val, bucket._gen4Weight,\n              bucket._gen3Key, bucket._gen3Val, bucket._gen3Weight,\n              bucket._gen1Key, bucket._gen1Val, bucket._gen1Weight,\n              bucket._gen2Key, bucket._gen2Val, bucket._gen2Weight);\n        }\n        return gen1Val;\n      } else {\n        bucket._gen1Key = void 0;\n        gen1Key = void 0;\n      }\n    }\n\n    this._misses += 1;\n    if (gen4Key === void 0) {\n      this._buckets[index] = new HashGenCacheMapBucket(\n          bucket._gen3Key, bucket._gen3Val, bucket._gen3Weight,\n          bucket._gen2Key, bucket._gen2Val, bucket._gen2Weight,\n          bucket._gen1Key, bucket._gen1Val, bucket._gen1Weight,\n          key, value, 1);\n    } else if (gen3Key === void 0) {\n      this._buckets[index] = new HashGenCacheMapBucket(\n          bucket._gen4Key, bucket._gen4Val, bucket._gen4Weight,\n          bucket._gen2Key, bucket._gen2Val, bucket._gen2Weight,\n          bucket._gen1Key, bucket._gen1Val, bucket._gen1Weight,\n          key, value, 1);\n    } else if (gen2Key === void 0) {\n      this._buckets[index] = new HashGenCacheMapBucket(\n          bucket._gen4Key, bucket._gen4Val, bucket._gen4Weight,\n          bucket._gen3Key, bucket._gen3Val, bucket._gen3Weight,\n          bucket._gen1Key, bucket._gen1Val, bucket._gen1Weight,\n          key, value, 1);\n    } else if (gen1Key === void 0) {\n      this._buckets[index] = new HashGenCacheMapBucket(\n          bucket._gen4Key, bucket._gen4Val, bucket._gen4Weight,\n          bucket._gen3Key, bucket._gen3Val, bucket._gen3Weight,\n          bucket._gen2Key, bucket._gen2Val, bucket._gen2Weight,\n          key, value, 1);\n    } else {\n      // Penalize older gens for thrash. Promote gen1 to prevent nacent gens\n      // from flip-flopping. If sacrificed gen2 was worth keeping, it likely\n      // would have already been promoted.\n      this._buckets[index] = new HashGenCacheMapBucket(\n          bucket._gen4Key, bucket._gen4Val, bucket._gen4Weight - 1,\n          bucket._gen3Key, bucket._gen3Val, bucket._gen3Weight - 1,\n          bucket._gen1Key, bucket._gen1Val, bucket._gen1Weight,\n          key, value, 1);\n    }\n\n    return value;\n  }\n\n  remove(key: K): V | undefined {\n    if (this._buckets.length === 0) {\n      return void 0;\n    }\n    const index = Math.abs(Objects.hash(key)) % this._buckets.length;\n    const bucket = this._buckets[index];\n    if (!bucket) {\n      return void 0;\n    }\n\n    const gen4Key = bucket._gen4Key;\n    if (gen4Key !== void 0 && Objects.equal(key, gen4Key)) {\n      const gen4Val = bucket._gen4Val;\n      this._buckets[index] = new HashGenCacheMapBucket(\n          bucket._gen3Key, bucket._gen3Val, bucket._gen3Weight,\n          bucket._gen2Key, bucket._gen2Val, bucket._gen2Weight,\n          bucket._gen1Key, bucket._gen1Val, bucket._gen1Weight,\n          void 0, void 0, 0);\n      return gen4Val;\n    }\n\n    const gen3Key = bucket._gen3Key;\n    if (gen3Key !== void 0 && Objects.equal(key, gen3Key)) {\n      const gen3Val = bucket._gen3Val;\n      this._buckets[index] = new HashGenCacheMapBucket(\n          bucket._gen4Key, bucket._gen4Val, bucket._gen4Weight,\n          bucket._gen2Key, bucket._gen2Val, bucket._gen2Weight,\n          bucket._gen1Key, bucket._gen1Val, bucket._gen1Weight,\n          void 0, void 0, 0);\n      return gen3Val;\n    }\n\n    const gen2Key = bucket._gen2Key;\n    if (gen2Key !== void 0 && Objects.equal(key, gen2Key)) {\n      const gen2Val = bucket._gen2Val;\n      this._buckets[index] = new HashGenCacheMapBucket(\n          bucket._gen4Key, bucket._gen4Val, bucket._gen4Weight,\n          bucket._gen3Key, bucket._gen3Val, bucket._gen3Weight,\n          bucket._gen1Key, bucket._gen1Val, bucket._gen1Weight,\n          void 0, void 0, 0);\n      return gen2Val;\n    }\n\n    const gen1Key = bucket._gen1Key;\n    if (gen1Key !== void 0 && Objects.equal(key, gen1Key)) {\n      const gen1Val = bucket._gen1Val;\n      this._buckets[index] = new HashGenCacheMapBucket(\n          bucket._gen4Key, bucket._gen4Val, bucket._gen4Weight,\n          bucket._gen3Key, bucket._gen3Val, bucket._gen3Weight,\n          bucket._gen2Key, bucket._gen2Val, bucket._gen2Weight,\n          void 0, void 0, 0);\n      return gen1Val;\n    }\n\n    return void 0;\n  }\n\n  clear(): void {\n    for (let i = 0; i < this._buckets.length; i += 1) {\n      this._buckets[i] = void 0;\n    }\n  }\n\n  /** @hidden */\n  hits(): number {\n    return this._gen4Hits + this._gen3Hits + this._gen2Hits + this._gen1Hits;\n  }\n\n  hitRatio(): number {\n    const hits = this.hits();\n    return hits / (hits + this._misses);\n  }\n}\n\n/** @hidden */\nexport class HashGenCacheMapBucket<K, V> {\n  /** @hidden */\n  _gen4Key: K | undefined;\n  /** @hidden */\n  _gen4Val: V | undefined;\n  /** @hidden */\n  _gen4Weight: number;\n  /** @hidden */\n  _gen3Key: K | undefined;\n  /** @hidden */\n  _gen3Val: V | undefined;\n  /** @hidden */\n  _gen3Weight: number;\n  /** @hidden */\n  _gen2Key: K | undefined;\n  /** @hidden */\n  _gen2Val: V | undefined;\n  /** @hidden */\n  _gen2Weight: number;\n  /** @hidden */\n  _gen1Key: K | undefined;\n  /** @hidden */\n  _gen1Val: V | undefined;\n  /** @hidden */\n  _gen1Weight: number;\n\n  constructor(gen4Key?: K, gen4Val?: V, gen4Weight: number = 0,\n              gen3Key?: K, gen3Val?: V, gen3Weight: number = 0,\n              gen2Key?: K, gen2Val?: V, gen2Weight: number = 0,\n              gen1Key?: K, gen1Val?: V, gen1Weight: number = 0) {\n    this._gen4Key = gen4Key;\n    this._gen4Val = gen4Val;\n    this._gen4Weight = gen4Weight;\n    this._gen3Key = gen3Key;\n    this._gen3Val = gen3Val;\n    this._gen3Weight = gen3Weight;\n    this._gen2Key = gen2Key;\n    this._gen2Val = gen2Val;\n    this._gen2Weight = gen2Weight;\n    this._gen1Key = gen1Key;\n    this._gen1Val = gen1Val;\n    this._gen1Weight = gen1Weight;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Objects} from \"./Objects\";\n\n/**\n * A hashed generational cache set discards the least recently used value\n * with the worst hit rate per hash bucket.  HashGenCacheSet is a concurrent\n * and lock-free LRFU cache, with O(1) access time.\n *\n * Maintaining four \"generations\" of cached values per hash bucket, the cache\n * discards from the younger generations based on least recent usage, and\n * promotes younger generations to older generations based on most frequent\n * usage.  Cache misses count as negative usage of the older generations,\n * biasing the cache against least recently used values with poor hit rates.\n *\n * The cache soft references the older generations, and weak references the\n * younger generations; the garbage collector can reclaim the entire cache,\n * but will preferentially wipe the younger cache generations before the older\n * cache generations.\n */\nexport class HashGenCacheSet<T> {\n  readonly _buckets: Array<HashGenCacheSetBucket<T> | undefined>;\n  _gen4Hits: number;\n  _gen3Hits: number;\n  _gen2Hits: number;\n  _gen1Hits: number;\n  _misses: number;\n\n  constructor(size: number) {\n    this._buckets = new Array(size);\n    this._gen4Hits = 0;\n    this._gen3Hits = 0;\n    this._gen2Hits = 0;\n    this._gen1Hits = 0;\n    this._misses = 0;\n  }\n\n  put(value: T): T {\n    if (this._buckets.length === 0) {\n      return value;\n    }\n    const index = Math.abs(Objects.hash(value)) % this._buckets.length;\n    const bucket = this._buckets[index] || new HashGenCacheSetBucket<T>();\n\n    const gen4Val = bucket._gen4Val;\n    if (gen4Val !== void 0 && Objects.equal(value, gen4Val)) {\n      this._gen4Hits += 1;\n      bucket._gen4Weight++;\n      return gen4Val;\n    }\n\n    const gen3Val = bucket._gen3Val;\n    if (gen3Val !== void 0 && Objects.equal(value, gen3Val)) {\n      this._gen3Hits += 1;\n      if (bucket._gen3Weight++ > bucket._gen4Weight) {\n        this._buckets[index] = new HashGenCacheSetBucket<T>(\n            bucket._gen3Val, bucket._gen3Weight,\n            bucket._gen4Val, bucket._gen4Weight,\n            bucket._gen2Val, bucket._gen2Weight,\n            bucket._gen1Val, bucket._gen1Weight);\n      }\n      return gen3Val;\n    }\n\n    const gen2Val = bucket._gen2Val;\n    if (gen2Val !== void 0 && Objects.equal(value, gen2Val)) {\n      this._gen2Hits += 1;\n      if (bucket._gen2Weight++ > bucket._gen3Weight) {\n        this._buckets[index] = new HashGenCacheSetBucket<T>(\n            bucket._gen4Val, bucket._gen4Weight,\n            bucket._gen2Val, bucket._gen2Weight,\n            bucket._gen3Val, bucket._gen3Weight,\n            bucket._gen1Val, bucket._gen1Weight);\n      }\n      return gen2Val;\n    }\n\n    const gen1Val = bucket._gen1Val;\n    if (gen1Val !== void 0 && Objects.equal(value, gen1Val)) {\n      this._gen1Hits += 1;\n      if (bucket._gen1Weight++ > bucket._gen2Weight) {\n        this._buckets[index] = new HashGenCacheSetBucket<T>(\n            bucket._gen4Val, bucket._gen4Weight,\n            bucket._gen3Val, bucket._gen3Weight,\n            bucket._gen1Val, bucket._gen1Weight,\n            bucket._gen2Val, bucket._gen2Weight);\n      }\n      return gen1Val;\n    }\n\n    this._misses += 1;\n    if (gen4Val === void 0) {\n      this._buckets[index] = new HashGenCacheSetBucket<T>(\n          bucket._gen3Val, bucket._gen3Weight,\n          bucket._gen2Val, bucket._gen2Weight,\n          bucket._gen1Val, bucket._gen1Weight,\n          value, 1);\n    } else if (gen3Val === void 0) {\n      this._buckets[index] = new HashGenCacheSetBucket<T>(\n          bucket._gen4Val, bucket._gen4Weight,\n          bucket._gen2Val, bucket._gen2Weight,\n          bucket._gen1Val, bucket._gen1Weight,\n          value, 1);\n    } else if (gen2Val === void 0) {\n      this._buckets[index] = new HashGenCacheSetBucket<T>(\n          bucket._gen4Val, bucket._gen4Weight,\n          bucket._gen3Val, bucket._gen3Weight,\n          bucket._gen1Val, bucket._gen1Weight,\n          value, 1);\n    } else if (gen1Val === void 0) {\n      this._buckets[index] = new HashGenCacheSetBucket<T>(\n          bucket._gen4Val, bucket._gen4Weight,\n          bucket._gen3Val, bucket._gen3Weight,\n          bucket._gen2Val, bucket._gen2Weight,\n          value, 1);\n    } else {\n      // Penalize older gens for thrash. Promote gen1 to prevent nacent gens\n      // from flip-flopping. If sacrificed gen2 was worth keeping, it likely\n      // would have already been promoted.\n      this._buckets[index] = new HashGenCacheSetBucket<T>(\n          bucket._gen4Val, bucket._gen4Weight - 1,\n          bucket._gen3Val, bucket._gen3Weight - 1,\n          bucket._gen1Val, bucket._gen1Weight,\n          value, 1);\n    }\n\n    return value;\n  }\n\n  remove(value: T): boolean {\n    if (this._buckets.length === 0) {\n      return false;\n    }\n    const index = Math.abs(Objects.hash(value)) % this._buckets.length;\n    const bucket = this._buckets[index];\n    if (!bucket) {\n      return false;\n    }\n\n    const gen4Val = bucket._gen4Val;\n    if (gen4Val !== void 0 && Objects.equal(value, gen4Val)) {\n      this._buckets[index] = new HashGenCacheSetBucket<T>(\n          bucket._gen3Val, bucket._gen3Weight,\n          bucket._gen2Val, bucket._gen2Weight,\n          bucket._gen1Val, bucket._gen1Weight,\n          void 0, 0);\n      return true;\n    }\n\n    const gen3Val = bucket._gen3Val;\n    if (gen3Val !== void 0 && Objects.equal(value, gen3Val)) {\n      this._buckets[index] = new HashGenCacheSetBucket<T>(\n          bucket._gen4Val, bucket._gen4Weight,\n          bucket._gen2Val, bucket._gen2Weight,\n          bucket._gen1Val, bucket._gen1Weight,\n          void 0, 0);\n      return true;\n    }\n\n    const gen2Val = bucket._gen2Val;\n    if (gen2Val !== void 0 && Objects.equal(value, gen2Val)) {\n      this._buckets[index] = new HashGenCacheSetBucket<T>(\n          bucket._gen4Val, bucket._gen4Weight,\n          bucket._gen3Val, bucket._gen3Weight,\n          bucket._gen1Val, bucket._gen1Weight,\n          void 0, 0);\n      return true;\n    }\n\n    const gen1Val = bucket._gen1Val;\n    if (gen1Val !== void 0 && Objects.equal(value, gen1Val)) {\n      this._buckets[index] = new HashGenCacheSetBucket<T>(\n          bucket._gen4Val, bucket._gen4Weight,\n          bucket._gen3Val, bucket._gen3Weight,\n          bucket._gen2Val, bucket._gen2Weight,\n          void 0, 0);\n      return true;\n    }\n\n    return false;\n  }\n\n  clear(): void {\n    for (let i = 0; i < this._buckets.length; i += 1) {\n      this._buckets[i] = void 0;\n    }\n  }\n\n  /** @hidden */\n  hits(): number {\n    return this._gen4Hits + this._gen3Hits + this._gen2Hits + this._gen1Hits;\n  }\n\n  hitRatio(): number {\n    const hits = this.hits();\n    return hits / (hits + this._misses);\n  }\n}\n\n/** @hidden */\nexport class HashGenCacheSetBucket<T> {\n  /** @hidden */\n  _gen4Val: T | undefined;\n  /** @hidden */\n  _gen4Weight: number;\n  /** @hidden */\n  _gen3Val: T | undefined;\n  /** @hidden */\n  _gen3Weight: number;\n  /** @hidden */\n  _gen2Val: T | undefined;\n  /** @hidden */\n  _gen2Weight: number;\n  /** @hidden */\n  _gen1Val: T | undefined;\n  /** @hidden */\n  _gen1Weight: number;\n\n  constructor(gen4Val?: T, gen4Weight: number = 0,\n              gen3Val?: T, gen3Weight: number = 0,\n              gen2Val?: T, gen2Weight: number = 0,\n              gen1Val?: T, gen1Weight: number = 0) {\n    this._gen4Val = gen4Val;\n    this._gen4Weight = gen4Weight;\n    this._gen3Val = gen3Val;\n    this._gen3Weight = gen3Weight;\n    this._gen2Val = gen2Val;\n    this._gen2Weight = gen2Weight;\n    this._gen1Val = gen1Val;\n    this._gen1Weight = gen1Weight;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport interface FromAny<T, U = T> {\n  fromAny(value: T | U): T;\n}\n\n/** @hidden */\nexport const FromAny = {\n  is<T, U = T>(object: unknown): object is FromAny<T, U> {\n    if (typeof object === \"object\" && object || typeof object === \"function\") {\n      return typeof (object as FromAny<T, U>).fromAny === \"function\";\n    }\n    return false;\n  },\n};\n\nexport interface ToAny<T> {\n  toAny(): T;\n}\n\n/** @hidden */\nexport const ToAny = {\n  is<T>(object: unknown): object is ToAny<T> {\n    if (typeof object === \"object\" && object) {\n      return typeof (object as ToAny<T>).toAny === \"function\";\n    }\n    return false;\n  },\n};\n"]}