import { __extends } from "tslib";
import { Value } from "@swim/structure";
import { Envelope } from "./Envelope";
import { HostAddressed } from "./HostAddressed";
var DeauthRequest = (function (_super) {
    __extends(DeauthRequest, _super);
    function DeauthRequest(body) {
        return _super.call(this, body) || this;
    }
    DeauthRequest.prototype.copy = function (body) {
        return new DeauthRequest(body);
    };
    DeauthRequest.tag = function () {
        return "deauth";
    };
    DeauthRequest.fromValue = function (value) {
        return HostAddressed.fromValue(value, DeauthRequest);
    };
    DeauthRequest.of = function (body) {
        if (body === void 0) { body = Value.absent(); }
        body = Value.fromAny(body);
        return new DeauthRequest(body);
    };
    return DeauthRequest;
}(HostAddressed));
export { DeauthRequest };
Envelope.DeauthRequest = DeauthRequest;
//# sourceMappingURL=DeauthRequest.js.map