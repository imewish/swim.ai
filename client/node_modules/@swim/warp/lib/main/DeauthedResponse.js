import { __extends } from "tslib";
import { Value } from "@swim/structure";
import { Envelope } from "./Envelope";
import { HostAddressed } from "./HostAddressed";
var DeauthedResponse = (function (_super) {
    __extends(DeauthedResponse, _super);
    function DeauthedResponse(body) {
        return _super.call(this, body) || this;
    }
    DeauthedResponse.prototype.copy = function (body) {
        return new DeauthedResponse(body);
    };
    DeauthedResponse.tag = function () {
        return "deauthed";
    };
    DeauthedResponse.fromValue = function (value) {
        return HostAddressed.fromValue(value, DeauthedResponse);
    };
    DeauthedResponse.of = function (body) {
        if (body === void 0) { body = Value.absent(); }
        body = Value.fromAny(body);
        return new DeauthedResponse(body);
    };
    return DeauthedResponse;
}(HostAddressed));
export { DeauthedResponse };
Envelope.DeauthedResponse = DeauthedResponse;
//# sourceMappingURL=DeauthedResponse.js.map