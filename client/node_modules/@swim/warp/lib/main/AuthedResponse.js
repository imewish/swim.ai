import { __extends } from "tslib";
import { Value } from "@swim/structure";
import { Envelope } from "./Envelope";
import { HostAddressed } from "./HostAddressed";
var AuthedResponse = (function (_super) {
    __extends(AuthedResponse, _super);
    function AuthedResponse(body) {
        return _super.call(this, body) || this;
    }
    AuthedResponse.prototype.copy = function (body) {
        return new AuthedResponse(body);
    };
    AuthedResponse.tag = function () {
        return "authed";
    };
    AuthedResponse.fromValue = function (value) {
        return HostAddressed.fromValue(value, AuthedResponse);
    };
    AuthedResponse.of = function (body) {
        if (body === void 0) { body = Value.absent(); }
        body = Value.fromAny(body);
        return new AuthedResponse(body);
    };
    return AuthedResponse;
}(HostAddressed));
export { AuthedResponse };
Envelope.AuthedResponse = AuthedResponse;
//# sourceMappingURL=AuthedResponse.js.map