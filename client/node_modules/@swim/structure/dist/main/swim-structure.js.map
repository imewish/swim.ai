{"version":3,"file":"swim-structure.js","sources":["../../main/Item.ts","../../../../../node_modules/tslib/tslib.es6.js","../../main/Field.ts","../../main/InterpreterException.ts","../../main/InterpreterSettings.ts","../../main/Interpreter.ts","../../main/Attr.ts","../../main/Slot.ts","../../main/ValueBuilder.ts","../../main/Value.ts","../../main/RecordCursor.ts","../../main/Record.ts","../../main/RecordMap.ts","../../main/RecordMapView.ts","../../main/DataOutput.ts","../../main/Data.ts","../../main/TextOutput.ts","../../main/Text.ts","../../main/Num.ts","../../main/Bool.ts","../../main/Expression.ts","../../main/Operator.ts","../../main/Selector.ts","../../main/Func.ts","../../main/Extant.ts","../../main/Absent.ts","../../main/FormException.ts","../../main/Form.ts","../../main/operator/BinaryOperator.ts","../../main/operator/UnaryOperator.ts","../../main/operator/ConditionalOperator.ts","../../main/operator/OrOperator.ts","../../main/operator/AndOperator.ts","../../main/operator/BitwiseOrOperator.ts","../../main/operator/BitwiseXorOperator.ts","../../main/operator/BitwiseAndOperator.ts","../../main/operator/LtOperator.ts","../../main/operator/LeOperator.ts","../../main/operator/EqOperator.ts","../../main/operator/NeOperator.ts","../../main/operator/GeOperator.ts","../../main/operator/GtOperator.ts","../../main/operator/PlusOperator.ts","../../main/operator/MinusOperator.ts","../../main/operator/TimesOperator.ts","../../main/operator/DivideOperator.ts","../../main/operator/ModuloOperator.ts","../../main/operator/NotOperator.ts","../../main/operator/BitwiseNotOperator.ts","../../main/operator/NegativeOperator.ts","../../main/operator/PositiveOperator.ts","../../main/operator/InvokeOperator.ts","../../main/selector/IdentitySelector.ts","../../main/selector/GetSelector.ts","../../main/selector/GetAttrSelector.ts","../../main/selector/GetItemSelector.ts","../../main/selector/KeysSelector.ts","../../main/selector/ValuesSelector.ts","../../main/selector/ChildrenSelector.ts","../../main/selector/DescendantsSelector.ts","../../main/selector/FilterSelector.ts","../../main/selector/LiteralSelector.ts","../../main/func/LambdaFunc.ts","../../main/func/BridgeFunc.ts","../../main/func/MathModule.ts","../../main/form/TagForm.ts","../../main/form/UnitForm.ts","../../main/form/StringForm.ts","../../main/form/NumberForm.ts","../../main/form/BooleanForm.ts","../../main/form/AnyForm.ts","../../main/form/ItemForm.ts","../../main/form/ValueForm.ts","../../main/collections/ValueCursor.ts","../../main/collections/ValueEntryCursor.ts"],"sourcesContent":["// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Comparable, HashCode, Cursor} from \"@swim/util\";\nimport {Debug, Display, Format, Output} from \"@swim/codec\";\nimport {Field} from \"./Field\";\nimport {Attr} from \"./Attr\";\nimport {Slot} from \"./Slot\";\nimport {AnyValue, Value} from \"./Value\";\nimport {Record} from \"./Record\";\nimport {RecordMap} from \"./RecordMap\";\nimport {RecordMapView} from \"./RecordMapView\";\nimport {Data} from \"./Data\";\nimport {AnyText, Text} from \"./Text\";\nimport {AnyNum, Num} from \"./Num\";\nimport {Bool} from \"./Bool\";\nimport {Expression} from \"./Expression\";\nimport {Selector} from \"./Selector\";\nimport {Operator} from \"./Operator\";\nimport {Func} from \"./Func\";\nimport {Extant} from \"./Extant\";\nimport {Absent} from \"./Absent\";\nimport {Form} from \"./Form\";\nimport {AnyInterpreter} from \"./Interpreter\";\nimport {BinaryOperator} from \"./operator/BinaryOperator\";\nimport {UnaryOperator} from \"./operator/UnaryOperator\";\nimport {ConditionalOperator} from \"./operator/ConditionalOperator\";\nimport {OrOperator} from \"./operator/OrOperator\";\nimport {AndOperator} from \"./operator/AndOperator\";\nimport {BitwiseOrOperator} from \"./operator/BitwiseOrOperator\";\nimport {BitwiseXorOperator} from \"./operator/BitwiseXorOperator\";\nimport {BitwiseAndOperator} from \"./operator/BitwiseAndOperator\";\nimport {LtOperator} from \"./operator/LtOperator\";\nimport {LeOperator} from \"./operator/LeOperator\";\nimport {EqOperator} from \"./operator/EqOperator\";\nimport {NeOperator} from \"./operator/NeOperator\";\nimport {GeOperator} from \"./operator/GeOperator\";\nimport {GtOperator} from \"./operator/GtOperator\";\nimport {PlusOperator} from \"./operator/PlusOperator\";\nimport {MinusOperator} from \"./operator/MinusOperator\";\nimport {TimesOperator} from \"./operator/TimesOperator\";\nimport {DivideOperator} from \"./operator/DivideOperator\";\nimport {ModuloOperator} from \"./operator/ModuloOperator\";\nimport {NotOperator} from \"./operator/NotOperator\";\nimport {BitwiseNotOperator} from \"./operator/BitwiseNotOperator\";\nimport {NegativeOperator} from \"./operator/NegativeOperator\";\nimport {PositiveOperator} from \"./operator/PositiveOperator\";\nimport {InvokeOperator} from \"./operator/InvokeOperator\";\nimport {IdentitySelector} from \"./selector/IdentitySelector\";\nimport {GetSelector} from \"./selector/GetSelector\";\nimport {GetAttrSelector} from \"./selector/GetAttrSelector\";\nimport {GetItemSelector} from \"./selector/GetItemSelector\";\nimport {KeysSelector} from \"./selector/KeysSelector\";\nimport {ValuesSelector} from \"./selector/ValuesSelector\";\nimport {ChildrenSelector} from \"./selector/ChildrenSelector\";\nimport {DescendantsSelector} from \"./selector/DescendantsSelector\";\nimport {FilterSelector} from \"./selector/FilterSelector\";\nimport {LiteralSelector} from \"./selector/LiteralSelector\";\nimport {LambdaFunc} from \"./func/LambdaFunc\";\nimport {BridgeFunc} from \"./func/BridgeFunc\";\nimport {MathModule} from \"./func/MathModule\";\n\nexport type AnyItem = Item\n                    | {readonly $key: AnyValue, readonly $value: AnyValue}\n                    | {readonly [key: string]: AnyValue}\n                    | ReadonlyArray<unknown> // ReadonlyArray<AnyItem>\n                    | Uint8Array\n                    | string\n                    | number\n                    | boolean\n                    | null\n                    | undefined;\n\nexport abstract class Item implements Comparable<Item>, HashCode, Debug, Display {\n  /** @hidden */\n  constructor() {\n    // stub\n  }\n\n  /**\n   * Returns `true` if this `Item` is not [[Absent]].\n   */\n  abstract isDefined(): boolean;\n\n  /**\n   * Returns `true` if this `Item is neither [[Extant]] nor [[Absent]].\n   */\n  abstract isDistinct(): boolean;\n\n  /**\n   * Returns `true` if this `Item` always [[Item.evaluate evaluates]] to the\n   * same `Item`.\n   */\n  abstract isConstant(): boolean;\n\n  /**\n   * Returns the key component of this `Item`, if this `Item is a [[Field]];\n   * otherwise returns [[Absent]] if this `Item` is a `Value`.\n   */\n  abstract get key(): Value;\n\n  /**\n   * Returns the value component of this `Item`, if this `Item` is a [[Field]];\n   * otherwise returns `this` if this `Item is a `Value`.\n   */\n  abstract toValue(): Value;\n\n  /**\n   * Returns the `key` string of the first member of this `Item`, if this `Item`\n   * is a [[Record]], and its first member is an [[Attr]]; otherwise returns\n   * `undefined` if this `Item` is not a `Record`, or if this `Item` is a\n   * `Record` whose first member is not an `Attr`.\n   *\n   * Used to concisely get the name of the discriminating attribute of a\n   * structure.  The `tag` can be used to discern the nominal type of a\n   * polymorphic structure, similar to an XML element tag.\n   */\n  abstract tag(): string | undefined;\n\n  /**\n   * Returns the [[Item.flattened flattened]] members of this `Item` after all\n   * attributes have been removed, if this `Item` is a [[Record]]; otherwise\n   * returns `this` if this `Item` is a non-`Record` `Value`, or returns\n   * the value component if this `Item` is a `Field`.\n   *\n   * Used to concisely get the scalar value of an attributed structure.  An\n   * attributed structure is a `Record` with one or more attributes that modify\n   * one or more other members.\n   */\n  abstract target(): Value;\n\n  /**\n   * Returns the sole member of this `Item`, if this `Item` is a [[Record]]\n   * with exactly one member, and its member is a `Value`; returns [[Extant]]\n   * if this `Item` is an empty `Record`; returns [[Absent]] if this `Item` is\n   * a `Field`; otherwise returns `this` if this `Item` is a `Record` with more\n   * than one member, or if this `Item` is a non-`Record` `Value`.\n   *\n   * Used to convert a unary `Record` into its member `Value`.  Facilitates\n   * writing code that treats a unary `Record` equivalently to a bare `Value`.\n   */\n  abstract flattened(): Value;\n\n  /**\n   * Returns `this` if this `Item` is a [[Record]]; returns a `Record`\n   * containing just this `Item`, if this `Item` is [[Item.isDistinct\n   * distinct]]; otherwise returns an empty `Record` if this `Item` is\n   * [[Extant]] or [[Absent]].  Facilitates writing code that treats a bare\n   * `Value` equivalently to a unary `Record`.\n   */\n  abstract unflattened(): Record;\n\n  /**\n   * Returns the value of the first member of this `Item`, if this `Item` is a\n   * [[Record]], and its first member is an [[Attr]] whose `key` string is\n   * equal to `tag`; otherwise returns [[Absent]] if this `Item` is not a\n   * `Record`, or if this `Item` is a `Record` whose first member is not an\n   * `Attr`, or if this `Item` is a `Record` whose first member is an `Attr`\n   * whose `key` does not equal the `tag`.\n   *\n   * Used to conditionally get the value of the head `Attr` of a structure, if\n   * and only if the key string of the head `Attr` is equal to the `tag`.  Can\n   * be used to check if a structure might conform to a nominal type named\n   * `tag`, while simultaneously getting the value of the `tag` attribute.\n   */\n  abstract header(tag: string): Value;\n\n  /**\n   * Returns the [[Item.unflattened unflattened]] [[Item.header header]] of\n   * this `Item`, if this `Item` is a [[Record]], and its first member is an\n   * [[Attr]] whose `key` string is equal to `tag`; otherwise returns\n   * `undefined`.\n   *\n   * The `headers` of the `tag` attribute of a structure are like the\n   * attributes of an XML element tag; through unlike an XML element, `tag`\n   * attribute headers are not limited to string keys and values.\n   */\n  abstract headers(tag: string): Record | undefined;\n\n  /**\n   * Returns the first member of this `Item`, if this `Item` is a non-empty\n   * [[Record]]; otherwise returns [[Absent]].\n   */\n  abstract head(): Item;\n\n  /**\n   * Returns a view of all but the first member of this `Item`, if this `Item`\n   * is a non-empty [[Record]]; otherwise returns an empty `Record` if this\n   * `Item` is not a `Record`, or if this `Item` is itself an empty `Record`.\n   */\n  abstract tail(): Record;\n\n  /**\n   * Returns the [[Record.flattened flattened]] [[Item.tail tail]] of this\n   * `Item`.  Used to recursively deconstruct a structure, terminating with its\n   * last `Value`, rather than a unary `Record` containing its last value, if\n   * the structure ends with a `Value` member.\n   */\n  abstract body(): Value;\n\n  /**\n   * Returns the number of members contained in this `Item`, if this `Item` is\n   * a [[Record]]; otherwise returns `0` if this `Item` is not a `Record`.\n   */\n  abstract get length(): number;\n\n  /**\n   * Returns `true` if this `Item` is a [[Record]] that has a [[Field]] member\n   * with a key that is equal to the given `key`; otherwise returns `false` if\n   * this `Item` is not a `Record`, or if this `Item` is a `Record`, but has no\n   * `Field` member with a key equal to the given `key`.\n   */\n  abstract has(key: AnyValue): boolean;\n\n  /**\n   * Returns the value of the last [[Field]] member of this `Item` whose key\n   * is equal to the given `key`; returns [[Absent]] if this `Item` is not a\n   * [[Record]], or if this `Item` is a `Record`, but has no `Field` member\n   * with a key equal to the given `key`.\n   */\n  abstract get(key: AnyValue): Value;\n\n  /**\n   * Returns the value of the last [[Attr]] member of this `Item` whose key\n   * is equal to the given `key`; returns [[Absent]] if this `Item` is not a\n   * [[Record]], or if this `Item` is a `Record`, but has no `Attr` member\n   * with a key equal to the given `key`.\n   */\n  abstract getAttr(key: AnyText): Value;\n\n  /**\n   * Returns the value of the last [[Slot]] member of this `Item` whose key\n   * is equal to the given `key`; returns [[Absent]] if this `Item` is not a\n   * [[Record]], or if this `Item` is a `Record`, but has no `Slot` member\n   * with a key equal to the given `key`.\n   */\n  abstract getSlot(key: AnyValue): Value;\n\n  /**\n   * Returns the last [[Field]] member of this `Item` whose key is equal to the\n   * given `key`; returns `undefined` if this `Item` is not a [[Record]], or if\n   * this `Item` is a `Record`, but has no `Field` member with a `key` equal to\n   * the given `key`.\n   */\n  abstract getField(key: AnyValue): Field | undefined;\n\n  /**\n   * Returns the member of this `Item` at the given `index`, if this `Item` is\n   * a [[Record]], and the `index` is greater than or equal to zero, and less\n   * than the [[Record.length length]] of the `Record`; otherwise returns\n   * [[Absent]] if this `Item` is not a `Record`, or if this `Item` is a\n   * `Record`, but the `index` is out of bounds.\n   */\n  abstract getItem(index: AnyNum): Item;\n\n  updated(key: AnyValue, value: AnyValue): Record {\n    const record = Item.Record.create(2);\n    record.push(this);\n    record.set(key, value);\n    return record;\n  }\n\n  updatedAttr(key: AnyText, value: AnyValue): Record {\n    const record = Item.Record.create(2);\n    record.push(this);\n    record.setAttr(key, value);\n    return record;\n  }\n\n  updatedSlot(key: AnyValue, value: AnyValue): Record {\n    const record = Item.Record.create(2);\n    record.push(this);\n    record.setSlot(key, value);\n    return record;\n  }\n\n  appended(...items: AnyItem[]): Record {\n    const record = Item.Record.create(1 + arguments.length);\n    record.push(this);\n    record.push.apply(record, arguments);\n    return record;\n  }\n\n  prepended(...items: AnyItem[]): Record {\n    const record = Item.Record.create(arguments.length + 1);\n    record.push.apply(record, arguments);\n    record.push(this);\n    return record;\n  }\n\n  abstract deleted(key: AnyValue): Item;\n\n  concat(...items: AnyItem[]): Record {\n    const record = Item.Record.create();\n    record.push(this);\n    for (let i = 0, n = arguments.length; i < n; i += 1) {\n      Item.fromAny(arguments[i]).forEach(function (item: Item): void {\n        record.push(item);\n      });\n    }\n    return record;\n  }\n\n  abstract conditional(thenTerm: Item, elseTerm: Item): Item;\n\n  abstract or(that: Item): Item;\n\n  abstract and(that: Item): Item;\n\n  abstract bitwiseOr(that: AnyItem): Item;\n\n  abstract bitwiseXor(that: AnyItem): Item;\n\n  abstract bitwiseAnd(that: AnyItem): Item;\n\n  lt(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    return this.compareTo(that) < 0 ? Item.Bool.from(true) : Item.absent();\n  }\n\n  le(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    return this.compareTo(that) <= 0 ? Item.Bool.from(true) : Item.absent();\n  }\n\n  eq(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    return this.equals(that) ? Item.Bool.from(true) : Item.absent();\n  }\n\n  ne(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    return !this.equals(that) ? Item.Bool.from(true) : Item.absent();\n  }\n\n  ge(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    return this.compareTo(that) >= 0 ? Item.Bool.from(true) : Item.absent();\n  }\n\n  gt(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    return this.compareTo(that) > 0 ? Item.Bool.from(true) : Item.absent();\n  }\n\n  abstract plus(that: AnyItem): Item;\n\n  abstract minus(that: AnyItem): Item;\n\n  abstract times(that: AnyItem): Item;\n\n  abstract divide(that: AnyItem): Item;\n\n  abstract modulo(that: AnyItem): Item;\n\n  abstract not(): Item;\n\n  abstract bitwiseNot(): Item;\n\n  abstract negative(): Item;\n\n  abstract positive(): Item;\n\n  abstract inverse(): Item;\n\n  invoke(args: Value): Item {\n    return Item.absent();\n  }\n\n  abstract lambda(template: Value): Value;\n\n  filter(predicate?: AnyItem): Selector {\n    const selector = Item.Selector.literal(this);\n    return selector.filter.apply(selector, arguments);\n  }\n\n  max(that: Item): Item {\n    return this.compareTo(that) >= 0 ? this : that;\n  }\n\n  min(that: Item): Item {\n    return this.compareTo(that) <= 0 ? this : that;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    return this;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    return this;\n  }\n\n  /**\n   * Converts this `Item` into a `string` value, if possible; otherwise returns\n   * `undefined` if this `Item` can't be converted into a `string` value.\n   */\n  abstract stringValue(): string | undefined;\n\n  /**\n   * Converts this `Item` into a `string` value, if possible; otherwise returns\n   * `orElse` if this `Item` can't be converted into a `string` value.\n   */\n  abstract stringValue<T>(orElse: T): string | T;\n\n  /**\n   * Converts this `Item` into a `number` value, if possible; otherwise returns\n   * `undefined` if this `Item` can't be converted into a `number` value.\n   */\n  abstract numberValue(): number | undefined;\n\n  /**\n   * Converts this `Item` into a `number` value, if possible; otherwise returns\n   * `orElse` if this `Item` can't be converted into a `number` value.\n   */\n  abstract numberValue<T>(orElse: T): number | T;\n\n  /**\n   * Converts this `Item` into a `boolean` value, if possible; otherwise returns\n   * `undefined` if this `Item` can't be converted into a `boolean` value.\n   */\n  abstract booleanValue(): boolean | undefined;\n\n  /**\n   * Converts this `Item` into a `boolean` value, if possible; otherwise returns\n   * `orElse` if this `Item` can't be converted into a `boolean` value.\n   */\n  abstract booleanValue<T>(orElse: T): boolean | T;\n\n  cast<T>(form: Form<T, unknown>): T | undefined;\n\n  cast<T, E = T>(form: Form<T, unknown>, orElse: E): T | E;\n\n  cast<T, E = T>(form: Form<T, unknown>, orElse?: E): T | E | undefined {\n    let object: T | E | undefined = form.cast(this);\n    if (object === void 0) {\n      object = orElse;\n    }\n    return object;\n  }\n\n  coerce<T>(form: Form<T, unknown>): T;\n\n  coerce<T, E = T>(form: Form<T, unknown>, orElse: E): T | E;\n\n  coerce<T, E = T>(form: Form<T, unknown>, orElse?: E): T | E {\n    let object: T | E | undefined = form.cast(this);\n    if (object === void 0) {\n      object = form.unit();\n    }\n    if (object === void 0) {\n      object = orElse;\n    }\n    return object!;\n  }\n\n  abstract toAny(): AnyItem;\n\n  abstract isAliased(): boolean;\n\n  abstract isMutable(): boolean;\n\n  abstract alias(): void;\n\n  abstract branch(): Item;\n\n  abstract clone(): Item;\n\n  abstract commit(): this;\n\n  /** @hidden */\n  precedence(): number {\n    return 11;\n  }\n\n  forEach<T, S = unknown>(callback: (this: S, item: Item, index: number) => T | void,\n                          thisArg?: S): T | undefined {\n    return callback.call(thisArg, this, 0);\n  }\n\n  iterator(): Cursor<Item> {\n    return Cursor.unary(this);\n  }\n\n  /**\n   * Returns the heterogeneous sort order of this `Item`.  Used to impose a\n   * total order on the set of all items.  When comparing two items of\n   * different types, the items order according to their `typeOrder}`.\n   */\n  abstract typeOrder(): number;\n\n  abstract compareTo(that: Item): 0 | 1 | -1;\n\n  abstract keyEquals(key: unknown): boolean;\n\n  abstract equals(that: unknown): boolean;\n\n  abstract hashCode(): number;\n\n  abstract debug(output: Output): void;\n\n  display(output: Output): void {\n    this.debug(output);\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  static empty(): Item {\n    return Item.Record.empty();\n  }\n\n  static extant(): Item {\n    return Item.Extant.extant();\n  }\n\n  static absent(): Item {\n    return Item.Absent.absent();\n  }\n\n  static fromAny(item: AnyItem): Item {\n    if (item instanceof Item) {\n      return item;\n    } else {\n      return Item.Value.fromAny(item);\n    }\n  }\n\n  private static _globalScope?: Item;\n\n  static globalScope(): Item {\n    if (!Item._globalScope) {\n      Item._globalScope = Item.Record.create(1)\n          .slot(\"math\", Item.MathModule.scope())\n          .commit();\n    }\n    return Item._globalScope;\n  }\n\n  // Forward type declarations\n  /** @hidden */\n  static Field: typeof Field; // defined by Field\n  /** @hidden */\n  static Attr: typeof Attr; // defined by Attr\n  /** @hidden */\n  static Slot: typeof Slot; // defined by Slot\n  /** @hidden */\n  static Value: typeof Value; // defined by Value\n  /** @hidden */\n  static Record: typeof Record; // defined by Record\n  /** @hidden */\n  static RecordMap: typeof RecordMap; // defined by RecordMap\n  /** @hidden */\n  static RecordMapView: typeof RecordMapView; // defined by RecordMapView\n  /** @hidden */\n  static Data: typeof Data; // defined by Data\n  /** @hidden */\n  static Text: typeof Text; // defined by Text\n  /** @hidden */\n  static Num: typeof Num; // defined by Num\n  /** @hidden */\n  static Bool: typeof Bool; // defined by Bool\n  /** @hidden */\n  static Expression: typeof Expression; // defined by Expression\n  /** @hidden */\n  static Selector: typeof Selector; // defined by Selector\n  /** @hidden */\n  static Operator: typeof Operator; // defined by Operator\n  /** @hidden */\n  static Func: typeof Func; // defined by Func\n  /** @hidden */\n  static Extant: typeof Extant; // defined by Extant\n  /** @hidden */\n  static Absent: typeof Absent; // defined by Absent\n  /** @hidden */\n  static BinaryOperator: typeof BinaryOperator; // defined by BinaryOperator\n  /** @hidden */\n  static UnaryOperator: typeof UnaryOperator; // defined by UnaryOperator\n  /** @hidden */\n  static ConditionalOperator: typeof ConditionalOperator; // defined by ConditionalOperator\n  /** @hidden */\n  static OrOperator: typeof OrOperator; // defined by OrOperator\n  /** @hidden */\n  static AndOperator: typeof AndOperator; // defined by AndOperator\n  /** @hidden */\n  static BitwiseOrOperator: typeof BitwiseOrOperator; // defined by BitwiseOrOperator\n  /** @hidden */\n  static BitwiseXorOperator: typeof BitwiseXorOperator; // defined by BitwiseXorOperator\n  /** @hidden */\n  static BitwiseAndOperator: typeof BitwiseAndOperator; // defined by BitwiseAndOperator\n  /** @hidden */\n  static LtOperator: typeof LtOperator; // defined by LtOperator\n  /** @hidden */\n  static LeOperator: typeof LeOperator; // defined by LeOperator\n  /** @hidden */\n  static EqOperator: typeof EqOperator; // defined by EqOperator\n  /** @hidden */\n  static NeOperator: typeof NeOperator; // defined by NeOperator\n  /** @hidden */\n  static GeOperator: typeof GeOperator; // defined by GeOperator\n  /** @hidden */\n  static GtOperator: typeof GtOperator; // defined by GtOperator\n  /** @hidden */\n  static PlusOperator: typeof PlusOperator; // defined by PlusOperator\n  /** @hidden */\n  static MinusOperator: typeof MinusOperator; // defined by MinusOperator\n  /** @hidden */\n  static TimesOperator: typeof TimesOperator; // defined by TimesOperator\n  /** @hidden */\n  static DivideOperator: typeof DivideOperator; // defined by DivideOperator\n  /** @hidden */\n  static ModuloOperator: typeof ModuloOperator; // defined by ModuloOperator\n  /** @hidden */\n  static NotOperator: typeof NotOperator; // defined by NotOperator\n  /** @hidden */\n  static BitwiseNotOperator: typeof BitwiseNotOperator; // defined by BitwiseNotOperator\n  /** @hidden */\n  static NegativeOperator: typeof NegativeOperator; // defined by NegativeOperator\n  /** @hidden */\n  static PositiveOperator: typeof PositiveOperator; // defined by PositiveOperator\n  /** @hidden */\n  static InvokeOperator: typeof InvokeOperator; // defined by InvokeOperator\n  /** @hidden */\n  static IdentitySelector: typeof IdentitySelector; // defined by IdentitySelector\n  /** @hidden */\n  static GetSelector: typeof GetSelector; // defined by GetSelector\n  /** @hidden */\n  static GetAttrSelector: typeof GetAttrSelector; // defined by GetAttrSelector\n  /** @hidden */\n  static GetItemSelector: typeof GetItemSelector; // defined by GetItemSelector\n  /** @hidden */\n  static KeysSelector: typeof KeysSelector; // defined by KeysSelector\n  /** @hidden */\n  static ValuesSelector: typeof ValuesSelector; // defined by ValuesSelector\n  /** @hidden */\n  static ChildrenSelector: typeof ChildrenSelector; // defined by ChildrenSelector\n  /** @hidden */\n  static DescendantsSelector: typeof DescendantsSelector; // defined by DescendantsSelector\n  /** @hidden */\n  static FilterSelector: typeof FilterSelector; // defined by FilterSelector\n  /** @hidden */\n  static LiteralSelector: typeof LiteralSelector; // defined by LiteralSelector\n  /** @hidden */\n  static LambdaFunc: typeof LambdaFunc; // defined by LambdaFunc\n  /** @hidden */\n  static BridgeFunc: typeof BridgeFunc; // defined by BridgeFunc\n  /** @hidden */\n  static MathModule: typeof MathModule; // defined by MathModule\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyItem, Item} from \"./Item\";\nimport {AnyValue, Value} from \"./Value\";\nimport {Record} from \"./Record\";\nimport {AnyText} from \"./Text\";\nimport {AnyNum} from \"./Num\";\n\nexport type AnyField = Field\n                     | {readonly $key: AnyValue, readonly $value: AnyValue}\n                     | {[key: string]: AnyValue};\n\nexport abstract class Field extends Item {\n  /** @hidden */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Always returns `true` because a `Field` can never be [[Absent]].\n   */\n  isDefined(): boolean {\n    return true;\n  }\n\n  /**\n   * Always returns `true` because a `Field` can be neither [[Extant]] nor\n   * [[Absent]].\n   */\n  isDistinct(): boolean {\n    return true;\n  }\n\n  /**\n   * Returns the key component of this `Field`.\n   */\n  abstract get key(): Value;\n\n  /**\n   * Returns the value component of this `Field`.\n   */\n  abstract get value(): Value;\n\n  /**\n   * Sets the value of this `Field` to the new `value`, returning the old value.\n   *\n   * @throws `Error` if this `Field` is immutable.\n   */\n  abstract setValue(value: AnyValue): Value;\n\n  /**\n   * Returns a copy of this `Field` with the updated `value`.\n   */\n  abstract updatedValue(value: AnyValue): Field;\n\n  /**\n   * Returns the value component of this `Field`.\n   */\n  toValue(): Value {\n    return this.value;\n  }\n\n  /**\n   * Always returns `undefined` because a `Field` can't be a `Record`, so it\n   * can't have a first member `Attr` whose key string could be returned.\n   */\n  tag(): string | undefined {\n    return void 0;\n  }\n\n  /**\n   * Always returns the value component of this `Field`.\n   */\n  target(): Value {\n    return this.value;\n  }\n\n  /**\n   * Always returns [[Absent]] because a `Field` can't be flattened into a\n   * `Value`.\n   */\n  flattened(): Value {\n    return Item.Value.absent();\n  }\n\n  /**\n   * Returns a `Record` containing just this `Field`.\n   */\n  unflattened(): Record {\n    return Item.Record.of(this);\n  }\n\n  /**\n   * Always returns [[Absent]] because a `Field` can't be a `Record`, so it\n   * can't have a head `Attr` whose value could be returned if its key were\n   * equal to the `tag`.\n   */\n  header(tag: string): Value {\n    return Item.Value.absent();\n  }\n\n  /**\n   * Always returns `undefined` because a `Field` can't be a `Record`, so it\n   * can't have a head `Attr` whose value could be returned as a `Record` if\n   * its key were equal to the `tag`.\n   */\n  headers(tag: string): Record | undefined {\n    return void 0;\n  }\n\n  /**\n   * Always returns [[Absent]] because a `Field` can't be a `Record`, so it\n   * can't have a first member.\n   */\n  head(): Item {\n    return Item.absent();\n  }\n\n  /**\n   * Always returns an empty `Record` because a `Field` can't itself be a\n   * `Record`, so it can't have any non-first members.\n   */\n  tail(): Record {\n    return Item.Record.empty();\n  }\n\n  /**\n   * Always returns [[Absent]] because a `Field` can't be a `Record`, so it\n   * can't have any non-first members to flatten, and because a `Field` isn't\n   * a distinct `Value`, so it can't return `Extant`.\n   */\n  body(): Value {\n    return Item.Value.absent();\n  }\n\n  /**\n   * Always returns `0` because a `Field` can't be a `Record`, so it can't\n   * contain any members.\n   */\n  get length(): number {\n    return 0;\n  }\n\n  /**\n   * Always returns `false` because a `Field` can't be a `Record`, so it can't\n   * have a `Field` member whose key is equal to the given `key`.\n   */\n  has(key: AnyValue): boolean {\n    return false;\n  }\n\n  /**\n   * Always returns [[Absent]] because a `Field` can't be a `Record`, so it\n   * can't have a `Field` member whose key is equal to the given `key`.\n   */\n  get(key: AnyValue): Value {\n    return Item.Value.absent();\n  }\n\n  /**\n   * Always returns [[Absent]] because a `Field` can't be a `Record`, so it\n   * can't have an `Attr` member whose key is equal to the given `key`.\n   */\n  getAttr(key: AnyText): Value {\n    return Item.Value.absent();\n  }\n\n  /**\n   * Always returns [[Absent]] because a `Field` can't be a `Record`, so it\n   * can't have a `Slot` member whose key is equal to the given `key`.\n   */\n  getSlot(key: AnyValue): Value {\n    return Item.Value.absent();\n  }\n\n  /**\n   * Always returns `undefined` because a `Field` can't be a `Record`, so it\n   * can't have a `Field` member whose key is equal to the given `key`.\n   */\n  getField(key: AnyValue): Field | undefined {\n    return void 0;\n  }\n\n  /**\n   * Always returns [[Absent]] because a `Field` can't be a `Record`, so it\n   * can't have a member at the given `index`.\n   */\n  getItem(index: AnyNum): Item {\n    return Item.absent();\n  }\n\n  deleted(key: AnyValue): Field {\n    return this;\n  }\n\n  conditional(thenTerm: Field, elseTerm: Field): Field;\n  conditional(thenTerm: AnyItem, elseTerm: AnyItem): Item;\n  conditional(thenTerm: AnyItem, elseTerm: AnyItem): Item {\n    thenTerm = Item.fromAny(thenTerm);\n    return thenTerm;\n  }\n\n  or(that: Field): Field;\n  or(that: AnyItem): Item;\n  or(that: AnyItem): Item {\n    return this;\n  }\n\n  and(that: Field): Field;\n  and(that: AnyItem): Item;\n  and(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    return that;\n  }\n\n  lambda(template: Value): Value {\n    return Item.Value.absent();\n  }\n\n  /**\n   * Converts the value of this `Field` into a `string` value, if possible.\n   *\n   * @throws `Error` if the value of this `Field` can't be converted into a\n   *         `string` value.\n   */\n  stringValue(): string | undefined;\n  /**\n   * Converts the value of this `Field` into a `string` value, if possible;\n   * otherwise returns `orElse` if the value of this `Field` can't be converted\n   * into a `string` value.\n   */\n  stringValue<T>(orElse: T): string | T;\n  stringValue<T>(orElse?: T): string | T | undefined {\n    return this.value.stringValue(orElse);\n  }\n\n  /**\n   * Converts the value of this `Field` into a `number` value, if possible.\n   *\n   * @throws `Error` if the value of this `Field` can't be converted into a\n   *         `number` value.\n   */\n  numberValue(): number | undefined;\n  /**\n   * Converts the value of this `Field` into a `number` value, if possible;\n   * otherwise returns `orElse` if the value of this `Field` can't be converted\n   * into a `number` value.\n   */\n  numberValue<T>(orElse: T): number | T;\n  numberValue<T>(orElse?: T): number | T | undefined {\n    return this.value.numberValue(orElse);\n  }\n\n  /**\n   * Converts the value of this `Field` into a `boolean` value, if possible.\n   *\n   * @throws `Error` if the value of this `Field` can't be converted into a\n   *         `boolean` value.\n   */\n  booleanValue(): boolean | undefined;\n  /**\n   * Converts the value of this `Field` into a `boolean` value, if possible;\n   * otherwise returns `orElse` if the value of this `Field` can't be converted\n   * into a `boolean` value.\n   */\n  booleanValue<T>(orElse: T): boolean | T;\n  booleanValue<T>(orElse?: T): boolean | T | undefined {\n    return this.value.booleanValue(orElse);\n  }\n\n  abstract toAny(): AnyField;\n\n  abstract branch(): Field;\n\n  abstract clone(): Field;\n\n  abstract commit(): this;\n\n  /** @hidden */\n  static readonly IMMUTABLE: number = 1 << 0;\n\n  static of(key: AnyValue, value?: AnyValue): Field {\n    let name;\n    if (typeof key === \"string\") {\n      name = key;\n    } else if (key instanceof Item.Text) {\n      name = key.value;\n    }\n    if (name !== void 0 && name.charCodeAt(0) === 64/*'@'*/) {\n      arguments[0] = name.slice(1);\n      return Item.Attr.of.apply(undefined, arguments);\n    } else {\n      return Item.Slot.of.apply(undefined, arguments);\n    }\n  }\n\n  static fromAny(field: AnyField): Field {\n    if (field instanceof Field) {\n      return field;\n    } else if (field && typeof field === \"object\") {\n      if ((field as any).$key !== void 0) {\n        return Field.of((field as any).$key, (field as any).$value);\n      } else {\n        for (const key in field) {\n          return Field.of(key, (field as any)[key]);\n        }\n      }\n    }\n    throw new TypeError(\"\" + field);\n  }\n}\nItem.Field = Field;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport class InterpreterException extends Error {\n  constructor(message?: string) {\n    super(message);\n    (this as any).__proto__ = InterpreterException.prototype;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashCode, Murmur3} from \"@swim/util\";\nimport {Output, Format, Debug} from \"@swim/codec\";\n\n/**\n * Either an [[InterpreterSettings]] instance, or an [[InterpreterSettingsInit]]\n * object initializer.\n */\nexport type AnyInterpreterSettings = InterpreterSettings | InterpreterSettingsInit;\n\n/**\n * [[InterpreterSettings]] object initializer.\n */\nexport interface InterpreterSettingsInit {\n  lineSeparator?: string | null;\n  isPretty?: boolean;\n  isStyled?: boolean;\n}\n\nexport class InterpreterSettings implements Debug, HashCode {\n  /** @hidden */\n  readonly _maxScopeDepth: number;\n\n  constructor(maxScopeDepth: number) {\n    this._maxScopeDepth = maxScopeDepth;\n  }\n\n  maxScopeDepth(): number;\n\n  maxScopeDepth(maxScopeDepth: number): InterpreterSettings;\n\n  maxScopeDepth(maxScopeDepth?: number): number | InterpreterSettings {\n    if (maxScopeDepth === void 0) {\n      return this._maxScopeDepth;\n    } else {\n      return this.copy(maxScopeDepth);\n    }\n  }\n\n  protected copy(maxScopeDepth: number): InterpreterSettings {\n    return new InterpreterSettings(maxScopeDepth);\n  }\n\n  protected canEqual(that: unknown): boolean {\n    return that instanceof InterpreterSettings;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof InterpreterSettings) {\n      return that.canEqual(this) && this._maxScopeDepth === that._maxScopeDepth;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (InterpreterSettings._hashSeed === void 0) {\n      InterpreterSettings._hashSeed = Murmur3.seed(InterpreterSettings);\n    }\n    return Murmur3.mash(Murmur3.mix(InterpreterSettings._hashSeed, this._maxScopeDepth));\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"new\").write(32/*' '*/).write(\"InterpreterSettings\")\n        .write(40/*'('*/).debug(this._maxScopeDepth).write(41/*')'*/);\n  }\n\n  toString(): string {\n    return Format.debug(this);\n  }\n\n  private static _hashSeed?: number;\n  private static _standard?: InterpreterSettings;\n\n  static standard(): InterpreterSettings {\n    if (!InterpreterSettings._standard) {\n      const maxScopeDepth = 1024;\n      InterpreterSettings._standard = new InterpreterSettings(maxScopeDepth);\n    }\n    return InterpreterSettings._standard;\n  }\n}\n","import {InterpreterException} from \"./InterpreterException\";\nimport {InterpreterSettings} from \"./InterpreterSettings\";\nimport {AnyItem, Item} from \"./Item\";\nimport {Selector} from \"./Selector\";\nimport {Operator} from \"./Operator\";\n\nexport type AnyInterpreter = Interpreter | AnyItem;\n\nexport class Interpreter {\n  /** @hidden */\n  _settings: InterpreterSettings;\n  /** @hidden */\n  _scopeStack: Item[] | null;\n  /** @hidden */\n  _scopeDepth: number;\n\n  constructor(settings: InterpreterSettings = InterpreterSettings.standard(),\n              scopeStack: Item[] | null = null, scopeDepth: number = 0) {\n    this._settings = settings;\n    this._scopeStack = scopeStack;\n    this._scopeDepth = scopeDepth;\n  }\n\n  settings(): InterpreterSettings;\n\n  settings(settings: InterpreterSettings): this;\n\n  settings(settings?: InterpreterSettings): InterpreterSettings | this {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      this._settings = settings;\n      return this;\n    }\n  }\n\n  scopeDepth(): number {\n    return this._scopeDepth;\n  }\n\n  peekScope(): Item {\n    const scopeDepth = this._scopeDepth;\n    if (scopeDepth <= 0) {\n      throw new InterpreterException(\"scope stack empty\");\n    }\n    return this._scopeStack![scopeDepth - 1];\n  }\n\n  getScope(index: number): Item {\n    if (index < 0 || index >= this._scopeDepth) {\n      throw new RangeError(\"\" + index);\n    }\n    return this._scopeStack![index];\n  }\n\n  pushScope(scope: Item): void {\n    const scopeDepth = this._scopeDepth;\n    if (scopeDepth >= this._settings._maxScopeDepth) {\n      throw new InterpreterException(\"scope stack overflow\");\n    }\n    const oldScopeStack = this._scopeStack;\n    let newScopeStack;\n    if (oldScopeStack === null || scopeDepth + 1 > oldScopeStack.length) {\n      newScopeStack = new Array<Item>(Interpreter.expand(scopeDepth + 1));\n      if (oldScopeStack != null) {\n        for (let i = 0; i < scopeDepth; i += 1) {\n          newScopeStack[i] = oldScopeStack[i];\n        }\n      }\n      this._scopeStack = newScopeStack;\n    } else {\n      newScopeStack = oldScopeStack;\n    }\n    newScopeStack[scopeDepth] = scope;\n    this._scopeDepth = scopeDepth + 1;\n  }\n\n  popScope(): Item {\n    const scopeDepth = this._scopeDepth;\n    if (scopeDepth <= 0) {\n      throw new InterpreterException(\"scope stack empty\");\n    }\n    const scopeStack = this._scopeStack!;\n    const scope = scopeStack[scopeDepth - 1];\n    scopeStack[scopeDepth - 1] = void 0 as any;\n    this._scopeDepth = scopeDepth - 1;\n    return scope;\n  }\n\n  swapScope(newScope: Item): Item {\n    const scopeDepth = this._scopeDepth;\n    if (scopeDepth <= 0) {\n      throw new InterpreterException(\"scope stack empty\");\n    }\n    const scopeStack = this._scopeStack!;\n    const oldScope = scopeStack[scopeDepth - 1];\n    scopeStack[scopeDepth - 1] = newScope;\n    return oldScope;\n  }\n\n  willOperate(operator: Operator): void {\n    // stub\n  }\n\n  didOperate(operator: Operator, result: Item): void {\n    // stub\n  }\n\n  willSelect(selector: Selector): void {\n    // stub\n  }\n\n  didSelect(selector: Selector, result: unknown): void {\n    // stub\n  }\n\n  willTransform(selector: Selector): void {\n    // stub\n  }\n\n  didTransform(selector: Selector, result: Item): void {\n    // stub\n  }\n\n  static of(...objects: AnyItem[]): Interpreter {\n    const n = arguments.length;\n    const scopes = new Array(Interpreter.expand(n));\n    for (let i = 0; i < n; i += 1) {\n      const scope = Item.fromAny(arguments[i]);\n      scopes[i] = scope;\n    }\n    return new Interpreter(InterpreterSettings.standard(), scopes, n);\n  }\n\n  static fromAny(interpreter: AnyInterpreter, globalScope: Item = Item.globalScope()): Interpreter {\n    if (!(interpreter instanceof Interpreter)) {\n      const scope = interpreter;\n      interpreter = new Interpreter();\n      if (globalScope) {\n        interpreter.pushScope(globalScope);\n      }\n      if (scope !== void 0) {\n        interpreter.pushScope(Item.fromAny(scope));\n      }\n    }\n    return interpreter;\n  }\n\n  private static expand(n: number): number {\n    n = Math.max(32, n) - 1;\n    n |= n >> 1; n |= n >> 2; n |= n >> 4; n |= n >> 8; n |= n >> 16;\n    return n + 1;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {AnyItem, Item} from \"./Item\";\nimport {AnyField, Field} from \"./Field\";\nimport {AnyValue, Value} from \"./Value\";\nimport {AnyText, Text} from \"./Text\";\nimport {AnyInterpreter, Interpreter} from \"./Interpreter\";\n\nexport class Attr extends Field {\n  /** @hidden */\n  readonly _key: Text;\n  /** @hidden */\n  _value: Value;\n  /** @hidden */\n  _flags: number;\n\n  constructor(key: Text, value: Value = Item.Value.extant(), flags: number = 0) {\n    super();\n    this._key = key;\n    this._value = value;\n    this._flags = flags;\n  }\n\n  isConstant(): boolean {\n    return this._key.isConstant() && this._value.isConstant();\n  }\n\n  get name(): string {\n    return this._key.value;\n  }\n\n  get key(): Text {\n    return this._key;\n  }\n\n  get value(): Value {\n    return this._value;\n  }\n\n  setValue(newValue: Value): Value {\n    if ((this._flags & Field.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    const oldValue = this._value;\n    this._value = newValue;\n    return oldValue;\n  }\n\n  updatedValue(value: Value): Attr {\n    return new Attr(this._key, value);\n  }\n\n  bitwiseOr(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.BitwiseOrOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Attr && this._key.equals(that._key)) {\n      newValue = this._value.bitwiseOr(that._value);\n    } else if (that instanceof Item.Value) {\n      newValue = this._value.bitwiseOr(that);\n    } else {\n      newValue = Item.Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Attr(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  bitwiseXor(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.BitwiseXorOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Attr && this._key.equals(that._key)) {\n      newValue = this._value.bitwiseXor(that._value);\n    } else if (that instanceof Item.Value) {\n      newValue = this._value.bitwiseXor(that);\n    } else {\n      newValue = Item.Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Attr(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  bitwiseAnd(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.BitwiseAndOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Attr && this._key.equals(that._key)) {\n      newValue = this._value.bitwiseAnd(that._value);\n    } else if (that instanceof Item.Value) {\n      newValue = this._value.bitwiseAnd(that);\n    } else {\n      newValue = Item.Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Attr(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  plus(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.PlusOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Attr && this._key.equals(that._key)) {\n      newValue = this._value.plus(that._value);\n    } else if (that instanceof Item.Value) {\n      newValue = this._value.plus(that);\n    } else {\n      newValue = Item.Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Attr(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  minus(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.MinusOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Attr && this._key.equals(that._key)) {\n      newValue = this._value.minus(that._value);\n    } else if (that instanceof Item.Value) {\n      newValue = this._value.minus(that);\n    } else {\n      newValue = Item.Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Attr(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  times(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.TimesOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Attr && this._key.equals(that._key)) {\n      newValue = this._value.times(that._value);\n    } else if (that instanceof Item.Value) {\n      newValue = this._value.times(that);\n    } else {\n      newValue = Item.Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Attr(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  divide(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.DivideOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Attr && this._key.equals(that._key)) {\n      newValue = this._value.divide(that._value);\n    } else if (that instanceof Item.Value) {\n      newValue = this._value.divide(that);\n    } else {\n      newValue = Item.Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Attr(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  modulo(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.ModuloOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Attr && this._key.equals(that._key)) {\n      newValue = this._value.modulo(that._value);\n    } else if (that instanceof Item.Value) {\n      newValue = this._value.modulo(that);\n    } else {\n      newValue = Item.Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Attr(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  not(): Item {\n    const newValue = this._value.not();\n    if (newValue.isDefined()) {\n      return new Attr(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  bitwiseNot(): Item {\n    const newValue = this._value.bitwiseNot();\n    if (newValue.isDefined()) {\n      return new Attr(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  negative(): Item {\n    const newValue = this._value.negative();\n    if (newValue.isDefined()) {\n      return new Attr(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  positive(): Item {\n    const newValue = this._value.positive();\n    if (newValue.isDefined()) {\n      return new Attr(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  inverse(): Item {\n    const newValue = this._value.inverse();\n    if (newValue.isDefined()) {\n      return new Attr(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const key = this._key.evaluate(interpreter).toValue();\n    const value = this._value.evaluate(interpreter).toValue();\n    if (key === this._key && value === this._value) {\n      return this;\n    } else if (key.isDefined() && value.isDefined()) {\n      if (key instanceof Item.Text) {\n        return new Attr(key, value);\n      } else {\n        return new Item.Slot(key, value);\n      }\n    }\n    return Item.absent();\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const key = this._key.substitute(interpreter).toValue();\n    const value = this._value.substitute(interpreter).toValue();\n    if (key === this._key && value === this._value) {\n      return this;\n    } else if (key.isDefined() && value.isDefined()) {\n      if (key instanceof Item.Text) {\n        return new Attr(key, value);\n      } else {\n        return new Item.Slot(key, value);\n      }\n    }\n    return Item.absent();\n  }\n\n  toAny(): AnyField {\n    const field = {} as {[key: string]: AnyValue};\n    field[\"@\" + this._key.value] = this._value.toAny();\n    return field;\n  }\n\n  isAliased(): boolean {\n    return false;\n  }\n\n  isMutable(): boolean {\n    return (this._flags & Field.IMMUTABLE) === 0;\n  }\n\n  alias(): void {\n    this._flags |= Field.IMMUTABLE;\n  }\n\n  branch(): Attr {\n    if ((this._flags & Field.IMMUTABLE) !== 0) {\n      return new Attr(this._key, this._value, this._flags & ~Field.IMMUTABLE);\n    } else {\n      return this;\n    }\n  }\n\n  clone(): Attr {\n    return new Attr(this._key.clone(), this._value.clone());\n  }\n\n  commit(): this {\n    if ((this._flags & Field.IMMUTABLE) === 0) {\n      this._flags |= Field.IMMUTABLE;\n      this._value.commit();\n    }\n    return this;\n  }\n\n  typeOrder(): number {\n    return 1;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof Attr) {\n      let order = this._key.compareTo(that._key);\n      if (order === 0) {\n        order = this._value.compareTo(that._value);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  keyEquals(key: unknown): boolean {\n    if (typeof key === \"string\") {\n      return this._key.value === key;\n    } else if (key instanceof Field) {\n      return this._key.equals(key.key);\n    } else {\n      return this._key.equals(key);\n    }\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Attr) {\n      return this._key.equals(that._key) && this._value.equals(that._value);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (Attr._hashSeed === void 0) {\n      Attr._hashSeed = Murmur3.seed(Attr);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Attr._hashSeed,\n        this._key.hashCode()), this._value.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"Attr\").write(46/*'.'*/).write(\"of\").write(40/*'('*/).display(this.key);\n    if (!(this.value instanceof Item.Extant)) {\n      output = output.write(44/*','*/).write(32/*' '*/).display(this.value);\n    }\n    output = output.write(41/*')'*/);\n  }\n\n  display(output: Output): void {\n    this.debug(output);\n  }\n\n  private static _hashSeed?: number;\n\n  static of(key: AnyText, value?: AnyValue): Attr {\n    key = Item.Text.fromAny(key);\n    value = (arguments.length >= 2 ? Item.Value.fromAny(value) : Item.Value.extant());\n    return new Attr(key, value);\n  }\n}\nItem.Attr = Attr;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {AnyItem, Item} from \"./Item\";\nimport {AnyField, Field} from \"./Field\";\nimport {AnyValue, Value} from \"./Value\";\nimport {AnyInterpreter, Interpreter} from \"./Interpreter\";\n\nexport class Slot extends Field {\n  /** @hidden */\n  readonly _key: Value;\n  /** @hidden */\n  _value: Value;\n  /** @hidden */\n  _flags: number;\n\n  constructor(key: Value, value: Value = Item.Value.extant(), flags: number = 0) {\n    super();\n    this._key = key.commit();\n    this._value = value;\n    this._flags = flags;\n  }\n\n  get key(): Value {\n    return this._key;\n  }\n\n  get value(): Value {\n    return this._value;\n  }\n\n  isConstant(): boolean {\n    return this._key.isConstant() && this._value.isConstant();\n  }\n\n  setValue(newValue: Value): Value {\n    if ((this._flags & Field.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    const oldValue = this._value;\n    this._value = newValue;\n    return oldValue;\n  }\n\n  updatedValue(value: Value): Slot {\n    return new Slot(this._key, value);\n  }\n\n  bitwiseOr(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.BitwiseOrOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Slot && this._key.equals(that._key)) {\n      newValue = this._value.bitwiseOr(that._value);\n    } else if (that instanceof Item.Value) {\n      newValue = this._value.bitwiseOr(that);\n    } else {\n      newValue = Item.Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Slot(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  bitwiseXor(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.BitwiseXorOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Slot && this._key.equals(that._key)) {\n      newValue = this._value.bitwiseXor(that._value);\n    } else if (that instanceof Item.Value) {\n      newValue = this._value.bitwiseXor(that);\n    } else {\n      newValue = Item.Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Slot(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  bitwiseAnd(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.BitwiseAndOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Slot && this._key.equals(that._key)) {\n      newValue = this._value.bitwiseAnd(that._value);\n    } else if (that instanceof Item.Value) {\n      newValue = this._value.bitwiseAnd(that);\n    } else {\n      newValue = Item.Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Slot(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  plus(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.PlusOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Slot && this._key.equals(that._key)) {\n      newValue = this._value.plus(that._value);\n    } else if (that instanceof Item.Value) {\n      newValue = this._value.plus(that);\n    } else {\n      newValue = Item.Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Slot(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  minus(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.MinusOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Slot && this._key.equals(that._key)) {\n      newValue = this._value.minus(that._value);\n    } else if (that instanceof Item.Value) {\n      newValue = this._value.minus(that);\n    } else {\n      newValue = Item.Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Slot(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  times(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.TimesOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Slot && this._key.equals(that._key)) {\n      newValue = this._value.times(that._value);\n    } else if (that instanceof Item.Value) {\n      newValue = this._value.times(that);\n    } else {\n      newValue = Item.Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Slot(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  divide(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.DivideOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Slot && this._key.equals(that._key)) {\n      newValue = this._value.divide(that._value);\n    } else if (that instanceof Item.Value) {\n      newValue = this._value.divide(that);\n    } else {\n      newValue = Item.Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Slot(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  modulo(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.ModuloOperator(this, that);\n    }\n    let newValue;\n    if (that instanceof Slot && this._key.equals(that._key)) {\n      newValue = this._value.modulo(that._value);\n    } else if (that instanceof Item.Value) {\n      newValue = this._value.modulo(that);\n    } else {\n      newValue = Item.Value.absent();\n    }\n    if (newValue.isDefined()) {\n      return new Slot(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  not(): Item {\n    const newValue = this._value.not();\n    if (newValue.isDefined()) {\n      return new Slot(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  bitwiseNot(): Item {\n    const newValue = this._value.bitwiseNot();\n    if (newValue.isDefined()) {\n      return new Slot(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  negative(): Item {\n    const newValue = this._value.negative();\n    if (newValue.isDefined()) {\n      return new Slot(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  positive(): Item {\n    const newValue = this._value.positive();\n    if (newValue.isDefined()) {\n      return new Slot(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  inverse(): Item {\n    const newValue = this._value.inverse();\n    if (newValue.isDefined()) {\n      return new Slot(this._key, newValue);\n    }\n    return Item.absent();\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const key = this._key.evaluate(interpreter).toValue();\n    const value = this._value.evaluate(interpreter).toValue();\n    if (key === this._key && value === this._value) {\n      return this;\n    } else if (key.isDefined() && value.isDefined()) {\n      return new Slot(key, value);\n    }\n    return Item.absent();\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const key = this._key.substitute(interpreter).toValue();\n    const value = this._value.substitute(interpreter).toValue();\n    if (key === this._key && value === this._value) {\n      return this;\n    } else if (key.isDefined() && value.isDefined()) {\n      return new Slot(key, value);\n    }\n    return Item.absent();\n  }\n\n  toAny(): AnyField {\n    const field = {} as {[key: string]: AnyValue};\n    if (this._key instanceof Item.Text) {\n      field[this._key.value] = this._value.toAny();\n    } else {\n      field.$key = this._key.toAny();\n      field.$value = this._value.toAny();\n    }\n    return field;\n  }\n\n  isAliased(): boolean {\n    return false;\n  }\n\n  isMutable(): boolean {\n    return (this._flags & Field.IMMUTABLE) === 0;\n  }\n\n  alias(): void {\n    this._flags |= Field.IMMUTABLE;\n  }\n\n  branch(): Slot {\n    if ((this._flags & Field.IMMUTABLE) !== 0) {\n      return new Slot(this._key, this._value, this._flags & ~Field.IMMUTABLE);\n    } else {\n      return this;\n    }\n  }\n\n  clone(): Slot {\n    return new Slot(this._key.clone(), this._value.clone());\n  }\n\n  commit(): this {\n    if ((this._flags & Field.IMMUTABLE) === 0) {\n      this._flags |= Field.IMMUTABLE;\n      this._value.commit();\n    }\n    return this;\n  }\n\n  typeOrder(): number {\n    return 2;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof Slot) {\n      let order = this._key.compareTo(that._key);\n      if (order === 0) {\n        order = this._value.compareTo(that._value);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  keyEquals(key: unknown): boolean {\n    if (typeof key === \"string\" && this._key instanceof Item.Text) {\n      return this._key.value === key;\n    } else if (key instanceof Field) {\n      return this._key.equals(key.key);\n    } else {\n      return this._key.equals(key);\n    }\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Slot) {\n      return this._key.equals(that._key) && this._value.equals(that._value);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (Slot._hashSeed === void 0) {\n      Slot._hashSeed = Murmur3.seed(Slot);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Slot._hashSeed,\n        this._key.hashCode()), this._value.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"Slot\").write(46/*'.'*/).write(\"of\").write(40/*'('*/).display(this.key);\n    if (!(this.value instanceof Item.Extant)) {\n      output = output.write(44/*','*/).write(32/*' '*/).display(this.value);\n    }\n    output = output.write(41/*')'*/);\n  }\n\n  display(output: Output): void {\n    this.debug(output);\n  }\n\n  private static _hashSeed?: number;\n\n  static of(key: AnyValue, value?: AnyValue): Slot {\n    key = Item.Value.fromAny(key);\n    value = arguments.length >= 2 ? Item.Value.fromAny(value) : Item.Value.extant();\n    return new Slot(key, value);\n  }\n}\nItem.Slot = Slot;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Builder} from \"@swim/util\";\nimport {Item} from \"./Item\";\nimport {Field} from \"./Field\";\nimport {Value} from \"./Value\";\nimport {Record} from \"./Record\";\n\n/** @hidden */\nexport class ValueBuilder implements Builder<Item, Value> {\n  _record: Record | null;\n  _value: Value | null;\n\n  constructor() {\n    this._record = null;\n    this._value = null;\n  }\n\n  push(...items: Item[]): void {\n    for (let i = 0, n = arguments.length; i < n; i += 1) {\n      const item = arguments[i] as Item;\n      if (item instanceof Field) {\n        return this.pushField(item);\n      } else if (item instanceof Value) {\n        return this.pushValue(item);\n      } else {\n        throw new TypeError(\"\" + item);\n      }\n    }\n  }\n\n  /** @hidden */\n  pushField(item: Field): void {\n    if (this._record === null) {\n      this._record = Item.Record.create();\n      if (this._value !== null) {\n        this._record.push(this._value);\n        this._value = null;\n      }\n    }\n    this._record.push(item);\n  }\n\n  /** @hidden */\n  pushValue(item: Value): void {\n    if (this._record != null) {\n      this._record.push(item);\n    } else if (this._value == null) {\n      this._value = item;\n    } else {\n      this._record = Item.Record.create();\n      this._record.push(this._value);\n      this._value = null;\n      this._record.push(item);\n    }\n  }\n\n  bind(): Value {\n    if (this._record !== null) {\n      return this._record;\n    } else if (this._value !== null) {\n      return this._value;\n    } else {\n      return Value.absent();\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Builder} from \"@swim/util\";\nimport {AnyItem, Item} from \"./Item\";\nimport {Field} from \"./Field\";\nimport {ValueBuilder} from \"./ValueBuilder\";\nimport {Record} from \"./Record\";\nimport {AnyText} from \"./Text\";\nimport {AnyNum} from \"./Num\";\n\nexport type AnyValue = Value\n                     | {readonly [key: string]: AnyValue}\n                     | ReadonlyArray<unknown> // ReadonlyArray<AnyItem>\n                     | Uint8Array\n                     | string\n                     | number\n                     | boolean\n                     | null\n                     | undefined;\n\nexport abstract class Value extends Item {\n  /** @hidden */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Returns `true` if this `Value` is not [[Absent]].\n   */\n  isDefined(): boolean {\n    return true;\n  }\n\n  /**\n   * Returns `true` if this `Value` is neither [[Extant]] nor [[Absent]].\n   */\n  isDistinct(): boolean {\n    return true;\n  }\n\n  /**\n   * Always returns [[Absent]] because a `Value` can't be a `Field`, so it\n   * can't have a key component.\n   */\n  get key(): Value {\n    return Value.absent();\n  }\n\n  /**\n   * Always returns `this` because every `Value` is its own value component.\n   */\n  toValue(): Value {\n    return this;\n  }\n\n  /**\n   * Returns the `key` string of the first member of this `Value`, if this\n   * `Value` is a [[Record]], and its first member is an [[Attr]]; otherwise\n   * returns `undefined` if this `Value` is not a `Record`, or if this `Value`\n   * is a `Record` whose first member is not an `Attr`.\n   *\n   * Used to concisely get the name of the discriminating attribute of a\n   * structure.  The `tag` can be used to discern the nominal type of a\n   * polymorphic structure, similar to an XML element tag.\n   */\n  tag(): string | undefined {\n    return void 0;\n  }\n\n  /**\n   * Returns the [[Value.flattened flattened]] members of this `Value` after\n   * all attributes have been removed, if this `Value` is a [[Record]];\n   * otherwise returns `this` if this `Value` is not a `Record`.\n   *\n   * Used to concisely get the scalar value of an attributed structure.  An\n   * attributed structure is a `Record` with one or more attributes that modify\n   * one or more other members.\n   */\n  target(): Value {\n    return this;\n  }\n\n  /**\n   * Returns the sole member of this `Value`, if this `Value` is a [[Record]]\n   * with exactly one member, and its member is a `Value`; returns [[Extant]]\n   * if this `Value` is an empty `Record`; otherwise returns `this` if this\n   * `Value` is a `Record` with more than one member, or if this `Value` is a\n   * not a `Record`.\n   *\n   * Used to convert a unary `Record` into its member `Value`.  Facilitates\n   * writing code that treats a unary `Record` equivalently to a bare `Value`.\n   */\n  flattened(): Value {\n    return this;\n  }\n\n  /**\n   * Returns `this` if this `Value` is a [[Record]]; returns a `Record`\n   * containing just this `Value`, if this `Value` is [[Value.isDistinct\n   * distinct]]; otherwise returns an empty `Record` if this `Value` is\n   * [[Extant]] or [[Absent]].  Facilitates writing code that treats a bare\n   * `Value` equivalently to a unary `Record`.\n   */\n  unflattened(): Record {\n    return Value.Record.of(this);\n  }\n\n  /**\n   * Returns the value of the first member of this `Value`, if this `Value` is\n   * a `Record`, and its first member is an [[Attr]] whose `key` string is\n   * equal to `tag`; otherwise returns [[Absent]] if this `Value` is not a\n   * `Record`, or if this `Value` is a `Record` whose first member is not an\n   * `Attr`, or if this `Value` is a `Record` whose first member is an `Attr`\n   * whose `key` does not equal the `tag`.\n   *\n   * Used to conditionally get the value of the head `Attr` of a structure, if\n   * and only if the key string of the head `Attr` is equal to the `tag`.  Can\n   * be used to check if a structure might conform to a nominal type named\n   * `tag`, while simultaneously getting the value of the `tag` attribute.\n   */\n  header(tag: string): Value {\n    return Value.absent();\n  }\n\n  /**\n   * Returns the [[Value.unflattened unflattened]] [[Value.header header]] of\n   * this `Value`, if this `Value` is a [[Record]], and its first member is an\n   * [[Attr]] whose `key` string is equal to `tag`; otherwise returns\n   * `undefined`.\n   *\n   * The `headers` of the `tag` attribute of a structure are like the\n   * attributes of an XML element tag; through unlike an XML element, `tag`\n   * attribute headers are not limited to string keys and values.\n   */\n  headers(tag: string): Record | undefined {\n    return void 0;\n  }\n\n  /**\n   * Returns the first member of this `Value`, if this `Value` is a non-empty\n   * [[Record]]; otherwise returns [[Absent]].\n   */\n  head(): Item {\n    return Item.absent();\n  }\n\n  /**\n   * Returns a view of all but the first member of this `Value`, if this\n   * `Value` is a non-empty [[Record]]; otherwise returns an empty `Record`\n   * if this `Value` is not a `Record`, of if this `Value` is itself an\n   * empty `Record`.\n   */\n  tail(): Record {\n    return Value.Record.empty();\n  }\n\n  /**\n   * Returns the [[Record.flattened flattened]] [[Value.tail tail]] of this\n   * `Value`.  Used to recursively deconstruct a structure, terminating with\n   * its last `Value`, rather than a unary `Record` containing its last value,\n   * if the structure ends with a `Value` member.\n   */\n  body(): Value {\n    return Value.extant();\n  }\n\n  /**\n   * Returns the number of members contained in this `Value`, if this `Value`\n   * is a [[Record]]; otherwise returns `0` if this `Value` is not a `Record`.\n   */\n  get length(): number {\n    return 0;\n  }\n\n  /**\n   * Returns `true` if this `Value` is a [[Record]] that has a [[Field]] member\n   * with a key that is equal to the given `key`; otherwise returns `false` if\n   * this `Value` is not a `Record`, or if this `Value` is a `Record`, but has\n   * no `Field` member with a key equal to the given `key`.\n   */\n  has(key: AnyValue): boolean {\n    return false;\n  }\n\n  /**\n   * Returns the value of the last [[Field]] member of this `Value` whose key\n   * is equal to the given `key`; returns [[Absent]] if this `Value` is not a\n   * [[Record]], or if this `Value` is a `Record`, but has no `Field` member\n   * with a key equal to the given `key`.\n   */\n  get(key: AnyValue): Value {\n    return Value.absent();\n  }\n\n  /**\n   * Returns the value of the last [[Attr]] member of this `Value` whose key\n   * is equal to the given `key`; returns [[Absent]] if this `Value` is not a\n   * [[Record]], or if this `Value` is a `Record`, but has no `Attr` member\n   * with a key equal to the given `key`.\n   */\n  getAttr(key: AnyText): Value {\n    return Value.absent();\n  }\n\n  /**\n   * Returns the value of the last [[Slot]] member of this `Value` whose key\n   * is equal to the given `key`; returns [[Absent]] if this `Value` is not a\n   * [[Record]], or if this `Value` is a `Record`, but has no `Slot` member\n   * with a key equal to the given `key`.\n   */\n  getSlot(key: AnyValue): Value {\n    return Value.absent();\n  }\n\n  /**\n   * Returns the last [[Field]] member of this `Value` whose key is equal to\n   * the given `key`; returns `undefined` if this `Value` is not a [[Record]],\n   * or if this `Value` is a `Record`, but has no `Field` member with a `key`\n   * equal to the given `key`.\n   */\n  getField(key: AnyValue): Field | undefined {\n    return void 0;\n  }\n\n  /**\n   * Returns the member of this `Value` at the given `index`, if this `Value`\n   * is a [[Record]], and the `index` is greater than or equal to zero, and\n   * less than the [[Record.length length]] of the `Record`; otherwise returns\n   * [[Absent]] if this `Value` is not a `Record`, or if this `Value` is a\n   * `Record`, but the `index` is out of bounds.\n   */\n  getItem(index: AnyNum): Item {\n    return Item.absent();\n  }\n\n  deleted(key: AnyValue): Value {\n    return this;\n  }\n\n  conditional(thenTerm: AnyValue, elseTerm: AnyValue): Value;\n  conditional(thenTerm: AnyItem, elseTerm: AnyItem): Item;\n  conditional(thenTerm: AnyItem, elseTerm: AnyItem): Item {\n    thenTerm = Item.fromAny(thenTerm);\n    return thenTerm;\n  }\n\n  or(that: AnyValue): Value;\n  or(that: AnyItem): Item;\n  or(that: AnyItem): Item {\n    return this;\n  }\n\n  and(that: AnyValue): Value;\n  and(that: AnyItem): Item;\n  and(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    return that;\n  }\n\n  bitwiseOr(that: AnyValue): Value;\n  bitwiseOr(that: AnyItem): Item;\n  bitwiseOr(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.BitwiseOrOperator(this, that);\n    } else if (that instanceof Item.Attr) {\n      const newValue = this.bitwiseOr(that.value);\n      if (newValue.isDefined()) {\n        return new Item.Attr(that.key, newValue);\n      }\n    } else if (that instanceof Item.Slot) {\n      const newValue = this.bitwiseOr(that.value);\n      if (newValue.isDefined()) {\n        return new Item.Slot(that.key, newValue);\n      }\n    }\n    return Item.absent();\n  }\n\n  bitwiseXor(that: AnyValue): Value;\n  bitwiseXor(that: AnyItem): Item;\n  bitwiseXor(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.BitwiseXorOperator(this, that);\n    } else if (that instanceof Item.Attr) {\n      const newValue = this.bitwiseXor(that.value);\n      if (newValue.isDefined()) {\n        return new Item.Attr(that.key, newValue);\n      }\n    } else if (that instanceof Item.Slot) {\n      const newValue = this.bitwiseXor(that.value);\n      if (newValue.isDefined()) {\n        return new Item.Slot(that.key, newValue);\n      }\n    }\n    return Item.absent();\n  }\n\n  bitwiseAnd(that: AnyValue): Value;\n  bitwiseAnd(that: AnyItem): Item;\n  bitwiseAnd(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.BitwiseAndOperator(this, that);\n    } else if (that instanceof Item.Attr) {\n      const newValue = this.bitwiseAnd(that.value);\n      if (newValue.isDefined()) {\n        return new Item.Attr(that.key, newValue);\n      }\n    } else if (that instanceof Item.Slot) {\n      const newValue = this.bitwiseAnd(that.value);\n      if (newValue.isDefined()) {\n        return new Item.Slot(that.key, newValue);\n      }\n    }\n    return Item.absent();\n  }\n\n  lt(that: AnyValue): Value;\n  lt(that: AnyItem): Item;\n  lt(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.LtOperator(this, that);\n    }\n    return super.lt(that);\n  }\n\n  le(that: AnyValue): Value;\n  le(that: AnyItem): Item;\n  le(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.LeOperator(this, that);\n    }\n    return super.le(that);\n  }\n\n  eq(that: AnyValue): Value;\n  eq(that: AnyItem): Item;\n  eq(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.EqOperator(this, that);\n    }\n    return super.eq(that);\n  }\n\n  ne(that: AnyValue): Value;\n  ne(that: AnyItem): Item;\n  ne(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.NeOperator(this, that);\n    }\n    return super.ne(that);\n  }\n\n  ge(that: AnyValue): Value;\n  ge(that: AnyItem): Item;\n  ge(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.GeOperator(this, that);\n    }\n    return super.ge(that);\n  }\n\n  gt(that: AnyValue): Value;\n  gt(that: AnyItem): Item;\n  gt(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.GtOperator(this, that);\n    }\n    return super.gt(that);\n  }\n\n  plus(that: AnyValue): Value;\n  plus(that: AnyItem): Item;\n  plus(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.PlusOperator(this, that);\n    } else if (that instanceof Item.Attr) {\n      const newValue = this.plus(that.value);\n      if (newValue.isDefined()) {\n        return new Item.Attr(that.key, newValue);\n      }\n    } else if (that instanceof Item.Slot) {\n      const newValue = this.plus(that.value);\n      if (newValue.isDefined()) {\n        return new Item.Slot(that.key, newValue);\n      }\n    }\n    return Item.absent();\n  }\n\n  minus(that: AnyValue): Value;\n  minus(that: AnyItem): Item;\n  minus(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.MinusOperator(this, that);\n    } else if (that instanceof Item.Attr) {\n      const newValue = this.minus(that.value);\n      if (newValue.isDefined()) {\n        return new Item.Attr(that.key, newValue);\n      }\n    } else if (that instanceof Item.Slot) {\n      const newValue = this.minus(that.value);\n      if (newValue.isDefined()) {\n        return new Item.Slot(that.key, newValue);\n      }\n    }\n    return Item.absent();\n  }\n\n  times(that: AnyValue): Value;\n  times(that: AnyItem): Item;\n  times(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.TimesOperator(this, that);\n    } else if (that instanceof Item.Attr) {\n      const newValue = this.times(that.value);\n      if (newValue.isDefined()) {\n        return new Item.Attr(that.key, newValue);\n      }\n    } else if (that instanceof Item.Slot) {\n      const newValue = this.times(that.value);\n      if (newValue.isDefined()) {\n        return new Item.Slot(that.key, newValue);\n      }\n    }\n    return Item.absent();\n  }\n\n  divide(that: AnyValue): Value;\n  divide(that: AnyItem): Item;\n  divide(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.DivideOperator(this, that);\n    } else if (that instanceof Item.Attr) {\n      const newValue = this.divide(that.value);\n      if (newValue.isDefined()) {\n        return new Item.Attr(that.key, newValue);\n      }\n    } else if (that instanceof Item.Slot) {\n      const newValue = this.divide(that.value);\n      if (newValue.isDefined()) {\n        return new Item.Slot(that.key, newValue);\n      }\n    }\n    return Item.absent();\n  }\n\n  modulo(that: AnyValue): Value;\n  modulo(that: AnyItem): Item;\n  modulo(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Item.Expression) {\n      return new Item.ModuloOperator(this, that);\n    } else if (that instanceof Item.Attr) {\n      const newValue = this.modulo(that.value);\n      if (newValue.isDefined()) {\n        return new Item.Attr(that.key, newValue);\n      }\n    } else if (that instanceof Item.Slot) {\n      const newValue = this.modulo(that.value);\n      if (newValue.isDefined()) {\n        return new Item.Slot(that.key, newValue);\n      }\n    }\n    return Item.absent();\n  }\n\n  not(): Value {\n    return Value.absent();\n  }\n\n  bitwiseNot(): Value {\n    return Value.absent();\n  }\n\n  negative(): Value {\n    return Value.absent();\n  }\n\n  positive(): Value {\n    return Value.absent();\n  }\n\n  inverse(): Value {\n    return Value.absent();\n  }\n\n  lambda(template: Value): Value {\n    return new Item.LambdaFunc(this, template);\n  }\n\n  /**\n   * Converts this `Value` into a `string` value, if possible; otherwise returns\n   * `undefined` if this `Value` can't be converted into a `string` value.\n   */\n  stringValue(): string | undefined;\n  /**\n   * Converts this `Value` into a `string` value, if possible; otherwise returns\n   * `orElse` if this `Value` can't be converted into a `string` value.\n   */\n  stringValue<T>(orElse: T): string | T;\n  stringValue<T>(orElse?: T): string | T | undefined {\n    return orElse;\n  }\n\n  /**\n   * Converts this `Value` into a `number` value, if possible; otherwise returns\n   * `undefined` if this `Value` can't be converted into a `number` value.\n   */\n  numberValue(): number | undefined;\n  /**\n   * Converts this `Value` into a `number` value, if possible; otherwise returns\n   * `orElse` if this `Value` can't be converted into a `number` value.\n   */\n  numberValue<T>(orElse: T): number | T;\n  numberValue<T>(orElse?: T): number | T | undefined {\n    return orElse;\n  }\n\n  /**\n   * Converts this `Value` into a `boolean` value, if possible; otherwise\n   * returns `undefined` if this `Value` can't be converted into a `boolean`\n   * value.\n   */\n  booleanValue(): boolean | undefined;\n  /**\n   * Converts this `Value` into a `boolean` value, if possible; otherwise\n   * returns `orElse` if this `Value` can't be converted into a `boolean` value.\n   */\n  booleanValue<T>(orElse: T): boolean | T;\n  booleanValue<T>(orElse?: T): boolean | T | undefined {\n    return orElse;\n  }\n\n  abstract toAny(): AnyValue;\n\n  isAliased(): boolean {\n    return false;\n  }\n\n  isMutable(): boolean {\n    return false;\n  }\n\n  alias(): void {\n    // nop\n  }\n\n  branch(): Value {\n    return this;\n  }\n\n  clone(): Value {\n    return this;\n  }\n\n  commit(): this {\n    return this;\n  }\n\n  keyEquals(key: unknown): boolean {\n    return false;\n  }\n\n  static builder(): Builder<Item, Value> {\n    return new ValueBuilder();\n  }\n\n  static empty(): Value {\n    return Value.Record.empty();\n  }\n\n  static extant(): Value {\n    return Value.Extant.extant();\n  }\n\n  static absent(): Value {\n    return Value.Absent.absent();\n  }\n\n  static fromAny(value: AnyValue): Value {\n    if (value instanceof Value) {\n      return value;\n    } else if (value === void 0) {\n      return Value.Absent.absent();\n    } else if (value === null) {\n      return Value.Extant.extant();\n    } else if (typeof value === \"boolean\") {\n      return Value.Bool.from(value);\n    } else if (typeof value === \"number\") {\n      return Value.Num.from(value);\n    } else if (typeof value === \"string\") {\n      return Value.Text.from(value);\n    } else if (value instanceof Uint8Array) {\n      return Value.Data.wrap(value);\n    } else if (Array.isArray(value)) {\n      return Value.Record.fromArray(value);\n    } else if (typeof value === \"object\") {\n      return Value.Record.fromObject(value as {[key: string]: AnyValue});\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n}\nItem.Value = Value;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {Item} from \"./Item\";\nimport {Record} from \"./Record\";\n\n/** @hidden */\nexport class RecordCursor extends Cursor<Item> {\n  /** @hidden */\n  readonly _record: Record;\n  /** @hidden */\n  readonly _lower: number;\n  /** @hidden */\n  readonly _upper: number;\n  /** @hidden */\n  _index: number;\n  /** @hidden */\n  _direction: number;\n\n  constructor(record: Record, lower: number = 0, upper: number = record.length, index: number = lower) {\n    super();\n    this._record = record;\n    this._lower = lower;\n    this._upper = upper;\n    this._index = index;\n    this._direction = 0;\n  }\n\n  isEmpty(): boolean {\n    return this._index >= this._upper;\n  }\n\n  head(): Item {\n    this._direction = 0;\n    if (this._index < this._upper) {\n      return this._record.getItem(this._index);\n    } else {\n      throw new Error(\"empty\");\n    }\n  }\n\n  step(): void {\n    this._direction = 0;\n    if (this._index < this._upper) {\n      this._index += 1;\n    } else {\n      throw new Error(\"empty\");\n    }\n  }\n\n  skip(count: number): void {\n    this._index = Math.min(Math.max(this._lower, this._index + count, this._upper));\n  }\n\n  hasNext(): boolean {\n    return this._index < this._upper;\n  }\n\n  nextIndex(): number {\n    return this._index - this._lower;\n  }\n\n  next(): {value?: Item, done: boolean} {\n    this._direction = 1;\n    const index = this._index;\n    if (index < this._upper) {\n      this._index = index + 1;\n      return {value: this._record.getItem(index), done: this._index === this._upper};\n    } else {\n      this._index = this._upper;\n      return {done: true};\n    }\n  }\n\n  hasPrevious(): boolean {\n    return this._index > this._lower;\n  }\n\n  previousIndex(): number {\n    return this._index - this._lower - 1;\n  }\n\n  previous(): {value?: Item, done: boolean} {\n    this._direction = -1;\n    const index = this._index - 1;\n    if (index >= this._lower) {\n      this._index = index;\n      return {value: this._record.getItem(index), done: index === this._lower};\n    } else {\n      this._index = 0;\n      return {done: true};\n    }\n  }\n\n  set(newItem: Item): void {\n    if (this._direction > 0) {\n      this._record.setItem(this._index - 1, newItem);\n    } else {\n      this._record.setItem(this._index, newItem);\n    }\n  }\n\n  delete(): void {\n    if (this._direction > 0) {\n      this._index -= 1;\n    }\n    this._record.splice(this._index, 1);\n    this._direction = 0;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects, Cursor, Builder} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {AnyItem, Item} from \"./Item\";\nimport {Field} from \"./Field\";\nimport {AnyValue, Value} from \"./Value\";\nimport {RecordCursor} from \"./RecordCursor\";\nimport {AnyText} from \"./Text\";\nimport {AnyNum} from \"./Num\";\nimport {AnyInterpreter, Interpreter} from \"./Interpreter\";\n\nexport type AnyRecord = Record\n                      | {readonly [key: string]: AnyValue}\n                      | ReadonlyArray<unknown>; // ReadonlyArray<AnyItem>\n\nexport abstract class Record extends Value implements Builder<Item, Record> {\n  /** @hidden */\n  _hashCode?: number;\n\n  /** @hidden */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Returns `true` if this `Record` has no members.\n   */\n  abstract isEmpty(): boolean;\n\n  /**\n   * Returns `true` if this `Record` has only [[Value]] members–no `Field`\n   * members.\n   */\n  isArray(): boolean {\n    return this.fieldCount() === 0;\n  }\n\n  /**\n   * Returns `true` if this `Record` has only [[Field]] members–no `Value`\n   * members.\n   */\n  isObject(): boolean {\n    return this.valueCount() === 0;\n  }\n\n  /**\n   * Returns the number of members contained in this `Record`.\n   */\n  abstract get length(): number;\n\n  /**\n   * Returns the number of [[Field]] members contained in this `Record`.\n   */\n  fieldCount(): number {\n    let count = 0;\n    this.forEach(function (member: Item): void {\n      if (member instanceof Item.Field) {\n        count += 1;\n      }\n    }, this);\n    return count;\n  }\n\n  /**\n   * Returns the number of [[Value]] members contained in this `Record`.\n   */\n  valueCount(): number {\n    let count = 0;\n    this.forEach(function (member: Item): void {\n      if (member instanceof Value) {\n        count += 1;\n      }\n    }, this);\n    return count;\n  }\n\n  isConstant(): boolean {\n    return this.forEach(function (member: Item): boolean | undefined {\n      return member.isConstant() ? void 0 : false;\n    }, this) === void 0;\n  }\n\n  /**\n   * Returns the `key` string of the first member of this `Record`, if the\n   * first member is an [[Attr]]; otherwise returns `undefined` if the first\n   * member is not an `Attr`.\n   *\n   * Used to concisely get the name of the discriminating attribute of a\n   * structure.  The `tag` can be used to discern the nominal type of a\n   * polymorphic structure, similar to an XML element tag.\n   */\n  tag(): string | undefined {\n    const item = this.head();\n    if (item instanceof Item.Attr) {\n      return item.key.value;\n    }\n    return void 0;\n  }\n\n  /**\n   * Returns the [[Record.flattened flattened]] members of this `Record` after\n   * all attributes have been removed.\n   *\n   * Used to concisely get the scalar value of an attributed structure.  An\n   * attributed structure is a `Record` with one or more attributes that modify\n   * one or more other members.\n   */\n  target(): Value {\n    let value: Value | undefined;\n    let record: Record | undefined;\n    let modified = false;\n    this.forEach(function (item: Item): void {\n      if (item instanceof Item.Attr) {\n        modified = true;\n      } else if (value === void 0 && item instanceof Value) {\n        value = item;\n      } else {\n        if (record === void 0) {\n          record = Record.create();\n          if (value !== void 0) {\n            record.push(value);\n          }\n        }\n        record.push(item);\n      }\n    }, this);\n    if (value === void 0) {\n      return Value.extant();\n    } else if (record === void 0) {\n      return value;\n    } else if (modified) {\n      return record;\n    } else {\n      return this;\n    }\n  }\n\n  /**\n   * Returns the sole member of this `Record`, if this `Record` has exactly one\n   * member, and its member is a `Value`; returns [[Extant]] if this `Record`\n   * is empty; otherwise returns `this` if this `Record` has more than one\n   * member.\n   *\n   * Used to convert a unary `Record` into its member `Value`.  Facilitates\n   * writing code that treats a unary `Record` equivalently to a bare `Value`.\n   */\n  flattened(): Value {\n    if (this.isEmpty()) {\n      return Value.extant();\n    } else {\n      const items = this.iterator();\n      const head = items.head();\n      items.step();\n      if (items.isEmpty() && head instanceof Value) {\n        return head;\n      } else {\n        return this.branch();\n      }\n    }\n  }\n\n  /**\n   * Returns `this` `Record.\n   */\n  unflattened(): Record {\n    return this;\n  }\n\n  /**\n   * Returns the value of the first member of this `Record`, if the first\n   * member is an [[Attr]] whose `key` string is equal to `tag`; otherwise\n   * returns [[Absent]] if the first member of this `Record` is not an `Attr`,\n   * or if the first member of this `Record` is an `Attr` whose `key` does not\n   * equal the `tag`.\n   *\n   * Used to conditionally get the value of the head `Attr` of a structure, if\n   * and only if the key string of the head `Attr` is equal to the `tag`.  Can\n   * be used to check if a structure might conform to a nominal type named\n   * `tag`, while simultaneously getting the value of the `tag` attribute.\n   */\n  header(tag: string): Value {\n    const head = this.head();\n    if (head instanceof Item.Attr && head.key.value === tag) {\n      return head.value;\n    } else {\n      return Value.absent();\n    }\n  }\n\n  /**\n   * Returns the [[Record.unflattened unflattened]] [[Record.header header]] of\n   * this `Record`.  The `headers` of the `tag` attribute of a structure are\n   * like the attributes of an XML element tag; through unlike an XML element,\n   * `tag` attribute headers are not limited to string keys and values.\n   */\n  headers(tag: string): Record | undefined {\n    const head = this.head();\n    if (head instanceof Item.Attr && head.key.value === tag) {\n      const header = head.value;\n      if (header instanceof Record) {\n        return header;\n      } else {\n        return Record.of(header);\n      }\n    }\n    return void 0;\n  }\n\n  /**\n   * Returns the first member of this `Record`, if this `Record` is non-empty;\n   * otherwise returns [[Absent]].\n   */\n  head(): Item {\n    return this.forEach(function (item: Item): Item {\n      return item;\n    }, this) || Item.absent();\n  }\n\n  /**\n   * Returns a view of all but the first member of this `Record`, if this\n   * `Record` is non-empty; otherwise returns an empty `Record`, if this\n   * `Record` is itself empty.\n   */\n  tail(): Record {\n    const tail = Record.create();\n    this.forEach(function (item: Item, index: number): void {\n      if (index > 0) {\n        tail.push(item);\n      }\n    }, this);\n    return tail;\n  }\n\n  /**\n   * Returns the [[Record.flattened flattened]] [[Record.tail tail]] of this\n   * `Record`.  Used to recursively deconstruct a structure, terminating\n   * with its last `Value`, rather than a unary `Record` containing its last\n   * value, if the structure ends with a `Value` member.\n   */\n  body(): Value {\n    const tail = this.tail();\n    if (!tail.isEmpty()) {\n      return tail.flattened();\n    } else {\n      return Value.absent();\n    }\n  }\n\n  /**\n   * Returns `true` if this `Record` has a [[Field]] member with a key that is\n   * equal to the given `key`; otherwise returns `false` if this `Record` has\n   * no `Field` member with a key equal to the given `key`.\n   */\n  has(key: AnyValue): boolean {\n    key = Value.fromAny(key);\n    return this.forEach(function (item: Item): boolean | undefined {\n      return item instanceof Item.Field && item.key.equals(key) ? true : void 0;\n    }, this) || false;\n  }\n\n  indexOf(item: AnyItem, index: number = 0): number {\n    item = Item.fromAny(item);\n    if (index < 0) {\n      index = Math.max(0, this.length + index);\n    }\n    const i = this.forEach(function (member: Item, i: number): number | undefined {\n      return i >= index && (item as Item).equals(member) ? i : void 0;\n    }, this);\n    return i !== void 0 ? i : -1;\n  }\n\n  lastIndexOf(item: AnyItem, index?: number): number {\n    item = Item.fromAny(item);\n    const n = this.length;\n    if (index === void 0) {\n      index = n - 1;\n    } else if (index < 0) {\n      index = n + index;\n    }\n    index = Math.min(index, n - 1);\n    while (index >= 0) {\n      if (item.equals(this.getItem(index))) {\n        return index;\n      }\n      index -= 1;\n    }\n    return -1;\n  }\n\n  /**\n   * Returns the value of the last [[Field]] member of this `Record` whose key\n   * is equal to the given `key`; returns [[Absent]] if this `Record` has no\n   * `Field` member with a key equal to the given `key`.\n   */\n  get(key: AnyValue): Value {\n    key = Value.fromAny(key);\n    return this.forEach(function (item: Item): Value | undefined {\n      return item instanceof Item.Field && item.key.equals(key) ? item.value : void 0;\n    }, this) || Value.absent();\n  }\n\n  /**\n   * Returns the value of the last [[Attr]] member of this `Record` whose key\n   * is equal to the given `key`; returns [[Absent]] if this `Record` has no\n   * `Attr` member with a key equal to the given `key`.\n   */\n  getAttr(key: AnyText): Value {\n    key = Value.Text.fromAny(key);\n    return this.forEach(function (item: Item): Value | undefined {\n      return item instanceof Item.Attr && item.key.equals(key) ? item.value : void 0;\n    }, this) || Value.absent();\n  }\n\n  /**\n   * Returns the value of the last [[Slot]] member of this `Record` whose key\n   * is equal to the given `key`; returns [[Absent]] if this `Record` has no\n   * `Slot` member with a key equal to the given `key`.\n   */\n  getSlot(key: AnyValue): Value {\n    key = Value.fromAny(key);\n    return this.forEach(function (item: Item): Value | undefined {\n      return item instanceof Item.Slot && item.key.equals(key) ? item.value : void 0;\n    }, this) || Value.absent();\n  }\n\n  /**\n   * Returns the last [[Field]] member of this `Record` whose key is equal to\n   * the given `key`; returns `undefined` if this `Record` has no `Field` member\n   * with a `key` equal to the given `key`.\n   */\n  getField(key: AnyValue): Field | undefined {\n    key = Value.fromAny(key);\n    return this.forEach(function (item: Item): Field | undefined {\n      return item instanceof Item.Field && item.key.equals(key) ? item : void 0;\n    }, this);\n  }\n\n  /**\n   * Returns the member of this `Record` at the given `index`, if the `index`\n   * is greater than or equal to zero, and less than the [[Record.length\n   * length]] of this `Record`; otherwise returns [[Absent]] if the `index` is\n   * out of bounds.\n   */\n  abstract getItem(index: AnyNum): Item;\n\n  set(key: AnyValue, newValue: AnyValue): this {\n    key = Value.fromAny(key);\n    newValue = Value.fromAny(newValue);\n    const items = this.iterator();\n    while (!items.isEmpty()) {\n      const item = items.head();\n      if (item instanceof Item.Field && item.key.equals(key)) {\n        if (item.isMutable()) {\n          item.setValue(newValue);\n        } else {\n          items.set(item.updatedValue(newValue));\n        }\n        return this;\n      }\n      items.step();\n    }\n    this.push(new Item.Slot(key, newValue));\n    return this;\n  }\n\n  setAttr(key: AnyText, newValue: AnyValue): this {\n    key = Value.Text.fromAny(key);\n    newValue = Value.fromAny(newValue);\n    const items = this.iterator();\n    while (!items.isEmpty()) {\n      const item = items.head();\n      if (item instanceof Item.Field && item.key.equals(key)) {\n        if (item instanceof Item.Attr && item.isMutable()) {\n          item.setValue(newValue);\n        } else {\n          items.set(new Item.Attr(key, newValue));\n        }\n        return this;\n      }\n      items.step();\n    }\n    this.push(new Item.Attr(key, newValue));\n    return this;\n  }\n\n  setSlot(key: AnyValue, newValue: AnyValue): this {\n    key = Value.fromAny(key);\n    newValue = Value.fromAny(newValue);\n    const items = this.iterator();\n    while (!items.isEmpty()) {\n      const item = items.head();\n      if (item instanceof Item.Field && item.key.equals(key)) {\n        if (item instanceof Item.Slot && item.isMutable()) {\n          item.setValue(newValue);\n        } else {\n          items.set(new Item.Slot(key, newValue));\n        }\n        return this;\n      }\n      items.step();\n    }\n    this.push(new Item.Slot(key, newValue));\n    return this;\n  }\n\n  /**\n   * Replaces the member of this `Record` at the given `index` with a new\n   * `item`, returning {@code this} {@code Record}, if the {@code index} is\n   * greater than or equal to zero, and less than the [[Record.length length]]\n   * of this {@code Record}.\n   *\n   * @throws `Error` if this is an immutable `Record`.\n   * @throws `RangeError` if the `index` is out of bounds.\n   */\n  abstract setItem(index: number, item: AnyItem): this;\n\n  updated(key: AnyValue, value: AnyValue): Record {\n    key = Value.fromAny(key);\n    value = Value.fromAny(value);\n    const record = this.isMutable() ? this : this.branch();\n    const items = record.iterator();\n    while (!items.isEmpty()) {\n      const item = items.head();\n      if (item.key.equals(key)) {\n        if (item instanceof Item.Field && item.isMutable()) {\n          item.setValue(value);\n        } else {\n          items.set(new Item.Slot(key, value));\n        }\n        return record;\n      }\n      items.step();\n    }\n    record.push(new Item.Slot(key, value));\n    return record;\n  }\n\n  updatedAttr(key: AnyText, value: AnyValue): Record {\n    key = Value.Text.fromAny(key);\n    value = Value.fromAny(value);\n    const record = this.isMutable() ? this : this.branch();\n    const items = record.iterator();\n    while (!items.isEmpty()) {\n      const item = items.head();\n      if (item.key.equals(key)) {\n        if (item instanceof Item.Attr && item.isMutable()) {\n          item.setValue(value);\n        } else {\n          items.set(new Item.Attr(key, value));\n        }\n        return record;\n      }\n      items.step();\n    }\n    record.push(new Item.Attr(key, value));\n    return record;\n  }\n\n  updatedSlot(key: AnyValue, value: AnyValue): Record {\n    key = Value.fromAny(key);\n    value = Value.fromAny(value);\n    const record = this.isMutable() ? this : this.branch();\n    const items = record.iterator();\n    while (!items.isEmpty()) {\n      const item = items.head();\n      if (item.key.equals(key)) {\n        if (item instanceof Item.Slot && item.isMutable()) {\n          item.setValue(value);\n        } else {\n          items.set(new Item.Slot(key, value));\n        }\n        return record;\n      }\n      items.step();\n    }\n    record.push(new Item.Slot(key, value));\n    return record;\n  }\n\n  abstract push(...items: AnyItem[]): number;\n\n  abstract splice(start: number, deleteCount?: number, ...newItems: AnyItem[]): Item[];\n\n  abstract delete(key: AnyValue): Item;\n\n  abstract clear(): void;\n\n  appended(...items: AnyItem[]): Record {\n    const record = this.isMutable() ? this : this.branch();\n    record.push.apply(record, arguments);\n    return record;\n  }\n\n  prepended(...items: AnyItem[]): Record {\n    const record = this.isMutable() ? this : this.branch();\n    record.splice.apply(record, Array.prototype.concat.apply([0, 0], arguments));\n    return record;\n  }\n\n  deleted(key: AnyValue): Record {\n    const record = this.isMutable() ? this : this.branch();\n    record.delete(key);\n    return record;\n  }\n\n  concat(...items: AnyItem[]): Record {\n    const record = this.isMutable() ? this : this.branch();\n    for (let i = 0, n = arguments.length; i < n; i += 1) {\n      Item.fromAny(arguments[i]).forEach(function (item: Item): void {\n        record.push(item);\n      });\n    }\n    return record;\n  }\n\n  slice(lower?: number, upper?: number): Record {\n    return this.subRecord.apply(this, arguments).branch();\n  }\n\n  attr(key: AnyText, value?: AnyValue): this {\n    this.push(Item.Attr.of.apply(void 0, arguments));\n    return this;\n  }\n\n  slot(key: AnyValue, value?: AnyValue): this {\n    this.push(Item.Slot.of.apply(void 0, arguments));\n    return this;\n  }\n\n  item(item: AnyItem): this {\n    this.push(item);\n    return this;\n  }\n\n  items(...items: AnyItem[]): this {\n    this.push.apply(this, arguments);\n    return this;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Record {\n    interpreter = Interpreter.fromAny(interpreter);\n    const scope = Record.create();\n    interpreter.pushScope(scope);\n    let changed = false;\n    this.forEach(function (oldItem: Item): void {\n      const newItem = oldItem.evaluate(interpreter);\n      if (newItem.isDefined()) {\n        scope.push(newItem);\n      }\n      if (oldItem !== newItem) {\n        changed = true;\n      }\n    }, this);\n    interpreter.popScope();\n    return changed ? scope : this;\n  }\n\n  substitute(interpreter: AnyInterpreter): Record {\n    interpreter = Interpreter.fromAny(interpreter);\n    const scope = Record.create();\n    interpreter.pushScope(scope);\n    let changed = false;\n    this.forEach(function (oldItem: Item) {\n      const newItem = oldItem.substitute(interpreter);\n      if (newItem.isDefined()) {\n        scope.push(newItem);\n      }\n      if (oldItem !== newItem) {\n        changed = true;\n      }\n    }, this);\n    interpreter.popScope();\n    return changed ? scope : this;\n  }\n\n  stringValue(): string | undefined;\n  stringValue<T>(orElse: T): string | T;\n  stringValue<T>(orElse?: T): string | T | undefined {\n    let recordString = \"\";\n    const defined = this.forEach(function (item: Item): null | void {\n      if (item instanceof Value) {\n        const itemString = item.stringValue();\n        if (itemString !== void 0) {\n          recordString += itemString;\n          return;\n        }\n      }\n      return null; // break\n    }, this) === void 0;\n    return defined ? recordString : void 0;\n  }\n\n  toAny(): AnyValue {\n    if (!this.isEmpty() && this.isArray()) {\n      return this.toArray();\n    } else {\n      return this.toObject();\n    }\n  }\n\n  toArray(): AnyItem[] {\n    const array = new Array<AnyItem>(this.length);\n    this.forEach(function (item: Item, index: number): void {\n      if (item instanceof Value) {\n        array[index] = item.toAny();\n      } else if (item instanceof Item.Field) {\n        array[index] = {\n          $key: item.key.toAny(),\n          $value: item.value.toAny(),\n        };\n      }\n    }, this);\n    return array;\n  }\n\n  toObject(): {[key: string]: AnyValue} {\n    const object = {} as {[key: string]: AnyValue};\n    this.forEach(function (item: Item, index: number): void {\n      if (item instanceof Item.Attr) {\n        object[\"@\" + item.key.value] = item.value.toAny();\n      } else if (item instanceof Item.Slot) {\n        if (item.key instanceof Value.Text) {\n          object[item.key.value] = item.value.toAny();\n        } else {\n          object[\"$\" + index] = {\n            $key: item.key.toAny(),\n            $value: item.value.toAny(),\n          };\n        }\n      } else if (item instanceof Value) {\n        object[\"$\" + index] = item.toAny();\n      }\n    }, this);\n    return object;\n  }\n\n  isAliased(): boolean {\n    return false;\n  }\n\n  isMutable(): boolean {\n    return true;\n  }\n\n  alias(): void {\n    // nop\n  }\n\n  branch(): Record {\n    const branch = Record.create();\n    this.forEach(function (item: Item): void {\n      branch.push(item);\n    }, this);\n    return branch;\n  }\n\n  clone(): Record {\n    const clone = Record.create();\n    this.forEach(function (item: Item): void {\n      clone.push(item.clone());\n    }, this);\n    return clone;\n  }\n\n  commit(): this {\n    return this;\n  }\n\n  bind(): Record {\n    return this;\n  }\n\n  subRecord(lower?: number, upper?: number): Record {\n    const n = this.length;\n    if (lower === void 0) {\n      lower = 0;\n    } else if (lower < 0) {\n      lower = n + lower;\n    }\n    lower = Math.min(Math.max(0, lower), n);\n    if (upper === void 0) {\n      upper = n;\n    } else if (upper < 0) {\n      upper = n + upper;\n    }\n    const record = Value.Record.create();\n    this.forEach(function (item: Item, index: number): null | void {\n      if (index < lower!) {\n        return;\n      } else if (index < upper!) {\n        record.push(item);\n        return;\n      } else {\n        return null;\n      }\n    }, this);\n    return record;\n  }\n\n  abstract forEach<T, S = unknown>(callback: (this: S, item: Item, index: number) => T | void,\n                                   thisArg?: S): T | undefined;\n\n  iterator(): Cursor<Item> {\n    return new RecordCursor(this);\n  }\n\n  typeOrder(): number {\n    return 3;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof Record) {\n      const xs = this.iterator();\n      const ys = that.iterator();\n      let order = 0 as 0 | 1 | -1;\n      do {\n        if (!xs.isEmpty() && !ys.isEmpty()) {\n          order = xs.head().compareTo(ys.head());\n          xs.step();\n          ys.step();\n        } else {\n          break;\n        }\n      } while (order === 0);\n      if (order !== 0) {\n        return order;\n      } else if (xs.isEmpty() && !ys.isEmpty()) {\n        return -1;\n      } else if (!xs.isEmpty() && ys.isEmpty()) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Record) {\n      const xs = this.iterator();\n      const ys = that.iterator();\n      while (!xs.isEmpty() && !ys.isEmpty()) {\n        if (!xs.head().equals(ys.head())) {\n          return false;\n        }\n        xs.step();\n        ys.step();\n      }\n      return xs.isEmpty() && ys.isEmpty();\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (this._hashCode === void 0) {\n      if (Record._hashSeed === void 0) {\n        Record._hashSeed = Murmur3.seed(Record);\n      }\n      let code = Record._hashSeed;\n      this.forEach(function (item: Item): void {\n        code = Murmur3.mix(code, item.hashCode());\n      }, this);\n      this._hashCode = Murmur3.mash(code);\n    }\n    return this._hashCode;\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"Record\").write(46/*'.'*/);\n    if (this.isEmpty()) {\n      output = output.write(\"empty\").write(40/*'('*/).write(41/*')'*/);\n    } else {\n      output = output.write(\"of\").write(40/*'('*/);\n      this.forEach(function (item: Item, index: number): void {\n        if (index !== 0) {\n          output = output.write(44/*','*/).write(32/*' '*/);\n        }\n        output.display(item);\n      }, this);\n      output = output.write(41/*')'*/);\n    }\n  }\n\n  display(output: Output): void {\n    this.debug(output);\n  }\n\n  /** @hidden */\n  static readonly ALIASED: number = 1;\n  /** @hidden */\n  static readonly IMMUTABLE: number = 2;\n\n  private static _hashSeed?: number;\n\n  static empty(): Record {\n    return Record.RecordMap.empty();\n  }\n\n  static create(initialCapacity?: number): Record {\n    return Record.RecordMap.create(initialCapacity);\n  }\n\n  static of(...items: AnyItem[]): Record {\n    return Record.RecordMap.of.apply(void 0, arguments);\n  }\n\n  static fromAny(value: AnyRecord): Record {\n    if (value instanceof Record) {\n      return value;\n    } else if (Array.isArray(value)) {\n      return Record.fromArray(value);\n    } else if (value && typeof value === \"object\") {\n      return Record.fromObject(value as {[key: string]: AnyValue});\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n\n  static fromArray(array: {[index: number]: AnyItem, length?: number}): Record {\n    const n = array.length || 0;\n    const record = Record.create(n);\n    for (let i = 0; i < n; i += 1) {\n      record.push(Item.fromAny(array[i]));\n    }\n    return record;\n  }\n\n  static fromObject(object: {[key: string]: AnyValue}): Record {\n    const record = Record.create();\n    for (const key in object) {\n      const value = object[key];\n      if (key.charCodeAt(0) === 36/*'$'*/) {\n        if (!value || typeof value !== \"object\" || !value.hasOwnProperty(\"$key\")) {\n          record.push(Value.fromAny(value));\n        } else {\n          record.push(Item.Field.of((value as any).$key, (value as any).$value));\n        }\n      } else {\n        record.push(Item.Field.of(key, value));\n      }\n    }\n    return record;\n  }\n\n  /** @hidden */\n  static expand(n: number): number {\n    n = Math.max(8, n) - 1;\n    n |= n >> 1; n |= n >> 2; n |= n >> 4; n |= n >> 8; n |= n >> 16;\n    return n + 1;\n  }\n}\nItem.Record = Record;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyItem, Item} from \"./Item\";\nimport {Field} from \"./Field\";\nimport {AnyValue, Value} from \"./Value\";\nimport {Record} from \"./Record\";\nimport {AnyText, Text} from \"./Text\";\nimport {AnyNum} from \"./Num\";\nimport {AnyInterpreter, Interpreter} from \"./Interpreter\";\n\n/** @hidden */\nexport class RecordMap extends Record {\n  /** @hidden */\n  _array: Array<Item> | null;\n  /** @hidden */\n  _table: Array<Field> | null;\n  /** @hidden */\n  _itemCount: number;\n  /** @hidden */\n  _fieldCount: number;\n  /** @hidden */\n  _flags: number;\n\n  constructor(array: Array<Item> | null, table: Array<Field> | null,\n              itemCount: number, fieldCount: number, flags: number) {\n    super();\n    this._array = array;\n    this._table = table;\n    this._itemCount = itemCount;\n    this._fieldCount = fieldCount;\n    this._flags = flags;\n  }\n\n  isEmpty(): boolean {\n    return this._itemCount === 0;\n  }\n\n  get length(): number {\n    return this._itemCount;\n  }\n\n  fieldCount(): number {\n    return this._fieldCount;\n  }\n\n  valueCount(): number {\n    return this._itemCount - this._fieldCount;\n  }\n\n  isConstant(): boolean {\n    const array = this._array;\n    for (let i = 0, n = this._itemCount; i < n; i += 1) {\n      if (!array![i]!.isConstant()) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  tag(): string | undefined {\n    if (this._fieldCount > 0) {\n      const head = this._array![0];\n      if (head instanceof Item.Attr) {\n        return head.key.value;\n      }\n    }\n    return void 0;\n  }\n\n  target(): Value {\n    let value: Value | undefined;\n    let record: Record | undefined;\n    let modified = false;\n    const array = this._array!;\n    for (let i = 0, n = this._itemCount; i < n; i += 1) {\n      const item = array[i];\n      if (item instanceof Item.Attr) {\n        modified = true;\n      } else if (value === void 0 && item instanceof Value) {\n        value = item;\n      } else {\n        if (record === void 0) {\n          record = Record.create();\n          if (value !== void 0) {\n            record.push(value);\n          }\n        }\n        record.push(item);\n      }\n    }\n    if (value === void 0) {\n      return Value.extant();\n    } else if (record === void 0) {\n      return value;\n    } else if (modified) {\n      return record;\n    } else {\n      return this;\n    }\n  }\n\n  head(): Item {\n    if (this._itemCount > 0) {\n      return this._array![0];\n    }\n    return Item.absent();\n  }\n\n  tail(): Record {\n    const n = this._itemCount;\n    if (n > 0) {\n      return new Record.RecordMapView(this, 1, n);\n    } else {\n      return Record.empty();\n    }\n  }\n\n  body(): Value {\n    const n = this._itemCount;\n    if (n > 2) {\n      return new Record.RecordMapView(this, 1, n).branch();\n    } else if (n === 2) {\n      const item = this._array![1];\n      if (item instanceof Value) {\n        return item;\n      } else {\n        return Record.of(item);\n      }\n    }\n    return Value.absent();\n  }\n\n  has(key: AnyValue): boolean {\n    if (this._fieldCount !== 0) {\n      key = Value.fromAny(key);\n      const table = this.hashTable()!;\n      const n = table.length;\n      //assert(n > 0);\n      const x = Math.abs(key.hashCode() % n);\n      let i = x;\n      do {\n        const field = table[i];\n        if (field !== void 0) {\n          if (field.key.equals(key)) {\n            return true;\n          }\n        } else {\n          break;\n        }\n        i = (i + 1) % n;\n      } while (i !== x);\n    }\n    return false;\n  }\n\n  indexOf(item: AnyItem, index: number = 0): number {\n    item = Item.fromAny(item);\n    const array = this._array!;\n    const n = this._itemCount;\n    if (index < 0) {\n      index = Math.max(0, n + index);\n    }\n    while (index < n) {\n      if (item.equals(array[index])) {\n        return index;\n      }\n      index += 1;\n    }\n    return -1;\n  }\n\n  lastIndexOf(item: AnyItem, index?: number): number {\n    item = Item.fromAny(item);\n    const array = this._array!;\n    const n = this._itemCount;\n    if (index === void 0) {\n      index = n - 1;\n    } else if (index < 0) {\n      index = n + index;\n    }\n    index = Math.min(index, n - 1);\n    while (index >= 0) {\n      if (item.equals(array[index])) {\n        return index;\n      }\n      index -= 1;\n    }\n    return -1;\n  }\n\n  get(key: AnyValue): Value {\n    if (this._fieldCount > 0) {\n      key = Value.fromAny(key);\n      const table = this.hashTable()!;\n      const n = table.length;\n      //assert(n > 0);\n      const x = Math.abs(key.hashCode() % n);\n      let i = x;\n      do {\n        const field = table[i];\n        if (field !== void 0) {\n          if (field.key.equals(key)) {\n            return field.value;\n          }\n        } else {\n          break;\n        }\n        i = (i + 1) % n;\n      } while (i !== x);\n    }\n    return Value.absent();\n  }\n\n  getAttr(key: AnyText): Value {\n    if (this._fieldCount > 0) {\n      key = Value.Text.fromAny(key);\n      const table = this.hashTable()!;\n      const n = table.length;\n      //assert(n > 0);\n      const x = Math.abs(key.hashCode() % n);\n      let i = x;\n      do {\n        const field = table[i];\n        if (field !== void 0) {\n          if (field instanceof Item.Attr && field.key.equals(key)) {\n            return field.value;\n          }\n        } else {\n          break;\n        }\n        i = (i + 1) % n;\n      } while (i !== x);\n    }\n    return Value.absent();\n  }\n\n  getSlot(key: AnyValue): Value {\n    if (this._fieldCount > 0) {\n      key = Value.fromAny(key);\n      const table = this.hashTable()!;\n      const n = table.length;\n      //assert(n > 0);\n      const x = Math.abs(key.hashCode() % n);\n      let i = x;\n      do {\n        const field = table[i];\n        if (field !== void 0) {\n          if (field instanceof Item.Slot && field.key.equals(key)) {\n            return field.value;\n          }\n        } else {\n          break;\n        }\n        i = (i + 1) % n;\n      } while (i !== x);\n    }\n    return Value.absent();\n  }\n\n  getField(key: AnyValue): Field | undefined {\n    if (this._fieldCount > 0) {\n      key = Value.fromAny(key);\n      const table = this.hashTable()!;\n      const n = table.length;\n      //assert(n > 0);\n      const x = Math.abs(key.hashCode() % n);\n      let i = x;\n      do {\n        const field = table[i];\n        if (field !== void 0) {\n          if (field.key.equals(key)) {\n            return field;\n          }\n        } else {\n          break;\n        }\n        i = (i + 1) % n;\n      } while (i !== x);\n    }\n    return void 0;\n  }\n\n  getItem(index: AnyNum): Item {\n    if (index instanceof Item.Num) {\n      index = index.value;\n    }\n    const n = this._itemCount;\n    if (index < 0) {\n      index = n + index;\n    }\n    if (index >= 0 && index < n) {\n      return this._array![index];\n    } else {\n      return Item.absent();\n    }\n  }\n\n  set(key: AnyValue, newValue: Value): this {\n    if ((this._flags & Record.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    key = Value.fromAny(key);\n    newValue = Value.fromAny(newValue);\n    if ((this._flags & Record.ALIASED) !== 0) {\n      if (this._fieldCount > 0) {\n        this.setAliased(key, newValue);\n      } else {\n        this.pushAliased(new Item.Slot(key, newValue));\n      }\n    } else {\n      if (this._fieldCount > 0) {\n        if (this._table !== null) {\n          this.setMutable(key, newValue);\n        } else {\n          this.updateMutable(key, newValue);\n        }\n      } else {\n        this.pushMutable(new Item.Slot(key, newValue));\n      }\n    }\n    return this;\n  }\n\n  private setAliased(key: Value, newValue: Value): void {\n    const n = this._itemCount;\n    const oldArray = this._array!;\n    const newArray = new Array(Record.expand(n + 1));\n    for (let i = 0; i < n; i += 1) {\n      const item = oldArray[i];\n      if (item instanceof Item.Field && item.key.equals(key)) {\n        newArray[i] = item.updatedValue(newValue);\n        i += 1;\n        while (i < n) {\n          newArray[i] = oldArray[i];\n          i += 1;\n        }\n        this._array = newArray;\n        this._table = null;\n        this._flags &= ~Record.ALIASED;\n        return;\n      }\n      newArray[i] = item;\n    }\n    newArray[n] = new Item.Slot(key, newValue);\n    this._array = newArray;\n    this._table = null;\n    this._itemCount = n + 1;\n    this._fieldCount += 1;\n    this._flags &= ~Record.ALIASED;\n  }\n\n  private setMutable(key: Value, newValue: Value): void {\n    const table = this._table!;\n    const n = table.length;\n    //assert(n > 0);\n    const x = Math.abs(key.hashCode() % n);\n    let i = x;\n    do {\n      const field = table[i];\n      if (field !== void 0) {\n        if (field.key.equals(key)) {\n          if (field.isMutable()) {\n            field.setValue(newValue);\n            return;\n          } else {\n            this.updateMutable(key, newValue);\n            return;\n          }\n        }\n      } else {\n        break;\n      }\n      i = (i + 1) % n;\n    } while (i !== x);\n    const field = new Item.Slot(key, newValue);\n    this.pushMutable(field);\n    RecordMap.put(table, field);\n  }\n\n  private updateMutable(key: Value, newValue: Value): void {\n    const array = this._array!;\n    for (let i = 0, n = this._itemCount; i < n; i += 1) {\n      const item = array[i];\n      if (item instanceof Item.Field && item.key.equals(key)) {\n        array[i] = item.updatedValue(newValue);\n        this._table = null;\n        return;\n      }\n    }\n    const field = new Item.Slot(key, newValue);\n    this.pushMutable(field);\n    RecordMap.put(this._table, field);\n  }\n\n  setAttr(key: AnyText, newValue: Value): this {\n    if ((this._flags & Record.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    key = Value.Text.fromAny(key);\n    newValue = Value.fromAny(newValue);\n    if ((this._flags & Record.ALIASED) !== 0) {\n      if (this._fieldCount > 0) {\n        this.setAttrAliased(key, newValue);\n      } else {\n        this.pushAliased(new Item.Attr(key, newValue));\n      }\n    } else {\n      if (this._fieldCount > 0) {\n        if (this._table !== null) {\n          this.setAttrMutable(key, newValue);\n        } else {\n          this.updateAttrMutable(key, newValue);\n        }\n      } else {\n        this.pushMutable(new Item.Attr(key, newValue));\n      }\n    }\n    return this;\n  }\n\n  private setAttrAliased(key: Text, newValue: Value): void {\n    const n = this._itemCount;\n    const oldArray = this._array!;\n    const newArray = new Array(Record.expand(n + 1));\n    for (let i = 0; i < n; i += 1) {\n      const item = oldArray[i];\n      if (item instanceof Item.Field && item.key.equals(key)) {\n        newArray[i] = new Item.Attr(key, newValue);\n        i += 1;\n        while (i < n) {\n          newArray[i] = oldArray[i];\n          i += 1;\n        }\n        this._array = newArray;\n        this._table = null;\n        this._flags &= ~Record.ALIASED;\n        return;\n      }\n      newArray[i] = item;\n    }\n    newArray[n] = new Item.Attr(key, newValue);\n    this._array = newArray;\n    this._table = null;\n    this._itemCount = n + 1;\n    this._fieldCount += 1;\n    this._flags &= ~Record.ALIASED;\n  }\n\n  private setAttrMutable(key: Text, newValue: Value): void {\n    const table = this._table!;\n    const n = table.length;\n    //assert(n > 0);\n    const x = Math.abs(key.hashCode() % n);\n    let i = x;\n    do {\n      const field = table[i];\n      if (field !== void 0) {\n        if (field.key.equals(key)) {\n          if (field instanceof Item.Attr && field.isMutable()) {\n            field.setValue(newValue);\n          } else {\n            this.updateAttrMutable(key, newValue);\n          }\n          return;\n        }\n      } else {\n        break;\n      }\n      i = (i + 1) % n;\n    } while (i !== x);\n    const field = new Item.Attr(key, newValue);\n    this.push(field);\n    RecordMap.put(table, field);\n  }\n\n  private updateAttrMutable(key: Text, newValue: Value): void {\n    const array = this._array!;\n    for (let i = 0, n = this._itemCount; i < n; i += 1) {\n      const item = array[i];\n      if (item instanceof Item.Field && item.key.equals(key)) {\n        array[i] = new Item.Attr(key, newValue);\n        this._table = null;\n        return;\n      }\n    }\n    const field = new Item.Attr(key, newValue);\n    this.push(field);\n    RecordMap.put(this._table, field);\n  }\n\n  setSlot(key: AnyValue, newValue: Value): this {\n    if ((this._flags & Record.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    key = Value.fromAny(key);\n    newValue = Value.fromAny(newValue);\n    if ((this._flags & Record.ALIASED) !== 0) {\n      if (this._fieldCount > 0) {\n        this.setSlotAliased(key, newValue);\n      } else {\n        this.pushAliased(new Item.Slot(key, newValue));\n      }\n    } else {\n      if (this._fieldCount > 0) {\n        if (this._table !== null) {\n          this.setSlotMutable(key, newValue);\n        } else {\n          this.updateSlotMutable(key, newValue);\n        }\n      } else {\n        this.pushMutable(new Item.Slot(key, newValue));\n      }\n    }\n    return this;\n  }\n\n  private setSlotAliased(key: Value, newValue: Value): void {\n    const n = this._itemCount;\n    const oldArray = this._array!;\n    const newArray = new Array(Record.expand(n + 1));\n    for (let i = 0; i < n; i += 1) {\n      const item = oldArray[i];\n      if (item instanceof Item.Field && item.key.equals(key)) {\n        newArray[i] = new Item.Slot(key, newValue);\n        i += 1;\n        while (i < n) {\n          newArray[i] = oldArray[i];\n          i += 1;\n        }\n        this._array = newArray;\n        this._table = null;\n        this._flags &= ~Record.ALIASED;\n        return;\n      }\n      newArray[i] = item;\n    }\n    newArray[n] = new Item.Slot(key, newValue);\n    this._array = newArray;\n    this._table = null;\n    this._itemCount = n + 1;\n    this._fieldCount += 1;\n    this._flags &= ~Record.ALIASED;\n  }\n\n  private setSlotMutable(key: Value, newValue: Value): void {\n    const table = this._table!;\n    const n = table.length;\n    //assert(n > 0);\n    const x = Math.abs(key.hashCode() % n);\n    let i = x;\n    do {\n      const field = table[i];\n      if (field !== void 0) {\n        if (field.key.equals(key)) {\n          if (field instanceof Item.Slot && field.isMutable()) {\n            field.setValue(newValue);\n          } else {\n            this.updateSlotMutable(key, newValue);\n          }\n          return;\n        }\n      } else {\n        break;\n      }\n      i = (i + 1) % n;\n    } while (i !== x);\n    const field = new Item.Slot(key, newValue);\n    this.push(field);\n    RecordMap.put(table, field);\n  }\n\n  private updateSlotMutable(key: Value, newValue: Value): void {\n    const array = this._array!;\n    for (let i = 0, n = this._itemCount; i < n; i += 1) {\n      const item = array[i];\n      if (item instanceof Item.Field && item.key.equals(key)) {\n        array[i] = new Item.Slot(key, newValue);\n        this._table = null;\n        return;\n      }\n    }\n    const field = new Item.Slot(key, newValue);\n    this.push(field);\n    RecordMap.put(this._table, field);\n  }\n\n  setItem(index: number, newItem: AnyItem): this {\n    if ((this._flags & Record.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    newItem = Item.fromAny(newItem);\n    const n = this._itemCount;\n    if (index < 0) {\n      index = n + index;\n    }\n    if (index < 0 || index > n) {\n      throw new RangeError(\"\" + index);\n    }\n    if ((this._flags & Record.ALIASED) !== 0) {\n      this.setItemAliased(index, newItem);\n    } else {\n      this.setItemMutable(index, newItem);\n    }\n    return this;\n  }\n\n  private setItemAliased(index: number, newItem: Item): void {\n    const n = this._itemCount;\n    const oldArray = this._array!;\n    const newArray = new Array(Record.expand(n));\n    for (let i = 0; i < n; i += 1) {\n      newArray[i] = oldArray[i];\n    }\n    const oldItem = oldArray[index];\n    newArray[index] = newItem;\n    this._array = newArray;\n    this._table = null;\n    if (newItem instanceof Item.Field) {\n      if (!(oldItem instanceof Item.Field)) {\n        this._fieldCount += 1;\n      }\n    } else if (oldItem instanceof Item.Field) {\n      this._fieldCount -= 1;\n    }\n    this._flags &= ~Record.ALIASED;\n  }\n\n  private setItemMutable(index: number, newItem: Item): void {\n    const array = this._array!;\n    const oldItem = array[index];\n    array[index] = newItem;\n    if (newItem instanceof Item.Field) {\n      this._table = null;\n      if (!(oldItem instanceof Item.Field)) {\n        this._fieldCount += 1;\n      }\n    } else if (oldItem instanceof Item.Field) {\n      this._table = null;\n      this._fieldCount -= 1;\n    }\n  }\n\n  updated(key: AnyValue, newValue: AnyValue): Record {\n    key = Value.fromAny(key);\n    newValue = Value.fromAny(newValue);\n    const record = (this._flags & Record.IMMUTABLE) === 0 ? this : this.branch();\n    if ((record._flags & Record.ALIASED) !== 0) {\n      if (record._fieldCount > 0) {\n        record.setAliased(key, newValue);\n      } else {\n        record.pushAliased(new Item.Slot(key, newValue));\n      }\n    } else {\n      if (record._fieldCount > 0) {\n        if (record._table !== null) {\n          record.setMutable(key, newValue);\n        } else {\n          record.updateMutable(key, newValue);\n        }\n      } else {\n        record.pushMutable(new Item.Slot(key, newValue));\n      }\n    }\n    return record;\n  }\n\n  updatedAttr(key: AnyText, newValue: AnyValue): Record {\n    key = Value.Text.fromAny(key);\n    newValue = Value.fromAny(newValue);\n    const record = (this._flags & Record.IMMUTABLE) === 0 ? this : this.branch();\n    if ((record._flags & Record.ALIASED) !== 0) {\n      if (record._fieldCount > 0) {\n        record.setAttrAliased(key, newValue);\n      } else {\n        record.pushAliased(new Item.Attr(key, newValue));\n      }\n    } else {\n      if (record._fieldCount > 0) {\n        if (record._table !== null) {\n          record.setAttrMutable(key, newValue);\n        } else {\n          record.updateAttrMutable(key, newValue);\n        }\n      } else {\n        record.pushMutable(new Item.Attr(key, newValue));\n      }\n    }\n    return record;\n  }\n\n  updatedSlot(key: AnyValue, newValue: AnyValue): Record {\n    key = Value.fromAny(key);\n    newValue = Value.fromAny(newValue);\n    const record = (this._flags & Record.IMMUTABLE) === 0 ? this : this.branch();\n    if ((record._flags & Record.ALIASED) !== 0) {\n      if (record._fieldCount > 0) {\n        record.setSlotAliased(key, newValue);\n      } else {\n        record.pushAliased(new Item.Slot(key, newValue));\n      }\n    } else {\n      if (record._fieldCount > 0) {\n        if (record._table !== null) {\n          record.setSlotMutable(key, newValue);\n        } else {\n          record.updateSlotMutable(key, newValue);\n        }\n      } else {\n        record.pushMutable(new Item.Slot(key, newValue));\n      }\n    }\n    return record;\n  }\n\n  push(...newItems: AnyItem[]): number {\n    if ((this._flags & Record.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    if ((this._flags & Record.ALIASED) !== 0) {\n      this.pushAliased.apply(this, arguments);\n    } else {\n      this.pushMutable.apply(this, arguments);\n    }\n    return this._itemCount;\n  }\n\n  private pushAliased(...newItems: AnyItem[]): void {\n    const k = arguments.length;\n    let m = this._itemCount;\n    let n = this._fieldCount;\n    const oldArray = this._array;\n    const newArray = new Array(Record.expand(m + k));\n    if (oldArray !== null) {\n      for (let i = 0; i < m; i += 1) {\n        newArray[i] = oldArray[i];\n      }\n    }\n    for (let i = 0; i < k; i += 1) {\n      const newItem = Item.fromAny(arguments[i]);\n      newArray[m] = newItem;\n      m += 1;\n      if (newItem instanceof Item.Field) {\n        n += 1;\n      }\n    }\n    this._array = newArray;\n    this._table = null;\n    this._itemCount = m;\n    this._fieldCount = n;\n    this._flags &= ~Record.ALIASED;\n  }\n\n  private pushMutable(...newItems: AnyItem[]): void {\n    const k = arguments.length;\n    let m = this._itemCount;\n    let n = this._fieldCount;\n    const oldArray = this._array;\n    let newArray;\n    if (oldArray === null || m + k > oldArray.length) {\n      newArray = new Array(Record.expand(m + k));\n      if (oldArray !== null) {\n        for (let i = 0; i < m; i += 1) {\n          newArray[i] = oldArray[i];\n        }\n      }\n    } else {\n      newArray = oldArray;\n    }\n    for (let i = 0; i < k; i += 1) {\n      const newItem = Item.fromAny(arguments[i]);\n      newArray[m] = newItem;\n      m += 1;\n      if (newItem instanceof Item.Field) {\n        n += 1;\n        this._table = null;\n      }\n    }\n    this._array = newArray;\n    this._itemCount = m;\n    this._fieldCount = n;\n  }\n\n  splice(start: number, deleteCount: number = 0, ...newItems: AnyItem[]): Item[] {\n    if ((this._flags & Record.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    const n = this._itemCount;\n    if (start < 0) {\n      start = n + start;\n    }\n    start = Math.min(Math.max(0, start), n);\n    deleteCount = Math.min(Math.max(0, deleteCount), n - start);\n    if ((this._flags & Record.ALIASED) !== 0) {\n      return this.spliceAliased.apply(this, arguments);\n    } else {\n      return this.spliceMutable.apply(this, arguments);\n    }\n  }\n\n  /** @hidden */\n  spliceAliased(start: number, deleteCount: number, ...newItems: AnyItem[]): Item[] {\n    const k = newItems.length;\n    let m = this._itemCount;\n    let n = this._fieldCount;\n    const oldArray = this._array!;\n    const newArray = new Array(Record.expand(m - deleteCount + k));\n    for (let i = 0; i < start; i += 1) {\n      newArray[i] = oldArray[i];\n    }\n    const oldItems = [];\n    for (let i = start; i < start + deleteCount; i += 1) {\n      const oldItem = oldArray[i];\n      oldItems.push(oldItem);\n      m -= 1;\n      if (oldItem instanceof Item.Field) {\n        n -= 1;\n      }\n    }\n    for (let i = start; i < m; i += 1) {\n      newArray[i + k] = oldArray[i + deleteCount];\n    }\n    for (let i = 0; i < k; i += 1) {\n      const newItem = Item.fromAny(newItems[i]);\n      newArray[i + start] = newItem;\n      m += 1;\n      if (newItem instanceof Item.Field) {\n        n += 1;\n      }\n    }\n    this._array = newArray;\n    this._table = null;\n    this._itemCount = m;\n    this._fieldCount = n;\n    this._flags &= ~Record.ALIASED;\n    return oldItems;\n  }\n\n  /** @hidden */\n  spliceMutable(start: number, deleteCount: number, ...newItems: AnyItem[]): Item[] {\n    const k = newItems.length;\n    let m = this._itemCount;\n    let n = this._fieldCount;\n    const oldArray = this._array!;\n    let newArray;\n    if (oldArray === null || m - deleteCount + k > oldArray.length) {\n      newArray = new Array(Record.expand(m - deleteCount + k));\n      if (oldArray !== null) {\n        for (let i = 0; i < start; i += 1) {\n          newArray[i] = oldArray[i];\n        }\n      }\n    } else {\n      newArray = oldArray;\n    }\n    const oldItems = [];\n    for (let i = start; i < start + deleteCount; i += 1) {\n      const oldItem = oldArray[i];\n      oldItems.push(oldItem);\n      m -= 1;\n      if (oldItem instanceof Item.Field) {\n        n -= 1;\n      }\n    }\n    if (k > deleteCount) {\n      for (let i = m - 1; i >= start; i -= 1) {\n        newArray[i + k] = oldArray[i + deleteCount];\n      }\n    } else {\n      for (let i = start; i < m; i += 1) {\n        newArray[i + k] = oldArray[i + deleteCount];\n      }\n    }\n    for (let i = 0; i < k; i += 1) {\n      const newItem = Item.fromAny(newItems[i]);\n      newArray[i + start] = newItem;\n      m += 1;\n      if (newItem instanceof Item.Field) {\n        n += 1;\n      }\n    }\n    this._array = newArray;\n    this._itemCount = m;\n    this._fieldCount = n;\n    return oldItems;\n  }\n\n  delete(key: AnyValue): Item {\n    if ((this._flags & Record.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    key = Value.fromAny(key);\n    if ((this._flags & Record.ALIASED) !== 0) {\n      return this.deleteAliased(key);\n    } else {\n      return this.deleteMutable(key);\n    }\n  }\n\n  private deleteAliased(key: Value): Item {\n    const n = this._itemCount;\n    const oldArray = this._array!;\n    const newArray = new Array(Record.expand(n));\n    for (let i = 0; i < n; i += 1) {\n      const item = oldArray[i];\n      if (item instanceof Item.Field && item.key.equals(key)) {\n        for (let j = i + 1; j < n; j += 1, i += 1) {\n          newArray[i] = oldArray[j];\n        }\n        this._array = newArray;\n        this._table = null;\n        this._itemCount = n - 1;\n        this._fieldCount -= 1;\n        this._flags &= ~Record.ALIASED;\n        return item;\n      }\n      newArray[i] = item;\n    }\n    return Item.absent();\n  }\n\n  private deleteMutable(key: Value): Item {\n    const n = this._itemCount;\n    const array = this._array!;\n    for (let i = 0; i < n; i += 1) {\n      const item = array[i];\n      if (item instanceof Item.Field && item.key.equals(key)) {\n        for (let j = i + 1; j < n; j += 1, i += 1) {\n          array[i] = array[j];\n        }\n        array[n - 1] = void 0 as any;\n        this._table = null;\n        this._itemCount = n - 1;\n        this._fieldCount -= 1;\n        return item;\n      }\n    }\n    return Item.absent();\n  }\n\n  clear(): void {\n    if ((this._flags & Record.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    this._array = null;\n    this._table = null;\n    this._itemCount = 0;\n    this._fieldCount = 0;\n    this._flags = 0;\n  }\n\n  isAliased(): boolean {\n    return (this._flags & Record.ALIASED) !== 0;\n  }\n\n  isMutable(): boolean {\n    return (this._flags & Record.IMMUTABLE) === 0;\n  }\n\n  alias(): void {\n    this._flags |= Record.ALIASED;\n  }\n\n  branch(): RecordMap {\n    if ((this._flags & (Record.ALIASED | Record.IMMUTABLE)) === 0) {\n      const array = this._array!;\n      for (let i = 0, n = this._itemCount; i < n; i += 1) {\n        array[i].alias();\n      }\n    }\n    this._flags |= Record.ALIASED;\n    return new RecordMap(this._array, this._table, this._itemCount, this._fieldCount, Record.ALIASED);\n  }\n\n  clone(): RecordMap {\n    const itemCount = this._itemCount;\n    const oldArray = this._array!;\n    const newArray = new Array(itemCount);\n    for (let i = 0; i < itemCount; i += 1) {\n      newArray[i] = oldArray[i].clone();\n    }\n    return new RecordMap(newArray, null, itemCount, this._fieldCount, 0);\n  }\n\n  commit(): this {\n    if ((this._flags & Record.IMMUTABLE) === 0) {\n      this._flags |= Record.IMMUTABLE;\n      const array = this._array!;\n      for (let i = 0, n = this._itemCount; i < n; i += 1) {\n        array[i].commit();\n      }\n    }\n    return this;\n  }\n\n  hashTable(): Array<Field> | null {\n    const n = this._fieldCount;\n    let table = this._table;\n    if (n !== 0 && this._table === null) {\n      table = new Array(Record.expand(Math.max(n, n * 10 / 7)));\n      const array = this._array!;\n      for (let i = 0, m = this._itemCount; i < m; i += 1) {\n        const item = array[i];\n        if (item instanceof Item.Field) {\n          RecordMap.put(table, item);\n        }\n      }\n      this._table = table;\n    }\n    return table;\n  }\n\n  /** @hidden */\n  static put(table: Field[] | null, field: Field): void {\n    if (table !== null) {\n      const n = table.length;\n      const x = Math.abs(field.key.hashCode() % n);\n      let i = x;\n      do {\n        const item = table[i];\n        if (item !== void 0) {\n          if (field.key.equals(item.key)) {\n            table[i] = field;\n            return;\n          }\n        } else {\n          table[i] = field;\n          return;\n        }\n        i = (i + 1) % n;\n      } while (i !== x);\n      throw new Error();\n    }\n  }\n\n  evaluate(interpreter: AnyInterpreter): Record {\n    interpreter = Interpreter.fromAny(interpreter);\n    const array = this._array!;\n    const n = this._itemCount;\n    const scope = Record.create(n);\n    interpreter.pushScope(scope);\n    let changed = false;\n    for (let i = 0; i < n; i += 1) {\n      const oldItem = array[i];\n      const newItem = oldItem.evaluate(interpreter);\n      if (newItem.isDefined()) {\n        scope.push(newItem);\n      }\n      if (oldItem !== newItem) {\n        changed = true;\n      }\n    }\n    interpreter.popScope();\n    return changed ? scope : this;\n  }\n\n  substitute(interpreter: AnyInterpreter): Record {\n    interpreter = Interpreter.fromAny(interpreter);\n    const array = this._array!;\n    const n = this._itemCount;\n    const scope = Record.create(n);\n    interpreter.pushScope(scope);\n    let changed = false;\n    for (let i = 0; i < n; i += 1) {\n      const oldItem = array[i];\n      const newItem = oldItem.substitute(interpreter);\n      if (newItem.isDefined()) {\n        scope.push(newItem);\n      }\n      if (oldItem !== newItem) {\n        changed = true;\n      }\n    }\n    interpreter.popScope();\n    return changed ? scope : this;\n  }\n\n  subRecord(lower?: number, upper?: number): Record {\n    const n = this._itemCount;\n    if (lower === void 0) {\n      lower = 0;\n    } else if (lower < 0) {\n      lower = n + lower;\n    }\n    if (upper === void 0) {\n      upper = n;\n    } else if (upper < 0) {\n      upper = n + upper;\n    }\n    if (lower < 0 || upper > n || lower > upper) {\n      throw new RangeError(lower + \", \" + upper);\n    }\n    return new Record.RecordMapView(this, lower, upper);\n  }\n\n  forEach<T, S = unknown>(callback: (this: S, item: Item, index: number) => T | void,\n                          thisArg?: S): T | undefined {\n    const array = this._array!;\n    for (let i = 0, n = this._itemCount; i < n; i += 1) {\n      const result = callback.call(thisArg, array[i], i);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    return;\n  }\n\n  private static _empty?: RecordMap;\n\n  static empty(): RecordMap {\n    if (!RecordMap._empty) {\n      RecordMap._empty = new RecordMap(null, null, 0, 0, Record.ALIASED | Record.IMMUTABLE);\n    }\n    return RecordMap._empty;\n  }\n\n  static create(initialCapacity?: number): RecordMap {\n    if (initialCapacity === void 0) {\n      return new RecordMap(null, null, 0, 0, Record.ALIASED);\n    } else {\n      return new RecordMap(new Array(initialCapacity), null, 0, 0, 0);\n    }\n  }\n\n  static of(...items: AnyItem[]): RecordMap {\n    const n = arguments.length;\n    if (n === 0) {\n      return new RecordMap(null, null, 0, 0, Record.ALIASED);\n    } else {\n      const array = new Array(n);\n      let itemCount = 0;\n      let fieldCount = 0;\n      for (let i = 0; i < n; i += 1) {\n        const item = Item.fromAny(arguments[i]);\n        array[i] = item;\n        itemCount += 1;\n        if (item instanceof Item.Field) {\n          fieldCount += 1;\n        }\n      }\n      return new RecordMap(array, null, itemCount, fieldCount, 0);\n    }\n  }\n}\nItem.RecordMap = RecordMap;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyItem, Item} from \"./Item\";\nimport {AnyValue, Value} from \"./Value\";\nimport {Record} from \"./Record\";\nimport {RecordMap} from \"./RecordMap\";\nimport {AnyNum} from \"./Num\";\n\n/** @hidden */\nexport class RecordMapView extends Record {\n  /** @hidden */\n  readonly _record: RecordMap;\n  /** @hidden */\n  _lower: number;\n  /** @hidden */\n  _upper: number;\n\n  constructor(record: RecordMap, lower: number, upper: number) {\n    super();\n    this._record = record;\n    this._lower = lower;\n    this._upper = upper;\n  }\n\n  isEmpty(): boolean {\n    return this._lower === this._upper;\n  }\n\n  isArray(): boolean {\n    const array = this._record._array!;\n    for (let i = this._lower, n = this._upper; i < n; i += 1) {\n      if (array[i] instanceof Item.Field) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  isObject(): boolean {\n    const array = this._record._array!;\n    for (let i = this._lower, n = this._upper; i < n; i += 1) {\n      if (array[i] instanceof Value) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  get length(): number {\n    return this._upper - this._lower;\n  }\n\n  fieldCount(): number {\n    const array = this._record._array!;\n    let k = 0;\n    for (let i = this._lower, n = this._upper; i < n; i += 1) {\n      if (array[i] instanceof Item.Field) {\n        k += 1;\n      }\n    }\n    return k;\n  }\n\n  valueCount(): number {\n    let k = 0;\n    const array = this._record._array!;\n    for (let i = this._lower, n = this._upper; i < n; i += 1) {\n      if (array[i] instanceof Value) {\n        k += 1;\n      }\n    }\n    return k;\n  }\n\n  isConstant(): boolean {\n    const array = this._record._array;\n    for (let i = this._lower, n = this._upper; i < n; i += 1) {\n      if (!array![i].isConstant()) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  tag(): string | undefined {\n    if (this.length > 0) {\n      const item = this._record._array![this._lower];\n      if (item instanceof Item.Attr) {\n        return item.key.value;\n      }\n    }\n    return void 0;\n  }\n\n  target(): Value {\n    let value: Value | undefined;\n    let record: Record | undefined;\n    let modified = false;\n    const array = this._record._array!;\n    for (let i = this._lower, n = this._upper; i < n; i += 1) {\n      const item = array[i];\n      if (item instanceof Item.Attr) {\n        modified = true;\n      } else if (value === void 0 && item instanceof Value) {\n        value = item;\n      } else {\n        if (record === void 0) {\n          record = Record.create();\n          if (value !== void 0) {\n            record.push(value);\n          }\n        }\n        record.push(item);\n      }\n    }\n    if (value === void 0) {\n      return Value.extant();\n    } else if (record === void 0) {\n      return value;\n    } else if (modified) {\n      return record;\n    } else {\n      return this;\n    }\n  }\n\n  head(): Item {\n    if (this.length > 0) {\n      return this._record._array![this._lower];\n    } else {\n      return Item.absent();\n    }\n  }\n\n  tail(): Record {\n    if (this.length > 0) {\n      return new RecordMapView(this._record, this._lower + 1, this._upper);\n    } else {\n      return Record.empty();\n    }\n  }\n\n  body(): Value {\n    const n = this.length;\n    if (n > 2) {\n      return new RecordMapView(this._record, this._lower + 1, this._upper).branch();\n    } else if (n === 2) {\n      const item = this._record._array![this._lower + 1];\n      if (item instanceof Value) {\n        return item;\n      } else {\n        return Record.of(item);\n      }\n    } else {\n      return Value.absent();\n    }\n  }\n\n  indexOf(item: AnyItem, index: number = 0): number {\n    item = Item.fromAny(item);\n    const array = this._record._array!;\n    const n = this.length;\n    if (index < 0) {\n      index = Math.max(0, n + index);\n    }\n    index = this._lower + index;\n    while (index < this._upper) {\n      if (item.equals(array[index])) {\n        return index - this._lower;\n      }\n      index += 1;\n    }\n    return -1;\n  }\n\n  lastIndexOf(item: AnyItem, index?: number): number {\n    item = Item.fromAny(item);\n    const array = this._record._array!;\n    const n = this.length;\n    if (index === void 0) {\n      index = n - 1;\n    } else if (index < 0) {\n      index = n + index;\n    }\n    index = this._lower + Math.min(index, n - 1);\n    while (index >= this._lower) {\n      if (item.equals(array[index])) {\n        return index - this._lower;\n      }\n      index -= 1;\n    }\n    return -1;\n  }\n\n  getItem(index: AnyNum): Item {\n    if (index instanceof Item.Num) {\n      index = index.value;\n    }\n    const n = this.length;\n    if (index < 0) {\n      index = n + index;\n    }\n    if (index >= 0 && index < n) {\n      return this._record._array![this._lower + index];\n    } else {\n      return Item.absent();\n    }\n  }\n\n  setItem(index: number, newItem: AnyItem): this {\n    if ((this._record._flags & Record.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    newItem = Item.fromAny(newItem);\n    const n = this.length;\n    if (index < 0) {\n      index = n + index;\n    }\n    if (index < 0 || index > n) {\n      throw new RangeError(\"\" + index);\n    }\n    if ((this._record._flags & Record.ALIASED) !== 0) {\n      this.setItemAliased(index, newItem);\n    } else {\n      this.setItemMutable(index, newItem);\n    }\n    return this;\n  }\n\n  private setItemAliased(index: number, newItem: Item): void {\n    const n = this._record._itemCount;\n    const oldArray = this._record._array!;\n    const newArray = new Array(Record.expand(n));\n    for (let i = 0; i < n; i += 1) {\n      newArray[i] = oldArray[i];\n    }\n    const oldItem = oldArray[this._lower + index];\n    newArray[this._lower + index] = newItem;\n    this._record._array = newArray;\n    this._record._table = null;\n    if (newItem instanceof Item.Field) {\n      if (!(oldItem instanceof Item.Field)) {\n        this._record._fieldCount += 1;\n      }\n    } else if (oldItem instanceof Item.Field) {\n      this._record._fieldCount -= 1;\n    }\n    this._record._flags &= ~Record.ALIASED;\n  }\n\n  private setItemMutable(index: number, newItem: Item): void {\n    const array = this._record._array!;\n    const oldItem = array[this._lower + index];\n    array[this._lower + index] = newItem;\n    if (newItem instanceof Item.Field) {\n      this._record._table = null;\n      if (!(oldItem instanceof Item.Field)) {\n        this._record._fieldCount += 1;\n      }\n    } else if (oldItem instanceof Item.Field) {\n      this._record._table = null;\n      this._record._fieldCount -= 1;\n    }\n  }\n\n  push(...newItems: AnyItem[]): number {\n    if ((this._record._flags & Record.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    if ((this._record._flags & Record.ALIASED) !== 0) {\n      this.pushAliased.apply(this, arguments);\n    } else {\n      this.pushMutable.apply(this, arguments);\n    }\n    return this.length;\n  }\n\n  private pushAliased(...newItems: AnyItem[]): void {\n    const k = newItems.length;\n    let m = this._record._itemCount;\n    let n = this._record._fieldCount;\n    const oldArray = this._record._array;\n    const newArray = new Array(Record.expand(m + k));\n    if (oldArray !== null) {\n      for (let i = 0; i < this._upper; i += 1) {\n        newArray[i] = oldArray[i];\n      }\n      for (let i = this._upper; i < m; i += 1) {\n        newArray[i + k] = oldArray[i];\n      }\n    }\n    for (let i = 0; i < k; i += 1) {\n      const newItem = Item.fromAny(newItems[i]);\n      newArray[i + this._upper] = newItem;\n      m += 1;\n      if (newItem instanceof Item.Field) {\n        n += 1;\n      }\n    }\n    this._record._array = newArray;\n    this._record._table = null;\n    this._record._itemCount = m;\n    this._record._fieldCount = n;\n    this._record._flags &= ~Record.ALIASED;\n    this._upper += k;\n  }\n\n  private pushMutable(...newItems: AnyItem[]): void {\n    const k = newItems.length;\n    let m = this._record._itemCount;\n    let n = this._record._fieldCount;\n    const oldArray = this._record._array!;\n    let newArray;\n    if (oldArray === null || m + k > oldArray.length) {\n      newArray = new Array(Record.expand(m + k));\n      if (oldArray !== null) {\n        for (let i = 0; i < this._upper; i += 1) {\n          newArray[i] = oldArray[i];\n        }\n      }\n    } else {\n      newArray = oldArray;\n    }\n    for (let i = m - 1; i >= this._upper; i -= 1) {\n      newArray[i + k] = oldArray[i];\n    }\n    for (let i = 0; i < k; i += 1) {\n      const newItem = Item.fromAny(newItems[i]);\n      newArray[i + this._upper] = newItem;\n      m += 1;\n      if (newItem instanceof Item.Field) {\n        n += 1;\n        this._record._table = null;\n      }\n    }\n    this._record._array = newArray;\n    this._record._itemCount = m;\n    this._record._fieldCount = n;\n    this._upper += k;\n  }\n\n  splice(start: number, deleteCount: number = 0, ...newItems: AnyItem[]): Item[] {\n    if ((this._record._flags & Record.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    const n = this.length;\n    if (start < 0) {\n      start = n + start;\n    }\n    start = Math.min(Math.max(0, start), n);\n    deleteCount = Math.min(Math.max(0, deleteCount), n - start);\n    let deleted;\n    if ((this._record._flags & Record.ALIASED) !== 0) {\n      deleted = this._record.spliceAliased(this._lower + start, deleteCount, ...newItems);\n    } else {\n      deleted = this._record.spliceMutable(this._lower + start, deleteCount, ...newItems);\n    }\n    this._upper += newItems.length - deleted.length;\n    return deleted;\n  }\n\n  delete(key: AnyValue): Item {\n    if ((this._record._flags & Record.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    key = Value.fromAny(key);\n    if ((this._record._flags & Record.ALIASED) !== 0) {\n      return this.deleteAliased(key);\n    } else {\n      return this.deleteMutable(key);\n    }\n  }\n\n  /** @hidden */\n  deleteAliased(key: Value): Item {\n    const n = this._record._itemCount;\n    const oldArray = this._record._array!;\n    const newArray = new Array(Record.expand(n));\n    for (let i = this._lower; i < this._upper; i += 1) {\n      const item = oldArray[i];\n      if (item instanceof Item.Field && item.key.equals(key)) {\n        for (let j = i + 1; j < n; j += 1, i += 1) {\n          newArray[i] = oldArray[j];\n        }\n        this._record._array = newArray;\n        this._record._table = null;\n        this._record._itemCount = n - 1;\n        this._record._fieldCount -= 1;\n        this._record._flags &= ~Record.ALIASED;\n        this._upper -= 1;\n        return item;\n      }\n      newArray[i] = item;\n    }\n    return Item.absent();\n  }\n\n  /** @hidden */\n  deleteMutable(key: Value): Item {\n    const n = this._record._itemCount;\n    const array = this._record._array!;\n    for (let i = this._lower; i < this._upper; i += 1) {\n      const item = array[i];\n      if (item instanceof Item.Field && item.key.equals(key)) {\n        for (let j = i + 1; j < n; j += 1, i += 1) {\n          array[i] = array[j];\n        }\n        array[n - 1] = void 0 as any;\n        this._record._table = null;\n        this._record._itemCount -= 1;\n        this._record._fieldCount -= 1;\n        this._upper -= 1;\n        return item;\n      }\n    }\n    return Item.absent();\n  }\n\n  clear(): void {\n    if ((this._record._flags & Record.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    if ((this._record._flags & Record.ALIASED) !== 0) {\n      this.clearAliased();\n    } else {\n      this.clearMutable();\n    }\n  }\n\n  private clearAliased(): void {\n    const m = this._record._itemCount;\n    let n = this._record._fieldCount;\n    const l = m - this.length;\n    const oldArray = this._record._array!;\n    const newArray = new Array(Record.expand(l));\n    let i = 0;\n    while (i < this._lower) {\n      newArray[i] = oldArray[i];\n      i += 1;\n    }\n    while (i < this._upper) {\n      if (oldArray[i] instanceof Item.Field) {\n        n -= 1;\n      }\n      i += 1;\n    }\n    i = this._lower;\n    let j = this._upper;\n    while (j < m) {\n      newArray[i] = oldArray[j];\n      i += 1;\n      j += 1;\n    }\n    this._record._array = newArray;\n    this._record._table = null;\n    this._record._itemCount = l;\n    this._record._fieldCount = n;\n    this._record._flags &= ~Record.ALIASED;\n    this._upper = this._lower;\n  }\n\n  private clearMutable(): void {\n    const m = this._record._itemCount;\n    let n = this._record._fieldCount;\n    const array = this._record._array!;\n    let i = this._lower;\n    while (i < this._upper) {\n      if (array[i] instanceof Item.Field) {\n        n -= 1;\n      }\n      i += 1;\n    }\n    i = this._lower;\n    let j = this._upper;\n    while (j < m) {\n      const item = array[j];\n      if (item instanceof Item.Field) {\n        this._record._table = null;\n      }\n      array[i] = item;\n      i += 1;\n      j += 1;\n    }\n    this._record._itemCount = i;\n    this._record._fieldCount = n;\n    while (i < m) {\n      array[i] = void 0 as any;\n      i += 1;\n    }\n    this._upper = this._lower;\n  }\n\n  isAliased(): boolean {\n    return (this._record._flags & Record.ALIASED) !== 0;\n  }\n\n  isMutable(): boolean {\n    return (this._record._flags & Record.IMMUTABLE) === 0;\n  }\n\n  alias(): void {\n    this._record._flags |= Record.ALIASED;\n  }\n\n  branch(): RecordMap {\n    const m = this.length;\n    let n = 0;\n    const oldArray = this._record._array!;\n    const newArray = new Array(Record.expand(m));\n    let i = this._lower;\n    let j = 0;\n    while (j < m) {\n      const item = oldArray[i];\n      newArray[j] = item;\n      if (item instanceof Item.Field) {\n        n += 1;\n      }\n      i += 1;\n      j += 1;\n    }\n    return new RecordMap(newArray, null, m, n, 0);\n  }\n\n  clone(): RecordMap {\n    const m = this.length;\n    let n = 0;\n    const oldArray = this._record._array!;\n    const newArray = new Array(Record.expand(m));\n    let i = this._lower;\n    let j = 0;\n    while (j < m) {\n      const item = oldArray[i];\n      newArray[j] = item.clone();\n      if (item instanceof Item.Field) {\n        n += 1;\n      }\n      i += 1;\n      j += 1;\n    }\n    return new RecordMap(newArray, null, m, n, 0);\n  }\n\n  commit(): this {\n    this._record.commit();\n    return this;\n  }\n\n  subRecord(lower?: number, upper?: number): Record {\n    const n = this.length;\n    if (lower === void 0) {\n      lower = 0;\n    } else if (lower < 0) {\n      lower = n + lower;\n    }\n    if (upper === void 0) {\n      upper = n;\n    } else if (upper < 0) {\n      upper = n + upper;\n    }\n    if (lower < 0 || upper > n || lower > upper) {\n      throw new RangeError(lower + \", \" + upper);\n    }\n    return new RecordMapView(this._record, this._lower + lower, this._upper + upper);\n  }\n\n  forEach<T, S = unknown>(callback: (this: S, item: Item, index: number) => T | void,\n                          thisArg?: S): T | undefined {\n    const array = this._record._array!;\n    for (let i = this._lower, n = this._upper; i < n; i += 1) {\n      const result = callback.call(thisArg, array[i], i);\n      if (result !== void 0) {\n        return result;\n      }\n    }\n    return;\n  }\n}\nItem.RecordMapView = RecordMapView;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyOutputSettings, OutputSettings, Output} from \"@swim/codec\";\nimport {Data} from \"./Data\";\n\n/** @hidden */\nexport class DataOutput extends Output<Data> {\n  /** @hidden */\n  readonly _data: Data;\n  /** @hidden */\n  _settings: OutputSettings;\n\n  constructor(data: Data, settings: OutputSettings) {\n    super();\n    this._data = data;\n    this._settings = settings;\n  }\n\n  isCont(): boolean {\n    return true;\n  }\n\n  isFull(): boolean {\n    return false;\n  }\n\n  isDone(): boolean {\n    return false;\n  }\n\n  isError(): boolean {\n    return false;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): Output<Data>;\n  isPart(isPart?: boolean): boolean | Output<Data> {\n    if (isPart === void 0) {\n      return false;\n    } else {\n      return this;\n    }\n  }\n\n  write(b: number | string): Output<Data> {\n    if (typeof b === \"number\") {\n      this._data.addByte(b);\n      return this;\n    } else {\n      throw new TypeError(\"\" + b);\n    }\n  }\n\n  writeln(string?: string): Output<Data> {\n    throw new TypeError(\"\" + string);\n  }\n\n  settings(): OutputSettings;\n  settings(settings: AnyOutputSettings): Output<Data>;\n  settings(settings?: AnyOutputSettings): OutputSettings | Output<Data> {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      this._settings = OutputSettings.fromAny(settings);\n      return this;\n    }\n  }\n\n  bind(): Data {\n    return this._data;\n  }\n\n  clone(): Output<Data> {\n    return new DataOutput(this._data.branch(), this._settings);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects, Random} from \"@swim/util\";\nimport {Input, OutputSettings, Output, Writer, Unicode, Base16, Base64} from \"@swim/codec\";\nimport {Item} from \"./Item\";\nimport {Value} from \"./Value\";\nimport {DataOutput} from \"./DataOutput\";\n\nexport type AnyData = Data | Uint8Array;\n\nexport class Data extends Value {\n  /** @hidden */\n  _array: Uint8Array | null;\n  /** @hidden */\n  _size: number;\n  /** @hidden */\n  _flags: number;\n\n  constructor(array: Uint8Array | null, size: number, flags: number) {\n    super();\n    this._array = array;\n    this._size = size;\n    this._flags = flags;\n  }\n\n  isConstant(): boolean {\n    return true;\n  }\n\n  get size(): number {\n    return this._size;\n  }\n\n  getByte(index: number): number {\n    if (index < 0 || index >= this.size) {\n      throw new RangeError(\"\" + index);\n    }\n    return this._array![index];\n  }\n\n  setByte(index: number, value: number): Data {\n    const flags = this._flags;\n    if ((flags & Data.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    } else if (index < 0 || index >= this._size) {\n      throw new RangeError(\"\" + index);\n    }\n    if ((flags & Data.ALIASED) !== 0) {\n      return this.setByteAliased(index, value);\n    } else {\n      return this.setByteMutable(index, value);\n    }\n  }\n\n  private setByteAliased(index: number, value: number): Data {\n    const n = this.size;\n    const oldArray = this._array!;\n    const newArray = new Uint8Array(Data.expand(n));\n    newArray.set(oldArray, 0);\n    newArray[index] = value;\n    this._array = newArray;\n    this._flags &= ~Data.ALIASED;\n    return this;\n  }\n\n  private setByteMutable(index: number, value: number): Data {\n    this._array![index] = value;\n    return this;\n  }\n\n  public addByte(value: number): Data {\n    const flags = this._flags;\n    if ((flags & Data.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    if ((flags & Data.ALIASED) !== 0) {\n      return this.addByteAliased(value);\n    } else {\n      return this.addByteMutable(value);\n    }\n  }\n\n  private addByteAliased(value: number): Data {\n    const n = this.size;\n    const oldArray = this._array;\n    const newArray = new Uint8Array(Data.expand(n + 1));\n    if (oldArray != null) {\n      newArray.set(oldArray, 0);\n    }\n    newArray[n] = value;\n    this._array = newArray;\n    this._size = n + 1;\n    this._flags &= ~Data.ALIASED;\n    return this;\n  }\n\n  private addByteMutable(value: number): Data {\n    const n = this.size;\n    const oldArray = this._array;\n    let newArray;\n    if (oldArray === null || n + 1 > oldArray.length) {\n      newArray = new Uint8Array(Data.expand(n + 1));\n      if (oldArray !== null) {\n        newArray.set(oldArray, 0);\n      }\n      this._array = newArray;\n    } else {\n      newArray = oldArray;\n    }\n    newArray[n] = value;\n    this._size = n + 1;\n    return this;\n  }\n\n  addData(data: Data): Data {\n    let array = data._array;\n    if (array !== null) {\n      const size = data._size;\n      if (array.length > size) {\n        array = array.slice(0, size);\n      }\n      return this.addUint8Array(array);\n    } else {\n      return this;\n    }\n  }\n\n  addUint8Array(array: Uint8Array): Data {\n    const flags = this._flags;\n    if ((flags & Data.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    if ((flags & Data.ALIASED) !== 0) {\n      return this.addUint8ArrayAliased(array);\n    } else {\n      return this.addUint8ArrayMutable(array);\n    }\n  }\n\n  private addUint8ArrayAliased(array: Uint8Array): Data {\n    const size = array.length;\n    if (size === 0) {\n      return this;\n    }\n    const n = this.size;\n    const oldArray = this._array;\n    const newArray = new Uint8Array(Data.expand(n + size));\n    if (oldArray !== null) {\n      newArray.set(oldArray, 0);\n    }\n    newArray.set(array, n);\n    this._array = newArray;\n    this._size = n + size;\n    this._flags &= ~Data.ALIASED;\n    return this;\n  }\n\n  private addUint8ArrayMutable(array: Uint8Array): Data {\n    const size = array.length;\n    if (size === 0) {\n      return this;\n    }\n    const n = this.size;\n    const oldArray = this._array;\n    let newArray;\n    if (oldArray === null || n + size > oldArray.length) {\n      newArray = new Uint8Array(Data.expand(n + size));\n      if (oldArray !== null) {\n        newArray.set(oldArray, 0);\n      }\n      this._array = newArray;\n    } else {\n      newArray = oldArray;\n    }\n    newArray.set(array, n);\n    this._size = n + size;\n    return this;\n  }\n\n  clear(): void {\n    if ((this._flags & Data.IMMUTABLE) !== 0) {\n      throw new Error(\"immutable\");\n    }\n    this._array = null;\n    this._size = 0;\n    this._flags = Data.ALIASED;\n  }\n\n  toUint8Array(): Uint8Array {\n    const oldArray = this._array;\n    const flags = this._flags;\n    if ((flags & Data.IMMUTABLE) !== 0) {\n      return oldArray !== null ? oldArray.slice(0) : new Uint8Array(0);\n    } else if ((flags & Data.ALIASED) !== 0 || this._size !== oldArray!.length) {\n      const newArray = oldArray !== null ? oldArray.slice(0) : new Uint8Array(0);\n      this._array = newArray;\n      this._flags &= ~Data.ALIASED;\n      return newArray;\n    } else {\n      return oldArray!;\n    }\n  }\n\n  asUint8Array(): Uint8Array | undefined {\n    let array: Uint8Array | undefined;\n    if (this._array && this._size > 0) {\n      array = this._array;\n      if (array.length !== this._size) {\n        array = new Uint8Array(array.buffer, array.byteOffset, this._size);\n      }\n    } else {\n      array = void 0;\n    }\n    return array;\n  }\n\n  toAny(): AnyData {\n    return this.toUint8Array();\n  }\n\n  isAliased(): boolean {\n    return (this._flags & Data.ALIASED) !== 0;\n  }\n\n  isMutable(): boolean {\n    return (this._flags & Data.IMMUTABLE) === 0;\n  }\n\n  branch(): Data {\n    this._flags |= Data.ALIASED;\n    return new Data(this._array, this._size, Data.ALIASED);\n  }\n\n  clone(): Data {\n    return this.branch();\n  }\n\n  commit(): this {\n    this._flags |= Data.IMMUTABLE;\n    return this;\n  }\n\n  writeBase16(output: Output, base16: Base16 = Base16.uppercase()): Writer<unknown, unknown> {\n    let array = this._array;\n    const size = this._size;\n    if (array !== null && size !== 0) {\n      if (array.length !== size) {\n        array = array.slice(0, size);\n      }\n      return base16.writeUint8Array(array, output);\n    } else {\n      return Writer.done();\n    }\n  }\n\n  toBase16(base16: Base16 = Base16.uppercase()): string {\n    const output = Unicode.stringOutput();\n    this.writeBase16(output, base16);\n    return output.bind();\n  }\n\n  writeBase64(output: Output, base64: Base64 = Base64.standard()): Writer<unknown, unknown> {\n    let array = this._array;\n    const size = this._size;\n    if (array !== null && size !== 0) {\n      if (array.length !== size) {\n        array = array.slice(0, size);\n      }\n      return base64.writeUint8Array(array, output);\n    } else {\n      return Writer.done();\n    }\n  }\n\n  toBase64(base64: Base64 = Base64.standard()): string {\n    const output = Unicode.stringOutput();\n    this.writeBase64(output, base64);\n    return output.bind();\n  }\n\n  typeOrder(): number {\n    return 4;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof Data) {\n      const xs = this._array!;\n      const ys = that._array!;\n      const xn = this._size;\n      const yn = that._size;\n      let order = 0;\n      let i = 0;\n      do {\n        if (i < xn && i < yn) {\n          order = xs[i] - ys[i];\n          i += 1;\n        } else {\n          break;\n        }\n      } while (order === 0);\n      if (order > 0) {\n        return 1;\n      } else if (order < 0) {\n        return -1;\n      } else if (xn > yn) {\n        return 1;\n      } else if (xn < yn) {\n        return -1;\n      } else {\n        return 0;\n      }\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Data) {\n      const xs = this._array!;\n      const ys = that._array!;\n      const xn = this._size;\n      if (xn !== that._size) {\n        return false;\n      }\n      for (let i = 0; i < xn; i += 1) {\n        if (xs[i] !== ys[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (Data._hashSeed === void 0) {\n      Data._hashSeed = Murmur3.seed(Data);\n    }\n    return Murmur3.mash(Murmur3.mix(Data._hashSeed, this._array || new Uint8Array(0)));\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"Data\").write(46/*'.'*/);\n    if (this._size === 0) {\n      output = output.write(\"empty\").write(40/*'('*/).write(41/*')'*/);\n    } else {\n      output = output.write(\"base16\").write(40/*'('*/).write(34/*'\"'*/);\n      this.writeBase16(output);\n      output = output.write(34/*'\"'*/).write(41/*')'*/);\n    }\n  }\n\n  display(output: Output): void {\n    this.debug(output);\n  }\n\n  /** @hidden */\n  static readonly ALIASED: number = 1 << 0;\n  /** @hidden */\n  static readonly IMMUTABLE: number = 1 << 1;\n\n  private static _hashSeed?: number;\n\n  private static _empty?: Data;\n\n  static output(): Output<Data>;\n  static output(initialCapacity: number): Output<Data>;\n  static output(data: Data): Output<Data>;\n  static output(data?: number | Data): Output<Data> {\n    if (!(data instanceof Data)) {\n      data = Data.create(data);\n    }\n    return new DataOutput(data, OutputSettings.standard());\n  }\n\n  static empty(): Data {\n    if (Data._empty == null) {\n      Data._empty = new Data(null, 0, Data.ALIASED | Data.IMMUTABLE);\n    }\n    return Data._empty;\n  }\n\n  static create(initialCapacity?: number): Data {\n    if (initialCapacity === void 0) {\n      return new Data(null, 0, Data.ALIASED);\n    } else {\n      return new Data(new Uint8Array(initialCapacity), 0, 0);\n    }\n  }\n\n  static wrap(value: Uint8Array): Data {\n    return new Data(value, value.length, Data.ALIASED);\n  }\n\n  static fromBase16(input: Input | string): Data {\n    if (typeof input === \"string\") {\n      input = Unicode.stringInput(input);\n    }\n    return Base16.parse(input, Data.output()).bind();\n  }\n\n  static fromBase64(input: Input | string, base64: Base64 = Base64.standard()): Data {\n    if (typeof input === \"string\") {\n      input = Unicode.stringInput(input);\n    }\n    return base64.parse(input, Data.output()).bind();\n  }\n\n  static fromAny(value: AnyData): Data {\n    if (value instanceof Data) {\n      return value;\n    } else if (value instanceof Uint8Array) {\n      return Data.wrap(value);\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n\n  static random(size: number): Data {\n    const array = new Uint8Array(size);\n    Random.fillBytes(array);\n    return Data.wrap(array);\n  }\n\n  /** @hidden */\n  static expand(n: number): number {\n    n = Math.max(32, n) - 1;\n    n |= n >> 1; n |= n >> 2; n |= n >> 4; n |= n >> 8; n |= n >> 16;\n    return n + 1;\n  }\n}\nItem.Data = Data;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyOutputSettings, OutputSettings, Output} from \"@swim/codec\";\nimport {Text} from \"./Text\";\n\n/** @hidden */\nexport class TextOutput extends Output<Text> {\n  /** @hidden */\n  _string: string;\n  /** @hidden */\n  _settings: OutputSettings;\n\n  constructor(string: string, settings: OutputSettings) {\n    super();\n    this._string = string;\n    this._settings = settings;\n  }\n\n  isCont(): boolean {\n    return true;\n  }\n\n  isFull(): boolean {\n    return false;\n  }\n\n  isDone(): boolean {\n    return false;\n  }\n\n  isError(): boolean {\n    return false;\n  }\n\n  isPart(): boolean;\n  isPart(isPart: boolean): Output<Text>;\n  isPart(isPart?: boolean): boolean | Output<Text> {\n    if (isPart === void 0) {\n      return false;\n    } else {\n      return this;\n    }\n  }\n\n  write(token: number | string): Output<Text> {\n    if (typeof token === \"number\") {\n      if ((token >= 0x0000 && token <= 0xd7ff)\n          || (token >= 0xe000 && token <= 0xffff)) { // U+0000..U+D7FF | U+E000..U+FFFF\n        token = String.fromCharCode(token);\n      } else if (token >= 0x10000 && token <= 0x10ffff) { // U+10000..U+10FFFF\n        const u = token - 0x10000;\n        token = String.fromCharCode(0xd800 | (u >>> 10), 0xdc00 | (u & 0x3ff));\n      } else { // invalid code point\n        token = \"\\ufffd\";\n      }\n    }\n    this._string += token;\n    return this;\n  }\n\n  settings(): OutputSettings;\n  settings(settings: AnyOutputSettings): Output<Text>;\n  settings(settings?: AnyOutputSettings): OutputSettings | Output<Text> {\n    if (settings === void 0) {\n      return this._settings;\n    } else {\n      this._settings = OutputSettings.fromAny(settings);\n      return this;\n    }\n  }\n\n  bind(): Text {\n    return Text.from(this._string);\n  }\n\n  clone(): Output<Text> {\n    return new TextOutput(this._string, this._settings);\n  }\n\n  toString(): string {\n    return this._string;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects, HashGenCacheSet} from \"@swim/util\";\nimport {OutputSettings, Output, Format} from \"@swim/codec\";\nimport {AnyItem, Item} from \"./Item\";\nimport {AnyValue, Value} from \"./Value\";\nimport {TextOutput} from \"./TextOutput\";\n\nexport type AnyText = Text | string;\n\nexport class Text extends Value {\n  /** @hidden */\n  readonly _value: string;\n  /** @hidden */\n  _hashCode?: number;\n\n  private constructor(value: string) {\n    super();\n    this._value = value;\n  }\n\n  isConstant(): boolean {\n    return true;\n  }\n\n  get value(): string {\n    return this._value;\n  }\n\n  get size(): number {\n    return this._value.length;\n  }\n\n  stringValue(): string;\n  stringValue<T>(orElse: T): string;\n  stringValue<T>(orElse?: T): string {\n    return this._value;\n  }\n\n  numberValue(): number | undefined;\n  numberValue<T>(orElse: T): number | T;\n  numberValue<T>(orElse?: T): number | T | undefined {\n    try {\n      return Item.Num.from(this._value).numberValue();\n    } catch (error) {\n      return orElse;\n    }\n  }\n\n  booleanValue(): boolean | undefined;\n  booleanValue<T>(orElse: T): boolean | T;\n  booleanValue<T>(orElse?: T): boolean | T | undefined {\n    if (this._value === \"true\") {\n      return true;\n    } else if (this._value === \"false\") {\n      return false;\n    } else {\n      return orElse;\n    }\n  }\n\n  toAny(): AnyText {\n    return this._value;\n  }\n\n  valueOf(): string {\n    return this._value;\n  }\n\n  plus(that: AnyValue): Value;\n  plus(that: AnyItem): Item;\n  plus(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Text) {\n      return Text.from(this._value + that._value);\n    }\n    return super.plus(that);\n  }\n\n  branch(): Text {\n    return this;\n  }\n\n  clone(): Text {\n    return this;\n  }\n\n  commit(): this {\n    return this;\n  }\n\n  typeOrder(): number {\n    return 5;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof Text) {\n      const order = this._value.localeCompare(that._value);\n      return order < 0 ? -1 : order > 0 ? 1 : 0;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Text) {\n      return this._value === that._value;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (this._hashCode === void 0) {\n      this._hashCode = Murmur3.hash(this._value);\n    }\n    return this._hashCode;\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"Text\").write(46/*'.'*/);\n    if (this._value.length === 0) {\n      output = output.write(\"empty\").write(40/*'('*/).write(41/*')'*/);\n    } else {\n      output = output.write(\"from\").write(40/*'('*/).debug(this._value).write(41/*')'*/);\n    }\n  }\n\n  display(output: Output): void {\n    Format.debug(this._value, output);\n  }\n\n  toString(): string {\n    return this._value;\n  }\n\n  private static _empty?: Text;\n\n  private static _cache?: HashGenCacheSet<Text>;\n\n  static output(settings: OutputSettings = OutputSettings.standard()): Output<Text> {\n    return new TextOutput(\"\", settings);\n  }\n\n  static empty(): Text {\n    if (!Text._empty) {\n      Text._empty = new Text(\"\");\n    }\n    return Text._empty;\n  }\n\n  static from(value: string): Text {\n    const n = value.length;\n    if (n === 0) {\n      return Text.empty();\n    } else {\n      let text = new Text(value);\n      if (n <= 64) {\n        text = Text.cache().put(text);\n      }\n      return text;\n    }\n  }\n\n  static fromAny(value: AnyText): Text {\n    if (value instanceof Text) {\n      return value;\n    } else if (typeof value === \"string\") {\n      return Text.from(value);\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n\n  /** @hidden */\n  static cache(): HashGenCacheSet<Text> {\n    if (Text._cache == null) {\n      const cacheSize = 128;\n      Text._cache = new HashGenCacheSet<Text>(cacheSize);\n    }\n    return Text._cache;\n  }\n}\nItem.Text = Text;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects, HashGenCacheSet} from \"@swim/util\";\nimport {Output, Format} from \"@swim/codec\";\nimport {AnyItem, Item} from \"./Item\";\nimport {AnyValue, Value} from \"./Value\";\n\nexport type AnyNum = Num | number;\n\nexport class Num extends Value {\n  /** @hidden */\n  readonly _value: number;\n  /** @hidden */\n  readonly _flags: number;\n\n  private constructor(value: number, flags: number = 0) {\n    super();\n    this._value = value;\n    this._flags = flags;\n  }\n\n  isConstant(): boolean {\n    return true;\n  }\n\n  get value(): number {\n    return this._value;\n  }\n\n  isNaN(): boolean {\n    return isNaN(this._value);\n  }\n\n  isInfinite(): boolean {\n    return !isNaN(this._value) && !isFinite(this._value);\n  }\n\n  isUint32(): boolean {\n    return (this._flags & Num.UINT32) !== 0;\n  }\n\n  isUint64(): boolean {\n    return (this._flags & Num.UINT64) !== 0;\n  }\n\n  stringValue(): string;\n  stringValue<T>(orElse: T): string;\n  stringValue<T>(orElse?: T): string {\n    return \"\" + this._value;\n  }\n\n  numberValue(): number;\n  numberValue<T>(orElse: T): number;\n  numberValue<T>(orElse?: T): number {\n    return this._value;\n  }\n\n  booleanValue(): boolean;\n  booleanValue<T>(orElse: T): boolean;\n  booleanValue<T>(orElse?: T): boolean {\n    return !!this._value;\n  }\n\n  toAny(): AnyNum {\n    return this._value;\n  }\n\n  valueOf(): number {\n    return this._value;\n  }\n\n  bitwiseOr(that: AnyValue): Value;\n  bitwiseOr(that: AnyItem): Item;\n  bitwiseOr(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Num) {\n      return Num.from((this._value | that._value) >>> 0);\n    }\n    return super.bitwiseOr(that);\n  }\n\n  bitwiseXor(that: AnyValue): Value;\n  bitwiseXor(that: AnyItem): Item;\n  bitwiseXor(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Num) {\n      return Num.from((this._value ^ that._value) >>> 0);\n    }\n    return super.bitwiseXor(that);\n  }\n\n  bitwiseAnd(that: AnyValue): Value;\n  bitwiseAnd(that: AnyItem): Item;\n  bitwiseAnd(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Num) {\n      return Num.from((this._value & that._value) >>> 0);\n    }\n    return super.bitwiseAnd(that);\n  }\n\n  plus(that: AnyValue): Value;\n  plus(that: AnyItem): Item;\n  plus(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Num) {\n      return Num.from(this._value + that._value);\n    }\n    return super.plus(that);\n  }\n\n  minus(that: AnyValue): Value;\n  minus(that: AnyItem): Item;\n  minus(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Num) {\n      return Num.from(this._value - that._value);\n    }\n    return super.minus(that);\n  }\n\n  times(that: AnyValue): Value;\n  times(that: AnyItem): Item;\n  times(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Num) {\n      return Num.from(this._value * that._value);\n    }\n    return super.times(that);\n  }\n\n  divide(that: AnyValue): Value;\n  divide(that: AnyItem): Item;\n  divide(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Num) {\n      return Num.from(this._value / that._value);\n    }\n    return super.divide(that);\n  }\n\n  modulo(that: AnyValue): Value;\n  modulo(that: AnyItem): Item;\n  modulo(that: AnyItem): Item {\n    that = Item.fromAny(that);\n    if (that instanceof Num) {\n      return Num.from(this._value % that._value);\n    }\n    return super.modulo(that);\n  }\n\n  bitwiseNot(): Value {\n    return Num.from(~this._value >>> 0);\n  }\n\n  negative(): Value {\n    return Num.from(-this._value);\n  }\n\n  positive(): Value {\n    return this;\n  }\n\n  inverse(): Value {\n    return Num.from(1 / this._value);\n  }\n\n  abs(): Num {\n    return Num.from(Math.abs(this._value));\n  }\n\n  ceil(): Num {\n    return Num.from(Math.ceil(this._value));\n  }\n\n  floor(): Num {\n    return Num.from(Math.floor(this._value));\n  }\n\n  round(): Num {\n    return Num.from(Math.round(this._value));\n  }\n\n  sqrt(): Num {\n    return Num.from(Math.sqrt(this._value));\n  }\n\n  pow(that: AnyNum): Num {\n    that = Num.fromAny(that);\n    return Num.from(Math.pow(this._value, that._value));\n  }\n\n  max(that: Num): Num;\n  max(that: Item): Item;\n  max(that: Item): Item {\n    return this.compareTo(that) >= 0 ? this : that;\n  }\n\n  min(that: Num): Num;\n  min(that: Item): Item;\n  min(that: Item): Item {\n    return this.compareTo(that) <= 0 ? this : that;\n  }\n\n  typeOrder(): number {\n    return 6;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof Num) {\n      const x = this._value;\n      const y = that._value;\n      return x < y ? -1 : x > y ? 1 : isNaN(y) ? (isNaN(x) ? 0 : -1) : isNaN(x) ? 1 : 0;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Num) {\n      const x = this._value;\n      const y = that._value;\n      return x === y || isNaN(x) && isNaN(y);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    return Murmur3.hash(this._value);\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"Num\").write(46/*'.'*/).write(\"from\")\n        .write(40/*'('*/).display(this).write(41/*')'*/);\n  }\n\n  display(output: Output): void {\n    Format.displayNumber(this._value, output);\n  }\n\n  /** @hidden */\n  static readonly TYPE_MASK = 0x3;\n  /** @hidden */\n  static readonly UINT32: number = 1;\n  /** @hidden */\n  static readonly UINT64: number = 2;\n\n  private static _positiveZero?: Num;\n  private static _negativeZero?: Num;\n  private static _positiveOne?: Num;\n  private static _negativeOne?: Num;\n  private static _nan?: Num;\n\n  private static _cache?: HashGenCacheSet<Num>;\n\n  static positiveZero(): Num {\n    if (Num._positiveZero === void 0) {\n      Num._positiveZero = new Num(0);\n    }\n    return Num._positiveZero;\n  }\n\n  static negativeZero(): Num {\n    if (Num._negativeZero === void 0) {\n      Num._negativeZero = new Num(-0);\n    }\n    return Num._negativeZero;\n  }\n\n  static positiveOne(): Num {\n    if (Num._positiveOne === void 0) {\n      Num._positiveOne = new Num(1);\n    }\n    return Num._positiveOne;\n  }\n\n  static negativeOne(): Num {\n    if (Num._negativeOne === void 0) {\n      Num._negativeOne = new Num(-1);\n    }\n    return Num._negativeOne;\n  }\n\n  static nan(): Num {\n    if (Num._nan === void 0) {\n      Num._nan = new Num(NaN);\n    }\n    return Num._nan;\n  }\n\n  static uint32(value: number): Num {\n    return new Num(value, Num.UINT32);\n  }\n\n  static uint64(value: number): Num {\n    return new Num(value, Num.UINT64);\n  }\n\n  static from(value: number | string): Num {\n    if (typeof value === \"number\") {\n      if (value === 0) {\n        if (1 / value === -Infinity) {\n          return Num.negativeZero();\n        } else {\n          return Num.positiveZero();\n        }\n      } else if (value === 1) {\n        return Num.positiveOne();\n      } else if (value === -1) {\n        return Num.negativeOne();\n      } else if (isNaN(value)) {\n        return Num.nan();\n      } else {\n        return Num.cache().put(new Num(value));\n      }\n    } else if (typeof value === \"string\") {\n      if (value === \"NaN\") {\n        return Num.nan();\n      } else {\n        const num = +value;\n        if (isFinite(num)) {\n          return Num.from(num);\n        }\n      }\n      throw new Error(value);\n    }\n    throw new TypeError(\"\" + value);\n  }\n\n  static fromAny(value: AnyNum): Num {\n    if (value instanceof Num) {\n      return value;\n    } else if (typeof value === \"number\") {\n      return Num.from(value);\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n\n  /** @hidden */\n  static cache(): HashGenCacheSet<Num> {\n    if (Num._cache == null) {\n      const cacheSize = 16;\n      Num._cache = new HashGenCacheSet<Num>(cacheSize);\n    }\n    return Num._cache;\n  }\n}\nItem.Num = Num;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {AnyItem, Item} from \"./Item\";\nimport {AnyValue, Value} from \"./Value\";\n\nexport type AnyBool = Bool | boolean;\n\nexport class Bool extends Value {\n  /** @hidden */\n  readonly _value: boolean;\n  /** @hidden */\n  _hashCode?: number;\n\n  private constructor(value: boolean) {\n    super();\n    this._value = value;\n  }\n\n  isConstant(): boolean {\n    return true;\n  }\n\n  get value(): boolean {\n    return this._value;\n  }\n\n  stringValue(): string;\n  stringValue<T>(orElse: T): string;\n  stringValue<T>(orElse?: T): string {\n    return this._value ? \"true\" : \"false\";\n  }\n\n  booleanValue(): boolean;\n  booleanValue<T>(orElse: T): boolean;\n  booleanValue<T>(orElse?: T): boolean {\n    return this._value;\n  }\n\n  toAny(): AnyBool {\n    return this._value;\n  }\n\n  valueOf(): boolean {\n    return this._value;\n  }\n\n  conditional(thenTerm: AnyValue, elseTerm: AnyValue): Value;\n  conditional(thenTerm: AnyItem, elseTerm: AnyItem): Item;\n  conditional(thenTerm: AnyItem, elseTerm: AnyItem): Item {\n    return this._value ? Item.fromAny(thenTerm) : Item.fromAny(elseTerm);\n  }\n\n  or(that: AnyValue): Value;\n  or(that: AnyItem): Item;\n  or(that: AnyItem): Item {\n    return this._value ? this : Item.fromAny(that);\n  }\n\n  and(that: AnyValue): Value;\n  and(that: AnyItem): Item;\n  and(that: AnyItem): Item {\n    return this._value ? Item.fromAny(that) : this;\n  }\n\n  not(): Value {\n    return Bool.from(!this._value);\n  }\n\n  typeOrder(): number {\n    return 7;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof Bool) {\n      if (this._value && !that._value) {\n        return -1;\n      } else if (!this._value && that._value) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Bool) {\n      return this._value === that._value;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (this._hashCode === void 0) {\n      this._hashCode = Murmur3.hash(this._value ? \"true\" : \"false\");\n    }\n    return this._hashCode;\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"Bool\").write(46/*'.'*/).write(\"from\")\n        .write(40/*'('*/).write(this._value ? \"true\" : \"false\").write(41/*')'*/);\n  }\n\n  display(output: Output): void {\n    output = output.write(this._value ? \"true\" : \"false\");\n  }\n\n  private static readonly True: Bool = new Bool(true);\n\n  private static readonly False: Bool = new Bool(false);\n\n  static from(value: boolean): Bool {\n    return value ? Bool.True : Bool.False;\n  }\n\n  static fromAny(value: AnyBool): Bool {\n    if (value instanceof Bool) {\n      return value;\n    } else if (typeof value === \"boolean\") {\n      return Bool.from(value);\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n}\nItem.Bool = Bool;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyItem, Item} from \"./Item\";\nimport {AnyValue, Value} from \"./Value\";\nimport {Operator} from \"./Operator\";\n\nexport abstract class Expression extends Value {\n  /** @hidden */\n  constructor() {\n    super();\n  }\n\n  conditional(thenTerm: Value, elseTerm: Value): Value;\n  conditional(thenTerm: AnyItem, elseTerm: AnyItem): Item;\n  conditional(thenTerm: AnyItem, elseTerm: AnyItem): Item {\n    thenTerm = Item.fromAny(thenTerm);\n    elseTerm = Item.fromAny(elseTerm);\n    return new Item.ConditionalOperator(this, thenTerm, elseTerm);\n  }\n\n  or(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new Item.OrOperator(this, that);\n  }\n\n  and(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new Item.AndOperator(this, that);\n  }\n\n  bitwiseOr(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new Item.BitwiseOrOperator(this, that);\n  }\n\n  bitwiseXor(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new Item.BitwiseXorOperator(this, that);\n  }\n\n  bitwiseAnd(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new Item.BitwiseAndOperator(this, that);\n  }\n\n  lt(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new Item.LtOperator(this, that);\n  }\n\n  le(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new Item.LeOperator(this, that);\n  }\n\n  eq(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new Item.EqOperator(this, that);\n  }\n\n  ne(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new Item.NeOperator(this, that);\n  }\n\n  ge(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new Item.GeOperator(this, that);\n  }\n\n  gt(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new Item.GtOperator(this, that);\n  }\n\n  plus(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new Item.PlusOperator(this, that);\n  }\n\n  minus(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new Item.MinusOperator(this, that);\n  }\n\n  times(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new Item.TimesOperator(this, that);\n  }\n\n  divide(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new Item.DivideOperator(this, that);\n  }\n\n  modulo(that: AnyItem): Operator {\n    that = Item.fromAny(that);\n    return new Item.ModuloOperator(this, that);\n  }\n\n  not(): Operator {\n    return new Item.NotOperator(this);\n  }\n\n  bitwiseNot(): Operator {\n    return new Item.BitwiseNotOperator(this);\n  }\n\n  negative(): Operator {\n    return new Item.NegativeOperator(this);\n  }\n\n  positive(): Operator {\n    return new Item.PositiveOperator(this);\n  }\n\n  inverse(): Operator {\n    return new Item.DivideOperator(Item.Num.positiveOne(), this);\n  }\n\n  toAny(): AnyValue {\n    return this;\n  }\n}\nItem.Expression = Expression;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item} from \"./Item\";\nimport {Expression} from \"./Expression\";\n\nexport abstract class Operator extends Expression {\n  /** @hidden */\n  constructor() {\n    super();\n  }\n}\nItem.Operator = Operator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output} from \"@swim/codec\";\nimport {AnyInterpreter, Interpreter} from \"./Interpreter\";\nimport {AnyItem, Item} from \"./Item\";\nimport {AnyValue, Value} from \"./Value\";\nimport {AnyText} from \"./Text\";\nimport {AnyNum} from \"./Num\";\nimport {Expression} from \"./Expression\";\nimport {IdentitySelector} from \"./selector/IdentitySelector\";\nimport {KeysSelector} from \"./selector/KeysSelector\";\nimport {ValuesSelector} from \"./selector/ValuesSelector\";\nimport {ChildrenSelector} from \"./selector/ChildrenSelector\";\nimport {DescendantsSelector} from \"./selector/DescendantsSelector\";\nimport {Operator} from \"./Operator\";\n\nexport abstract class Selector extends Expression {\n  /** @hidden */\n  constructor() {\n    super();\n  }\n\n  isConstant(): boolean {\n    return false;\n  }\n\n  /**\n   * Returns the `Selector` that this `Selector` uses to match sub-selections.\n   */\n  abstract then(): Selector;\n\n  abstract forSelected<T, S = unknown>(interpreter: Interpreter,\n                                       callback: (this: S, interpreter: Interpreter) => T | undefined,\n                                       thisArg?: S): T | undefined;\n\n  abstract mapSelected<S = unknown>(interpreter: Interpreter,\n                                    transform: (this: S, interpreter: Interpreter) => Item,\n                                    thisArg?: S): Item;\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const selected = Item.Record.create();\n    this.forSelected(interpreter, function (interpreter: Interpreter): void {\n      const scope = interpreter.peekScope();\n      if (scope) {\n        selected.push(scope);\n      }\n    }, this);\n    return selected.isEmpty() ? Item.absent() : selected.flattened();\n  }\n\n  abstract substitute(interpreter: AnyInterpreter): Item;\n\n  abstract andThen(then: Selector): Selector;\n\n  get(key: AnyValue): Selector {\n    key = Value.fromAny(key);\n    return this.andThen(new Item.GetSelector(key, Selector.identity()));\n  }\n\n  getAttr(key: AnyText): Selector {\n    key = Item.Text.fromAny(key);\n    return this.andThen(new Item.GetAttrSelector(key, Selector.identity()));\n  }\n\n  getItem(index: AnyNum): Selector {\n    index = Item.Num.fromAny(index);\n    return this.andThen(new Item.GetItemSelector(index, Selector.identity()));\n  }\n\n  keys(): Selector {\n    return this.andThen(Selector.keys());\n  }\n\n  values(): Selector {\n    return this.andThen(Selector.values());\n  }\n\n  children(): Selector {\n    return this.andThen(Selector.children());\n  }\n\n  descendants(): Selector {\n    return this.andThen(Selector.descendants());\n  }\n\n  filter(predicate?: AnyItem): Selector {\n    if (arguments.length === 0) {\n      return new Item.FilterSelector(this, Selector.identity());\n    } else {\n      predicate = Item.fromAny(predicate);\n      return this.andThen(predicate.filter());\n    }\n  }\n\n  invoke(args: Value): Operator {\n    return new Item.InvokeOperator(this, args);\n  }\n\n  precedence(): number {\n    return 11;\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"Selector\").write(46/*'.'*/).write(\"identity\").write(40/*'('*/).write(41/*')'*/);\n    this.debugThen(output);\n  }\n\n  abstract debugThen(output: Output): void;\n\n  abstract clone(): Selector;\n\n  /** @hidden */\n  static _identity: IdentitySelector; // defined by IdentitySelector\n  private static _keys?: KeysSelector;\n  private static _values?: ValuesSelector;\n  private static _children?: ChildrenSelector;\n  private static _descendants?: DescendantsSelector;\n\n  static identity(): Selector {\n    return Selector._identity;\n  }\n\n  static get(key: AnyValue): Selector {\n    key = Value.fromAny(key);\n    return new Item.GetSelector(key, Selector.identity());\n  }\n\n  static getAttr(key: AnyText): Selector {\n    key = Item.Text.fromAny(key);\n    return new Item.GetAttrSelector(key, Selector.identity());\n  }\n\n  static getItem(index: AnyNum): Selector {\n    index = Item.Num.fromAny(index);\n    return new Item.GetItemSelector(index, Selector.identity());\n  }\n\n  static keys(): Selector {\n    if (!Selector._keys) {\n      Selector._keys = new Item.KeysSelector(Selector.identity());\n    }\n    return Selector._keys;\n  }\n\n  static values(): Selector {\n    if (!Selector._values) {\n      Selector._values = new Item.ValuesSelector(Selector.identity());\n    }\n    return Selector._values;\n  }\n\n  static children(): Selector {\n    if (!Selector._children) {\n      Selector._children = new Item.ChildrenSelector(Selector.identity());\n    }\n    return Selector._children;\n  }\n\n  static descendants(): Selector {\n    if (!Selector._descendants) {\n      Selector._descendants = new Item.DescendantsSelector(Selector.identity());\n    }\n    return Selector._descendants;\n  }\n\n  static literal(item: AnyItem): Selector {\n    item = Item.fromAny(item);\n    if (!(item instanceof Selector)) {\n      item = new Item.LiteralSelector(item, Selector.identity());\n    }\n    return item as Selector;\n  }\n}\nItem.Selector = Selector;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item} from \"./Item\";\nimport {Value} from \"./Value\";\nimport {Expression} from \"./Expression\";\nimport {InvokeOperator} from \"./operator/InvokeOperator\";\nimport {Interpreter} from \"./Interpreter\";\n\nexport abstract class Func extends Expression {\n  /** @hidden */\n  constructor() {\n    super();\n  }\n\n  abstract invoke(args: Value, interpreter?: Interpreter, operator?: InvokeOperator): Item;\n\n  expand(args: Value, interpreter: Interpreter, operator: InvokeOperator): Item | undefined {\n    return void 0;\n  }\n\n  isConstant(): boolean {\n    return false;\n  }\n}\nItem.Func = Func;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"./Item\";\nimport {Value} from \"./Value\";\nimport {Record} from \"./Record\";\n\nexport type AnyExtant = Extant | null;\n\nexport class Extant extends Value {\n  /** @hidden */\n  private constructor() {\n    super();\n  }\n\n  /**\n   * Always returns `true` because `Extant` is a defined value.\n   */\n  isDefined(): boolean {\n    return true;\n  }\n\n  /**\n   * Always returns `false` because `Extant` is not a distinct\n   * value.\n   */\n  isDistinct(): boolean {\n    return false;\n  }\n\n  isConstant(): boolean {\n    return true;\n  }\n\n  /**\n   * Always returns an empty `Record` because `Extant` is not a distinct value.\n   */\n  unflattened(): Record {\n    return Value.Record.empty();\n  }\n\n  not(): Value {\n    return Value.absent();\n  }\n\n  /**\n   * Always returns the empty `string` because `Extant` behaves like an empty\n   * `Record`, which converts to a `string` by concatenating the string values\n   * of all its members, if all its members convert to string values.\n   */\n  stringValue(): string;\n  /**\n   * Always returns the empty `string` because `Extant` behaves like an empty\n   * `Record`, which converts to a `string` by concatenating the string values\n   * of all its members, if all its members convert to string values.\n   */\n  stringValue<T>(orElse: T): string;\n  stringValue<T>(orElse?: T): string {\n    return \"\";\n  }\n\n  /**\n   * Always returns `true` because `Extant` behaves like a truthy value.\n   */\n  booleanValue(): boolean;\n  /**\n   * Always returns `true` because `Extant` behaves like a truthy value.\n   */\n  booleanValue<T>(orElse: T): boolean;\n  booleanValue<T>(orElse?: T): boolean {\n    return true;\n  }\n\n  toAny(): AnyExtant {\n    return null;\n  }\n\n  typeOrder(): number {\n    return 98;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    return this === that;\n  }\n\n  hashCode(): number {\n    if (Extant._hashSeed === void 0) {\n      Extant._hashSeed = Murmur3.seed(Extant);\n    }\n    return Extant._hashSeed;\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"Value\").write(46/*'.'*/).write(\"extant\").write(40/*'('*/).write(41/*')'*/);\n  }\n\n  display(output: Output): void {\n    output = output.write(\"null\");\n  }\n\n  private static readonly _extant: Extant = new Extant();\n\n  private static _hashSeed?: number;\n\n  static extant(): Extant {\n    return Extant._extant;\n  }\n\n  static fromAny(value: AnyExtant): Extant {\n    if (value instanceof Extant) {\n      return value;\n    } else if (value === null) {\n      return Extant.extant();\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n}\nItem.Extant = Extant;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects, Cursor} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {AnyItem, Item} from \"./Item\";\nimport {AnyValue, Value} from \"./Value\";\nimport {Record} from \"./Record\";\nimport {AnyText} from \"./Text\";\n\nexport type AnyAbsent = Absent | undefined;\n\nexport class Absent extends Value {\n  /** @hidden */\n  private constructor() {\n    super();\n  }\n\n  /**\n   * Always returns `false` because `Absent` represents an undefined value.\n   */\n  isDefined(): boolean {\n    return false;\n  }\n\n  /**\n   * Always returns `false` because `Absent` is not a distinct value.\n   */\n  isDistinct(): boolean {\n    return false;\n  }\n\n  isConstant(): boolean {\n    return true;\n  }\n\n  /**\n   * Always returns an empty `Record` because `Absent` is not a distinct value.\n   */\n  unflattened(): Record {\n    return Value.Record.empty();\n  }\n\n  updated(key: AnyValue, value: AnyValue): Record {\n    return Value.Record.of(Item.Slot.of(key, value));\n  }\n\n  updatedAttr(key: AnyText, value: AnyValue): Record {\n    return Value.Record.of(Item.Attr.of(key, value));\n  }\n\n  updatedSlot(key: AnyValue, value: AnyValue): Record {\n    return Value.Record.of(Item.Slot.of(key, value));\n  }\n\n  appended(...items: AnyItem[]): Record {\n    return Value.Record.of(items);\n  }\n\n  prepended(...items: AnyItem[]): Record {\n    return Value.Record.of(items);\n  }\n\n  concat(...items: AnyItem[]): Record {\n    const record = Value.Record.create();\n    for (let i = 0, n = arguments.length; i < n; i += 1) {\n      Item.fromAny(arguments[i]).forEach(function (item: Item): void {\n        record.push(item);\n      });\n    }\n    return record;\n  }\n\n  cond(thenTerm: AnyValue, elseTerm: AnyValue): Value;\n  cond(thenTerm: AnyItem, elseTerm: AnyItem): Item;\n  cond(thenTerm: AnyItem, elseTerm: AnyItem): Item {\n    return Item.fromAny(elseTerm);\n  }\n\n  or(that: AnyValue): Value;\n  or(that: AnyItem): Item;\n  or(that: AnyItem): Item {\n    return Item.fromAny(that);\n  }\n\n  and(that: AnyValue): Value;\n  and(that: AnyItem): Item;\n  and(that: AnyItem): Item {\n    return this;\n  }\n\n  not(): Value {\n    return Value.extant();\n  }\n\n  /**\n   * Always returns `false` because `Absent` behaves like a falsey value.\n   */\n  booleanValue(): boolean;\n  /**\n   * Always returns `false` because `Absent` behaves like a falsey value.\n   */\n  booleanValue<T>(orElse: T): boolean;\n  booleanValue<T>(orElse?: T): boolean {\n    return false;\n  }\n\n  toAny(): AnyAbsent {\n    return void 0;\n  }\n\n  forEach<T, S = unknown>(callback: (this: S, item: Item, index: number) => T | void,\n                          thisArg?: S): T | undefined {\n    return void 0;\n  }\n\n  iterator(): Cursor<Item> {\n    return Cursor.empty();\n  }\n\n  typeOrder(): number {\n    return 99;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    return this === that;\n  }\n\n  hashCode(): number {\n    if (Absent._hashSeed === void 0) {\n      Absent._hashSeed = Murmur3.seed(Absent);\n    }\n    return Absent._hashSeed;\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"Value\").write(46/*'.'*/).write(\"absent\").write(40/*'('*/).write(41/*')'*/);\n  }\n\n  display(output: Output): void {\n    output = output.write(\"undefined\");\n  }\n\n  private static readonly _absent: Absent = new Absent();\n\n  private static _hashSeed?: number;\n\n  static absent(): Absent {\n    return Absent._absent;\n  }\n\n  static fromAny(value: AnyAbsent): Absent {\n    if (value instanceof Absent) {\n      return value;\n    } else if (value === void 0) {\n      return Absent.absent();\n    } else {\n      throw new TypeError(\"\" + value);\n    }\n  }\n}\nItem.Absent = Absent;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport class FormException extends Error {\n  constructor(message?: string) {\n    super(message);\n    (this as any).__proto__ = FormException.prototype;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyItem, Item} from \"./Item\";\nimport {AnyValue, Value} from \"./Value\";\nimport {TagForm} from \"./form/TagForm\";\nimport {UnitForm} from \"./form/UnitForm\";\nimport {StringForm} from \"./form/StringForm\";\nimport {NumberForm} from \"./form/NumberForm\";\nimport {BooleanForm} from \"./form/BooleanForm\";\nimport {AnyForm} from \"./form/AnyForm\";\nimport {ItemForm} from \"./form/ItemForm\";\nimport {ValueForm} from \"./form/ValueForm\";\n\n/**\n * Transformation between a structurally typed [Item] and a nominally typed\n * JavaScript object.\n */\nexport abstract class Form<T extends U, U = T> {\n  /**\n   * Returns the key of the tag attribute that distinguishes structures of this\n   * `Form`; returns `undefined` if this `Form` has no distinguishing tag\n   * attribute.  Used to accelerate distrcrimination of polymorphic structural\n   * types with nominal type hints.\n   */\n  tag(): string | undefined;\n\n  /**\n   * Returns a version of this `Form` that requires a head [Attr] with the\n   * given `tag` name.\n   */\n  tag(tag: string | undefined): Form<T, U>;\n\n  tag(tag?: string | undefined): string | undefined | Form<T, U> {\n    if (arguments.length === 0) {\n      return void 0;\n    } else if (tag !== void 0) {\n      return new Form.TagForm<T, U>(tag, this);\n    } else {\n      return this;\n    }\n  }\n\n  /**\n   * Returns a default–possibly `undefined`–value of type `T`.  Used as the\n   * fallback return value when [Item.coerce coercing] an invalid structural\n   * value.\n   */\n  unit(): T | undefined;\n\n  /**\n   * Returns a version of this `Form` with the given `unit` value.\n   */\n  unit(unit: T | undefined): Form<T, U>;\n\n  unit(unit?: T | undefined): T | undefined | Form<T, U> {\n    if (arguments.length === 0) {\n      return void 0;\n    } else if (unit !== void 0) {\n      return new Form.UnitForm<T, U>(unit, this);\n    } else {\n      return this;\n    }\n  }\n\n  /**\n   * Converts a nominally typed JavaScript `object` into its structurally typed\n   * equivalent, optionally based on the provided prototype `item`.\n   */\n  abstract mold(object: U, item?: Item): Item;\n\n  /**\n   * Converts a structurally typed `item` into a nominally typed JavaScript\n   * object, optionally based on the provided prototype `object`.\n   */\n  abstract cast(item: Item, object?: T): T | undefined;\n\n  // Forward type declarations\n  /** @hidden */\n  static TagForm: typeof TagForm; // defined by TagForm\n  /** @hidden */\n  static UnitForm: typeof UnitForm; // defined by UnitForm\n  /** @hidden */\n  static StringForm: typeof StringForm; // defined by StringForm\n  /** @hidden */\n  static NumberForm: typeof NumberForm; // defined by NumberForm\n  /** @hidden */\n  static BooleanForm: typeof BooleanForm; // defined by BooleanForm\n  /** @hidden */\n  static AnyForm: typeof AnyForm; // defined by AnyForm\n  /** @hidden */\n  static ItemForm: typeof ItemForm; // defined by ItemForm\n  /** @hidden */\n  static ValueForm: typeof ValueForm; // defined by ValueForm\n\n  private static _stringForm?: Form<string>;\n  private static _numberForm?: Form<number>;\n  private static _booleanForm?: Form<boolean>;\n  private static _anyForm?: Form<AnyItem>;\n  private static _itemForm?: Form<Item, AnyItem>;\n  private static _valueForm?: Form<Value, AnyValue>;\n\n  static forString(): Form<string> {\n    if (!Form._stringForm) {\n      Form._stringForm = new Form.StringForm(\"\");\n    }\n    return Form._stringForm;\n  }\n\n  static forNumber(): Form<number> {\n    if (!Form._numberForm) {\n      Form._numberForm = new Form.NumberForm(0);\n    }\n    return Form._numberForm;\n  }\n\n  static forBoolean(): Form<boolean> {\n    if (!Form._booleanForm) {\n      Form._booleanForm = new Form.BooleanForm(false);\n    }\n    return Form._booleanForm;\n  }\n\n  static forAny(): Form<AnyItem> {\n    if (!Form._anyForm) {\n      Form._anyForm = new Form.AnyForm(void 0);\n    }\n    return Form._anyForm;\n  }\n\n  static forItem(): Form<Item, AnyItem> {\n    if (!Form._itemForm) {\n      Form._itemForm = new Form.ItemForm(Item.absent());\n    }\n    return Form._itemForm;\n  }\n\n  static forValue(): Form<Value, AnyValue> {\n    if (!Form._valueForm) {\n      Form._valueForm = new Form.ValueForm(Value.absent());\n    }\n    return Form._valueForm;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item} from \"../Item\";\nimport {Operator} from \"../Operator\";\n\nexport abstract class BinaryOperator extends Operator {\n  /** @hidden */\n  readonly _operand1: Item;\n  /** @hidden */\n  readonly _operand2: Item;\n\n  constructor(operand1: Item, operand2: Item) {\n    super();\n    this._operand1 = operand1;\n    this._operand2 = operand2;\n  }\n\n  operand1(): Item {\n    return this._operand1;\n  }\n\n  abstract operator(): string;\n\n  operand2(): Item {\n    return this._operand2;\n  }\n\n  isConstant(): boolean {\n    return this._operand1.isConstant() && this._operand2.isConstant();\n  }\n}\nItem.BinaryOperator = BinaryOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item} from \"../Item\";\nimport {Operator} from \"../Operator\";\n\nexport abstract class UnaryOperator extends Operator {\n  /** @hidden */\n  readonly _operand: Item;\n\n  constructor(operand: Item) {\n    super();\n    this._operand = operand;\n  }\n\n  operand(): Item {\n    return this._operand;\n  }\n\n  abstract operator(): string;\n\n  isConstant(): boolean {\n    return this._operand.isConstant();\n  }\n}\nItem.UnaryOperator = UnaryOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {Operator} from \"../Operator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class ConditionalOperator extends Operator {\n  /** @hidden */\n  readonly _ifTerm: Item;\n  /** @hidden */\n  readonly _thenTerm: Item;\n  /** @hidden */\n  readonly _elseTerm: Item;\n\n  constructor(ifTerm: Item, thenTerm: Item, elseTerm: Item) {\n    super();\n    this._ifTerm = ifTerm.commit();\n    this._thenTerm = thenTerm.commit();\n    this._elseTerm = elseTerm.commit();\n  }\n\n  ifTerm(): Item {\n    return this._ifTerm;\n  }\n\n  thenTerm(): Item {\n    return this._thenTerm;\n  }\n\n  elseTerm(): Item {\n    return this._elseTerm;\n  }\n\n  isConstant(): boolean {\n    return this._ifTerm.isConstant() && this._thenTerm.isConstant()\n        && this._elseTerm.isConstant();\n  }\n\n  precedence(): number {\n    return 2;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    let result;\n    const ifTerm = this._ifTerm.evaluate(interpreter);\n    if (ifTerm.booleanValue(false)) {\n      const theTerm = this._thenTerm.evaluate(interpreter);\n      result = theTerm;\n    } else {\n      const elseTerm = this._elseTerm.evaluate(interpreter);\n      result = elseTerm;\n    }\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const ifTerm = this._ifTerm.substitute(interpreter);\n    const thenTerm = this._thenTerm.substitute(interpreter);\n    const elseTerm = this._elseTerm.substitute(interpreter);\n    return new ConditionalOperator(ifTerm, thenTerm, elseTerm);\n  }\n\n  typeOrder() {\n    return 20;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof ConditionalOperator) {\n      let order = this._ifTerm.compareTo(that._ifTerm);\n      if (order === 0) {\n        order = this._thenTerm.compareTo(that._thenTerm);\n        if (order === 0) {\n          order = this._elseTerm.compareTo(that._elseTerm);\n        }\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof ConditionalOperator) {\n      return this._ifTerm.equals(that._ifTerm) && this._thenTerm.equals(that._thenTerm)\n          && this._elseTerm.equals(that._elseTerm);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (ConditionalOperator._hashSeed === void 0) {\n      ConditionalOperator._hashSeed = Murmur3.seed(ConditionalOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(Murmur3.mix(ConditionalOperator._hashSeed,\n        this._ifTerm.hashCode()), this._thenTerm.hashCode()), this._elseTerm.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._ifTerm).write(46/*'.'*/).write(\"conditional\").write(40/*'('*/)\n        .debug(this._thenTerm).write(44/*','*/).write(32/*' '*/)\n        .debug(this._elseTerm).write(41/*')'*/);\n  }\n\n  clone(): ConditionalOperator {\n    return new ConditionalOperator(this._ifTerm.clone(), this._thenTerm.clone(), this._elseTerm.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.ConditionalOperator = ConditionalOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class OrOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  operator(): string {\n    return \"||\";\n  }\n\n  precedence(): number {\n    return 3;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    let result: Item;\n    const argument1 = this._operand1.evaluate(interpreter);\n    if (argument1.booleanValue(false)) {\n      result = argument1;\n    } else {\n      const argument2 = this._operand2.evaluate(interpreter);\n      result = argument2;\n    }\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this._operand1.substitute(interpreter);\n    const argument2 = this._operand2.substitute(interpreter);\n    return argument1.or(argument2);\n  }\n\n  typeOrder(): number {\n    return 21;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof OrOperator) {\n      let order = this._operand1.compareTo(that._operand1);\n      if (order === 0) {\n        order = this._operand2.compareTo(that._operand2);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof OrOperator) {\n      return this._operand1.equals(that._operand1) && this._operand2.equals(that._operand2);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (OrOperator._hashSeed === void 0) {\n      OrOperator._hashSeed = Murmur3.seed(OrOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(OrOperator._hashSeed,\n        this._operand1.hashCode()), this._operand2.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand1).write(46/*'.'*/).write(\"or\").write(40/*'('*/)\n        .debug(this._operand2).write(41/*')'*/);\n  }\n\n  clone(): OrOperator {\n    return new OrOperator(this._operand1.clone(), this._operand2.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.OrOperator = OrOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class AndOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  operator(): string {\n    return \"&&\";\n  }\n\n  precedence(): number {\n    return 4;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    let result: Item;\n    const argument1 = this._operand1.evaluate(interpreter);\n    if (argument1.booleanValue(false)) {\n      const argument2 = this._operand2.evaluate(interpreter);\n      result = argument2;\n    } else {\n      result = argument1;\n    }\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this._operand1.substitute(interpreter);\n    const argument2 = this._operand2.substitute(interpreter);\n    return argument1.and(argument2);\n  }\n\n  typeOrder(): number {\n    return 22;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof AndOperator) {\n      let order = this._operand1.compareTo(that._operand1);\n      if (order === 0) {\n        order = this._operand2.compareTo(that._operand2);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof AndOperator) {\n      return this._operand1.equals(that._operand1) && this._operand2.equals(that._operand2);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (AndOperator._hashSeed === void 0) {\n      AndOperator._hashSeed = Murmur3.seed(AndOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(AndOperator._hashSeed,\n        this._operand1.hashCode()), this._operand2.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand1).write(46/*'.'*/).write(\"and\").write(40/*'('*/)\n        .debug(this._operand2).write(41/*')'*/);\n  }\n\n  clone(): AndOperator {\n    return new AndOperator(this._operand1.clone(), this._operand2.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.AndOperator = AndOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class BitwiseOrOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  operator(): string {\n    return \"|\";\n  }\n\n  precedence(): number {\n    return 5;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this._operand1.evaluate(interpreter);\n    const argument2 = this._operand2.evaluate(interpreter);\n    const result = argument1.bitwiseOr(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this._operand1.substitute(interpreter);\n    const argument2 = this._operand2.substitute(interpreter);\n    return argument1.bitwiseOr(argument2);\n  }\n\n  typeOrder(): number {\n    return 23;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof BitwiseOrOperator) {\n      let order = this._operand1.compareTo(that._operand1);\n      if (order === 0) {\n        order = this._operand2.compareTo(that._operand2);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof BitwiseOrOperator) {\n      return this._operand1.equals(that._operand1) && this._operand2.equals(that._operand2);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (BitwiseOrOperator._hashSeed === void 0) {\n      BitwiseOrOperator._hashSeed = Murmur3.seed(BitwiseOrOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(BitwiseOrOperator._hashSeed,\n        this._operand1.hashCode()), this._operand2.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand1).write(46/*'.'*/).write(\"bitwiseOr\").write(40/*'('*/)\n        .debug(this._operand2).write(41/*')'*/);\n  }\n\n  clone(): BitwiseOrOperator {\n    return new BitwiseOrOperator(this._operand1.clone(), this._operand2.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.BitwiseOrOperator = BitwiseOrOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class BitwiseXorOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  operator(): string {\n    return \"^\";\n  }\n\n  precedence(): number {\n    return 6;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this._operand1.evaluate(interpreter);\n    const argument2 = this._operand2.evaluate(interpreter);\n    const result = argument1.bitwiseXor(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this._operand1.substitute(interpreter);\n    const argument2 = this._operand2.substitute(interpreter);\n    return argument1.bitwiseXor(argument2);\n  }\n\n  typeOrder(): number {\n    return 24;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof BitwiseXorOperator) {\n      let order = this._operand1.compareTo(that._operand1);\n      if (order === 0) {\n        order = this._operand2.compareTo(that._operand2);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof BitwiseXorOperator) {\n      return this._operand1.equals(that._operand1) && this._operand2.equals(that._operand2);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (BitwiseXorOperator._hashSeed === void 0) {\n      BitwiseXorOperator._hashSeed = Murmur3.seed(BitwiseXorOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(BitwiseXorOperator._hashSeed,\n        this._operand1.hashCode()), this._operand2.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand1).write(46/*'.'*/).write(\"bitwiseXor\").write(40/*'('*/)\n        .debug(this._operand2).write(41/*')'*/);\n  }\n\n  clone(): BitwiseXorOperator {\n    return new BitwiseXorOperator(this._operand1.clone(), this._operand2.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.BitwiseXorOperator = BitwiseXorOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class BitwiseAndOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  operator(): string {\n    return \"&\";\n  }\n\n  precedence(): number {\n    return 7;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this._operand1.evaluate(interpreter);\n    const argument2 = this._operand2.evaluate(interpreter);\n    const result = argument1.bitwiseAnd(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this._operand1.substitute(interpreter);\n    const argument2 = this._operand2.substitute(interpreter);\n    return argument1.bitwiseAnd(argument2);\n  }\n\n  typeOrder(): number {\n    return 25;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof BitwiseAndOperator) {\n      let order = this._operand1.compareTo(that._operand1);\n      if (order === 0) {\n        order = this._operand2.compareTo(that._operand2);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof BitwiseAndOperator) {\n      return this._operand1.equals(that._operand1) && this._operand2.equals(that._operand2);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (BitwiseAndOperator._hashSeed === void 0) {\n      BitwiseAndOperator._hashSeed = Murmur3.seed(BitwiseAndOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(BitwiseAndOperator._hashSeed,\n        this._operand1.hashCode()), this._operand2.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand1).write(46/*'.'*/).write(\"bitwiseAnd\").write(40/*'('*/)\n        .debug(this._operand2).write(41/*')'*/);\n  }\n\n  clone(): BitwiseAndOperator {\n    return new BitwiseAndOperator(this._operand1.clone(), this._operand2.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.BitwiseAndOperator = BitwiseAndOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class LtOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  operator(): string {\n    return \"<\";\n  }\n\n  precedence(): number {\n    return 0;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this._operand1.evaluate(interpreter);\n    const argument2 = this._operand2.evaluate(interpreter);\n    const result = argument1.lt(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this._operand1.substitute(interpreter);\n    const argument2 = this._operand2.substitute(interpreter);\n    return argument1.lt(argument2);\n  }\n\n  typeOrder(): number {\n    return 26;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof LtOperator) {\n      let order = this._operand1.compareTo(that._operand1);\n      if (order === 0) {\n        order = this._operand2.compareTo(that._operand2);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof LtOperator) {\n      return this._operand1.equals(that._operand1) && this._operand2.equals(that._operand2);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (LtOperator._hashSeed === void 0) {\n      LtOperator._hashSeed = Murmur3.seed(LtOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(LtOperator._hashSeed,\n        this._operand1.hashCode()), this._operand2.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand1).write(46/*'.'*/).write(\"lt\").write(40/*'('*/)\n        .debug(this._operand2).write(41/*')'*/);\n  }\n\n  clone(): LtOperator {\n    return new LtOperator(this._operand1.clone(), this._operand2.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.LtOperator = LtOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class LeOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  operator(): string {\n    return \"<=\";\n  }\n\n  precedence(): number {\n    return 0;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this._operand1.evaluate(interpreter);\n    const argument2 = this._operand2.evaluate(interpreter);\n    const result = argument1.le(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this._operand1.substitute(interpreter);\n    const argument2 = this._operand2.substitute(interpreter);\n    return argument1.le(argument2);\n  }\n\n  typeOrder(): number {\n    return 27;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof LeOperator) {\n      let order = this._operand1.compareTo(that._operand1);\n      if (order === 0) {\n        order = this._operand2.compareTo(that._operand2);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof LeOperator) {\n      return this._operand1.equals(that._operand1) && this._operand2.equals(that._operand2);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (LeOperator._hashSeed === void 0) {\n      LeOperator._hashSeed = Murmur3.seed(LeOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(LeOperator._hashSeed,\n        this._operand1.hashCode()), this._operand2.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand1).write(46/*'.'*/).write(\"le\").write(40/*'('*/)\n        .debug(this._operand2).write(41/*')'*/);\n  }\n\n  clone(): LeOperator {\n    return new LeOperator(this._operand1.clone(), this._operand2.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.LeOperator = LeOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class EqOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  operator(): string {\n    return \"==\";\n  }\n\n  precedence(): number {\n    return 0;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this._operand1.evaluate(interpreter);\n    const argument2 = this._operand2.evaluate(interpreter);\n    const result = argument1.eq(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this._operand1.substitute(interpreter);\n    const argument2 = this._operand2.substitute(interpreter);\n    return argument1.eq(argument2);\n  }\n\n  typeOrder(): number {\n    return 28;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof EqOperator) {\n      let order = this._operand1.compareTo(that._operand1);\n      if (order === 0) {\n        order = this._operand2.compareTo(that._operand2);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof EqOperator) {\n      return this._operand1.equals(that._operand1) && this._operand2.equals(that._operand2);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (EqOperator._hashSeed === void 0) {\n      EqOperator._hashSeed = Murmur3.seed(EqOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(EqOperator._hashSeed,\n        this._operand1.hashCode()), this._operand2.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand1).write(46/*'.'*/).write(\"eq\").write(40/*'('*/)\n        .debug(this._operand2).write(41/*')'*/);\n  }\n\n  clone(): EqOperator {\n    return new EqOperator(this._operand1.clone(), this._operand2.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.EqOperator = EqOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class NeOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  operator(): string {\n    return \"!=\";\n  }\n\n  precedence(): number {\n    return 0;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this._operand1.evaluate(interpreter);\n    const argument2 = this._operand2.evaluate(interpreter);\n    const result = argument1.ne(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this._operand1.substitute(interpreter);\n    const argument2 = this._operand2.substitute(interpreter);\n    return argument1.ne(argument2);\n  }\n\n  typeOrder(): number {\n    return 29;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof NeOperator) {\n      let order = this._operand1.compareTo(that._operand1);\n      if (order === 0) {\n        order = this._operand2.compareTo(that._operand2);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof NeOperator) {\n      return this._operand1.equals(that._operand1) && this._operand2.equals(that._operand2);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (NeOperator._hashSeed === void 0) {\n      NeOperator._hashSeed = Murmur3.seed(NeOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(NeOperator._hashSeed,\n        this._operand1.hashCode()), this._operand2.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand1).write(46/*'.'*/).write(\"ne\").write(40/*'('*/)\n        .debug(this._operand2).write(41/*')'*/);\n  }\n\n  clone(): NeOperator {\n    return new NeOperator(this._operand1.clone(), this._operand2.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.NeOperator = NeOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class GeOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  operator(): string {\n    return \">=\";\n  }\n\n  precedence(): number {\n    return 0;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this._operand1.evaluate(interpreter);\n    const argument2 = this._operand2.evaluate(interpreter);\n    const result = argument1.ge(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this._operand1.substitute(interpreter);\n    const argument2 = this._operand2.substitute(interpreter);\n    return argument1.ge(argument2);\n  }\n\n  typeOrder(): number {\n    return 30;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof GeOperator) {\n      let order = this._operand1.compareTo(that._operand1);\n      if (order === 0) {\n        order = this._operand2.compareTo(that._operand2);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GeOperator) {\n      return this._operand1.equals(that._operand1) && this._operand2.equals(that._operand2);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (GeOperator._hashSeed === void 0) {\n      GeOperator._hashSeed = Murmur3.seed(GeOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(GeOperator._hashSeed,\n        this._operand1.hashCode()), this._operand2.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand1).write(46/*'.'*/).write(\"ge\").write(40/*'('*/)\n        .debug(this._operand2).write(41/*')'*/);\n  }\n\n  clone(): GeOperator {\n    return new GeOperator(this._operand1.clone(), this._operand2.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.GeOperator = GeOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class GtOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  operator(): string {\n    return \">\";\n  }\n\n  precedence(): number {\n    return 0;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this._operand1.evaluate(interpreter);\n    const argument2 = this._operand2.evaluate(interpreter);\n    const result = argument1.gt(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this._operand1.substitute(interpreter);\n    const argument2 = this._operand2.substitute(interpreter);\n    return argument1.gt(argument2);\n  }\n\n  typeOrder(): number {\n    return 31;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof GtOperator) {\n      let order = this._operand1.compareTo(that._operand1);\n      if (order === 0) {\n        order = this._operand2.compareTo(that._operand2);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GtOperator) {\n      return this._operand1.equals(that._operand1) && this._operand2.equals(that._operand2);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (GtOperator._hashSeed === void 0) {\n      GtOperator._hashSeed = Murmur3.seed(GtOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(GtOperator._hashSeed,\n        this._operand1.hashCode()), this._operand2.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand1).write(46/*'.'*/).write(\"gt\").write(40/*'('*/)\n        .debug(this._operand2).write(41/*')'*/);\n  }\n\n  clone(): GtOperator {\n    return new GtOperator(this._operand1.clone(), this._operand2.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.GtOperator = GtOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class PlusOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  operator(): string {\n    return \"+\";\n  }\n\n  precedence(): number {\n    return 8;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this._operand1.evaluate(interpreter);\n    const argument2 = this._operand2.evaluate(interpreter);\n    const result = argument1.plus(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this._operand1.substitute(interpreter);\n    const argument2 = this._operand2.substitute(interpreter);\n    return argument1.plus(argument2);\n  }\n\n  typeOrder(): number {\n    return 32;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof PlusOperator) {\n      let order = this._operand1.compareTo(that._operand1);\n      if (order === 0) {\n        order = this._operand2.compareTo(that._operand2);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof PlusOperator) {\n      return this._operand1.equals(that._operand1) && this._operand2.equals(that._operand2);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (PlusOperator._hashSeed === void 0) {\n      PlusOperator._hashSeed = Murmur3.seed(PlusOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(PlusOperator._hashSeed,\n        this._operand1.hashCode()), this._operand2.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand1).write(46/*'.'*/).write(\"plus\").write(40/*'('*/)\n        .debug(this._operand2).write(41/*')'*/);\n  }\n\n  clone(): PlusOperator {\n    return new PlusOperator(this._operand1.clone(), this._operand2.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.PlusOperator = PlusOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class MinusOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  operator(): string {\n    return \"-\";\n  }\n\n  precedence(): number {\n    return 8;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this._operand1.evaluate(interpreter);\n    const argument2 = this._operand2.evaluate(interpreter);\n    const result = argument1.minus(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this._operand1.substitute(interpreter);\n    const argument2 = this._operand2.substitute(interpreter);\n    return argument1.minus(argument2);\n  }\n\n  typeOrder(): number {\n    return 33;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof MinusOperator) {\n      let order = this._operand1.compareTo(that._operand1);\n      if (order === 0) {\n        order = this._operand2.compareTo(that._operand2);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof MinusOperator) {\n      return this._operand1.equals(that._operand1) && this._operand2.equals(that._operand2);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (MinusOperator._hashSeed === void 0) {\n      MinusOperator._hashSeed = Murmur3.seed(MinusOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(MinusOperator._hashSeed,\n        this._operand1.hashCode()), this._operand2.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand1).write(46/*'.'*/).write(\"minus\").write(40/*'('*/)\n        .debug(this._operand2).write(41/*')'*/);\n  }\n\n  clone(): MinusOperator {\n    return new MinusOperator(this._operand1.clone(), this._operand2.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.MinusOperator = MinusOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class TimesOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  operator(): string {\n    return \"*\";\n  }\n\n  precedence(): number {\n    return 9;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this._operand1.evaluate(interpreter);\n    const argument2 = this._operand2.evaluate(interpreter);\n    const result = argument1.times(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this._operand1.substitute(interpreter);\n    const argument2 = this._operand2.substitute(interpreter);\n    return argument1.times(argument2);\n  }\n\n  typeOrder(): number {\n    return 34;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof TimesOperator) {\n      let order = this._operand1.compareTo(that._operand1);\n      if (order === 0) {\n        order = this._operand2.compareTo(that._operand2);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof TimesOperator) {\n      return this._operand1.equals(that._operand1) && this._operand2.equals(that._operand2);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (TimesOperator._hashSeed === void 0) {\n      TimesOperator._hashSeed = Murmur3.seed(TimesOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(TimesOperator._hashSeed,\n        this._operand1.hashCode()), this._operand2.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand1).write(46/*'.'*/).write(\"times\").write(40/*'('*/)\n        .debug(this._operand2).write(41/*')'*/);\n  }\n\n  clone(): TimesOperator {\n    return new TimesOperator(this._operand1.clone(), this._operand2.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.TimesOperator = TimesOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class DivideOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  operator(): string {\n    return \"/\";\n  }\n\n  precedence(): number {\n    return 9;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this._operand1.evaluate(interpreter);\n    const argument2 = this._operand2.evaluate(interpreter);\n    const result = argument1.divide(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this._operand1.substitute(interpreter);\n    const argument2 = this._operand2.substitute(interpreter);\n    return argument1.divide(argument2);\n  }\n\n  typeOrder(): number {\n    return 35;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof DivideOperator) {\n      let order = this._operand1.compareTo(that._operand1);\n      if (order === 0) {\n        order = this._operand2.compareTo(that._operand2);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof DivideOperator) {\n      return this._operand1.equals(that._operand1) && this._operand2.equals(that._operand2);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (DivideOperator._hashSeed === void 0) {\n      DivideOperator._hashSeed = Murmur3.seed(DivideOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(DivideOperator._hashSeed,\n        this._operand1.hashCode()), this._operand2.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand1).write(46/*'.'*/).write(\"divide\").write(40/*'('*/)\n        .debug(this._operand2).write(41/*')'*/);\n  }\n\n  clone(): DivideOperator {\n    return new DivideOperator(this._operand1.clone(), this._operand2.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.DivideOperator = DivideOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {BinaryOperator} from \"./BinaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class ModuloOperator extends BinaryOperator {\n  constructor(operand1: Item, operand2: Item) {\n    super(operand1, operand2);\n  }\n\n  operator(): string {\n    return \"%\";\n  }\n\n  precedence(): number {\n    return 9;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    interpreter.willOperate(this);\n    const argument1 = this._operand1.evaluate(interpreter);\n    const argument2 = this._operand2.evaluate(interpreter);\n    const result = argument1.modulo(argument2);\n    interpreter.didOperate(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument1 = this._operand1.substitute(interpreter);\n    const argument2 = this._operand2.substitute(interpreter);\n    return argument1.modulo(argument2);\n  }\n\n  typeOrder(): number {\n    return 36;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof ModuloOperator) {\n      let order = this._operand1.compareTo(that._operand1);\n      if (order === 0) {\n        order = this._operand2.compareTo(that._operand2);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof ModuloOperator) {\n      return this._operand1.equals(that._operand1) && this._operand2.equals(that._operand2);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (ModuloOperator._hashSeed === void 0) {\n      ModuloOperator._hashSeed = Murmur3.seed(ModuloOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(ModuloOperator._hashSeed,\n        this._operand1.hashCode()), this._operand2.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand1).write(46/*'.'*/).write(\"modulo\").write(40/*'('*/)\n        .debug(this._operand2).write(41/*')'*/);\n  }\n\n  clone(): ModuloOperator {\n    return new ModuloOperator(this._operand1.clone(), this._operand2.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.ModuloOperator = ModuloOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {UnaryOperator} from \"./UnaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class NotOperator extends UnaryOperator {\n  constructor(operand: Item) {\n    super(operand);\n  }\n\n  operator(): string {\n    return \"!\";\n  }\n\n  precedence(): number {\n    return 10;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument = this._operand.evaluate(interpreter);\n    return argument.not();\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument = this._operand.substitute(interpreter);\n    return argument.not();\n  }\n\n  typeOrder(): number {\n    return 37;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof NotOperator) {\n      return this._operand.compareTo(that._operand);\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof NotOperator) {\n      return this._operand.equals(that._operand);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (NotOperator._hashSeed === void 0) {\n      NotOperator._hashSeed = Murmur3.seed(NotOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(NotOperator._hashSeed, this._operand.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand).write(46/*'.'*/).write(\"not\").write(40/*'('*/).write(41/*')'*/);\n  }\n\n  clone(): NotOperator {\n    return new NotOperator(this._operand.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.NotOperator = NotOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {UnaryOperator} from \"./UnaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class BitwiseNotOperator extends UnaryOperator {\n  constructor(operand: Item) {\n    super(operand);\n  }\n\n  operator(): string {\n    return \"~\";\n  }\n\n  precedence(): number {\n    return 10;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument = this._operand.evaluate(interpreter);\n    return argument.bitwiseNot();\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument = this._operand.substitute(interpreter);\n    return argument.bitwiseNot();\n  }\n\n  typeOrder(): number {\n    return 38;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof BitwiseNotOperator) {\n      return this._operand.compareTo(that._operand);\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof BitwiseNotOperator) {\n      return this._operand.equals(that._operand);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (BitwiseNotOperator._hashSeed === void 0) {\n      BitwiseNotOperator._hashSeed = Murmur3.seed(BitwiseNotOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(BitwiseNotOperator._hashSeed, this._operand.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand).write(46/*'.'*/).write(\"bitwiseNot\").write(40/*'('*/).write(41/*')'*/);\n  }\n\n  clone(): BitwiseNotOperator {\n    return new BitwiseNotOperator(this._operand.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.BitwiseNotOperator = BitwiseNotOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {UnaryOperator} from \"./UnaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class NegativeOperator extends UnaryOperator {\n  constructor(operand: Item) {\n    super(operand);\n  }\n\n  operator(): string {\n    return \"-\";\n  }\n\n  precedence(): number {\n    return 10;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument = this._operand.evaluate(interpreter);\n    return argument.negative();\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument = this._operand.substitute(interpreter);\n    return argument.negative();\n  }\n\n  typeOrder(): number {\n    return 39;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof NegativeOperator) {\n      return this._operand.compareTo(that._operand);\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof NegativeOperator) {\n      return this._operand.equals(that._operand);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (NegativeOperator._hashSeed === void 0) {\n      NegativeOperator._hashSeed = Murmur3.seed(NegativeOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(NegativeOperator._hashSeed, this._operand.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand).write(46/*'.'*/).write(\"negative\").write(40/*'('*/).write(41/*')'*/);\n  }\n\n  clone(): NegativeOperator {\n    return new NegativeOperator(this._operand.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.NegativeOperator = NegativeOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {UnaryOperator} from \"./UnaryOperator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class PositiveOperator extends UnaryOperator {\n  constructor(operand: Item) {\n    super(operand);\n  }\n\n  operator(): string {\n    return \"+\";\n  }\n\n  precedence(): number {\n    return 10;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument = this._operand.evaluate(interpreter);\n    return argument.positive();\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const argument = this._operand.substitute(interpreter);\n    return argument.positive();\n  }\n\n  typeOrder(): number {\n    return 40;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof PositiveOperator) {\n      return this._operand.compareTo(that._operand);\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof PositiveOperator) {\n      return this._operand.equals(that._operand);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (PositiveOperator._hashSeed === void 0) {\n      PositiveOperator._hashSeed = Murmur3.seed(PositiveOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(PositiveOperator._hashSeed, this._operand.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._operand).write(46/*'.'*/).write(\"positive\").write(40/*'('*/).write(41/*')'*/);\n  }\n\n  clone(): PositiveOperator {\n    return new PositiveOperator(this._operand.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.PositiveOperator = PositiveOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {Value} from \"../Value\";\nimport {Operator} from \"../Operator\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class InvokeOperator extends Operator {\n  /** @hidden */\n  readonly _func: Value;\n  /** @hidden */\n  readonly _args: Value;\n  /** @hidden */\n  _state?: unknown;\n\n  constructor(func: Value, args: Value) {\n    super();\n    this._func = func;\n    this._args = args.commit();\n  }\n\n  func(): Value {\n    return this._func;\n  }\n\n  args(): Value {\n    return this._args;\n  }\n\n  state(): unknown {\n    return this._state;\n  }\n\n  setState(state: unknown) {\n    this._state = state;\n  }\n\n  isConstant(): boolean {\n    return this._func.isConstant() && this._args.isConstant();\n  }\n\n  precedence(): number {\n    return 11;\n  }\n\n  evaluate(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const func = this._func.evaluate(interpreter);\n    if (func instanceof Item.Func) {\n      return func.invoke(this._args, interpreter, this);\n    }\n    return Item.absent();\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const func = this._func.evaluate(interpreter);\n    if (func instanceof Item.Func) {\n      const result = func.expand(this._args, interpreter, this);\n      if (result) {\n        return result;\n      }\n    }\n    const args = this._args.substitute(interpreter).toValue();\n    return new InvokeOperator(this._func, args);\n  }\n\n  typeOrder(): number {\n    return 41;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof InvokeOperator) {\n      let order = this._func.compareTo(that._func);\n      if (order === 0) {\n        order = this._args.compareTo(that._args);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof InvokeOperator) {\n      return this._func.equals(that._func) && this._args.equals(that._args);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (InvokeOperator._hashSeed === void 0) {\n      InvokeOperator._hashSeed = Murmur3.seed(InvokeOperator);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(InvokeOperator._hashSeed,\n        this._func.hashCode()), this._args.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this._func).write(46/*'.'*/).write(\"invoke\").write(40/*'('*/)\n        .debug(this._args).write(41/*')'*/);\n  }\n\n  clone(): InvokeOperator {\n    return new InvokeOperator(this._func.clone(), this._args.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.InvokeOperator = InvokeOperator;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {AnyItem, Item} from \"../Item\";\nimport {AnyValue, Value} from \"../Value\";\nimport {AnyText} from \"../Text\";\nimport {AnyNum} from \"../Num\";\nimport {Selector} from \"../Selector\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class IdentitySelector extends Selector {\n  then(): Selector {\n    return this;\n  }\n\n  forSelected<T, S = unknown>(interpreter: Interpreter,\n                              callback: (this: S, interpreter: Interpreter) => T | undefined,\n                              thisArg?: S): T | undefined {\n    let selected: T | undefined;\n    interpreter.willSelect(this);\n    if (interpreter.scopeDepth() !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      const oldScope = interpreter.popScope();\n      // Evaluate the current selection.\n      const newScope = oldScope.evaluate(interpreter);\n      // Push the evaluated selection onto the scope stack.\n      interpreter.pushScope(newScope);\n      // Visit the evaluated selection.\n      selected = callback.call(thisArg, interpreter);\n      // Restore the original selection to the top of the scope stack.\n      interpreter.swapScope(oldScope);\n    }\n    interpreter.didSelect(this, selected);\n    return selected;\n  }\n\n  mapSelected<S = unknown>(interpreter: Interpreter,\n                           transform: (this: S, interpreter: Interpreter) => Item,\n                           thisArg?: S): Item {\n    return transform.call(thisArg, interpreter);\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    return interpreter.peekScope().substitute(interpreter);\n  }\n\n  get(key: AnyValue): Selector {\n    key = Value.fromAny(key);\n    return new Item.GetSelector(key, this);\n  }\n\n  getAttr(key: AnyText): Selector {\n    key = Item.Text.fromAny(key);\n    return new Item.GetAttrSelector(key, this);\n  }\n\n  getItem(index: AnyNum): Selector {\n    index = Item.Num.fromAny(index);\n    return new Item.GetItemSelector(index, this);\n  }\n\n  andThen(then: Selector): Selector {\n    return then;\n  }\n\n  keys(): Selector {\n    return Selector.keys();\n  }\n\n  values(): Selector {\n    return Selector.values();\n  }\n\n  children(): Selector {\n    return Selector.children();\n  }\n\n  descendants(): Selector {\n    return Selector.descendants();\n  }\n\n  filter(predicate?: AnyItem): Selector {\n    if (arguments.length === 0) {\n      return new Item.FilterSelector(this, this);\n    } else {\n      predicate = Item.fromAny(predicate);\n      return predicate.filter();\n    }\n  }\n\n  typeOrder(): number {\n    return 10;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    return this === that;\n  }\n\n  hashCode(): number {\n    if (IdentitySelector._hashSeed === void 0) {\n      IdentitySelector._hashSeed = Murmur3.seed(IdentitySelector);\n    }\n    return IdentitySelector._hashSeed;\n  }\n\n  debugThen(output: Output): void {\n    // nop\n  }\n\n  clone(): Selector {\n    return this;\n  }\n\n  private static _hashSeed?: number;\n}\nItem.IdentitySelector = IdentitySelector;\nSelector._identity = new IdentitySelector();\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {Field} from \"../Field\";\nimport {Value} from \"../Value\";\nimport {Selector} from \"../Selector\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class GetSelector extends Selector {\n  /** @hidden */\n  readonly _key: Value;\n  /** @hidden */\n  readonly _then: Selector;\n\n  constructor(key: Value, then: Selector) {\n    super();\n    this._key = key.commit();\n    this._then = then;\n  }\n\n  accessor(): Value {\n    return this._key;\n  }\n\n  then(): Selector {\n    return this._then;\n  }\n\n  forSelected<T, S = unknown>(interpreter: Interpreter,\n                              callback: (this: S, interpreter: Interpreter) => T | undefined,\n                              thisArg?: S): T | undefined {\n    interpreter.willSelect(this);\n    // Evaluate the key, in case it's dynamic.\n    const key = this._key.evaluate(interpreter).toValue();\n    const selected = GetSelector.forSelected(key, this._then, interpreter, callback, thisArg);\n    interpreter.didSelect(this, selected);\n    return selected;\n  }\n\n  private static forSelected<T, S>(key: Value, then: Selector, interpreter: Interpreter,\n                                   callback: (this: S, interpreter: Interpreter) => T,\n                                   thisArg?: S): T | undefined {\n    let selected: T | undefined;\n    if (interpreter.scopeDepth() !== 0) {\n      // Pop the next selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      let field: Field | undefined;\n      // Only records can have members.\n      if (scope instanceof Item.Record) {\n        field = scope.getField(key);\n        if (field) {\n          // Push the field value onto the scope stack.\n          interpreter.pushScope(field.toValue());\n          // Subselect the field value.\n          selected = then.forSelected(interpreter, callback, thisArg);\n          // Pop the field value off of the scope stack.\n          interpreter.popScope();\n        }\n      }\n      if (field === void 0 && selected === void 0) {\n        GetSelector.forSelected(key, then, interpreter, callback, thisArg);\n      }\n      // Push the current selection back onto the stack.\n      interpreter.pushScope(scope);\n    }\n    return selected;\n  }\n\n  mapSelected<S = unknown>(interpreter: Interpreter,\n                           transform: (this: S, interpreter: Interpreter) => Item,\n                           thisArg?: S): Item {\n    let result: Item;\n    interpreter.willTransform(this);\n    // Evaluate the key, if it's dynamic.\n    const key = this._key.evaluate(interpreter).toValue();\n    if (interpreter.scopeDepth() !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      // Only records can have members.\n      if (scope instanceof Item.Record) {\n        const oldField = scope.getField(key);\n        if (oldField) {\n          // Push the field value onto the scope stack.\n          interpreter.pushScope(oldField.toValue());\n          // Transform the field value.\n          const newItem = this._then.mapSelected(interpreter, transform, thisArg);\n          // Pop the field value off the scope stack.\n          interpreter.popScope();\n          if (newItem instanceof Item.Field) {\n            // Replace the original field with the transformed field.\n            if (key.equals(newItem.key)) {\n              scope.set(key, newItem.toValue());\n            } else {\n              scope.delete(key);\n              scope.push(newItem);\n            }\n          } else if (newItem.isDefined()) {\n            // Update the field with the transformed value.\n            scope.set(key, newItem.toValue());\n          } else {\n            // Remove the field.\n            scope.delete(key);\n          }\n        }\n      }\n      // Push the transformed selection back onto the stack.\n      interpreter.pushScope(scope);\n      result = scope;\n    } else {\n      result = Item.absent();\n    }\n    interpreter.didTransform(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    // Evaluate the key, in case it's dynamic.\n    const key = this._key.evaluate(interpreter).toValue();\n    const value = GetSelector.substitute(key, this._then, interpreter);\n    if (value) {\n      return value;\n    }\n    let then = this._then.substitute(interpreter);\n    if (!(then instanceof Selector)) {\n      then = this._then;\n    }\n    return new GetSelector(this._key, then as Selector);\n  }\n\n  private static substitute(key: Value, then: Selector, interpreter: Interpreter): Item | undefined {\n    let selected: Item | undefined;\n    if (interpreter.scopeDepth() !== 0) {\n      // Pop the next selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      let field: Field | undefined;\n      // Only records can have members.\n      if (scope instanceof Item.Record) {\n        field = scope.getField(key);\n        if (field) {\n          // Substitute the field value.\n          selected = field.toValue().substitute(interpreter);\n        }\n      }\n      if (field === void 0 && selected === void 0) {\n        GetSelector.substitute(key, then, interpreter);\n      }\n      // Push the current selection back onto the stack.\n      interpreter.pushScope(scope);\n    }\n    return selected;\n  }\n\n  andThen(then: Selector): Selector {\n    return new GetSelector(this._key, this._then.andThen(then));\n  }\n\n  typeOrder(): number {\n    return 12;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof GetSelector) {\n      let order = this._key.compareTo(that._key);\n      if (order === 0) {\n        order = this._then.compareTo(that._then);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GetSelector) {\n      return this._key.equals(that._key) && this._then.equals(that._then);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (GetSelector._hashSeed === void 0) {\n      GetSelector._hashSeed = Murmur3.seed(GetSelector);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(GetSelector._hashSeed,\n        this._key.hashCode()), this._then.hashCode()));\n  }\n\n  debugThen(output: Output): void {\n    output = output.write(46/*'.'*/).write(\"get\").write(40/*'('*/).debug(this._key).write(41/*')'*/);\n    this._then.debugThen(output);\n  }\n\n  clone(): Selector {\n    return new GetSelector(this._key.clone(), this._then.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.GetSelector = GetSelector;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {Field} from \"../Field\";\nimport {Attr} from \"../Attr\";\nimport {Text} from \"../Text\";\nimport {Selector} from \"../Selector\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class GetAttrSelector extends Selector {\n  /** @hidden */\n  readonly _key: Text;\n  /** @hidden */\n  readonly _then: Selector;\n\n  constructor(key: Text, then: Selector) {\n    super();\n    this._key = key;\n    this._then = then;\n  }\n\n  accessor(): Text {\n    return this._key;\n  }\n\n  then(): Selector {\n    return this._then;\n  }\n\n  forSelected<T, S = unknown>(interpreter: Interpreter,\n                              callback: (this: S, interpreter: Interpreter) => T | undefined,\n                              thisArg?: S): T | undefined {\n    interpreter.willSelect(this);\n    const key = this._key;\n    const selected = GetAttrSelector.forSelected(key, this._then, interpreter, callback);\n    interpreter.didSelect(this, selected);\n    return selected;\n  }\n\n  private static forSelected<T, S>(key: Text, then: Selector, interpreter: Interpreter,\n                                   callback: (this: S, interpreter: Interpreter) => T | undefined,\n                                   thisArg?: S): T | undefined {\n    let selected: T | undefined;\n    if (interpreter.scopeDepth() !== 0) {\n      // Pop the next selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      let field: Field | undefined;\n      // Only records can have members.\n      if (scope instanceof Item.Record) {\n        field = scope.getField(key);\n        if (field instanceof Attr) {\n          // Push the field value onto the scope stack.\n          interpreter.pushScope(field.toValue());\n          // Subselect the field value.\n          selected = then.forSelected(interpreter, callback, thisArg);\n          // Pop the field value off of the scope stack.\n          interpreter.popScope();\n        }\n      }\n      if (field === void 0 && selected === void 0) {\n        GetAttrSelector.forSelected(key, then, interpreter, callback, thisArg);\n      }\n      // Push the current selection back onto the stack.\n      interpreter.pushScope(scope);\n    }\n    return selected;\n  }\n\n  mapSelected<S = unknown>(interpreter: Interpreter,\n                           transform: (this: S, interpreter: Interpreter) => Item,\n                           thisArg?: S): Item {\n    let result: Item;\n    interpreter.willTransform(this);\n    const key = this._key;\n    if (interpreter.scopeDepth() !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      // Only records can have members.\n      if (scope instanceof Item.Record) {\n        const oldField = scope.getField(key);\n        if (oldField instanceof Item.Attr) {\n          // Push the field value onto the scope stack.\n          interpreter.pushScope(oldField.toValue());\n          // Transform the field value.\n          const newItem = this._then.mapSelected(interpreter, transform, thisArg);\n          // Pop the field value off the scope stack.\n          interpreter.popScope();\n          if (newItem instanceof Item.Field) {\n            // Replace the original field with the transformed field.\n            if (key.equals(newItem.key)) {\n              scope.setAttr(key, newItem.toValue());\n            } else {\n              scope.delete(key);\n              scope.push(newItem);\n            }\n          } else if (newItem.isDefined()) {\n            // Update the field with the transformed value.\n            scope.setAttr(key, newItem.toValue());\n          } else {\n            // Remove the field.\n            scope.delete(key);\n          }\n        }\n      }\n      // Push the transformed selection back onto the stack.\n      interpreter.pushScope(scope);\n      result = scope;\n    } else {\n      result = Item.absent();\n    }\n    interpreter.didTransform(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const key = this._key;\n    const value = GetAttrSelector.substitute(key, this._then, interpreter);\n    if (value) {\n      return value;\n    }\n    let then = this._then.substitute(interpreter);\n    if (!(then instanceof Selector)) {\n      then = this._then;\n    }\n    return new GetAttrSelector(this._key, then as Selector);\n  }\n\n  private static substitute(key: Text, then: Selector, interpreter: Interpreter): Item | undefined {\n    let selected: Item | undefined;\n    if (interpreter.scopeDepth() !== 0) {\n      // Pop the next selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      let field: Field | undefined;\n      // Only records can have members.\n      if (scope instanceof Item.Record) {\n        field = scope.getField(key);\n        if (field instanceof Item.Attr) {\n          // Substitute the field value.\n          selected = field.toValue().substitute(interpreter);\n        }\n      }\n      if (field === void 0 && selected === void 0) {\n        GetAttrSelector.substitute(key, then, interpreter);\n      }\n      // Push the current selection back onto the stack.\n      interpreter.pushScope(scope);\n    }\n    return selected;\n  }\n\n  andThen(then: Selector): Selector {\n    return new GetAttrSelector(this._key, this._then.andThen(then));\n  }\n\n  typeOrder(): number {\n    return 13;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof GetAttrSelector) {\n      let order = this._key.compareTo(that._key);\n      if (order === 0) {\n        order = this._then.compareTo(that._then);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GetAttrSelector) {\n      return this._key.equals(that._key) && this._then.equals(that._then);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (GetAttrSelector._hashSeed === void 0) {\n      GetAttrSelector._hashSeed = Murmur3.seed(GetAttrSelector);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(GetAttrSelector._hashSeed,\n        this._key.hashCode()), this._then.hashCode()));\n  }\n\n  debugThen(output: Output): void {\n    output = output.write(46/*'.'*/).write(\"getAttr\").write(40/*'('*/).debug(this._key).write(41/*')'*/);\n    this._then.debugThen(output);\n  }\n\n  clone(): Selector {\n    return new GetAttrSelector(this._key.clone(), this._then.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.GetAttrSelector = GetAttrSelector;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {Num} from \"../Num\";\nimport {Selector} from \"../Selector\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class GetItemSelector extends Selector {\n  /** @hidden */\n  readonly _index: Num;\n  /** @hidden */\n  readonly _then: Selector;\n\n  constructor(index: Num, then: Selector) {\n    super();\n    this._index = index;\n    this._then = then;\n  }\n\n  accessor(): Num {\n    return this._index;\n  }\n\n  then(): Selector {\n    return this._then;\n  }\n\n  forSelected<T, S = unknown>(interpreter: Interpreter,\n                              callback: (this: S, interpreter: Interpreter) => T | undefined,\n                              thisArg?: S): T | undefined {\n    let selected: T | undefined;\n    interpreter.willSelect(this);\n    const index = this._index.numberValue();\n    if (interpreter.scopeDepth() !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      if (scope instanceof Item.Record && index < scope.length) {\n        const item = scope.getItem(index);\n        // Push the item onto the scope stack.\n        interpreter.pushScope(item);\n        // Subselect the item.\n        selected = this._then.forSelected(interpreter, callback, thisArg);\n        // Pop the item off of the scope stack.\n        interpreter.popScope();\n      }\n      // Push the current selection back onto the stack.\n      interpreter.pushScope(scope);\n    }\n    interpreter.didSelect(this, selected);\n    return selected;\n  }\n\n  mapSelected<S = unknown>(interpreter: Interpreter,\n                           transform: (this: S, interpreter: Interpreter) => Item,\n                           thisArg?: S): Item {\n    let result: Item;\n    interpreter.willTransform(this);\n    if (interpreter.scopeDepth() !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      const index = this._index.numberValue();\n      if (scope instanceof Item.Record && index < scope.length) {\n        const oldItem = scope.getItem(index);\n        // Push the item onto the scope stack.\n        interpreter.pushScope(oldItem);\n        // Transform the item.\n        const newItem = this._then.mapSelected(interpreter, transform, thisArg);\n        // Pop the item off the scope stack.\n        interpreter.popScope();\n        if (newItem.isDefined()) {\n          scope.setItem(index, newItem);\n        } else {\n          scope.splice(index, 1);\n        }\n      }\n      // Push the transformed selection back onto the stack.\n      interpreter.pushScope(scope);\n      result = scope;\n    } else {\n      result = Item.absent();\n    }\n    interpreter.didTransform(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const index = this._index.numberValue();\n    if (interpreter.scopeDepth() !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      let selected: Item | undefined;\n      if (scope instanceof Item.Record && index < scope.length) {\n        const item = scope.getItem(index);\n        // Substitute the item.\n        selected = item.substitute(interpreter);\n      }\n      // Push the current selection back onto the stack.\n      interpreter.pushScope(scope);\n      if (selected) {\n        return selected;\n      }\n    }\n    let then = this._then.substitute(interpreter);\n    if (!(then instanceof Selector)) {\n      then = this._then;\n    }\n    return new GetItemSelector(this._index, then as Selector);\n  }\n\n  andThen(then: Selector): Selector {\n    return new GetItemSelector(this._index, this._then.andThen(then));\n  }\n\n  typeOrder(): number {\n    return 14;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof GetItemSelector) {\n      let order = this._index.compareTo(that._index);\n      if (order === 0) {\n        order = this._then.compareTo(that._then);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof GetItemSelector) {\n      return this._index.equals(that._index) && this._then.equals(that._then);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (GetItemSelector._hashSeed === void 0) {\n      GetItemSelector._hashSeed = Murmur3.seed(GetItemSelector);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(GetItemSelector._hashSeed,\n        this._index.hashCode()), this._then.hashCode()));\n  }\n\n  debugThen(output: Output): void {\n    output = output.write(46/*'.'*/).write(\"getItem\").write(40/*'('*/).debug(this._index).write(41/*')'*/);\n    this._then.debugThen(output);\n  }\n\n  clone(): Selector {\n    return new GetItemSelector(this._index, this._then.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.GetItemSelector = GetItemSelector;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {Selector} from \"../Selector\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class KeysSelector extends Selector {\n  /** @hidden */\n  readonly _then: Selector;\n\n  constructor(then: Selector) {\n    super();\n    this._then = then;\n  }\n\n  then(): Selector {\n    return this._then;\n  }\n\n  forSelected<T, S = unknown>(interpreter: Interpreter,\n                              callback: (this: S, interpreter: Interpreter) => T | undefined,\n                              thisArg?: S): T | undefined {\n    let selected: T | undefined;\n    interpreter.willSelect(this);\n    if (interpreter.scopeDepth() !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope();\n      if (scope instanceof Item.Record) {\n        const children = scope.iterator();\n        // For each child, while none have been selected:\n        while (selected === void 0 && children.hasNext()) {\n          const child = children.next().value!;\n          // Only fields can have keys.\n          if (child instanceof Item.Field) {\n            // Push the child key onto the scope stack.\n            interpreter.pushScope(child.key);\n            // Subselect the child key.\n            selected = this._then.forSelected(interpreter, callback, thisArg);\n            // Pop the child key off of the scope stack.\n            interpreter.popScope();\n          }\n        }\n      } else if (scope instanceof Item.Field) {\n        // Push the key onto the scope stack.\n        interpreter.pushScope(scope.key);\n        // Subselect the key.\n        selected = this._then.forSelected(interpreter, callback, thisArg);\n        // Pop the key off of the scope stack.\n        interpreter.popScope();\n      }\n      // Push the current selection back onto the stack.\n      interpreter.pushScope(scope);\n    }\n    interpreter.didSelect(this, selected);\n    return selected;\n  }\n\n  mapSelected<S = unknown>(interpreter: Interpreter,\n                           transform: (this: S, interpreter: Interpreter) => Item,\n                           thisArg?: S): Item {\n    let result: Item;\n    interpreter.willTransform(this);\n    if (interpreter.scopeDepth() !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      let scope = interpreter.popScope();\n      if (scope instanceof Item.Record) {\n        const children = scope.iterator();\n        while (children.hasNext()) {\n          const child = children.next().value!;\n          if (child instanceof Item.Field) {\n            const oldKey = child.key;\n            // Push the key onto the scope stack.\n            interpreter.pushScope(oldKey);\n            // Subselect the key.\n            const newKey = this._then.mapSelected(interpreter, transform, thisArg).toValue();\n            // Pop the key off of the scope stack.\n            interpreter.popScope();\n            if (newKey.isDefined()) {\n              if (oldKey !== newKey) {\n                if (scope instanceof Item.Attr && newKey instanceof Item.Text) {\n                  children.set(Item.Attr.of(newKey, scope.toValue()));\n                } else {\n                  children.set(Item.Slot.of(newKey, scope.toValue()));\n                }\n              }\n            } else {\n              children.delete();\n            }\n          }\n        }\n      } else if (scope instanceof Item.Field) {\n        const oldKey = scope.key;\n        // Push the key onto the scope stack.\n        interpreter.pushScope(oldKey);\n        // Subselect the key.\n        const newKey = this._then.mapSelected(interpreter, transform, thisArg).toValue();\n        // Pop the key off of the scope stack.\n        interpreter.popScope();\n        if (newKey.isDefined()) {\n          if (oldKey !== newKey) {\n            if (scope instanceof Item.Attr && newKey instanceof Item.Text) {\n              scope = Item.Attr.of(newKey, scope.toValue());\n            } else {\n              scope = Item.Slot.of(newKey, scope.toValue());\n            }\n          }\n        } else {\n          scope = Item.absent();\n        }\n      }\n      // Push the transformed selection back onto the stack.\n      interpreter.pushScope(scope);\n      result = scope;\n    } else {\n      result = Item.absent();\n    }\n    interpreter.didTransform(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    let then = this._then.substitute(interpreter);\n    if (!(then instanceof Selector)) {\n      then = this._then;\n    }\n    return new KeysSelector(then as Selector);\n  }\n\n  andThen(then: Selector): Selector {\n    return new KeysSelector(this._then.andThen(then));\n  }\n\n  typeOrder(): number {\n    return 15;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof KeysSelector) {\n      return this._then.compareTo(that._then);\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof KeysSelector) {\n      return this._then.equals(that._then);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (KeysSelector._hashSeed === void 0) {\n      KeysSelector._hashSeed = Murmur3.seed(KeysSelector);\n    }\n    return Murmur3.mash(Murmur3.mix(KeysSelector._hashSeed, this._then.hashCode()));\n  }\n\n  debugThen(output: Output): void {\n    output = output.write(46/*'.'*/).write(\"keys\").write(40/*'('*/).write(41/*')'*/);\n    this._then.debugThen(output);\n  }\n\n  clone(): Selector {\n    return new KeysSelector(this._then.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.KeysSelector = KeysSelector;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {Selector} from \"../Selector\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class ValuesSelector extends Selector {\n  /** @hidden */\n  readonly _then: Selector;\n\n  constructor(then: Selector) {\n    super();\n    this._then = then;\n  }\n\n  then(): Selector {\n    return this._then;\n  }\n\n  forSelected<T, S = unknown>(interpreter: Interpreter,\n                              callback: (this: S, interpreter: Interpreter) => T | undefined,\n                              thisArg?: S): T | undefined {\n    let selected: T | undefined;\n    interpreter.willSelect(this);\n    if (interpreter.scopeDepth() !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope();\n      if (scope instanceof Item.Record) {\n        const children = scope.iterator();\n        // For each child, while none have been selected:\n        while (selected === void 0 && children.hasNext()) {\n          const child = children.next().value!;\n          // Push the child value onto the scope stack.\n          interpreter.pushScope(child.toValue());\n          // Subselect the child value.\n          selected = this._then.forSelected(interpreter, callback, thisArg);\n          // Pop the child value off of the scope stack.\n          interpreter.popScope();\n        }\n      } else {\n        // Push the value onto the scope stack.\n        interpreter.pushScope(scope.toValue());\n        // Subselect the value.\n        selected = this._then.forSelected(interpreter, callback, thisArg);\n        // Pop the value off of the scope stack.\n        interpreter.popScope();\n      }\n      // Push the current selection back onto the stack.\n      interpreter.pushScope(scope);\n    }\n    interpreter.didSelect(this, selected);\n    return selected;\n  }\n\n  mapSelected<S = unknown>(interpreter: Interpreter,\n                           transform: (this: S, interpreter: Interpreter) => Item,\n                           thisArg?: S): Item {\n    let result: Item;\n    interpreter.willTransform(this);\n    if (interpreter.scopeDepth() !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      let scope = interpreter.popScope();\n      if (scope instanceof Item.Record) {\n        const children = scope.iterator();\n        while (children.hasNext()) {\n          const child = children.next().value!;\n          if (child instanceof Item.Field) {\n            const oldValue = child.toValue();\n            // Push the child value onto the scope stack.\n            interpreter.pushScope(oldValue);\n            // Transform the child value.\n            const newItem = this._then.mapSelected(interpreter, transform, thisArg);\n            // Pop the child value off of the scope stack.\n            interpreter.popScope();\n            if (newItem.isDefined()) {\n              if (newItem instanceof Item.Field) {\n                children.set(newItem);\n              } else if (newItem !== oldValue) {\n                children.set(child.updatedValue(newItem.toValue()));\n              }\n            } else {\n              children.delete();\n            }\n          } else {\n            // Push the child onto the scope stack.\n            interpreter.pushScope(child.toValue());\n            // Transform the child.\n            const newItem = this._then.mapSelected(interpreter, transform, thisArg);\n            // Pop the child off of the scope stack.\n            interpreter.popScope();\n            if (newItem.isDefined()) {\n              if (child !== newItem) {\n                children.set(newItem);\n              }\n            } else {\n              children.delete();\n            }\n          }\n        }\n      } else if (scope instanceof Item.Field) {\n        const oldValue = scope.toValue();\n        // Push the field value onto the scope stack.\n        interpreter.pushScope(oldValue);\n        // Transform the field value.\n        const newItem = this._then.mapSelected(interpreter, transform, thisArg);\n        // Pop the field value off of the scope stack.\n        interpreter.popScope();\n        if (newItem.isDefined()) {\n          if (newItem instanceof Item.Field) {\n            scope = newItem;\n          } else if (newItem !== oldValue) {\n            scope = scope.updatedValue(newItem.toValue());\n          }\n        } else {\n          scope = Item.absent();\n        }\n      } else {\n        // Push the value onto the scope stack.\n        interpreter.pushScope(scope);\n        // Transform the value.\n        scope = this._then.mapSelected(interpreter, transform, thisArg);\n        // Pop the value off of the scope stack.\n        interpreter.popScope();\n      }\n      // Push the transformed selection back onto the stack.\n      interpreter.pushScope(scope);\n      result = scope;\n    } else {\n      result = Item.absent();\n    }\n    interpreter.didTransform(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    let then = this._then.substitute(interpreter);\n    if (!(then instanceof Selector)) {\n      then = this._then;\n    }\n    return new ValuesSelector(then as Selector);\n  }\n\n  andThen(then: Selector): Selector {\n    return new ValuesSelector(this._then.andThen(then));\n  }\n\n  typeOrder(): number {\n    return 16;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof ValuesSelector) {\n      return this._then.compareTo(that._then);\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof ValuesSelector) {\n      return this._then.equals(that._then);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (ValuesSelector._hashSeed === void 0) {\n      ValuesSelector._hashSeed = Murmur3.seed(ValuesSelector);\n    }\n    return Murmur3.mash(Murmur3.mix(ValuesSelector._hashSeed, this._then.hashCode()));\n  }\n\n  debugThen(output: Output): void {\n    output = output.write(46/*'.'*/).write(\"values\").write(40/*'('*/).write(41/*')'*/);\n    this._then.debugThen(output);\n  }\n\n  clone(): Selector {\n    return new ValuesSelector(this._then.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.ValuesSelector = ValuesSelector;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {Selector} from \"../Selector\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class ChildrenSelector extends Selector {\n  /** @hidden */\n  readonly _then: Selector;\n\n  constructor(then: Selector) {\n    super();\n    this._then = then;\n  }\n\n  then(): Selector {\n    return this._then;\n  }\n\n  forSelected<T, S = unknown>(interpreter: Interpreter,\n                              callback: (this: S, interpreter: Interpreter) => T | undefined,\n                              thisArg?: S): T | undefined {\n    let selected: T | undefined;\n    interpreter.willSelect(this);\n    if (interpreter.scopeDepth() !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      // Only records can have children.\n      if (scope instanceof Item.Record) {\n        const children = scope.iterator();\n        // For each child, while none have been selected:\n        while (selected === void 0 && children.hasNext()) {\n          const child = children.next().value!;\n          // Push the child onto the scope stack.\n          interpreter.pushScope(child);\n          // Subselect the child.\n          selected = this._then.forSelected(interpreter, callback, thisArg);\n          // Pop the child off of the scope stack.\n          interpreter.popScope();\n        }\n      }\n      // Push the current selection back onto the stack.\n      interpreter.pushScope(scope);\n    }\n    interpreter.didSelect(this, selected);\n    return selected;\n  }\n\n  mapSelected<S = unknown>(interpreter: Interpreter,\n                           transform: (this: S, interpreter: Interpreter) => Item,\n                           thisArg?: S): Item {\n    let result: Item;\n    interpreter.willTransform(this);\n    if (interpreter.scopeDepth() !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      // Only records can have children.\n      if (scope instanceof Item.Record) {\n        const children = scope.iterator();\n        // For each child:\n        while (children.hasNext()) {\n          const oldChild = children.next().value!;\n          // Push the child onto the scope stack.\n          interpreter.pushScope(oldChild);\n          // Transform the child.\n          const newChild = this._then.mapSelected(interpreter, transform);\n          // Pop the child off the scope stack.\n          interpreter.popScope();\n          if (newChild.isDefined()) {\n            // Update the child, if its identity changed.\n            if (newChild !== oldChild) {\n              children.set(newChild);\n            }\n          } else {\n            // Remove the child, if it transformed to Absent.\n            children.delete();\n          }\n        }\n      }\n      // Push the transformed selection back onto the stack.\n      interpreter.pushScope(scope);\n      result = scope;\n    } else {\n      result = Item.absent();\n    }\n    interpreter.didTransform(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    let then = this._then.substitute(interpreter);\n    if (!(then instanceof Selector)) {\n      then = this._then;\n    }\n    return new ChildrenSelector(then as Selector);\n  }\n\n  andThen(then: Selector): Selector {\n    return new ChildrenSelector(this._then.andThen(then));\n  }\n\n  typeOrder(): number {\n    return 17;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof ChildrenSelector) {\n      return this._then.compareTo(that._then);\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof ChildrenSelector) {\n      return this._then.equals(that._then);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (ChildrenSelector._hashSeed === void 0) {\n      ChildrenSelector._hashSeed = Murmur3.seed(ChildrenSelector);\n    }\n    return Murmur3.mash(Murmur3.mix(ChildrenSelector._hashSeed, this._then.hashCode()));\n  }\n\n  debugThen(output: Output): void {\n    output = output.write(46/*'.'*/).write(\"children\").write(40/*'('*/).write(41/*')'*/);\n    this._then.debugThen(output);\n  }\n\n  clone(): Selector {\n    return new ChildrenSelector(this._then.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.ChildrenSelector = ChildrenSelector;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {Selector} from \"../Selector\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class DescendantsSelector extends Selector {\n  /** @hidden */\n  readonly _then: Selector;\n\n  constructor(then: Selector) {\n    super();\n    this._then = then;\n  }\n\n  then(): Selector {\n    return this._then;\n  }\n\n  forSelected<T, S = unknown>(interpreter: Interpreter,\n                              callback: (this: S, interpreter: Interpreter) => T | undefined,\n                              thisArg?: S): T | undefined {\n    let selected: T | undefined;\n    interpreter.willSelect(this);\n    if (interpreter.scopeDepth() !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      // Only records can have descendants.\n      if (scope instanceof Item.Record) {\n        const children = scope.iterator();\n        // For each child, while none have selected a result:\n        while (selected === void 0 && children.hasNext()) {\n          const child = children.next().value!;\n          // Push the child onto the scope stack.\n          interpreter.pushScope(child);\n          // Subselect the child.\n          selected = this._then.forSelected(interpreter, callback, thisArg);\n          // If the child was not selected:\n          if (selected === void 0) {\n            // Recursively select the child's children.\n            this.forSelected(interpreter, callback, thisArg);\n          }\n          // Pop the child off of the scope stack.\n          interpreter.popScope();\n        }\n      }\n      // Push the current selection back onto the stack.\n      interpreter.pushScope(scope);\n    }\n    interpreter.didSelect(this, selected);\n    return selected;\n  }\n\n  mapSelected<S = unknown>(interpreter: Interpreter,\n                           transform: (this: S, interpreter: Interpreter) => Item,\n                           thisArg?: S): Item {\n    let result: Item;\n    interpreter.willTransform(this);\n    if (interpreter.scopeDepth() !== 0) {\n      // Pop the current selection off of the stack to take it out of scope.\n      const scope = interpreter.popScope().toValue();\n      // Only records can have descendants.\n      if (scope instanceof Item.Record) {\n        const children = scope.iterator();\n        // For each child:\n        while (children.hasNext()) {\n          const oldChild = children.next().value!;\n          // Push the child onto the scope stack.\n          interpreter.pushScope(oldChild);\n          // Transform the child.\n          let newChild = this._then.mapSelected(interpreter, transform, thisArg);\n          // If the child was not removed:\n          if (newChild.isDefined()) {\n            // Recursively transform the child's children.\n            newChild = this.mapSelected(interpreter, transform, thisArg);\n          }\n          // Pop the child off the scope stack.\n          interpreter.popScope();\n          if (newChild.isDefined()) {\n            // Update the child, if its identity changed.\n            if (newChild !== oldChild) {\n              children.set(newChild);\n            }\n          } else {\n            // Remove the child, if it transformed to Absent.\n            children.delete();\n          }\n        }\n      }\n      // Push the transformed selection back onto the stack.\n      interpreter.pushScope(scope);\n      result = scope;\n    } else {\n      result = Item.absent();\n    }\n    interpreter.didTransform(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    let then = this._then.substitute(interpreter);\n    if (!(then instanceof Selector)) {\n      then = this._then;\n    }\n    return new DescendantsSelector(then as Selector);\n  }\n\n  andThen(then: Selector): Selector {\n    return new DescendantsSelector(this._then.andThen(then));\n  }\n\n  typeOrder(): number {\n    return 18;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof DescendantsSelector) {\n      return this._then.compareTo(that._then);\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof DescendantsSelector) {\n      return this._then.equals(that._then);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (DescendantsSelector._hashSeed === void 0) {\n      DescendantsSelector._hashSeed = Murmur3.seed(DescendantsSelector);\n    }\n    return Murmur3.mash(Murmur3.mix(DescendantsSelector._hashSeed, this._then.hashCode()));\n  }\n\n  debugThen(output: Output): void {\n    output = output.write(46/*'.'*/).write(\"descendants\").write(40/*'('*/).write(41/*')'*/);\n    this._then.debugThen(output);\n  }\n\n  clone(): Selector {\n    return new DescendantsSelector(this._then.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.DescendantsSelector = DescendantsSelector;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {AnyItem, Item} from \"../Item\";\nimport {Selector} from \"../Selector\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class FilterSelector extends Selector {\n  /** @hidden */\n  readonly _predicate: Selector;\n  /** @hidden */\n  readonly _then: Selector;\n\n  constructor(predicate: Selector, then: Selector) {\n    super();\n    this._predicate = predicate;\n    this._then = then;\n  }\n\n  predicate(): Selector {\n    return this._predicate;\n  }\n\n  then(): Selector {\n    return this._then;\n  }\n\n  forSelected<T, S = unknown>(interpreter: Interpreter,\n                              callback: (this: S, interpreter: Interpreter) => T | undefined,\n                              thisArg?: S): T | undefined {\n    let selected: T | undefined;\n    interpreter.willSelect(this);\n    if (interpreter.scopeDepth() !== 0) {\n      // If the filter matches the selection scope:\n      if (this.filterSelected(interpreter)) {\n        // Then subselect the selection scope.\n        selected = this._then.forSelected(interpreter, callback, thisArg);\n      }\n    }\n    interpreter.didSelect(this, selected);\n    return selected;\n  }\n\n  mapSelected<S = unknown>(interpreter: Interpreter,\n                           transform: (this: S, interpreter: Interpreter) => Item,\n                           thisArg?: S): Item {\n    let result: Item;\n    interpreter.willTransform(this);\n    if (interpreter.scopeDepth() !== 0) {\n      // If the filter matches the selection scope:\n      if (this.filterSelected(interpreter)) {\n        // Then transform the selection scope.\n        result = this._then.mapSelected(interpreter, transform, thisArg);\n      } else {\n        result = interpreter.peekScope().toValue();\n      }\n    } else {\n      result = Item.absent();\n    }\n    interpreter.didTransform(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    let predicate = this._predicate.substitute(interpreter);\n    if (!(predicate instanceof Selector)) {\n      predicate = this._predicate;\n    }\n    let then = this._then.substitute(interpreter);\n    if (!(then instanceof Selector)) {\n      then = this._then;\n    }\n    return new FilterSelector(predicate as Selector, then as Selector);\n  }\n\n  protected filterSelected(interpreter: Interpreter): boolean {\n    return this._predicate.forSelected(interpreter, this.selected, this) !== void 0;\n  }\n\n  protected selected(interpreter: Interpreter): null {\n    return null;\n  }\n\n  andThen(then: Selector): Selector {\n    return new FilterSelector(this._predicate, this._then.andThen(then));\n  }\n\n  filter(predicate?: AnyItem): Selector {\n    if (arguments.length === 0) {\n      return this;\n    } else {\n      predicate = Item.fromAny(predicate);\n      return this.andThen(predicate.filter());\n    }\n  }\n\n  typeOrder(): number {\n    return 19;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof FilterSelector) {\n      let order = this._predicate.compareTo(that._predicate);\n      if (order === 0) {\n        order = this._then.compareTo(that._then);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof FilterSelector) {\n      return this._predicate.equals(that._predicate) && this._then.equals(that._then);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (FilterSelector._hashSeed === void 0) {\n      FilterSelector._hashSeed = Murmur3.seed(FilterSelector);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(FilterSelector._hashSeed,\n        this._predicate.hashCode()), this._then.hashCode()));\n  }\n\n  debugThen(output: Output): void {\n    output = output.write(46/*'.'*/).write(\"filter\").write(40/*'('*/).debug(this._predicate).write(41/*')'*/);\n    this._then.debugThen(output);\n  }\n\n  clone(): Selector {\n    return new FilterSelector(this._predicate.clone(), this._then.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.FilterSelector = FilterSelector;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {Selector} from \"../Selector\";\nimport {AnyInterpreter, Interpreter} from \"../Interpreter\";\n\nexport class LiteralSelector extends Selector {\n  /** @hidden */\n  readonly _item: Item;\n  /** @hidden */\n  readonly _then: Selector;\n\n  constructor(item: Item, then: Selector) {\n    super();\n    this._item = item.commit();\n    this._then = then;\n  }\n\n  item(): Item {\n    return this._item;\n  }\n\n  then(): Selector {\n    return this._then;\n  }\n\n  forSelected<T, S = unknown>(interpreter: Interpreter,\n                              callback: (this: S, interpreter: Interpreter) => T | undefined,\n                              thisArg?: S): T | undefined {\n    let selected: T | undefined;\n    interpreter.willSelect(this);\n    if (interpreter.scopeDepth() !== 0) {\n      const literal = this._item.evaluate(interpreter);\n      if (literal.isDefined()) {\n        // Push the literal onto the scope stack.\n        interpreter.pushScope(literal);\n        // Subselect the literal.\n        selected = this._then.forSelected(interpreter, callback, thisArg);\n        // Pop the literal off of the scope stack.\n        interpreter.popScope();\n      }\n    }\n    interpreter.didSelect(this, selected);\n    return selected;\n  }\n\n  mapSelected<S = unknown>(interpreter: Interpreter,\n                           transform: (this: S, interpreter: Interpreter) => Item,\n                           thisArg?: S): Item {\n    let result: Item;\n    interpreter.willTransform(this);\n    if (interpreter.scopeDepth() !== 0) {\n      let literal = this._item.evaluate(interpreter);\n      if (literal.isDefined()) {\n        // Push the literal onto the scope stack.\n        interpreter.pushScope(literal);\n        // Transform the literal.\n        literal = this._then.mapSelected(interpreter, transform, thisArg);\n        // Pop the literal off of the scope stack.\n        interpreter.popScope();\n      }\n      result = literal;\n    } else {\n      result = Item.absent();\n    }\n    interpreter.didTransform(this, result);\n    return result;\n  }\n\n  substitute(interpreter: AnyInterpreter): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const item = this._item.substitute(interpreter);\n    let then = this._then.substitute(interpreter);\n    if (!(then instanceof Selector)) {\n      then = this._then;\n    }\n    return new LiteralSelector(item, then as Selector);\n  }\n\n  andThen(then: Selector): Selector {\n    return new LiteralSelector(this._item, this._then.andThen(then));\n  }\n\n  precedence(): number {\n    return this._item.precedence();\n  }\n\n  typeOrder(): number {\n    return 11;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof LiteralSelector) {\n      let order = this._item.compareTo(that._item);\n      if (order === 0) {\n        order = this._then.compareTo(that._then);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof LiteralSelector) {\n      return this._item.equals(that._item) && this._then.equals(that._then);\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (LiteralSelector._hashSeed === void 0) {\n      LiteralSelector._hashSeed = Murmur3.seed(LiteralSelector);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(LiteralSelector._hashSeed,\n        this._item.hashCode()), this._then.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"Selector\").write(46/*'.'*/).write(\"literal\").write(40/*'('*/)\n        .debug(this._item).write(41/*')'*/);\n    this._then.debugThen(output);\n  }\n\n  debugThen(output: Output): void {\n    // nop\n  }\n\n  clone(): Selector {\n    return new LiteralSelector(this._item.clone(), this._then.clone());\n  }\n\n  private static _hashSeed?: number;\n}\nItem.LiteralSelector = LiteralSelector;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {Value} from \"../Value\";\nimport {Func} from \"../Func\";\nimport {Interpreter} from \"../Interpreter\";\nimport {InvokeOperator} from \"../operator/InvokeOperator\";\n\nexport class LambdaFunc extends Func {\n  readonly _bindings: Value;\n  readonly _template: Value;\n\n  constructor(bindings: Value, template: Value) {\n    super();\n    this._bindings = bindings;\n    this._template = template;\n  }\n\n  bindings(): Value {\n    return this._bindings;\n  }\n\n  template(): Value {\n    return this._template;\n  }\n\n  precedence(): number {\n    return 1;\n  }\n\n  invoke(args: Value, interpreter?: Interpreter, operator?: InvokeOperator): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const bindings = this._bindings;\n    const arity = Math.max(1, bindings.length);\n    const params = Item.Record.create(arity);\n    let i = 0;\n    let j = 0;\n    while (i < arity) {\n      const binding = bindings instanceof Item.Record ? bindings.getItem(i) : i === 0 ? bindings : Item.absent();\n      const arg = args instanceof Item.Record ? args.getItem(j).toValue() : j === 0 ? args : Item.Value.absent();\n      if (binding instanceof Item.Text && arg.isDistinct()) {\n        params.push(Item.Slot.of(binding, arg));\n        j += 1;\n      } else if (binding instanceof Item.Slot) {\n        if (arg.isDistinct()) {\n          params.push(binding.updatedValue(arg));\n        } else {\n          params.push(binding);\n        }\n        j += 1;\n      }\n      i += 1;\n    }\n    interpreter.pushScope(params);\n    const result = this._template.evaluate(interpreter);\n    interpreter.popScope();\n    return result;\n  }\n\n  typeOrder(): number {\n    return 50;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof LambdaFunc) {\n      let order = this._bindings.compareTo(that._bindings);\n      if (order === 0) {\n        order = this._template.compareTo(that._template);\n      }\n      return order;\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof LambdaFunc) {\n      return this._bindings.equals(that._bindings) && this._template.equals(that._template);\n    }\n    return false;\n  }\n\n  hashCode() {\n    if (LambdaFunc._hashSeed === void 0) {\n      LambdaFunc._hashSeed = Murmur3.seed(LambdaFunc);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(LambdaFunc._hashSeed,\n        this._bindings.hashCode()), this._template.hashCode()));\n  }\n\n  debug(output: Output): void {\n    output.debug(this.bindings).write(46/*'.'*/).write(\"lambda\").write(40/*'('*/)\n        .debug(this.template).write(41/*')'*/);\n  }\n\n  private static _hashSeed?: number;\n}\nItem.LambdaFunc = LambdaFunc;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Murmur3, Objects} from \"@swim/util\";\nimport {Output} from \"@swim/codec\";\nimport {Item} from \"../Item\";\nimport {Func} from \"../Func\";\n\nexport abstract class BridgeFunc extends Func {\n  typeOrder(): number {\n    return 51;\n  }\n\n  compareTo(that: Item): 0 | 1 | -1 {\n    if (that instanceof BridgeFunc) {\n      return Objects.compare((this as any).__proto__.constructor.name,\n                             (that as any).__proto__.constructor.name);\n    }\n    return Objects.compare(this.typeOrder(), that.typeOrder());\n  }\n\n  equals(that: unknown): boolean {\n    return this === that;\n  }\n\n  hashCode(): number {\n    return Murmur3.seed((this as any).__proto__.constructor);\n  }\n\n  debug(output: Output) {\n    output = output.write((this as any).__proto__.constructor.name);\n  }\n}\nItem.BridgeFunc = BridgeFunc;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item} from \"../Item\";\nimport {Value} from \"../Value\";\nimport {Record} from \"../Record\";\nimport {Func} from \"../Func\";\nimport {Interpreter} from \"../Interpreter\";\nimport {InvokeOperator} from \"../operator/InvokeOperator\";\nimport {BridgeFunc} from \"./BridgeFunc\";\n\nexport class MathModule {\n  private constructor() {\n    // stub\n  }\n\n  private static _max?: Func;\n  private static _min?: Func;\n  private static _abs?: Func;\n  private static _ceil?: Func;\n  private static _floor?: Func;\n  private static _round?: Func;\n  private static _sqrt?: Func;\n  private static _pow?: Func;\n  private static _rate?: Func;\n  private static _random?: Func;\n\n  private static _scope?: Record;\n\n  static max(): Func {\n    if (!MathModule._max) {\n      MathModule._max = new MaxFunc();\n    }\n    return MathModule._max;\n  }\n\n  static min(): Func {\n    if (!MathModule._min) {\n      MathModule._min = new MinFunc();\n    }\n    return MathModule._min;\n  }\n\n  static abs(): Func {\n    if (!MathModule._abs) {\n      MathModule._abs = new AbsFunc();\n    }\n    return MathModule._abs;\n  }\n\n  static ceil(): Func {\n    if (!MathModule._ceil) {\n      MathModule._ceil = new CeilFunc();\n    }\n    return MathModule._ceil;\n  }\n\n  static floor(): Func {\n    if (!MathModule._floor) {\n      MathModule._floor = new FloorFunc();\n    }\n    return MathModule._floor;\n  }\n\n  static round(): Func {\n    if (!MathModule._round) {\n      MathModule._round = new RoundFunc();\n    }\n    return MathModule._round;\n  }\n\n  static sqrt(): Func {\n    if (!MathModule._sqrt) {\n      MathModule._sqrt = new SqrtFunc();\n    }\n    return MathModule._sqrt;\n  }\n\n  static pow(): Func {\n    if (!MathModule._pow) {\n      MathModule._pow = new PowFunc();\n    }\n    return MathModule._pow;\n  }\n\n  static rate(): Func {\n    if (!MathModule._rate) {\n      MathModule._rate = new RateFunc();\n    }\n    return MathModule._rate;\n  }\n\n  static random(): Func {\n    if (!MathModule._random) {\n      MathModule._random = new RandomFunc();\n    }\n    return MathModule._random;\n  }\n\n  static scope(): Record {\n    if (!MathModule._scope) {\n      MathModule._scope = Item.Record.create(10)\n          .slot(\"max\", MathModule.max())\n          .slot(\"min\", MathModule.min())\n          .slot(\"abs\", MathModule.abs())\n          .slot(\"ceil\", MathModule.ceil())\n          .slot(\"floor\", MathModule.floor())\n          .slot(\"round\", MathModule.round())\n          .slot(\"pow\", MathModule.pow())\n          .slot(\"sqrt\", MathModule.sqrt())\n          .slot(\"rate\", MathModule.rate())\n          .slot(\"random\", MathModule.random())\n          .commit();\n    }\n    return MathModule._scope;\n  }\n}\nItem.MathModule = MathModule;\n\n/** @hidden */\nclass MaxFunc extends BridgeFunc {\n  invoke(args: Value, interpreter?: Interpreter, operator?: InvokeOperator): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    let x: Item;\n    let y: Item | undefined;\n    if (args.length >= 2) {\n      x = args.getItem(0).evaluate(interpreter);\n      y = args.getItem(1).evaluate(interpreter);\n    } else {\n      x = args.evaluate(interpreter);\n    }\n    if (y !== void 0) {\n      return x.max(y);\n    } else if (operator) {\n      y = operator.state() as Item;\n      const max = y !== void 0 ? x.max(y) : x;\n      operator.setState(max);\n      return max;\n    }\n    return Item.absent();\n  }\n\n  expand(args: Value, interpreter: Interpreter, operator: InvokeOperator): Item | undefined {\n    if (args.length === 1) {\n      args = args.evaluate(interpreter).toValue();\n      return this.invoke(args, interpreter, operator);\n    }\n    return void 0;\n  }\n}\n\n/** @hidden */\nclass MinFunc extends BridgeFunc {\n  invoke(args: Value, interpreter?: Interpreter, operator?: InvokeOperator): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    let x: Item;\n    let y: Item | undefined;\n    if (args.length >= 2) {\n      x = args.getItem(0).evaluate(interpreter);\n      y = args.getItem(1).evaluate(interpreter);\n    } else {\n      x = args.evaluate(interpreter);\n    }\n    if (y !== void 0) {\n      return x.min(y);\n    } else if (operator) {\n      y = operator.state() as Item;\n      const min = y !== void 0 ? x.min(y) : x;\n      operator.setState(min);\n      return min;\n    }\n    return Item.absent();\n  }\n\n  expand(args: Value, interpreter: Interpreter, operator: InvokeOperator): Item | undefined {\n    if (args.length === 1) {\n      args = args.evaluate(interpreter).toValue();\n      return this.invoke(args, interpreter, operator);\n    }\n    return void 0;\n  }\n}\n\n/** @hidden */\nclass AbsFunc extends BridgeFunc {\n  invoke(args: Value, interpreter?: Interpreter, operator?: InvokeOperator): Item {\n    args = args.evaluate(interpreter).toValue();\n    if (args instanceof Item.Num) {\n      return args.abs();\n    }\n    return Item.absent();\n  }\n}\n\n/** @hidden */\nclass CeilFunc extends BridgeFunc {\n  invoke(args: Value, interpreter?: Interpreter, operator?: InvokeOperator): Item {\n    args = args.evaluate(interpreter).toValue();\n    if (args instanceof Item.Num) {\n      return args.ceil();\n    }\n    return Item.absent();\n  }\n}\n\n/** @hidden */\nclass FloorFunc extends BridgeFunc {\n  invoke(args: Value, interpreter?: Interpreter, operator?: InvokeOperator): Item {\n    args = args.evaluate(interpreter).toValue();\n    if (args instanceof Item.Num) {\n      return args.floor();\n    }\n    return Item.absent();\n  }\n}\n\n/** @hidden */\nclass RoundFunc extends BridgeFunc {\n  invoke(args: Value, interpreter?: Interpreter, operator?: InvokeOperator): Item {\n    args = args.evaluate(interpreter).toValue();\n    if (args instanceof Item.Num) {\n      return args.round();\n    }\n    return Item.absent();\n  }\n}\n\n/** @hidden */\nclass SqrtFunc extends BridgeFunc {\n  invoke(args: Value, interpreter?: Interpreter, operator?: InvokeOperator): Item {\n    args = args.evaluate(interpreter).toValue();\n    if (args instanceof Item.Num) {\n      return args.sqrt();\n    }\n    return Item.absent();\n  }\n}\n\n/** @hidden */\nclass PowFunc extends BridgeFunc {\n  invoke(args: Value, interpreter?: Interpreter, operator?: InvokeOperator): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    const x = args.getItem(0).evaluate(interpreter);\n    const y = args.getItem(1).evaluate(interpreter);\n    if (x instanceof Item.Num && y instanceof Item.Num) {\n      return x.pow(y);\n    }\n    return Item.absent();\n  }\n}\n\n/** @hidden */\nclass RateFunc extends BridgeFunc {\n  invoke(args: Value, interpreter?: Interpreter, operator?: InvokeOperator): Item {\n    interpreter = Interpreter.fromAny(interpreter);\n    let value: number;\n    let period: number;\n    if (args.length >= 2) {\n      value = args.getItem(0).evaluate(interpreter).numberValue(NaN);\n      period = args.getItem(1).evaluate(interpreter).numberValue(1000);\n    } else {\n      value = args.evaluate(interpreter).numberValue(NaN);\n      period = 1000;\n    }\n    if (isFinite(value) && operator) {\n      let state = operator.state() as {v0: number, t0: number, dv: number, dt: number} | undefined;\n      if (state === void 0) {\n        state = {v0: value, t0: Date.now(), dv: 0, dt: 0};\n        operator.setState(state);\n      } else {\n        const t1 = Date.now();\n        const dt = t1 - state.t0;\n        if (dt > period && t1 > state.t0 || dt > 2 * period) {\n          const dv = value - state.v0;\n          state.v0 = value;\n          state.t0 = t1;\n          state.dv = dv;\n          state.dt = dt;\n        }\n        operator.setState(state);\n        if (state.dt !== 0) {\n          const rate = period * state.dv / state.dt;\n          return Item.Num.from(rate);\n        }\n      }\n    }\n    return Item.absent();\n  }\n\n  expand(args: Value, interpreter: Interpreter, operator: InvokeOperator): Item | undefined {\n    args = args.evaluate(interpreter).toValue();\n    return this.invoke(args, interpreter, operator);\n  }\n}\n\n/** @hidden */\nclass RandomFunc extends BridgeFunc {\n  invoke(args: Value, interpreter?: Interpreter, operator?: InvokeOperator): Item {\n    args = args.evaluate(interpreter).toValue();\n    const lower = args.length >= 1 ? args.getItem(0).numberValue(0.0) : 0.0;\n    const upper = args.length >= 2 ? args.getItem(1).numberValue(lower + 1.0) : lower + 1.0;\n    const value = lower + Math.random() * (upper - lower);\n    return Item.Num.from(value);\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item} from \"../Item\";\nimport {Attr} from \"../Attr\";\nimport {Form} from \"../Form\";\n\n/** @hidden */\nexport class TagForm<T extends U, U = T> extends Form<T, U> {\n  /** @hidden */\n  readonly _tag: string;\n  /** @hidden */\n  readonly _form: Form<T, U>;\n\n  constructor(tag: string, form: Form<T, U>) {\n    super();\n    this._tag = tag;\n    this._form = form;\n  }\n\n  tag(): string | undefined;\n  tag(tag: string | undefined): Form<T, U>;\n  tag(tag?: string | undefined): string | undefined | Form<T, U> {\n    if (arguments.length === 0) {\n      return this._tag;\n    } else if (tag !== void 0) {\n      return new TagForm<T, U>(tag, this._form);\n    } else {\n      return this._form;\n    }\n  }\n\n  unit(): T | undefined;\n  unit(unit: T | undefined): Form<T, U>;\n  unit(unit?: T | undefined): T | undefined | Form<T, U> {\n    if (arguments.length === 0) {\n      return this._form.unit();\n    } else {\n      return new TagForm<T, U>(this._tag, this._form.unit(unit));\n    }\n  }\n\n  mold(object: U, item?: Item): Item {\n    item = this._form.mold(object, item);\n    if (!item.header(this._tag).isDefined()) {\n      item = item.prepended(Attr.of(this._tag));\n    }\n    return item;\n  }\n\n  cast(item: Item, object?: T): T | undefined {\n    if (item.header(this._tag).isDefined()) {\n      return this._form.cast(item, object);\n    } else if (item.keyEquals(this._tag)) {\n      return this._form.cast(item.toValue(), object);\n    }\n    return void 0;\n  }\n}\nForm.TagForm = TagForm;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item} from \"../Item\";\nimport {Form} from \"../Form\";\n\n/** @hidden */\nexport class UnitForm<T extends U, U = T> extends Form<T, U> {\n  /** @hidden */\n  readonly _unit: T;\n  /** @hidden */\n  readonly _form: Form<T, U>;\n\n  constructor(unit: T, form: Form<T, U>) {\n    super();\n    this._unit = unit;\n    this._form = form;\n  }\n\n  tag(): string | undefined;\n  tag(tag: string | undefined): Form<T, U>;\n  tag(tag?: string | undefined): string | undefined | Form<T, U> {\n    if (arguments.length === 0) {\n      return this._form.tag();\n    } else {\n      return new UnitForm<T, U>(this._unit, this._form.tag(tag));\n    }\n  }\n\n  unit(): T | undefined;\n  unit(unit: T | undefined): Form<T, U>;\n  unit(unit?: T | undefined): T | undefined | Form<T, U> {\n    if (arguments.length === 0) {\n      return this._form.unit();\n    } else if (unit !== void 0) {\n      return new UnitForm<T, U>(unit, this._form);\n    } else {\n      return this._form;\n    }\n  }\n\n  mold(object: U, item?: Item): Item {\n    return this._form.mold.apply(this._form, arguments);\n  }\n\n  cast(item: Item, object?: T): T | undefined {\n    return this._form.cast.apply(this._form, arguments);\n  }\n}\nForm.UnitForm = UnitForm;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item} from \"../Item\";\nimport {Text} from \"../Text\";\nimport {Form} from \"../Form\";\n\n/** @hidden */\nexport class StringForm extends Form<string> {\n  /** @hidden */\n  readonly _unit: string | undefined;\n\n  constructor(unit?: string) {\n    super();\n    this._unit = unit;\n  }\n\n  unit(): string | undefined;\n  unit(unit: string | undefined): Form<string>;\n  unit(unit?: string | undefined): string | undefined | Form<string> {\n    if (arguments.length === 0) {\n      return this._unit;\n    } else {\n      return new StringForm(unit);\n    }\n  }\n\n  mold(object: string, item?: Item): Item {\n    if (item === void 0) {\n      return Text.from(object);\n    } else {\n      return item.concat(Text.from(object));\n    }\n  }\n\n  cast(item: Item, object?: string): string | undefined {\n    const value = item.target();\n    try {\n      return value.stringValue();\n    } catch (error) {\n      return void 0;\n    }\n  }\n}\nForm.StringForm = StringForm;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item} from \"../Item\";\nimport {Num} from \"../Num\";\nimport {Form} from \"../Form\";\n\n/** @hidden */\nexport class NumberForm extends Form<number> {\n  /** @hidden */\n  readonly _unit: number | undefined;\n\n  constructor(unit?: number) {\n    super();\n    this._unit = unit;\n  }\n\n  unit(): number | undefined;\n  unit(unit: number | undefined): Form<number>;\n  unit(unit?: number | undefined): number | undefined | Form<number> {\n    if (arguments.length === 0) {\n      return this._unit;\n    } else {\n      return new NumberForm(unit);\n    }\n  }\n\n  mold(object: number, item?: Item): Item {\n    if (item === void 0) {\n      return Num.from(object);\n    } else {\n      return item.concat(Num.from(object));\n    }\n  }\n\n  cast(item: Item, object?: number): number | undefined {\n    const value = item.target();\n    try {\n      return value.numberValue();\n    } catch (error) {\n      return void 0;\n    }\n  }\n}\nForm.NumberForm = NumberForm;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item} from \"../Item\";\nimport {Bool} from \"../Bool\";\nimport {Form} from \"../Form\";\n\n/** @hidden */\nexport class BooleanForm extends Form<boolean> {\n  /** @hidden */\n  readonly _unit: boolean | undefined;\n\n  constructor(unit?: boolean) {\n    super();\n    this._unit = unit;\n  }\n\n  unit(): boolean | undefined;\n  unit(unit: boolean | undefined): Form<boolean>;\n  unit(unit?: boolean | undefined): boolean | undefined | Form<boolean> {\n    if (arguments.length === 0) {\n      return this._unit;\n    } else {\n      return new BooleanForm(unit);\n    }\n  }\n\n  mold(object: boolean, item?: Item): Item {\n    if (item === void 0) {\n      return Bool.from(object);\n    } else {\n      return item.concat(Bool.from(object));\n    }\n  }\n\n  cast(item: Item, object?: boolean): boolean | undefined {\n    const value = item.target();\n    try {\n      return value.booleanValue();\n    } catch (error) {\n      return void 0;\n    }\n  }\n}\nForm.BooleanForm = BooleanForm;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyItem, Item} from \"../Item\";\nimport {Form} from \"../Form\";\n\n/** @hidden */\nexport class AnyForm extends Form<AnyItem> {\n  /** @hidden */\n  readonly _unit: AnyItem | undefined;\n\n  constructor(unit?: AnyItem) {\n    super();\n    this._unit = unit;\n  }\n\n  unit(): AnyItem | undefined;\n  unit(unit: AnyItem | undefined): Form<AnyItem>;\n  unit(unit?: AnyItem | undefined): AnyItem | undefined | Form<AnyItem> {\n    if (arguments.length === 0) {\n      return this._unit;\n    } else {\n      return new AnyForm(unit);\n    }\n  }\n\n  mold(object: AnyItem, item?: Item): Item {\n    object = Item.fromAny(object);\n    if (item !== void 0) {\n      object = item.concat(object);\n    }\n    return object;\n  }\n\n  cast(item: Item, object?: AnyItem): AnyItem | undefined {\n    return item.toAny();\n  }\n}\nForm.AnyForm = AnyForm;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {AnyItem, Item} from \"../Item\";\nimport {Form} from \"../Form\";\n\n/** @hidden */\nexport class ItemForm extends Form<Item, AnyItem> {\n  /** @hidden */\n  readonly _unit: Item | undefined;\n\n  constructor(unit?: Item) {\n    super();\n    this._unit = unit ? unit.commit() : unit;\n  }\n\n  unit(): Item | undefined;\n  unit(unit: Item | undefined): Form<Item, AnyItem>;\n  unit(unit?: Item | undefined): Item | undefined | Form<Item, AnyItem> {\n    if (arguments.length === 0) {\n      return this._unit;\n    } else {\n      return new ItemForm(unit);\n    }\n  }\n\n  mold(object: AnyItem, item?: Item): Item {\n    object = Item.fromAny(object);\n    if (item !== void 0) {\n      object = item.concat(object);\n    }\n    return object;\n  }\n\n  cast(item: Item, object?: Item): Item | undefined {\n    return item;\n  }\n}\nForm.ItemForm = ItemForm;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item} from \"../Item\";\nimport {AnyValue, Value} from \"../Value\";\nimport {Form} from \"../Form\";\n\n/** @hidden */\nexport class ValueForm extends Form<Value, AnyValue> {\n  /** @hidden */\n  readonly _unit: Value | undefined;\n\n  constructor(unit?: Value) {\n    super();\n    this._unit = unit ? unit.commit() : unit;\n  }\n\n  unit(): Value | undefined;\n  unit(unit: Value | undefined): Form<Value, AnyValue>;\n  unit(unit?: Value | undefined): Value | undefined | Form<Value, AnyValue> {\n    if (arguments.length === 0) {\n      return this._unit;\n    } else {\n      return new ValueForm(unit);\n    }\n  }\n\n  mold(object: AnyValue, item?: Item): Item {\n    object = Value.fromAny(object);\n    if (item !== void 0) {\n      object = item.concat(object);\n    }\n    return object;\n  }\n\n  cast(item: Item, object?: Value): Value | undefined {\n    return item.toValue();\n  }\n}\nForm.ValueForm = ValueForm;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {Value} from \"../Value\";\nimport {Form} from \"../Form\";\n\n/** @hidden */\nexport class ValueCursor<V> extends Cursor<V> {\n  private readonly _cursor: Cursor<Value>;\n  private readonly _form: Form<V, unknown>;\n\n  constructor(cursor: Cursor<Value>, form: Form<V, unknown>) {\n    super();\n    this._cursor = cursor;\n    this._form = form;\n  }\n\n  isEmpty(): boolean {\n    return this._cursor.isEmpty();\n  }\n\n  head(): V {\n    const value = this._cursor.head();\n    return value.coerce(this._form);\n  }\n\n  step(): void {\n    this._cursor.step();\n  }\n\n  skip(count: number): void {\n    this._cursor.skip(count);\n  }\n\n  hasNext(): boolean {\n    return this._cursor.hasNext();\n  }\n\n  nextIndex(): number {\n    return this._cursor.nextIndex();\n  }\n\n  next(): {value?: V, done: boolean} {\n    const {value, done} = this._cursor.next();\n    return {value: value && value.coerce(this._form), done};\n  }\n\n  hasPrevious(): boolean {\n    return this._cursor.hasPrevious();\n  }\n\n  previousIndex(): number {\n    return this._cursor.previousIndex();\n  }\n\n  previous(): {value?: V, done: boolean} {\n    const {value, done} = this._cursor.next();\n    return {value: value && value.coerce(this._form), done};\n  }\n\n  delete(): void {\n    this._cursor.delete();\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Cursor} from \"@swim/util\";\nimport {Value} from \"../Value\";\nimport {Form} from \"../Form\";\n\n/** @hidden */\nexport class ValueEntryCursor<K, V> extends Cursor<[K, V]> {\n  private readonly _cursor: Cursor<[Value, Value]>;\n  private readonly _keyForm: Form<K, unknown>;\n  private readonly _valueForm: Form<V, unknown>;\n\n  constructor(cursor: Cursor<[Value, Value]>, keyForm: Form<K, unknown>, valueForm: Form<V, unknown>) {\n    super();\n    this._cursor = cursor;\n    this._keyForm = keyForm;\n    this._valueForm = valueForm;\n  }\n\n  isEmpty(): boolean {\n    return this._cursor.isEmpty();\n  }\n\n  head(): [K, V] {\n    const pair = this._cursor.head();\n    return [pair[0].coerce(this._keyForm), pair[1].coerce(this._valueForm)];\n  }\n\n  step(): void {\n    this._cursor.step();\n  }\n\n  skip(count: number): void {\n    this._cursor.skip(count);\n  }\n\n  hasNext(): boolean {\n    return this._cursor.hasNext();\n  }\n\n  nextIndex(): number {\n    return this._cursor.nextIndex();\n  }\n\n  next(): {value?: [K, V], done: boolean} {\n    const {value, done} = this._cursor.next();\n    return {value: value && [value[0].coerce(this._keyForm), value[1].coerce(this._valueForm)], done};\n  }\n\n  hasPrevious(): boolean {\n    return this._cursor.hasPrevious();\n  }\n\n  previousIndex(): number {\n    return this._cursor.previousIndex();\n  }\n\n  previous(): {value?: [K, V], done: boolean} {\n    const {value, done} = this._cursor.next();\n    return {value: value && [value[0].coerce(this._keyForm), value[1].coerce(this._valueForm)], done};\n  }\n\n  delete(): void {\n    this._cursor.delete();\n  }\n}\n"],"names":["Cursor","Format","Murmur3","Objects","OutputSettings","Output","Base16","Writer","Unicode","Base64","Random","HashGenCacheSet"],"mappings":"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"}