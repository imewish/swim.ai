import { Output } from "@swim/codec";
import { Item } from "../Item";
import { BinaryOperator } from "./BinaryOperator";
import { AnyInterpreter } from "../Interpreter";
export declare class DivideOperator extends BinaryOperator {
    constructor(operand1: Item, operand2: Item);
    operator(): string;
    precedence(): number;
    evaluate(interpreter: AnyInterpreter): Item;
    substitute(interpreter: AnyInterpreter): Item;
    typeOrder(): number;
    compareTo(that: Item): 0 | 1 | -1;
    equals(that: unknown): boolean;
    hashCode(): number;
    debug(output: Output): void;
    clone(): DivideOperator;
    private static _hashSeed?;
}
//# sourceMappingURL=DivideOperator.d.ts.map