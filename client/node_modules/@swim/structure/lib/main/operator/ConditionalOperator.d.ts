import { Output } from "@swim/codec";
import { Item } from "../Item";
import { Operator } from "../Operator";
import { AnyInterpreter } from "../Interpreter";
export declare class ConditionalOperator extends Operator {
    readonly _ifTerm: Item;
    readonly _thenTerm: Item;
    readonly _elseTerm: Item;
    constructor(ifTerm: Item, thenTerm: Item, elseTerm: Item);
    ifTerm(): Item;
    thenTerm(): Item;
    elseTerm(): Item;
    isConstant(): boolean;
    precedence(): number;
    evaluate(interpreter: AnyInterpreter): Item;
    substitute(interpreter: AnyInterpreter): Item;
    typeOrder(): number;
    compareTo(that: Item): 0 | 1 | -1;
    equals(that: unknown): boolean;
    hashCode(): number;
    debug(output: Output): void;
    clone(): ConditionalOperator;
    private static _hashSeed?;
}
//# sourceMappingURL=ConditionalOperator.d.ts.map