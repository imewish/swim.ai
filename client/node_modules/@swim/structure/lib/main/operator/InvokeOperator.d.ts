import { Output } from "@swim/codec";
import { Item } from "../Item";
import { Value } from "../Value";
import { Operator } from "../Operator";
import { AnyInterpreter } from "../Interpreter";
export declare class InvokeOperator extends Operator {
    readonly _func: Value;
    readonly _args: Value;
    _state?: unknown;
    constructor(func: Value, args: Value);
    func(): Value;
    args(): Value;
    state(): unknown;
    setState(state: unknown): void;
    isConstant(): boolean;
    precedence(): number;
    evaluate(interpreter: AnyInterpreter): Item;
    substitute(interpreter: AnyInterpreter): Item;
    typeOrder(): number;
    compareTo(that: Item): 0 | 1 | -1;
    equals(that: unknown): boolean;
    hashCode(): number;
    debug(output: Output): void;
    clone(): InvokeOperator;
    private static _hashSeed?;
}
//# sourceMappingURL=InvokeOperator.d.ts.map