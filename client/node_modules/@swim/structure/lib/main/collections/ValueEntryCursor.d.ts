import { Cursor } from "@swim/util";
import { Value } from "../Value";
import { Form } from "../Form";
export declare class ValueEntryCursor<K, V> extends Cursor<[K, V]> {
    private readonly _cursor;
    private readonly _keyForm;
    private readonly _valueForm;
    constructor(cursor: Cursor<[Value, Value]>, keyForm: Form<K, unknown>, valueForm: Form<V, unknown>);
    isEmpty(): boolean;
    head(): [K, V];
    step(): void;
    skip(count: number): void;
    hasNext(): boolean;
    nextIndex(): number;
    next(): {
        value?: [K, V];
        done: boolean;
    };
    hasPrevious(): boolean;
    previousIndex(): number;
    previous(): {
        value?: [K, V];
        done: boolean;
    };
    delete(): void;
}
//# sourceMappingURL=ValueEntryCursor.d.ts.map