import { __extends } from "tslib";
import { Cursor } from "@swim/util";
var ValueCursor = (function (_super) {
    __extends(ValueCursor, _super);
    function ValueCursor(cursor, form) {
        var _this = _super.call(this) || this;
        _this._cursor = cursor;
        _this._form = form;
        return _this;
    }
    ValueCursor.prototype.isEmpty = function () {
        return this._cursor.isEmpty();
    };
    ValueCursor.prototype.head = function () {
        var value = this._cursor.head();
        return value.coerce(this._form);
    };
    ValueCursor.prototype.step = function () {
        this._cursor.step();
    };
    ValueCursor.prototype.skip = function (count) {
        this._cursor.skip(count);
    };
    ValueCursor.prototype.hasNext = function () {
        return this._cursor.hasNext();
    };
    ValueCursor.prototype.nextIndex = function () {
        return this._cursor.nextIndex();
    };
    ValueCursor.prototype.next = function () {
        var _a = this._cursor.next(), value = _a.value, done = _a.done;
        return { value: value && value.coerce(this._form), done: done };
    };
    ValueCursor.prototype.hasPrevious = function () {
        return this._cursor.hasPrevious();
    };
    ValueCursor.prototype.previousIndex = function () {
        return this._cursor.previousIndex();
    };
    ValueCursor.prototype.previous = function () {
        var _a = this._cursor.next(), value = _a.value, done = _a.done;
        return { value: value && value.coerce(this._form), done: done };
    };
    ValueCursor.prototype.delete = function () {
        this._cursor.delete();
    };
    return ValueCursor;
}(Cursor));
export { ValueCursor };
//# sourceMappingURL=ValueCursor.js.map