import { Murmur3 } from "@swim/util";
import { Format } from "@swim/codec";
var InterpreterSettings = (function () {
    function InterpreterSettings(maxScopeDepth) {
        this._maxScopeDepth = maxScopeDepth;
    }
    InterpreterSettings.prototype.maxScopeDepth = function (maxScopeDepth) {
        if (maxScopeDepth === void 0) {
            return this._maxScopeDepth;
        }
        else {
            return this.copy(maxScopeDepth);
        }
    };
    InterpreterSettings.prototype.copy = function (maxScopeDepth) {
        return new InterpreterSettings(maxScopeDepth);
    };
    InterpreterSettings.prototype.canEqual = function (that) {
        return that instanceof InterpreterSettings;
    };
    InterpreterSettings.prototype.equals = function (that) {
        if (this === that) {
            return true;
        }
        else if (that instanceof InterpreterSettings) {
            return that.canEqual(this) && this._maxScopeDepth === that._maxScopeDepth;
        }
        return false;
    };
    InterpreterSettings.prototype.hashCode = function () {
        if (InterpreterSettings._hashSeed === void 0) {
            InterpreterSettings._hashSeed = Murmur3.seed(InterpreterSettings);
        }
        return Murmur3.mash(Murmur3.mix(InterpreterSettings._hashSeed, this._maxScopeDepth));
    };
    InterpreterSettings.prototype.debug = function (output) {
        output = output.write("new").write(32).write("InterpreterSettings")
            .write(40).debug(this._maxScopeDepth).write(41);
    };
    InterpreterSettings.prototype.toString = function () {
        return Format.debug(this);
    };
    InterpreterSettings.standard = function () {
        if (!InterpreterSettings._standard) {
            var maxScopeDepth = 1024;
            InterpreterSettings._standard = new InterpreterSettings(maxScopeDepth);
        }
        return InterpreterSettings._standard;
    };
    return InterpreterSettings;
}());
export { InterpreterSettings };
//# sourceMappingURL=InterpreterSettings.js.map