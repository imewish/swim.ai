import { __extends } from "tslib";
import { Num } from "../Num";
import { Form } from "../Form";
var NumberForm = (function (_super) {
    __extends(NumberForm, _super);
    function NumberForm(unit) {
        var _this = _super.call(this) || this;
        _this._unit = unit;
        return _this;
    }
    NumberForm.prototype.unit = function (unit) {
        if (arguments.length === 0) {
            return this._unit;
        }
        else {
            return new NumberForm(unit);
        }
    };
    NumberForm.prototype.mold = function (object, item) {
        if (item === void 0) {
            return Num.from(object);
        }
        else {
            return item.concat(Num.from(object));
        }
    };
    NumberForm.prototype.cast = function (item, object) {
        var value = item.target();
        try {
            return value.numberValue();
        }
        catch (error) {
            return void 0;
        }
    };
    return NumberForm;
}(Form));
export { NumberForm };
Form.NumberForm = NumberForm;
//# sourceMappingURL=NumberForm.js.map