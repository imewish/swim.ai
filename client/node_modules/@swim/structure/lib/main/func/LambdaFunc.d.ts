import { Output } from "@swim/codec";
import { Item } from "../Item";
import { Value } from "../Value";
import { Func } from "../Func";
import { Interpreter } from "../Interpreter";
import { InvokeOperator } from "../operator/InvokeOperator";
export declare class LambdaFunc extends Func {
    readonly _bindings: Value;
    readonly _template: Value;
    constructor(bindings: Value, template: Value);
    bindings(): Value;
    template(): Value;
    precedence(): number;
    invoke(args: Value, interpreter?: Interpreter, operator?: InvokeOperator): Item;
    typeOrder(): number;
    compareTo(that: Item): 0 | 1 | -1;
    equals(that: unknown): boolean;
    hashCode(): number;
    debug(output: Output): void;
    private static _hashSeed?;
}
//# sourceMappingURL=LambdaFunc.d.ts.map