import { __extends } from "tslib";
import { Murmur3, Objects } from "@swim/util";
import { Item } from "../Item";
import { Func } from "../Func";
var BridgeFunc = (function (_super) {
    __extends(BridgeFunc, _super);
    function BridgeFunc() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BridgeFunc.prototype.typeOrder = function () {
        return 51;
    };
    BridgeFunc.prototype.compareTo = function (that) {
        if (that instanceof BridgeFunc) {
            return Objects.compare(this.__proto__.constructor.name, that.__proto__.constructor.name);
        }
        return Objects.compare(this.typeOrder(), that.typeOrder());
    };
    BridgeFunc.prototype.equals = function (that) {
        return this === that;
    };
    BridgeFunc.prototype.hashCode = function () {
        return Murmur3.seed(this.__proto__.constructor);
    };
    BridgeFunc.prototype.debug = function (output) {
        output = output.write(this.__proto__.constructor.name);
    };
    return BridgeFunc;
}(Func));
export { BridgeFunc };
Item.BridgeFunc = BridgeFunc;
//# sourceMappingURL=BridgeFunc.js.map