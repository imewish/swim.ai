import { Item } from "./Item";
import { Field } from "./Field";
import { Value } from "./Value";
var ValueBuilder = (function () {
    function ValueBuilder() {
        this._record = null;
        this._value = null;
    }
    ValueBuilder.prototype.push = function () {
        var items = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            items[_i] = arguments[_i];
        }
        for (var i = 0, n = arguments.length; i < n; i += 1) {
            var item = arguments[i];
            if (item instanceof Field) {
                return this.pushField(item);
            }
            else if (item instanceof Value) {
                return this.pushValue(item);
            }
            else {
                throw new TypeError("" + item);
            }
        }
    };
    ValueBuilder.prototype.pushField = function (item) {
        if (this._record === null) {
            this._record = Item.Record.create();
            if (this._value !== null) {
                this._record.push(this._value);
                this._value = null;
            }
        }
        this._record.push(item);
    };
    ValueBuilder.prototype.pushValue = function (item) {
        if (this._record != null) {
            this._record.push(item);
        }
        else if (this._value == null) {
            this._value = item;
        }
        else {
            this._record = Item.Record.create();
            this._record.push(this._value);
            this._value = null;
            this._record.push(item);
        }
    };
    ValueBuilder.prototype.bind = function () {
        if (this._record !== null) {
            return this._record;
        }
        else if (this._value !== null) {
            return this._value;
        }
        else {
            return Value.absent();
        }
    };
    return ValueBuilder;
}());
export { ValueBuilder };
//# sourceMappingURL=ValueBuilder.js.map