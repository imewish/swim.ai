{"version":3,"file":"swim-uri.js","sources":["../../../../../node_modules/tslib/tslib.es6.js","../../main/UriException.ts","../../main/Uri.ts","../../main/UriScheme.ts","../../main/UriAuthority.ts","../../main/UriUser.ts","../../main/UriHost.ts","../../main/UriHostName.ts","../../main/UriHostIPv4.ts","../../main/UriHostIPv6.ts","../../main/UriHostUndefined.ts","../../main/UriPort.ts","../../main/UriPath.ts","../../main/UriPathSegment.ts","../../main/UriPathSlash.ts","../../main/UriPathEmpty.ts","../../main/UriPathBuilder.ts","../../main/UriQuery.ts","../../main/UriQueryParam.ts","../../main/UriQueryUndefined.ts","../../main/UriQueryBuilder.ts","../../main/UriFragment.ts","../../main/UriParser.ts","../../main/UriAbsoluteParser.ts","../../main/UriSchemeParser.ts","../../main/UriAuthorityParser.ts","../../main/UriUserParser.ts","../../main/UriHostParser.ts","../../main/UriHostAddressParser.ts","../../main/UriHostLiteralParser.ts","../../main/UriPortParser.ts","../../main/UriPathParser.ts","../../main/UriQueryParser.ts","../../main/UriFragmentParser.ts","../../main/UriForm.ts","../../main/UriCache.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Diagnostic} from \"@swim/codec\";\n\nexport class UriException extends Error {\n  readonly diagnostic?: Diagnostic;\n\n  constructor(message?: Diagnostic | string) {\n    super(message instanceof Diagnostic ? message.message() || void 0 : message);\n    if (message instanceof Diagnostic) {\n      this.diagnostic = message;\n    }\n    (this as any).__proto__ = UriException.prototype;\n  }\n\n  toString(): string {\n    if (this.diagnostic) {\n      return this.diagnostic.toString();\n    } else {\n      return super.toString();\n    }\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Comparable, HashCode, Murmur3} from \"@swim/util\";\nimport {Output, Format, Debug, Display, Base16} from \"@swim/codec\";\nimport {Form} from \"@swim/structure\";\nimport {UriException} from \"./UriException\";\nimport {AnyUriScheme, UriScheme} from \"./UriScheme\";\nimport {AnyUriAuthority, UriAuthorityInit, UriAuthority} from \"./UriAuthority\";\nimport {AnyUriUser, UriUser} from \"./UriUser\";\nimport {AnyUriHost, UriHost} from \"./UriHost\";\nimport {UriHostName} from \"./UriHostName\";\nimport {UriHostIPv4} from \"./UriHostIPv4\";\nimport {UriHostIPv6} from \"./UriHostIPv6\";\nimport {UriHostUndefined} from \"./UriHostUndefined\";\nimport {AnyUriPort, UriPort} from \"./UriPort\";\nimport {AnyUriPath, UriPath} from \"./UriPath\";\nimport {UriPathSegment} from \"./UriPathSegment\";\nimport {UriPathSlash} from \"./UriPathSlash\";\nimport {UriPathEmpty} from \"./UriPathEmpty\";\nimport {UriPathBuilder} from \"./UriPathBuilder\";\nimport {AnyUriQuery, UriQuery} from \"./UriQuery\";\nimport {UriQueryParam} from \"./UriQueryParam\";\nimport {UriQueryUndefined} from \"./UriQueryUndefined\";\nimport {UriQueryBuilder} from \"./UriQueryBuilder\";\nimport {AnyUriFragment, UriFragment} from \"./UriFragment\";\nimport {UriParser} from \"./UriParser\";\nimport {UriForm} from \"./UriForm\";\nimport {UriPathForm} from \"./UriPathForm\";\n\nexport type AnyUri = Uri | UriInit | string;\n\nexport interface UriInit extends UriAuthorityInit {\n  scheme?: AnyUriScheme;\n  authority?: AnyUriAuthority;\n  path?: AnyUriPath;\n  query?: AnyUriQuery;\n  fragment?: AnyUriFragment;\n}\n\nexport class Uri implements Comparable<Uri>, HashCode, Debug, Display {\n  /** @hidden */\n  readonly _scheme: UriScheme;\n  /** @hidden */\n  readonly _authority: UriAuthority;\n  /** @hidden */\n  readonly _path: UriPath;\n  /** @hidden */\n  readonly _query: UriQuery;\n  /** @hidden */\n  readonly _fragment: UriFragment;\n  /** @hidden */\n  _string?: string;\n  /** @hidden */\n  _hashCode?: number;\n\n  /** @hidden */\n  constructor(scheme: UriScheme, authority: UriAuthority, path: UriPath,\n              query: UriQuery, fragment: UriFragment) {\n    this._scheme = scheme;\n    this._authority = authority;\n    this._path = path;\n    this._query = query;\n    this._fragment = fragment;\n  }\n\n  isDefined(): boolean {\n    return this._scheme.isDefined() || this._authority.isDefined() || this._path.isDefined()\n        || this._query.isDefined() || this._fragment.isDefined();\n  }\n\n  isEmpty(): boolean {\n    return !this._scheme.isDefined() && !this._authority.isDefined() && this._path.isEmpty()\n        && !this._query.isDefined() && !this._fragment.isDefined();\n  }\n\n  scheme(): UriScheme;\n  scheme(scheme: AnyUriScheme): Uri;\n  scheme(scheme?: AnyUriScheme): UriScheme | Uri {\n    if (scheme === void 0) {\n      return this._scheme;\n    } else {\n      scheme = Uri.Scheme.fromAny(scheme);\n      if (scheme !== this._scheme) {\n        return this.copy(scheme, this._authority, this._path, this._query, this._fragment);\n      } else {\n        return this;\n      }\n    }\n  }\n\n  schemePart(): string;\n  schemePart(scheme: string): Uri;\n  schemePart(scheme?: string): string | Uri {\n    if (scheme === void 0) {\n      return this._scheme.toString();\n    } else {\n      return this.scheme(Uri.Scheme.parse(scheme));\n    }\n  }\n\n  schemeName(): string;\n  schemeName(scheme: string): Uri;\n  schemeName(scheme?: string): string | Uri {\n    if (scheme === void 0) {\n      return this._scheme.name();\n    } else {\n      return this.scheme(Uri.Scheme.from(scheme));\n    }\n  }\n\n  authority(): UriAuthority;\n  authority(authority: AnyUriAuthority): Uri;\n  authority(authority?: AnyUriAuthority): UriAuthority | Uri {\n    if (authority === void 0) {\n      return this._authority;\n    } else {\n      authority = Uri.Authority.fromAny(authority);\n      if (authority !== this._authority) {\n        return this.copy(this._scheme, authority, this._path, this._query, this._fragment);\n      } else {\n        return this;\n      }\n    }\n  }\n\n  authorityPart(): string;\n  authorityPart(authority: string): Uri;\n  authorityPart(authority?: string): string | Uri {\n    if (authority === void 0) {\n      return this._authority.toString();\n    } else {\n      return this.authority(Uri.Authority.parse(authority));\n    }\n  }\n\n  user(): UriUser;\n  user(user: AnyUriUser): Uri;\n  user(user?: AnyUriUser): UriUser | Uri {\n    if (user === void 0) {\n      return this._authority.user();\n    } else {\n      return this.authority(this._authority.user(user));\n    }\n  }\n\n  userPart(): string;\n  userPart(user: string): Uri;\n  userPart(user?: string): string | Uri {\n    if (user === void 0) {\n      return this._authority.userPart();\n    } else {\n      return this.authority(this._authority.userPart(user));\n    }\n  }\n\n  username(): string;\n  username(username: string, password?: string | null): Uri;\n  username(username?: string, password?: string | null): string | Uri {\n    if (username === void 0) {\n      return this._authority.username();\n    } else {\n      return this.authority(this._authority.username(username, password));\n    }\n  }\n\n  password(): string | null;\n  password(password: string | null): Uri;\n  password(password?: string | null): string | null | Uri {\n    if (password === void 0) {\n      return this._authority.password();\n    } else {\n      return this.authority(this._authority.password(password));\n    }\n  }\n\n  host(): UriHost;\n  host(host: AnyUriHost): Uri;\n  host(host?: AnyUriHost): UriHost | Uri {\n    if (host === void 0) {\n      return this._authority.host();\n    } else {\n      return this.authority(this._authority.host(host));\n    }\n  }\n\n  hostPart(): string;\n  hostPart(host: string): Uri;\n  hostPart(host?: string): string | Uri {\n    if (host === void 0) {\n      return this._authority.hostPart();\n    } else {\n      return this.authority(this._authority.hostPart(host));\n    }\n  }\n\n  hostAddress(): string {\n    return this._authority.hostAddress();\n  }\n\n  hostName(): string | null;\n  hostName(address: string): Uri;\n  hostName(address?: string): string | null | Uri {\n    if (address === void 0) {\n      return this._authority.hostName();\n    } else {\n      return this.authority(this._authority.hostName(address));\n    }\n  }\n\n  hostIPv4(): string | null;\n  hostIPv4(address: string): Uri;\n  hostIPv4(address?: string): string | null | Uri {\n    if (address === void 0) {\n      return this._authority.hostIPv4();\n    } else {\n      return this.authority(this._authority.hostIPv4(address));\n    }\n  }\n\n  hostIPv6(): string | null;\n  hostIPv6(address: string): Uri;\n  hostIPv6(address?: string): string | null | Uri {\n    if (address === void 0) {\n      return this._authority.hostIPv6();\n    } else {\n      return this.authority(this._authority.hostIPv6(address));\n    }\n  }\n\n  port(): UriPort;\n  port(port: AnyUriPort): Uri;\n  port(port?: AnyUriPort): UriPort | Uri {\n    if (port === void 0) {\n      return this._authority.port();\n    } else {\n      return this.authority(this._authority.port(port));\n    }\n  }\n\n  portPart(): string;\n  portPart(port: string): Uri;\n  portPart(port?: string): string | Uri {\n    if (port === void 0) {\n      return this._authority.portPart();\n    } else {\n      return this.authority(this._authority.portPart(port));\n    }\n  }\n\n  portNumber(): number;\n  portNumber(port: number): Uri;\n  portNumber(port?: number): number | Uri {\n    if (port === void 0) {\n      return this._authority.portNumber();\n    } else {\n      return this.authority(this._authority.portNumber(port));\n    }\n  }\n\n  path(): UriPath;\n  path(...components: AnyUriPath[]): Uri;\n  path(...components: AnyUriPath[]): UriPath | Uri {\n    if (arguments.length === 0) {\n      return this._path;\n    } else {\n      const path = Uri.Path.from.apply(void 0, components);\n      if (path !== this._path) {\n        return this.copy(this._scheme, this._authority, path, this._query, this._fragment);\n      } else {\n        return this;\n      }\n    }\n  }\n\n  pathPart(): string;\n  pathPart(path: string): Uri;\n  pathPart(path?: string): string | Uri {\n    if (path === void 0) {\n      return this._path.toString();\n    } else {\n      return this.path(Uri.Path.parse(path));\n    }\n  }\n\n  pathName(): string;\n  pathName(name: string): Uri;\n  pathName(name?: string): string | Uri {\n    if (name === void 0) {\n      return this._path.name();\n    } else {\n      return this.path(this._path.name(name));\n    }\n  }\n\n  parentPath(): UriPath {\n    return this._path.parent();\n  }\n\n  basePath(): UriPath {\n    return this._path.base();\n  }\n\n  parent(): Uri {\n    return Uri.from(this._scheme, this._authority, this._path.parent());\n  }\n\n  base(): Uri {\n    return Uri.from(this._scheme, this._authority, this._path.base());\n  }\n\n  appendedPath(...components: AnyUriPath[]): Uri {\n    return this.path(this._path.appended.apply(this._path, arguments));\n  }\n\n  appendedSlash(): Uri {\n    return this.path(this._path.appendedSlash());\n  }\n\n  appendedSegment(segment: string): Uri {\n    return this.path(this._path.appendedSegment(segment));\n  }\n\n  prependedPath(...components: AnyUriPath[]): Uri {\n    return this.path(this._path.prepended.apply(this._path, arguments));\n  }\n\n  prependedSlash(): Uri {\n    return this.path(this._path.prependedSlash());\n  }\n\n  prependedSegment(segment: string): Uri {\n    return this.path(this._path.prependedSegment(segment));\n  }\n\n  query(): UriQuery;\n  query(query: AnyUriQuery): Uri;\n  query(query?: AnyUriQuery): UriQuery | Uri {\n    if (query === void 0) {\n      return this._query;\n    } else {\n      query = Uri.Query.fromAny(query);\n      if (query !== this._query) {\n        return this.copy(this._scheme, this._authority, this._path, query, this._fragment);\n      } else {\n        return this;\n      }\n    }\n  }\n\n  queryPart(): string;\n  queryPart(query: string): Uri;\n  queryPart(query?: string): string | Uri {\n    if (query === void 0) {\n      return this._query.toString();\n    } else {\n      return this.query(Uri.Query.parse(query));\n    }\n  }\n\n  updatedQuery(key: string, value: string): Uri {\n    return this.query(this._query.updated(key, value));\n  }\n\n  removedQuery(key: string): Uri {\n    return this.query(this._query.removed(key));\n  }\n\n  appendedQuery(key: string | null, value: string): Uri;\n  appendedQuery(params: AnyUriQuery): Uri;\n  appendedQuery(key: AnyUriQuery | null, value?: string): Uri {\n    return this.query(this._query.appended(key as any, value as any));\n  }\n\n  prependedQuery(key: string | null, value: string): Uri;\n  prependedQuery(params: AnyUriQuery): Uri;\n  prependedQuery(key: AnyUriQuery | null, value?: string): Uri {\n    return this.query(this._query.prepended(key as any, value as any));\n  }\n\n  fragment(): UriFragment;\n  fragment(fragment: AnyUriFragment): Uri;\n  fragment(fragment?: AnyUriFragment): UriFragment | Uri {\n    if (fragment === void 0) {\n      return this._fragment;\n    } else {\n      fragment = Uri.Fragment.fromAny(fragment);\n      if (fragment !== this._fragment) {\n        return Uri.from(this._scheme, this._authority, this._path, this._query, fragment);\n      } else {\n        return this;\n      }\n    }\n  }\n\n  fragmentPart(): string | null;\n  fragmentPart(fragment: string): Uri;\n  fragmentPart(fragment?: string): string  | null| Uri {\n    if (fragment === void 0) {\n      return this._fragment.toString();\n    } else {\n      return this.fragment(Uri.Fragment.parse(fragment));\n    }\n  }\n\n  fragmentIdentifier(): string | null;\n  fragmentIdentifier(identifier: string | null): Uri;\n  fragmentIdentifier(identifier?: string | null): string | null | Uri {\n    if (identifier === void 0) {\n      return this._fragment.identifier();\n    } else {\n      return this.fragment(Uri.Fragment.from(identifier));\n    }\n  }\n\n  endpoint(): Uri {\n    if (this._path.isDefined() || this._query.isDefined() || this._fragment.isDefined()) {\n      return Uri.from(this._scheme, this._authority);\n    } else {\n      return this;\n    }\n  }\n\n  resolve(relative: AnyUri): Uri {\n    relative = Uri.fromAny(relative);\n    if (relative._scheme.isDefined()) {\n      return this.copy(relative._scheme,\n                       relative._authority,\n                       relative._path.removeDotSegments(),\n                       relative._query,\n                       relative._fragment);\n    } else if (relative._authority.isDefined()) {\n      return this.copy(this._scheme,\n                       relative._authority,\n                       relative._path.removeDotSegments(),\n                       relative._query,\n                       relative._fragment);\n    } else if (relative._path.isEmpty()) {\n      return this.copy(this._scheme,\n                       this._authority,\n                       this._path,\n                       relative._query.isDefined() ? relative._query : this._query,\n                       relative._fragment);\n    } else if (relative._path.isAbsolute()) {\n      return this.copy(this._scheme,\n                       this._authority,\n                       relative._path.removeDotSegments(),\n                       relative._query,\n                       relative._fragment);\n    } else {\n      return this.copy(this._scheme,\n                       this._authority,\n                       this.merge(relative._path).removeDotSegments(),\n                       relative._query,\n                       relative._fragment);\n    }\n  }\n\n  /** @hidden */\n  merge(relative: UriPath): UriPath {\n    if (this._authority.isDefined() && this._path.isEmpty()) {\n      return relative.prependedSlash();\n    } else if (this._path.isEmpty()) {\n      return relative;\n    } else {\n      return this._path.merge(relative);\n    }\n  }\n\n  unresolve(absolute: AnyUri): Uri {\n    absolute = Uri.fromAny(absolute);\n    if (!this._scheme.equals(absolute._scheme) || !this._authority.equals(absolute._authority)) {\n      return absolute;\n    } else {\n      return Uri.from(Uri.Scheme.undefined(),\n                      Uri.Authority.undefined(),\n                      this._path.unmerge(absolute._path),\n                      absolute._query,\n                      absolute._fragment);\n    }\n  }\n\n  protected copy(scheme: UriScheme, authority: UriAuthority, path: UriPath,\n                 query: UriQuery, fragment: UriFragment): Uri {\n    return Uri.from(scheme, authority, path, query, fragment);\n  }\n\n  toAny(): {scheme?: string, username?: string, password?: string, host?: string,\n            port?: number, path: string[], query?: {[key: string]: string},\n            fragment?: string} {\n    const uri = {} as {scheme?: string, username?: string, password?: string, host?: string,\n                       port?: number, path: string[], query?: {[key: string]: string},\n                       fragment?: string};\n    uri.scheme = this._scheme.toAny();\n    this._authority.toAny(uri);\n    uri.path = this._path.toAny();\n    uri.query = this._query.toAny();\n    uri.fragment = this._fragment.toAny();\n    return uri;\n  }\n\n  compareTo(that: Uri): 0 | 1 | -1 {\n    const order = this.toString().localeCompare(that.toString());\n    return order < 0 ? -1 : order > 0 ? 1 : 0;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof Uri) {\n      return this.toString() === that.toString();\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (this._hashCode === void 0) {\n      this._hashCode = Murmur3.hash(this.toString());\n    }\n    return this._hashCode;\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"Uri\").write(46/*'.'*/);\n    if (this.isDefined()) {\n      output = output.write(\"parse\").write(40/*'('*/).write(34/*'\"'*/).display(this).write(34/*'\"'*/).write(41/*')'*/);\n    } else {\n      output = output.write(\"empty\").write(40/*'('*/).write(41/*')'*/);\n    }\n  }\n\n  display(output: Output): void {\n    if (this._string != null) {\n      output = output.write(this._string);\n    } else {\n      if (this._scheme.isDefined()) {\n        output.display(this._scheme).write(58/*':'*/);\n      }\n      if (this._authority.isDefined()) {\n        output = output.write(47/*'/'*/).write(47/*'/'*/).display(this._authority);\n      }\n      output.display(this._path);\n      if (this._query.isDefined()) {\n        output = output.write(63/*'?'*/).display(this._query);\n      }\n      if (this._fragment.isDefined()) {\n        output = output.write(35/*'#'*/).display(this._fragment);\n      }\n    }\n  }\n\n  toString(): string {\n    if (this._string === void 0) {\n      this._string = Format.display(this);\n    }\n    return this._string;\n  }\n\n  private static _empty?: Uri;\n\n  private static _standardParser?: UriParser;\n\n  static empty(): Uri {\n    if (Uri._empty === void 0) {\n      Uri._empty = new Uri(Uri.Scheme.undefined(), Uri.Authority.undefined(), Uri.Path.empty(),\n                           Uri.Query.undefined(), Uri.Fragment.undefined());\n    }\n    return Uri._empty;\n  }\n\n  static from(scheme: UriScheme = Uri.Scheme.undefined(),\n              authority: UriAuthority = Uri.Authority.undefined(),\n              path: UriPath = Uri.Path.empty(),\n              query: UriQuery = Uri.Query.undefined(),\n              fragment: UriFragment = Uri.Fragment.undefined()): Uri {\n    if (scheme.isDefined() || authority.isDefined() || path.isDefined()\n        || query.isDefined() || fragment.isDefined()) {\n      return new Uri(scheme, authority, path, query, fragment);\n    } else {\n      return Uri.empty();\n    }\n  }\n\n  static fromAny(uri: AnyUri | null | undefined): Uri {\n    if (uri === null || uri === void 0) {\n      return Uri.empty();\n    } else if (uri instanceof Uri) {\n      return uri;\n    } else if (typeof uri === \"object\") {\n      const scheme = Uri.Scheme.fromAny(uri.scheme);\n      const authority = Uri.Authority.fromAny(uri.authority || uri);\n      const path = Uri.Path.fromAny(uri.path);\n      const query = Uri.Query.fromAny(uri.query);\n      const fragment = Uri.Fragment.fromAny(uri.fragment);\n      if (scheme.isDefined() || authority.isDefined() || path.isDefined()\n          || query.isDefined() || fragment.isDefined()) {\n        return new Uri(scheme, authority, path, query, fragment);\n      } else {\n        return Uri.empty();\n      }\n    } else if (typeof uri === \"string\") {\n      return Uri.parse(uri);\n    } else {\n      throw new TypeError(\"\" + uri);\n    }\n  }\n\n  static scheme(scheme: AnyUriScheme): Uri {\n    scheme = Uri.Scheme.fromAny(scheme);\n    return Uri.from(scheme, void 0, void 0, void 0, void 0);\n  }\n\n  static schemePart(part: string): Uri {\n    const scheme = Uri.Scheme.parse(part);\n    return Uri.from(scheme, void 0, void 0, void 0, void 0);\n  }\n\n  static schemeName(name: string): Uri {\n    const scheme = Uri.Scheme.from(name);\n    return Uri.from(scheme, void 0, void 0, void 0, void 0);\n  }\n\n  static authority(authority: AnyUriAuthority): Uri {\n    authority = Uri.Authority.fromAny(authority);\n    return Uri.from(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static authorityPart(part: string): Uri {\n    const authority = Uri.Authority.parse(part);\n    return Uri.from(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static user(user: AnyUriUser): Uri {\n    const authority = Uri.Authority.user(user);\n    return Uri.from(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static userPart(part: string): Uri {\n    const authority = Uri.Authority.userPart(part);\n    return Uri.from(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static username(username: string, password?: string | null): Uri {\n    const authority = Uri.Authority.username(username, password);\n    return Uri.from(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static password(password: string): Uri {\n    const authority = Uri.Authority.password(password);\n    return Uri.from(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static host(host: AnyUriHost): Uri {\n    const authority = Uri.Authority.host(host);\n    return Uri.from(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static hostPart(part: string): Uri {\n    const authority = Uri.Authority.hostPart(part);\n    return Uri.from(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static hostName(address: string): Uri {\n    const authority = Uri.Authority.hostName(address);\n    return Uri.from(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static hostIPv4(address: string): Uri {\n    const authority = Uri.Authority.hostIPv4(address);\n    return Uri.from(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static hostIPv6(address: string): Uri {\n    const authority = Uri.Authority.hostIPv6(address);\n    return Uri.from(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static port(port: AnyUriPort): Uri {\n    const authority = Uri.Authority.port(port);\n    return Uri.from(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static portPart(part: string): Uri {\n    const authority = Uri.Authority.portPart(part);\n    return Uri.from(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static portNumber(number: number): Uri {\n    const authority = Uri.Authority.portNumber(number);\n    return Uri.from(void 0, authority, void 0, void 0, void 0);\n  }\n\n  static path(...components: AnyUriPath[]): Uri {\n    const path = Uri.Path.from.apply(void 0, components);\n    return Uri.from(void 0, void 0, path, void 0, void 0);\n  }\n\n  static pathPart(part: string): Uri {\n    const path = Uri.Path.parse(part);\n    return Uri.from(void 0, void 0, path, void 0, void 0);\n  }\n\n  static query(query: AnyUriQuery): Uri {\n    query = Uri.Query.fromAny(query);\n    return Uri.from(void 0, void 0, void 0, query, void 0);\n  }\n\n  static queryPart(part: string): Uri {\n    const query = Uri.Query.parse(part);\n    return Uri.from(void 0, void 0, void 0, query, void 0);\n  }\n\n  static fragment(fragment: AnyUriFragment): Uri {\n    fragment = Uri.Fragment.fromAny(fragment);\n    return Uri.from(void 0, void 0, void 0, void 0, fragment);\n  }\n\n  static fragmentPart(part: string): Uri {\n    const fragment = Uri.Fragment.parse(part);\n    return Uri.from(void 0, void 0, void 0, void 0, fragment);\n  }\n\n  static fragmentIdentifier(identifier: string): Uri {\n    const fragment = Uri.Fragment.from(identifier);\n    return Uri.from(void 0, void 0, void 0, void 0, fragment);\n  }\n\n  static standardParser(): UriParser {\n    if (!this._standardParser) {\n      this._standardParser = new Uri.Parser();\n    }\n    return this._standardParser;\n  }\n\n  static parse(string: string): Uri {\n    return Uri.standardParser().parseAbsoluteString(string);\n  }\n\n  /** @hidden */\n  static isUnreservedChar(c: number): boolean {\n    return c >= 65/*'A'*/ && c <= 90/*'Z'*/\n        || c >= 97/*'a'*/ && c <= 122/*'z'*/\n        || c >= 48/*'0'*/ && c <= 57/*'9'*/\n        || c === 45/*'-'*/ || c === 46/*'.'*/\n        || c === 95/*'_'*/ || c === 126/*'~'*/;\n  }\n\n  /** @hidden */\n  static isSubDelimChar(c: number): boolean {\n    return c === 33/*'!'*/ || c === 36/*'$'*/\n        || c === 38/*'&'*/ || c === 40/*'('*/\n        || c === 41/*')'*/ || c === 42/*'*'*/\n        || c === 43/*'+'*/ || c === 44/*','*/\n        || c === 59/*';'*/ || c === 61/*'='*/\n        || c === 39/*'\\''*/;\n  }\n\n  /** @hidden */\n  static isSchemeChar(c: number): boolean {\n    return c >= 65/*'A'*/ && c <= 90/*'Z'*/\n        || c >= 97/*'a'*/ && c <= 122/*'z'*/\n        || c >= 48/*'0'*/ && c <= 57/*'9'*/\n        || c === 43/*'+'*/ || c === 45/*'-'*/\n        || c === 46/*'.'*/;\n  }\n\n  /** @hidden */\n  static isUserInfoChar(c: number): boolean {\n    return Uri.isUnreservedChar(c)\n        || Uri.isSubDelimChar(c)\n        || c === 58/*':'*/;\n  }\n\n  /** @hidden */\n  static isUserChar(c: number): boolean {\n    return Uri.isUnreservedChar(c)\n        || Uri.isSubDelimChar(c);\n  }\n\n  /** @hidden */\n  static isHostChar(c: number): boolean {\n    return Uri.isUnreservedChar(c)\n        || Uri.isSubDelimChar(c);\n  }\n\n  /** @hidden */\n  static isPathChar(c: number): boolean {\n    return Uri.isUnreservedChar(c)\n        || Uri.isSubDelimChar(c)\n        || c === 58/*':'*/ || c === 64/*'@'*/;\n  }\n\n  /** @hidden */\n  static isQueryChar(c: number): boolean {\n    return Uri.isUnreservedChar(c)\n        || Uri.isSubDelimChar(c)\n        || c === 47/*'/'*/ || c === 58/*':'*/\n        || c === 63/*'?'*/ || c === 64/*'@'*/;\n  }\n\n  /** @hidden */\n  static isParamChar(c: number): boolean {\n    return Uri.isUnreservedChar(c)\n        || c === 33/*'!'*/ || c === 36/*'$'*/\n        || c === 40/*'('*/ || c === 41/*')'*/\n        || c === 42/*'*'*/ || c === 43/*'+'*/\n        || c === 44/*','*/ || c === 47/*'/'*/\n        || c === 58/*':'*/ || c === 59/*';'*/\n        || c === 63/*'?'*/ || c === 64/*'@'*/\n        || c === 39/*'\\''*/;\n  }\n\n  /** @hidden */\n  static isFragmentChar(c: number): boolean {\n    return Uri.isUnreservedChar(c)\n        || Uri.isSubDelimChar(c)\n        || c === 47/*'/'*/ || c === 58/*':'*/\n        || c === 63/*'?'*/ || c === 64/*'@'*/;\n  }\n\n  /** @hidden */\n  static isAlpha(c: number): boolean {\n    return c >= 65/*'A'*/ && c <= 90/*'Z'*/\n        || c >= 97/*'a'*/ && c <= 122/*'z'*/;\n  }\n\n  /** @hidden */\n  static toLowerCase(c: number): number {\n    if (c >= 65/*'A'*/ && c <= 90/*'Z'*/) {\n      return c + (97/*'a'*/ - 65/*'A'*/);\n    } else {\n      return c;\n    }\n  }\n\n  /** @hidden */\n  static writeScheme(scheme: string, output: Output): void {\n    for (let i = 0, n = scheme.length; i < n; i += 1) {\n      const c = scheme.charCodeAt(i);\n      if (i > 0 && Uri.isSchemeChar(c) || i === 0 && Uri.isAlpha(c)) {\n        output = output.write(c);\n      } else {\n        throw new UriException(\"Invalid scheme: \" + scheme);\n      }\n    }\n  }\n\n  /** @hidden */\n  static writeUserInfo(userInfo: string, output: Output): void {\n    for (let i = 0, n = userInfo.length; i < n; i += 1) {\n      const c = userInfo.charCodeAt(i);\n      if (Uri.isUserInfoChar(c)) {\n        output = output.write(c);\n      } else {\n        Uri.writeEncoded(c, output);\n      }\n    }\n  }\n\n  /** @hidden */\n  static writeUser(user: string, output: Output): void {\n    for (let i = 0, n = user.length; i < n; i += 1) {\n      const c = user.charCodeAt(i);\n      if (Uri.isUserChar(c)) {\n        output = output.write(c);\n      } else {\n        Uri.writeEncoded(c, output);\n      }\n    }\n  }\n\n  /** @hidden */\n  static writeHost(address: string, output: Output): void {\n    for (let i = 0, n = address.length; i < n; i += 1) {\n      const c = address.charCodeAt(i);\n      if (Uri.isHostChar(c)) {\n        output = output.write(c);\n      } else {\n        Uri.writeEncoded(c, output);\n      }\n    }\n  }\n\n  /** @hidden */\n  static writeHostLiteral(address: string, output: Output): void {\n    for (let i = 0, n = address.length; i < n; i += 1) {\n      const c = address.charCodeAt(i);\n      if (Uri.isHostChar(c) || c === 58/*':'*/) {\n        output = output.write(c);\n      } else {\n        Uri.writeEncoded(c, output);\n      }\n    }\n  }\n\n  /** @hidden */\n  static writePathSegment(segment: string, output: Output): void {\n    for (let i = 0, n = segment.length; i < n; i += 1) {\n      const c = segment.charCodeAt(i);\n      if (Uri.isPathChar(c)) {\n        output = output.write(c);\n      } else {\n        Uri.writeEncoded(c, output);\n      }\n    }\n  }\n\n  /** @hidden */\n  static writeQuery(query: string, output: Output): void {\n    for (let i = 0, n = query.length; i < n; i += 1) {\n      const c = query.charCodeAt(i);\n      if (Uri.isQueryChar(c)) {\n        output = output.write(c);\n      } else {\n        Uri.writeEncoded(c, output);\n      }\n    }\n  }\n\n  /** @hidden */\n  static writeParam(param: string, output: Output): void {\n    for (let i = 0, n = param.length; i < n; i += 1) {\n      const c = param.charCodeAt(i);\n      if (Uri.isParamChar(c)) {\n        output = output.write(c);\n      } else {\n        Uri.writeEncoded(c, output);\n      }\n    }\n  }\n\n  /** @hidden */\n  static writeFragment(fragment: string, output: Output): void {\n    for (let i = 0, n = fragment.length; i < n; i += 1) {\n      const c = fragment.charCodeAt(i);\n      if (Uri.isFragmentChar(c)) {\n        output = output.write(c);\n      } else {\n        Uri.writeEncoded(c, output);\n      }\n    }\n  }\n\n  /** @hidden */\n  static writeEncoded(c: number, output: Output): void {\n    if (c === 0x00) { // modified UTF-8\n      Uri.writePctEncoded(0xC0, output);\n      Uri.writePctEncoded(0x80, output);\n    } else if (c >= 0x00 && c <= 0x7F) { // U+0000..U+007F\n      Uri.writePctEncoded(c, output);\n    } else if (c >= 0x80 && c <= 0x07FF) { // U+0080..U+07FF\n      Uri.writePctEncoded(0xC0 | (c >>> 6), output);\n      Uri.writePctEncoded(0x80 | (c & 0x3F), output);\n    } else if (c >= 0x0800 && c <= 0xFFFF    // U+0800..U+D7FF\n            || c >= 0xE000 && c <= 0xFFFF) { // U+E000..U+FFFF\n      Uri.writePctEncoded(0xE0 | (c >>> 12), output);\n      Uri.writePctEncoded(0x80 | (c >>>  6 & 0x3F), output);\n      Uri.writePctEncoded(0x80 | (c        & 0x3F), output);\n    } else if (c >= 0x10000 && c <= 0x10FFFF) { // U+10000..U+10FFFF\n      Uri.writePctEncoded(0xF0 | (c >>> 18), output);\n      Uri.writePctEncoded(0x80 | (c >>> 12 & 0x3F), output);\n      Uri.writePctEncoded(0x80 | (c >>>  6 & 0x3F), output);\n      Uri.writePctEncoded(0x80 | (c        & 0x3F), output);\n    } else { // surrogate or invalid code point\n      Uri.writePctEncoded(0xEF, output);\n      Uri.writePctEncoded(0xBF, output);\n      Uri.writePctEncoded(0xBD, output);\n    }\n  }\n\n  /** @hidden */\n  static writePctEncoded(c: number, output: Output) {\n    output = output.write(37/*'%'*/)\n          .write(Base16.lowercase().encodeDigit(c >>> 4 & 0xF))\n          .write(Base16.lowercase().encodeDigit(c       & 0xF));\n  }\n\n  // Forward type declarations\n  /** @hidden */\n  static Scheme: typeof UriScheme; // defined by UriScheme\n  /** @hidden */\n  static Authority: typeof UriAuthority; // defined by UriAuthority\n  /** @hidden */\n  static User: typeof UriUser; // defined by UriUser\n  /** @hidden */\n  static Host: typeof UriHost; // defined by UriHost\n  /** @hidden */\n  static HostName: typeof UriHostName; // defined by UriHostName\n  /** @hidden */\n  static HostIPv4: typeof UriHostIPv4; // defined by UriHostIPv4\n  /** @hidden */\n  static HostIPv6: typeof UriHostIPv6; // defined by UriHostIPv6\n  /** @hidden */\n  static HostUndefined: typeof UriHostUndefined; // defined by UriHostUndefined\n  /** @hidden */\n  static Port: typeof UriPort; // defined by UriPort\n  /** @hidden */\n  static Path: typeof UriPath; // defined by UriPath\n  /** @hidden */\n  static PathSegment: typeof UriPathSegment; // defined by UriPathSegment\n  /** @hidden */\n  static PathSlash: typeof UriPathSlash; // defined by UriPathSlash\n  /** @hidden */\n  static PathEmpty: typeof UriPathEmpty; // defined by UriPathEmpty\n  /** @hidden */\n  static PathBuilder: typeof UriPathBuilder; // defined by UriPathBuilder\n  /** @hidden */\n  static Query: typeof UriQuery; // defined by UriQuery\n  /** @hidden */\n  static QueryParam: typeof UriQueryParam; // defined by UriQueryParam\n  /** @hidden */\n  static QueryUndefined: typeof UriQueryUndefined; // defined by UriQueryUndefined\n  /** @hidden */\n  static QueryBuilder: typeof UriQueryBuilder; // defined by UriQueryBuilder\n  /** @hidden */\n  static Fragment: typeof UriFragment; // defined by UriFragment\n  /** @hidden */\n  static Parser: typeof UriParser; // defined by UriParser\n  /** @hidden */\n  static Form: typeof UriForm; // defined by UriForm\n  /** @hidden */\n  static PathForm: typeof UriPathForm; // defined by UriPathForm\n\n  private static _form?: Form<Uri>;\n\n  static form(): Form<Uri> {\n    if (!Uri._form) {\n      Uri._form = new Uri.Form(Uri.empty());\n    }\n    return Uri._form;\n  }\n}\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Comparable, HashCode, Murmur3, HashGenCacheMap} from \"@swim/util\";\nimport {Output, Debug, Display} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\n\nexport type AnyUriScheme = UriScheme | string;\n\nexport class UriScheme implements Comparable<UriScheme>, HashCode, Debug, Display {\n  /** @hidden */\n  readonly _name: string;\n\n  /** @hidden */\n  constructor(name: string) {\n    this._name = name;\n  }\n\n  isDefined(): boolean {\n    return this._name.length !== 0;\n  }\n\n  name(): string {\n    return this._name;\n  }\n\n  toAny(): string | undefined {\n    return this._name.length !== 0 ? this._name : void 0;\n  }\n\n  compareTo(that: UriScheme): 0 | 1 | -1 {\n    const order = this._name.localeCompare(that._name);\n    return order < 0 ? -1 : order > 0 ? 1 : 0;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof UriScheme) {\n      return this._name === that._name;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    return Murmur3.hash(this._name);\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"UriScheme\").write(46/*'.'*/);\n    if (this.isDefined()) {\n      output = output.write(\"parse\").write(40/*'('*/).write(34/*'\"'*/).display(this).write(34/*'\"'*/).write(41/*')'*/);\n    } else {\n      output = output.write(\"undefined\").write(40/*'('*/).write(41/*')'*/);\n    }\n  }\n\n  display(output: Output): void {\n    Uri.writeScheme(this._name, output);\n  }\n\n  toString(): string {\n    return this._name;\n  }\n\n  private static _undefined?: UriScheme;\n\n  private static _cache?: HashGenCacheMap<string, UriScheme>;\n\n  static undefined(): UriScheme {\n    if (UriScheme._undefined === void 0) {\n      UriScheme._undefined = new UriScheme(\"\");\n    }\n    return UriScheme._undefined;\n  }\n\n  static from(name: string): UriScheme {\n    const cache = UriScheme.cache();\n    const scheme = cache.get(name);\n    if (scheme) {\n      return scheme;\n    } else {\n      return cache.put(name, new UriScheme(name));\n    }\n  }\n\n  static fromAny(scheme: AnyUriScheme | null | undefined): UriScheme {\n    if (scheme === null || scheme === void 0) {\n      return UriScheme.undefined();\n    } else if (scheme instanceof UriScheme) {\n      return scheme;\n    } else if (typeof scheme === \"string\") {\n      return UriScheme.parse(scheme);\n    } else {\n      throw new TypeError(\"\" + scheme);\n    }\n  }\n\n  static parse(string: string): UriScheme {\n    return Uri.standardParser().parseSchemeString(string);\n  }\n\n  /** @hidden */\n  static cache(): HashGenCacheMap<string, UriScheme> {\n    if (UriScheme._cache === void 0) {\n      const cacheSize = 4;\n      UriScheme._cache = new HashGenCacheMap<string, UriScheme>(cacheSize);\n    }\n    return UriScheme._cache;\n  }\n}\nUri.Scheme = UriScheme;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Comparable, HashCode, Murmur3} from \"@swim/util\";\nimport {Output, Format, Debug, Display} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {AnyUriUser, UriUserInit, UriUser} from \"./UriUser\";\nimport {AnyUriHost, UriHost} from \"./UriHost\";\nimport {AnyUriPort, UriPort} from \"./UriPort\";\n\nexport type AnyUriAuthority = UriAuthority | UriAuthorityInit | string;\n\nexport interface UriAuthorityInit extends UriUserInit {\n  user?: AnyUriUser;\n  host?: AnyUriHost;\n  port?: AnyUriPort;\n}\n\nexport class UriAuthority implements Comparable<UriAuthority>, HashCode, Debug, Display {\n  /** @hidden */\n  readonly _user: UriUser;\n  /** @hidden */\n  readonly _host: UriHost;\n  /** @hidden */\n  readonly _port: UriPort;\n  /** @hidden */\n  _string?: string;\n  /** @hidden */\n  _hashCode?: number;\n\n  /** @hidden */\n  constructor(user: UriUser, host: UriHost, port: UriPort) {\n    this._user = user;\n    this._host = host;\n    this._port = port;\n  }\n\n  isDefined(): boolean {\n    return this._user.isDefined() || this._host.isDefined() || this._port.isDefined();\n  }\n\n  user(): UriUser;\n  user(user: AnyUriUser): UriAuthority;\n  user(user?: AnyUriUser): UriUser | UriAuthority {\n    if (user === void 0) {\n      return this._user;\n    } else {\n      user = Uri.User.fromAny(user);\n      if (user !== this._user) {\n        return this.copy(user, this._host, this._port);\n      } else {\n        return this;\n      }\n    }\n  }\n\n  userPart(): string;\n  userPart(user: string): UriAuthority;\n  userPart(user?: string): string | UriAuthority {\n    if (user === void 0) {\n      return this._user.toString();\n    } else {\n      return this.user(Uri.User.parse(user));\n    }\n  }\n\n  username(): string;\n  username(username: string, password?: string | null): UriAuthority;\n  username(username?: string, password?: string | null): string | UriAuthority {\n    if (username === void 0) {\n      return this._user._username || \"\";\n    } else if (password === void 0) {\n      return this.user(this._user.username(username));\n    } else {\n      return this.user(Uri.User.from(username, password));\n    }\n  }\n\n  password(): string | null;\n  password(password: string | null): UriAuthority;\n  password(password?: string | null): string | null | UriAuthority {\n    if (password === void 0) {\n      return this._user.password();\n    } else {\n      return this.user(this._user.password(password));\n    }\n  }\n\n  host(): UriHost;\n  host(host: AnyUriHost): UriAuthority;\n  host(host?: AnyUriHost): UriHost | UriAuthority {\n    if (host === void 0) {\n      return this._host;\n    } else {\n      host = Uri.Host.fromAny(host);\n      if (host !== this._host) {\n        return this.copy(this._user, host, this._port);\n      } else {\n        return this;\n      }\n    }\n  }\n\n  hostPart(): string;\n  hostPart(host: string): UriAuthority;\n  hostPart(host?: string): string | UriAuthority {\n    if (host === void 0) {\n      return this._host.toString();\n    } else {\n      return this.host(Uri.Host.parse(host));\n    }\n  }\n\n  hostAddress(): string {\n    return this._host.address();\n  }\n\n  hostName(): string | null;\n  hostName(address: string): UriAuthority;\n  hostName(address?: string): string | null | UriAuthority {\n    if (address === void 0) {\n      return this._host.name();\n    } else {\n      return this.host(Uri.Host.from(address));\n    }\n  }\n\n  hostIPv4(): string | null;\n  hostIPv4(address: string): UriAuthority;\n  hostIPv4(address?: string): string | null | UriAuthority {\n    if (address === void 0) {\n      return this._host.ipv4();\n    } else {\n      return this.host(Uri.Host.ipv4(address));\n    }\n  }\n\n  hostIPv6(): string | null;\n  hostIPv6(address: string): UriAuthority;\n  hostIPv6(address?: string): string | null | UriAuthority {\n    if (address === void 0) {\n      return this._host.ipv6();\n    } else {\n      return this.host(Uri.Host.ipv6(address));\n    }\n  }\n\n  port(): UriPort;\n  port(port: AnyUriPort): UriAuthority;\n  port(port?: AnyUriPort): UriPort | UriAuthority {\n    if (port === void 0) {\n      return this._port;\n    } else {\n      port = Uri.Port.fromAny(port);\n      if (port !== this._port) {\n        return this.copy(this._user, this._host, port);\n      } else {\n        return this;\n      }\n    }\n  }\n\n  portPart(): string;\n  portPart(port: string): UriAuthority;\n  portPart(port?: string): string | UriAuthority {\n    if (port === void 0) {\n      return this._port.toString();\n    } else {\n      return this.port(Uri.Port.parse(port));\n    }\n  }\n\n  portNumber(): number;\n  portNumber(port: number): UriAuthority;\n  portNumber(port?: number): number | UriAuthority {\n    if (port === void 0) {\n      return this._port.number();\n    } else {\n      return this.port(Uri.Port.from(port));\n    }\n  }\n\n  protected copy(user: UriUser, host: UriHost, port: UriPort): UriAuthority {\n    return UriAuthority.from(user, host, port);\n  }\n\n  toAny(authority?: {username?: string, password?: string, host?: string, port?: number}):\n      {username?: string, password?: string, host?: string, port?: number} | undefined {\n    if (this.isDefined()) {\n      authority = authority || {};\n      this._user.toAny(authority);\n      if (this._host.isDefined()) {\n        authority.host = this._host.toAny();\n      }\n      if (this._port.isDefined()) {\n        authority.port = this._port.toAny();\n      }\n    }\n    return authority;\n  }\n\n  compareTo(that: UriAuthority): 0 | 1 | -1 {\n    const order = this.toString().localeCompare(that.toString());\n    return order < 0 ? -1 : order > 0 ? 1 : 0;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof UriAuthority) {\n      return this.toString() === that.toString();\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (this._hashCode === void 0) {\n      this._hashCode = Murmur3.hash(this.toString());\n    }\n    return this._hashCode;\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"UriAuthority\").write(46/*'.'*/);\n    if (this.isDefined()) {\n      output = output.write(\"parse\").write(40/*'('*/).write(34/*'\"'*/).display(this).write(34/*'\"'*/).write(41/*')'*/);\n    } else {\n      output = output.write(\"undefined\").write(40/*'('*/).write(41/*')'*/);\n    }\n  }\n\n  display(output: Output): void {\n    if (this._string !== void 0) {\n      output = output.write(this._string);\n    } else {\n      if (this._user.isDefined()) {\n        output.display(this._user).write(64/*'@'*/);\n      }\n      output.display(this._host);\n      if (this._port.isDefined()) {\n        output = output.write(58/*':'*/).display(this._port);\n      }\n    }\n  }\n\n  toString(): string {\n    if (this._string === void 0) {\n      this._string = Format.display(this);\n    }\n    return this._string;\n  }\n\n  private static _undefined?: UriAuthority;\n\n  static undefined(): UriAuthority {\n    if (UriAuthority._undefined === void 0) {\n      UriAuthority._undefined = new UriAuthority(Uri.User.undefined(), Uri.Host.undefined(), Uri.Port.undefined());\n    }\n    return UriAuthority._undefined;\n  }\n\n  static from(user: UriUser = Uri.User.undefined(),\n              host: UriHost = Uri.Host.undefined(),\n              port: UriPort = Uri.Port.undefined()): UriAuthority {\n    if (user.isDefined() || host.isDefined() || port.isDefined()) {\n      return new UriAuthority(user, host, port);\n    } else {\n      return UriAuthority.undefined();\n    }\n  }\n\n  static fromAny(authority: AnyUriAuthority | null | undefined): UriAuthority {\n    if (authority === null || authority === void 0) {\n      return UriAuthority.undefined();\n    } else if (authority instanceof UriAuthority) {\n      return authority;\n    } else if (typeof authority === \"object\") {\n      const user = Uri.User.fromAny(authority.user || authority);\n      const host = Uri.Host.fromAny(authority.host);\n      const port = Uri.Port.fromAny(authority.port);\n      return UriAuthority.from(user, host, port);\n    } else if (typeof authority === \"string\") {\n      return UriAuthority.parse(authority);\n    } else {\n      throw new TypeError(\"\" + authority);\n    }\n  }\n\n  static user(user: AnyUriUser): UriAuthority {\n    user = Uri.User.fromAny(user);\n    return UriAuthority.from(user, void 0, void 0);\n  }\n\n  static userPart(part: string): UriAuthority {\n    const user = Uri.User.parse(part);\n    return UriAuthority.from(user, void 0, void 0);\n  }\n\n  static username(username: string, password?: string | null): UriAuthority {\n    const user = Uri.User.from(username, password);\n    return UriAuthority.from(user, void 0, void 0);\n  }\n\n  static password(password: string): UriAuthority {\n    const user = Uri.User.from(\"\", password);\n    return UriAuthority.from(user, void 0, void 0);\n  }\n\n  static host(host: AnyUriHost): UriAuthority {\n    host = Uri.Host.fromAny(host);\n    return UriAuthority.from(void 0, host, void 0);\n  }\n\n  static hostPart(part: string): UriAuthority {\n    const host = Uri.Host.parse(part);\n    return UriAuthority.from(void 0, host, void 0);\n  }\n\n  static hostName(address: string): UriAuthority {\n    const host = Uri.Host.from(address);\n    return UriAuthority.from(void 0, host, void 0);\n  }\n\n  static hostIPv4(address: string): UriAuthority {\n    const host = Uri.Host.ipv4(address);\n    return UriAuthority.from(void 0, host, void 0);\n  }\n\n  static hostIPv6(address: string): UriAuthority {\n    const host = Uri.Host.ipv6(address);\n    return UriAuthority.from(void 0, host, void 0);\n  }\n\n  static port(port: AnyUriPort): UriAuthority {\n    port = Uri.Port.fromAny(port);\n    return UriAuthority.from(void 0, void 0, port);\n  }\n\n  static portPart(part: string): UriAuthority {\n    const port = Uri.Port.parse(part);\n    return UriAuthority.from(void 0, void 0, port);\n  }\n\n  static portNumber(number: number): UriAuthority {\n    const port = Uri.Port.from(number);\n    return UriAuthority.from(void 0, void 0, port);\n  }\n\n  static parse(string: string): UriAuthority {\n    return Uri.standardParser().parseAuthorityString(string);\n  }\n}\nUri.Authority = UriAuthority;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashCode, Murmur3} from \"@swim/util\";\nimport {Output, Format, Debug, Display} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\n\nexport type AnyUriUser = UriUser | UriUserInit | string;\n\nexport interface UriUserInit {\n  username?: string;\n  password?: string | null;\n}\n\nexport class UriUser implements HashCode, Debug, Display {\n  /** @hidden */\n  readonly _username: string | null;\n  /** @hidden */\n  readonly _password: string | null;\n\n  /** @hidden */\n  constructor(username: string | null, password: string | null) {\n    this._username = username;\n    this._password = password;\n  }\n\n  isDefined(): boolean {\n    return this._username !== null;\n  }\n\n  username(): string;\n  username(username: string): UriUser;\n  username(username?: string): string | UriUser {\n    if (username === void 0) {\n      return this._username || \"\";\n    } else {\n      if (username !== this._username) {\n        return this.copy(username, this._password);\n      } else {\n        return this;\n      }\n    }\n  }\n\n  password(): string | null;\n  password(password: string | null): UriUser;\n  password(password?: string | null): string | null | UriUser {\n    if (password === void 0) {\n      return this._password;\n    } else {\n      if (password !== this._password) {\n        return this.copy(this._username, password);\n      } else {\n        return this;\n      }\n    }\n  }\n\n  protected copy(username: string | null, password: string | null): UriUser {\n    return UriUser.from(username, password);\n  }\n\n  toAny(user?: {username?: string, password?: string}): {username?: string, password?: string} | undefined {\n    if (this._username !== null) {\n      user = user || {};\n      user.username = this._username;\n      if (this._password !== null) {\n        user.password = this._password;\n      }\n    }\n    return user;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof UriUser) {\n      return this._username === that._username && this._password === that._password;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (UriUser._hashSeed === void 0) {\n      UriUser._hashSeed = Murmur3.seed(UriUser);\n    }\n    return Murmur3.mash(Murmur3.mix(Murmur3.mix(UriUser._hashSeed,\n        Murmur3.hash(this._username)), Murmur3.hash(this._password)));\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"UriUser\").write(46/*'.'*/);\n    if (this.isDefined()) {\n      output = output.write(\"parse\").write(40/*'('*/).write(34/*'\"'*/).display(this).write(34/*'\"'*/).write(41/*')'*/);\n    } else {\n      output = output.write(\"undefined\").write(40/*'('*/).write(41/*')'*/);\n    }\n  }\n\n  display(output: Output): void {\n    if (this._username != null) {\n      Uri.writeUser(this._username, output);\n      if (this._password != null) {\n        output = output.write(58/*':'*/);\n        Uri.writeUser(this._password, output);\n      }\n    }\n  }\n\n  toString(): string {\n    return Format.display(this);\n  }\n\n  private static _hashSeed?: number;\n\n  private static _undefined?: UriUser;\n\n  static undefined(): UriUser {\n    if (UriUser._undefined === void 0) {\n      UriUser._undefined = new UriUser(null, null);\n    }\n    return UriUser._undefined;\n  }\n\n  static from(username: string | null, password: string | null = null): UriUser {\n    if (username !== null || password !== null) {\n      return new UriUser(username || \"\", password);\n    } else {\n      return UriUser.undefined();\n    }\n  }\n\n  static fromAny(user: AnyUriUser | null | undefined): UriUser {\n    if (user === null || user === void 0) {\n      return UriUser.undefined();\n    } else if (user instanceof UriUser) {\n      return user;\n    } else if (typeof user === \"object\") {\n      const username = typeof user.username === \"string\" ? user.username : null;\n      const password = typeof user.password === \"string\" ? user.password : null;\n      return UriUser.from(username, password);\n    } else if (typeof user === \"string\") {\n      return UriUser.parse(user);\n    } else {\n      throw new TypeError(\"\" + user);\n    }\n  }\n\n  static parse(string: string): UriUser {\n    return Uri.standardParser().parseUserString(string);\n  }\n}\nUri.User = UriUser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Comparable, HashCode, Murmur3, HashGenCacheMap} from \"@swim/util\";\nimport {Output, Debug, Display} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\n\nexport type AnyUriHost = UriHost | string;\n\nexport abstract class UriHost implements Comparable<UriHost>, HashCode, Debug, Display {\n  /** @hidden */\n  _hashCode?: number;\n\n  protected constructor() {\n    // stub\n  }\n\n  isDefined(): boolean {\n    return true;\n  }\n\n  abstract address(): string;\n\n  name(): string | null {\n    return null;\n  }\n\n  ipv4(): string | null {\n    return null;\n  }\n\n  ipv6(): string | null {\n    return null;\n  }\n\n  toAny(): string {\n    return this.toString();\n  }\n\n  compareTo(that: UriHost): 0 | 1 | -1 {\n    const order = this.toString().localeCompare(that.toString());\n    return order < 0 ? -1 : order > 0 ? 1 : 0;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof UriHost) {\n      return this.toString() === that.toString();\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (this._hashCode === void 0) {\n      this._hashCode = Murmur3.hash(this.toString());\n    }\n    return this._hashCode;\n  }\n\n  abstract debug(output: Output): void;\n\n  abstract display(output: Output): void;\n\n  abstract toString(): string;\n\n  private static _undefined?: UriHost;\n\n  private static _cache?: HashGenCacheMap<string, UriHost>;\n\n  static undefined(): UriHost {\n    if (UriHost._undefined === void 0) {\n      UriHost._undefined = new Uri.HostUndefined();\n    }\n    return UriHost._undefined;\n  }\n\n  static from(address: string): UriHost {\n    const cache = UriHost.cache();\n    const host = cache.get(address);\n    if (host instanceof Uri.HostName) {\n      return host;\n    } else {\n      return cache.put(address, new Uri.HostName(address));\n    }\n  }\n\n  static ipv4(address: string): UriHost {\n    const cache = UriHost.cache();\n    const host = cache.get(address);\n    if (host instanceof Uri.HostIPv4) {\n      return host;\n    } else {\n      return cache.put(address, new Uri.HostIPv4(address));\n    }\n  }\n\n  static ipv6(address: string): UriHost {\n    const cache = UriHost.cache();\n    const host = cache.get(address);\n    if (host instanceof Uri.HostIPv6) {\n      return host;\n    } else {\n      return cache.put(address, new Uri.HostIPv6(address));\n    }\n  }\n\n  static fromAny(host: AnyUriHost | null | undefined): UriHost {\n    if (host === null || host === void 0) {\n      return UriHost.undefined();\n    } else if (host instanceof UriHost) {\n      return host;\n    } else if (typeof host === \"string\") {\n      return UriHost.parse(host);\n    } else {\n      throw new TypeError(\"\" + host);\n    }\n  }\n\n  static parse(string: string): UriHost {\n    return Uri.standardParser().parseHostString(string);\n  }\n\n  /** @hidden */\n  static cache(): HashGenCacheMap<string, UriHost> {\n    if (UriHost._cache === void 0) {\n      const cacheSize = 16;\n      UriHost._cache = new HashGenCacheMap<string, UriHost>(cacheSize);\n    }\n    return UriHost._cache;\n  }\n}\nUri.Host = UriHost;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriHost} from \"./UriHost\";\n\n/** @hidden */\nexport class UriHostName extends UriHost {\n  /** @hidden */\n  readonly _address: string;\n\n  /** @hidden */\n  constructor(address: string) {\n    super();\n    this._address = address;\n  }\n\n  address(): string {\n    return this._address;\n  }\n\n  name(): string {\n    return this._address;\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"UriHost\").write(46/*'.'*/).write(\"from\")\n        .write(40/*'('*/).debug(this._address).write(41/*')'*/);\n  }\n\n  display(output: Output): void {\n    Uri.writeHost(this._address, output);\n  }\n\n  toString(): string {\n    return this._address;\n  }\n}\nUri.HostName = UriHostName;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriHost} from \"./UriHost\";\n\n/** @hidden */\nexport class UriHostIPv4 extends UriHost {\n  /** @hidden */\n  readonly _address: string;\n\n  /** @hidden */\n  constructor(address: string) {\n    super();\n    this._address = address;\n  }\n\n  address(): string {\n    return this._address;\n  }\n\n  ipv4(): string {\n    return this._address;\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"UriHost\").write(46/*'.'*/).write(\"ipv4\")\n        .write(40/*'('*/).debug(this._address).write(41/*')'*/);\n  }\n\n  display(output: Output): void {\n    Uri.writeHost(this._address, output);\n  }\n\n  toString(): string {\n    return this._address;\n  }\n}\nUri.HostIPv4 = UriHostIPv4;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriHost} from \"./UriHost\";\n\n/** @hidden */\nexport class UriHostIPv6 extends UriHost {\n  /** @hidden */\n  readonly _address: string;\n  /** @hidden */\n  _string: string;\n\n  /** @hidden */\n  constructor(address: string) {\n    super();\n    this._address = address;\n  }\n\n  address(): string {\n    return this._address;\n  }\n\n  ipv6(): string {\n    return this._address;\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"UriHost\").write(46/*'.'*/).write(\"ipv6\")\n        .write(40/*'('*/).debug(this._address).write(41/*')'*/);\n  }\n\n  display(output: Output): void {\n    if (this._string != null) {\n      output = output.write(this._string);\n    } else {\n      output = output.write(91/*'['*/);\n      Uri.writeHostLiteral(this._address, output);\n      output = output.write(93/*']'*/);\n    }\n  }\n\n  toString(): string {\n    if (this._string == null) {\n      this._string = \"[\" + this.address + \"]\";\n    }\n    return this._string;\n  }\n}\nUri.HostIPv6 = UriHostIPv6;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriHost} from \"./UriHost\";\n\n/** @hidden */\nexport class UriHostUndefined extends UriHost {\n  /** @hidden */\n  constructor() {\n    super();\n  }\n\n  isDefined(): boolean {\n    return false;\n  }\n\n  address(): string {\n    return \"\";\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"UriHost\").write(46/*'.'*/).write(\"undefined\")\n        .write(40/*'('*/).write(41/*')'*/);\n  }\n\n  display(output: Output): void {\n    // nop\n  }\n\n  toString(): string {\n    return \"\";\n  }\n}\nUri.HostUndefined = UriHostUndefined;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Comparable, HashCode, Murmur3, HashGenCacheMap} from \"@swim/util\";\nimport {Output, Format, Debug, Display} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\n\nexport type AnyUriPort = UriPort | number | string;\n\nexport class UriPort implements Comparable<UriPort>, HashCode, Debug, Display {\n  /** @hidden */\n  readonly _number: number;\n\n  /** @hidden */\n  constructor(num: number) {\n    this._number = num;\n  }\n\n  isDefined(): boolean {\n    return this._number !== 0;\n  }\n\n  number(): number {\n    return this._number;\n  }\n\n  valueOf(): number {\n    return this._number;\n  }\n\n  toAny(): number {\n    return this._number;\n  }\n\n  compareTo(that: UriPort): 0 | 1 | -1 {\n    return this._number < that._number ? -1 : this._number > that._number ? 1 : 0;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof UriPort) {\n      return this._number === that._number;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (UriPort._hashSeed === void 0) {\n      UriPort._hashSeed = Murmur3.seed(UriPort);\n    }\n    return Murmur3.mash(Murmur3.mix(UriPort._hashSeed, this._number));\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"UriPort\").write(46/*'.'*/);\n    if (this.isDefined()) {\n      output = output.write(\"from\").write(40/*'('*/);\n      Format.displayNumber(this._number, output);\n      output = output.write(41/*')'*/);\n    } else {\n      output = output.write(\"undefined\").write(40/*'('*/).write(41/*')'*/);\n    }\n  }\n\n  display(output: Output): void {\n    Format.displayNumber(this._number, output);\n  }\n\n  toString(): string {\n    return \"\" + this._number;\n  }\n\n  private static _hashSeed?: number;\n\n  private static _undefined?: UriPort;\n\n  private static _cache?: HashGenCacheMap<number, UriPort>;\n\n  static undefined(): UriPort {\n    if (UriPort._undefined === void 0) {\n      UriPort._undefined = new UriPort(0);\n    }\n    return UriPort._undefined;\n  }\n\n  static from(number: number) {\n    if (number > 0) {\n      const cache = UriPort.cache();\n      const port = cache.get(number);\n      if (port !== void 0) {\n        return port;\n      } else {\n        return cache.put(number, new UriPort(number));\n      }\n    } else if (number === 0) {\n      return UriPort.undefined();\n    } else {\n      throw new TypeError(\"\" + number);\n    }\n  }\n\n  static fromAny(port: AnyUriPort | null | undefined): UriPort {\n    if (port === null || port === void 0) {\n      return UriPort.undefined();\n    } else if (port instanceof UriPort) {\n      return port;\n    } else if (typeof port === \"number\") {\n      return UriPort.from(port);\n    } else if (typeof port === \"string\") {\n      return UriPort.parse(port);\n    } else {\n      throw new TypeError(\"\" + port);\n    }\n  }\n\n  static parse(string: string): UriPort {\n    return Uri.standardParser().parsePortString(string);\n  }\n\n  /** @hidden */\n  static cache(): HashGenCacheMap<number, UriPort> {\n    if (UriPort._cache === void 0) {\n      const cacheSize = 4;\n      UriPort._cache = new HashGenCacheMap<number, UriPort>(cacheSize);\n    }\n    return UriPort._cache;\n  }\n}\nUri.Port = UriPort;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Comparable, HashCode, Murmur3, HashGenCacheSet} from \"@swim/util\";\nimport {Output, Debug, Display} from \"@swim/codec\";\nimport {Form} from \"@swim/structure\";\nimport {Uri} from \"./Uri\";\nimport {UriPathBuilder} from \"./UriPathBuilder\";\n\nexport type AnyUriPath = UriPath | string[] | string;\n\nexport abstract class UriPath implements Comparable<UriPath>, HashCode, Debug, Display {\n  /** @hidden */\n  _hashCode?: number;\n\n  /** @hidden */\n  protected constructor() {\n    // sealed\n  }\n\n  abstract isDefined(): boolean;\n\n  abstract isAbsolute(): boolean;\n\n  abstract isRelative(): boolean;\n\n  abstract isEmpty(): boolean;\n\n  get length(): number {\n    let n = 0;\n    let path = this as UriPath;\n    while (!path.isEmpty()) {\n      n += 1;\n      path = path.tail();\n    }\n    return n;\n  }\n\n  get(index: number): string | undefined {\n    let i = 0;\n    let path = this as UriPath;\n    while (!path.isEmpty()) {\n      if (i < index) {\n        i += 1;\n        path = path.tail();\n      } else {\n        return path.head();\n      }\n    }\n    return void 0;\n  }\n\n  abstract head(): string;\n\n  abstract tail(): UriPath;\n\n  /** @hidden */\n  abstract setTail(tail: UriPath): void;\n\n  /** @hidden */\n  abstract dealias(): UriPath;\n\n  abstract parent(): UriPath;\n\n  abstract base(): UriPath;\n\n  name(): string;\n  name(name: string): UriPath;\n  name(name?: string): string | UriPath {\n    if (name === void 0) {\n      if (this.isEmpty()) {\n        return \"\";\n      }\n      let path = this as UriPath;\n      do {\n        const tail = path.tail();\n        if (tail.isEmpty()) {\n          return path.isRelative() ? path.head() : \"\";\n        } else {\n          path = tail;\n        }\n      } while (true);\n    } else {\n      const builder = new Uri.PathBuilder();\n      builder.addPath(this.base());\n      builder.addSegment(name);\n      return builder.bind();\n    }\n  }\n\n  foot(): UriPath {\n    if (this.isEmpty()) {\n      return this;\n    }\n    let path = this as UriPath;\n    do {\n      const tail = path.tail();\n      if (tail.isEmpty()) {\n        return path;\n      } else {\n        path = tail;\n      }\n    } while (true);\n  }\n\n  isSubpathOf(b: AnyUriPath): boolean {\n    b = UriPath.fromAny(b);\n    let a = this as UriPath;\n    while (!a.isEmpty() && !b.isEmpty()) {\n      if (a.head() !== b.head()) {\n        return false;\n      }\n      a = a.tail();\n      b = b.tail();\n    }\n    return b.isEmpty();\n  }\n\n  appended(...components: AnyUriPath[]): UriPath {\n    if (arguments.length > 0) {\n      const builder = new Uri.PathBuilder();\n      builder.addPath(this);\n      builder.push.apply(builder, arguments);\n      return builder.bind();\n    } else {\n      return this;\n    }\n  }\n\n  appendedSlash(): UriPath {\n    const builder = new Uri.PathBuilder();\n    builder.addPath(this);\n    builder.addSlash();\n    return builder.bind();\n  }\n\n  appendedSegment(segment: string): UriPath {\n    const builder = new Uri.PathBuilder();\n    builder.addPath(this);\n    builder.addSegment(segment);\n    return builder.bind();\n  }\n\n  prepended(...components: AnyUriPath[]): UriPath {\n    if (arguments.length > 0) {\n      const builder = new Uri.PathBuilder();\n      builder.push.apply(builder, arguments);\n      builder.addPath(this);\n      return builder.bind();\n    } else {\n      return this;\n    }\n  }\n\n  prependedSlash(): UriPath {\n    return UriPath.slash(this);\n  }\n\n  prependedSegment(segment: string): UriPath {\n    if (this.isEmpty() || this.isAbsolute()) {\n      return UriPath.segment(segment, this);\n    } else {\n      return UriPath.segment(segment, UriPath.slash(this));\n    }\n  }\n\n  resolve(that: UriPath): UriPath {\n    if (that.isEmpty()) {\n      return this;\n    } else if (that.isAbsolute() || this.isEmpty()) {\n      return that.removeDotSegments();\n    } else {\n      return this.merge(that).removeDotSegments();\n    }\n  }\n\n  removeDotSegments(): UriPath {\n    let path = this as UriPath;\n    const builder = new Uri.PathBuilder();\n    while (!path.isEmpty()) {\n      const head = path.head();\n      if (head === \".\" || head === \"..\") {\n        path = path.tail();\n        if (!path.isEmpty()) {\n          path = path.tail();\n        }\n      } else if (path.isAbsolute()) {\n        const rest = path.tail();\n        if (!rest.isEmpty()) {\n          const next = rest.head();\n          if (next === \".\") {\n            path = rest.tail();\n            if (path.isEmpty()) {\n              path = UriPath.slash();\n            }\n          } else if (next === \"..\") {\n            path = rest.tail();\n            if (path.isEmpty()) {\n              path = UriPath.slash();\n            }\n            if (!builder.isEmpty() && !builder.pop().isAbsolute()) {\n              if (!builder.isEmpty()) {\n                builder.pop();\n              }\n            }\n          } else {\n            builder.push(head, next);\n            path = rest.tail();\n          }\n        } else {\n          builder.push(path.head());\n          path = path.tail();\n        }\n      } else {\n        builder.push(path.head());\n        path = path.tail();\n      }\n    }\n    return builder.bind();\n  }\n\n  merge(that: UriPath): UriPath {\n    if (!this.isEmpty()) {\n      const builder = new Uri.PathBuilder();\n      let prev = this as UriPath;\n      do {\n        const next = prev.tail();\n        if (!next.isEmpty()) {\n          if (prev.isAbsolute()) {\n            builder.addSlash();\n          } else {\n            builder.addSegment(prev.head());\n          }\n          prev = next;\n        } else {\n          if (prev.isAbsolute()) {\n            builder.addSlash();\n          }\n          break;\n        }\n      } while (true);\n      builder.addPath(that);\n      return builder.bind();\n    } else {\n      return that;\n    }\n  }\n\n  unmerge(relative: UriPath, root: UriPath = relative): UriPath {\n    let base = this as UriPath;\n    do {\n      if (base.isEmpty()) {\n        if (!relative.isEmpty() && !relative.tail().isEmpty()) {\n          return relative.tail();\n        } else {\n          return relative;\n        }\n      } else if (base.isRelative()) {\n        return relative;\n      } else if (relative.isRelative()) {\n        return UriPath.slash(relative);\n      } else {\n        let a = base.tail();\n        let b = relative.tail();\n        if (!a.isEmpty() && b.isEmpty()) {\n          return UriPath.slash();\n        } else if (a.isEmpty() || b.isEmpty() || a.head() !== b.head()) {\n          return b;\n        } else {\n          a = a.tail();\n          b = b.tail();\n          if (!a.isEmpty() && b.isEmpty()) {\n            return root;\n          } else {\n            base = a;\n            relative = b;\n          }\n        }\n      }\n    } while (true);\n  }\n\n  toAny(): string[] {\n    const components = [];\n    let path = this as UriPath;\n    while (!path.isEmpty()) {\n      components.push(path.head());\n      path = path.tail();\n    }\n    return components;\n  }\n\n  compareTo(that: UriPath): 0 | 1 | -1 {\n    const order = this.toString().localeCompare(that.toString());\n    return order < 0 ? -1 : order > 0 ? 1 : 0;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof UriPath) {\n      return this.toString() === that.toString();\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (this._hashCode === void 0) {\n      this._hashCode = Murmur3.hash(this.toString());\n    }\n    return this._hashCode;\n  }\n\n  abstract debug(output: Output): void;\n\n  display(output: Output): void {\n    let path = this as UriPath;\n    while (!path.isEmpty()) {\n      if (path.isAbsolute()) {\n        output = output.write(47/*'/'*/);\n      } else {\n        Uri.writePathSegment(path.head(), output);\n      }\n      path = path.tail();\n    }\n  }\n\n  abstract toString(): string;\n\n  private static _empty?: UriPath;\n\n  private static _slash?: UriPath;\n\n  private static _segmentCache?: HashGenCacheSet<string>;\n\n  static builder(): UriPathBuilder {\n    return new Uri.PathBuilder();\n  }\n\n  static empty(): UriPath {\n    if (UriPath._empty === void 0) {\n      UriPath._empty = new Uri.PathEmpty();\n    }\n    return UriPath._empty;\n  }\n\n  static slash(tail: UriPath = UriPath.empty()): UriPath {\n    if (tail === UriPath.empty()) {\n      if (UriPath._slash === void 0) {\n        UriPath._slash = new Uri.PathSlash(tail);\n      }\n      return UriPath._slash;\n    } else {\n      return new Uri.PathSlash(tail);\n    }\n  }\n\n  static segment(segment: string, tail: UriPath = UriPath.empty()): UriPath {\n    segment = this.cacheSegment(segment);\n    return new Uri.PathSegment(segment, tail);\n  }\n\n  static from(...components: AnyUriPath[]): UriPath {\n    const builder = new Uri.PathBuilder();\n    builder.push.apply(builder, arguments);\n    return builder.bind();\n  }\n\n  static fromAny(path: AnyUriPath | null | undefined): UriPath {\n    if (path === null || path === void 0) {\n      return UriPath.empty();\n    } else if (path instanceof UriPath) {\n      return path;\n    } else if (Array.isArray(path)) {\n      return UriPath.from.apply(void 0, arguments);\n    } else if (typeof path === \"string\") {\n      return UriPath.parse(path);\n    } else {\n      throw new TypeError(\"\" + path);\n    }\n  }\n\n  static parse(string: string): UriPath {\n    return Uri.standardParser().parsePathString(string);\n  }\n\n  /** @hidden */\n  static segmentCache(): HashGenCacheSet<string> {\n    if (UriPath._segmentCache === void 0) {\n      const segmentCacheSize = 64;\n      UriPath._segmentCache = new HashGenCacheSet<string>(segmentCacheSize);\n    }\n    return UriPath._segmentCache;\n  }\n\n  /** @hidden */\n  static cacheSegment(segment: string): string {\n    if (segment.length <= 32) {\n      return this.segmentCache().put(segment);\n    } else {\n      return segment;\n    }\n  }\n\n  private static _pathForm?: Form<UriPath>;\n\n  static pathForm(): Form<UriPath> {\n    if (!UriPath._pathForm) {\n      UriPath._pathForm = new Uri.PathForm(UriPath.empty());\n    }\n    return UriPath._pathForm;\n  }\n}\nUri.Path = UriPath;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, Format} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriPath} from \"./UriPath\";\n\n/** @hidden */\nexport class UriPathSegment extends UriPath {\n  /** @hidden */\n  readonly _head: string;\n  /** @hidden */\n  _tail: UriPath;\n  /** @hidden */\n  _string?: string;\n\n  /** @hidden */\n  constructor(head: string, tail: UriPath) {\n    super();\n    this._head = head;\n    this._tail = tail;\n  }\n\n  isDefined(): boolean {\n    return true;\n  }\n\n  isAbsolute(): boolean {\n    return false;\n  }\n\n  isRelative(): boolean {\n    return true;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n\n  head(): string {\n    return this._head;\n  }\n\n  tail(): UriPath {\n    return this._tail;\n  }\n\n  /** @hidden */\n  setTail(tail: UriPath): void {\n    if (tail.isAbsolute()) {\n      this._tail = tail;\n    } else {\n      this._tail = UriPath.slash(tail);\n    }\n  }\n\n  /** @hidden */\n  dealias(): UriPath {\n    return new UriPathSegment(this._head, this._tail);\n  }\n\n  parent(): UriPath {\n    const tail = this._tail;\n    if (tail.isEmpty()) {\n      return UriPath.empty();\n    } else {\n      const next = tail.tail();\n      if (next.isEmpty()) {\n        return UriPath.empty();\n      } else {\n        return new UriPathSegment(this._head, tail.parent());\n      }\n    }\n  }\n\n  base(): UriPath {\n    const tail = this._tail;\n    if (tail.isEmpty()) {\n      return UriPath.empty();\n    } else {\n      return new UriPathSegment(this._head, tail.base());\n    }\n  }\n\n  prependedSegment(segment: string): UriPath {\n    return UriPath.segment(segment, UriPath.slash(this));\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"UriPath\").write(46/*'.'*/).write(\"parse\")\n        .write(40/*'('*/).write(34/*'\"'*/) .display(this).write(34/*'\"'*/).write(41/*')'*/);\n  }\n\n  display(output: Output): void {\n    if (this._string !== void 0) {\n      output = output.write(this._string);\n    } else {\n      super.display(output);\n    }\n  }\n\n  toString(): string {\n    if (this._string === void 0) {\n      this._string = Format.display(this);\n    }\n    return this._string;\n  }\n}\nUri.PathSegment = UriPathSegment;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, Format} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriPath} from \"./UriPath\";\n\n/** @hidden */\nexport class UriPathSlash extends UriPath {\n  /** @hidden */\n  _tail: UriPath;\n  /** @hidden */\n  _string?: string;\n\n  /** @hidden */\n  constructor(tail: UriPath) {\n    super();\n    this._tail = tail;\n  }\n\n  isDefined(): boolean {\n    return true;\n  }\n\n  isAbsolute(): boolean {\n    return true;\n  }\n\n  isRelative(): boolean {\n    return false;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n\n  head(): string {\n    return \"/\";\n  }\n\n  tail(): UriPath {\n    return this._tail;\n  }\n\n  /** @hidden */\n  setTail(tail: UriPath): void {\n    this._tail = tail;\n  }\n\n  /** @hidden */\n  dealias(): UriPath {\n    return new UriPathSlash(this._tail);\n  }\n\n  parent(): UriPath {\n    const tail = this._tail;\n    if (tail.isEmpty()) {\n      return UriPath.empty();\n    } else {\n      const next = tail.tail();\n      if (next.isEmpty()) {\n        return UriPath.slash();\n      } else {\n        return new UriPathSlash(tail.parent());\n      }\n    }\n  }\n\n  base(): UriPath {\n    const tail = this._tail;\n    if (tail.isEmpty()) {\n      return this;\n    } else {\n      return new UriPathSlash(tail.base());\n    }\n  }\n\n  prependedSegment(segment: string): UriPath {\n    return UriPath.segment(segment, this);\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"UriPath\").write(46/*'.'*/).write(\"parse\")\n        .write(40/*'('*/).write(34/*'\"'*/) .display(this).write(34/*'\"'*/).write(41/*')'*/);\n  }\n\n  display(output: Output): void {\n    if (this._string !== void 0) {\n      output = output.write(this._string);\n    } else {\n      super.display(output);\n    }\n  }\n\n  toString(): string {\n    if (this._string === void 0) {\n      this._string = Format.display(this);\n    }\n    return this._string;\n  }\n}\nUri.PathSlash = UriPathSlash;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {AnyUriPath, UriPath} from \"./UriPath\";\n\n/** @hidden */\nexport class UriPathEmpty extends UriPath {\n  /** @hidden */\n  constructor() {\n    super();\n  }\n\n  isDefined(): boolean {\n    return false;\n  }\n\n  isAbsolute(): boolean {\n    return false;\n  }\n\n  isRelative(): boolean {\n    return true;\n  }\n\n  isEmpty(): boolean {\n    return true;\n  }\n\n  head(): string {\n    throw new Error(\"Empty UriPath\");\n  }\n\n  tail(): UriPath {\n    throw new Error(\"Empty UriPath\");\n  }\n\n  /** @hidden */\n  setTail(tail: UriPath): void {\n    throw new Error(\"Empty UriPath\");\n  }\n\n  /** @hidden */\n  dealias(): UriPath {\n    return this;\n  }\n\n  parent(): UriPath {\n    return this;\n  }\n\n  base(): UriPath {\n    return this;\n  }\n\n  appended(...components: AnyUriPath[]): UriPath {\n    return UriPath.from.apply(void 0, arguments);\n  }\n\n  appendedSlash(): UriPath {\n    return UriPath.slash();\n  }\n\n  appendedSegment(segment: string): UriPath {\n    return UriPath.segment(segment);\n  }\n\n  prepended(...components: AnyUriPath[]): UriPath {\n    return UriPath.from.apply(void 0, arguments);\n  }\n\n  prependedSlash(): UriPath {\n    return UriPath.slash();\n  }\n\n  prependedSegment(segment: string): UriPath {\n    return UriPath.segment(segment);\n  }\n\n  merge(that: UriPath): UriPath {\n    return that;\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"UriPath\").write(46/*'.'*/).write(\"empty\")\n        .write(40/*'('*/).write(41/*')'*/);\n  }\n\n  display(output: Output): void {\n    // nop\n  }\n\n  toString(): string {\n    return \"\";\n  }\n}\nUri.PathEmpty = UriPathEmpty;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Builder} from \"@swim/util\";\nimport {Uri} from \"./Uri\";\nimport {AnyUriPath, UriPath} from \"./UriPath\";\n\nexport class UriPathBuilder implements Builder<string, UriPath> {\n  /** @hidden */\n  _first: UriPath;\n  /** @hidden */\n  _last: UriPath | null;\n  /** @hidden */\n  _size: number;\n  /** @hidden */\n  _aliased: number;\n\n  constructor() {\n    this._first = Uri.Path.empty();\n    this._last = null;\n    this._size = 0;\n    this._aliased = 0;\n  }\n\n  isEmpty(): boolean {\n    return this._size === 0;\n  }\n\n  push(...components: AnyUriPath[]): void {\n    for (let i = 0; i < components.length; i += 1) {\n      const component = components[i];\n      if (component instanceof Uri.Path) {\n        this.addPath(component);\n      } else if (Array.isArray(component)) {\n        this.push.apply(this, component);\n      } else if (component === \"/\") {\n        this.addSlash();\n      } else {\n        this.addSegment(component);\n      }\n    }\n  }\n\n  bind(): UriPath {\n    this._aliased = 0;\n    return this._first;\n  }\n\n  addSlash(): void {\n    const tail = Uri.Path.slash().dealias();\n    const size = this._size;\n    if (size === 0) {\n      this._first = tail;\n    } else {\n      this.dealias(size - 1).setTail(tail);\n    }\n    this._last = tail;\n    this._size = size + 1;\n    this._aliased += 1;\n  }\n\n  addSegment(segment: string): void {\n    const tail = Uri.Path.segment(segment, Uri.Path.empty());\n    const size = this._size;\n    if (size === 0) {\n      this._first = tail;\n    } else {\n      this.dealias(size - 1).setTail(tail);\n    }\n    this._last = tail;\n    this._size = size + 1;\n    this._aliased += 1;\n  }\n\n  addPath(path: UriPath): void {\n    if (!path.isEmpty()) {\n      let size = this._size;\n      if (size === 0) {\n        this._first = path;\n      } else {\n        this.dealias(size - 1).setTail(path);\n      }\n      size += 1;\n      do {\n        const tail = path.tail();\n        if (!tail.isEmpty()) {\n          path = tail;\n          size += 1;\n        } else {\n          break;\n        }\n      } while (true);\n      this._last = path;\n      this._size = size;\n    }\n  }\n\n  pop(): UriPath {\n    const size = this._size;\n    const aliased = this._aliased;\n    if (size === 0) {\n      throw new Error(\"Empty UriPath\");\n    } else if (size === 1) {\n      const first = this._first;\n      this._first = first.tail();\n      if (first.tail().isEmpty()) {\n        this._last = null;\n      }\n      this._size = size - 1;\n      if (aliased > 0) {\n        this._aliased = aliased - 1;\n      }\n      return first;\n    } else {\n      const last = this.dealias(size - 2);\n      last.setTail(Uri.Path.empty());\n      this._last = last;\n      this._size = size - 1;\n      this._aliased = aliased - 1;\n      return last.tail();\n    }\n  }\n\n  /** @hidden */\n  dealias(n: number): UriPath {\n    let i = 0;\n    let xi = null as UriPath | null;\n    let xs = this._first;\n    if (this._aliased <= n) {\n      while (i < this._aliased) {\n        xi = xs;\n        xs = xs.tail();\n        i += 1;\n      }\n      while (i <= n) {\n        const xn = xs.dealias();\n        if (i === 0) {\n          this._first = xn;\n        } else {\n          xi!.setTail(xn);\n        }\n        xi = xn;\n        xs = xs.tail();\n        i += 1;\n      }\n      if (i === this._size) {\n        this._last = xi;\n      }\n      this._aliased = i;\n    } else if (n === 0) {\n      xi = this._first;\n    } else if (n === this._size - 1) {\n      xi = this._last;\n    } else {\n      while (i <= n) {\n        xi = xs;\n        xs = xs.tail();\n        i += 1;\n      }\n    }\n    return xi!;\n  }\n}\nUri.PathBuilder = UriPathBuilder;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Comparable, HashCode, Murmur3, HashGenCacheSet} from \"@swim/util\";\nimport {Output, Debug, Display} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriQueryBuilder} from \"./UriQueryBuilder\";\n\nexport type AnyUriQuery = UriQuery | {[key: string]: string} | string;\n\nexport abstract class UriQuery implements Comparable<UriQuery>, HashCode, Debug, Display {\n  /** @hidden */\n  _hashCode?: number;\n\n  abstract isDefined(): boolean;\n\n  abstract isEmpty(): boolean;\n\n  get length(): number {\n    let n = 0;\n    let query = this as UriQuery;\n    while (!query.isEmpty()) {\n      n += 1;\n      query = query.tail();\n    }\n    return n;\n  }\n\n  abstract head(): [string | null, string];\n\n  abstract key(): string | null;\n\n  abstract value(): string;\n\n  abstract tail(): UriQuery;\n\n  /** @hidden */\n  abstract setTail(tail: UriQuery): void;\n\n  /** @hidden */\n  abstract dealias(): UriQuery;\n\n  has(key: string): boolean {\n    let query = this as UriQuery;\n    while (!query.isEmpty()) {\n      if (key === query.key()) {\n        return true;\n      }\n      query = query.tail();\n    }\n    return false;\n  }\n\n  get(key: string): string | undefined {\n    let query = this as UriQuery;\n    while (!query.isEmpty()) {\n      if (key === query.key()) {\n        return query.value();\n      }\n      query = query.tail();\n    }\n    return void 0;\n  }\n\n  updated(key: string, value: string): UriQuery {\n    let query = this as UriQuery;\n    const builder = new Uri.QueryBuilder();\n    let updated = false;\n    while (!query.isEmpty()) {\n      if (key === query.key()) {\n        builder.addParam(key, value);\n        updated = true;\n      } else {\n        builder.addParam(query.key(), query.value());\n      }\n      query = query.tail();\n    }\n    if (!updated) {\n      builder.addParam(key, value);\n    }\n    return builder.bind();\n  }\n\n  removed(key: string): UriQuery {\n    let query = this as UriQuery;\n    const builder = new Uri.QueryBuilder();\n    let updated = false;\n    while (!query.isEmpty()) {\n      if (key === query.key()) {\n        updated = true;\n      } else {\n        builder.addParam(query.key(), query.value());\n      }\n      query = query.tail();\n    }\n    if (updated) {\n      return builder.bind();\n    } else {\n      return this;\n    }\n  }\n\n  appended(key: string | null, value: string): UriQuery;\n  appended(params: AnyUriQuery): UriQuery;\n  appended(key: AnyUriQuery | null, value?: string): UriQuery {\n    const builder = new Uri.QueryBuilder();\n    builder.addQuery(this);\n    builder.add(key as any, value as any);\n    return builder.bind();\n  }\n\n  prepended(key: string | null, value: string): UriQuery;\n  prepended(params: AnyUriQuery): UriQuery;\n  prepended(key: AnyUriQuery | null, value?: string): UriQuery {\n    const builder = new Uri.QueryBuilder();\n    builder.add(key as any, value as any);\n    builder.addQuery(this);\n    return builder.bind();\n  }\n\n  toAny(params?: {[key: string]: string}): {[key: string]: string} | undefined {\n    if (this.isDefined()) {\n      params = params || {};\n      let query = this as UriQuery;\n      let i = 0;\n      while (!query.isEmpty()) {\n        const key = query.key();\n        if (key !== null) {\n          params[key] = query.value();\n        } else {\n          params[\"$\" + i] = query.value();\n        }\n        query = query.tail();\n        i += 1;\n      }\n    }\n    return params;\n  }\n\n  compareTo(that: UriQuery): 0 | 1 | -1 {\n    const order = this.toString().localeCompare(that.toString());\n    return order < 0 ? -1 : order > 0 ? 1 : 0;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof UriQuery) {\n      return this.toString() === that.toString();\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    if (this._hashCode === void 0) {\n      this._hashCode = Murmur3.hash(this.toString());\n    }\n    return this._hashCode;\n  }\n\n  abstract debug(output: Output): void;\n\n  display(output: Output): void {\n    let query = this as UriQuery;\n    let first = true;\n    while (!query.isEmpty()) {\n      if (!first) {\n        output = output.write(38/*'&'*/);\n      } else {\n        first = false;\n      }\n      const key = query.key();\n      if (key !== null) {\n        Uri.writeParam(key, output);\n        output = output.write(61/*'='*/);\n      }\n      Uri.writeQuery(query.value(), output);\n      query = query.tail();\n    }\n  }\n\n  abstract toString(): string;\n\n  private static _undefined: UriQuery;\n\n  private static _keyCache: HashGenCacheSet<string>;\n\n  static builder(): UriQueryBuilder {\n    return new Uri.QueryBuilder();\n  }\n\n  static undefined(): UriQuery {\n    if (UriQuery._undefined === void 0) {\n      UriQuery._undefined = new Uri.QueryUndefined();\n    }\n    return UriQuery._undefined;\n  }\n\n  static param(value: string, tail?: UriQuery): UriQuery;\n  static param(key: string | null, value: string, tail?: UriQuery): UriQuery;\n  static param(key: string | null, value?: UriQuery | string, tail?: UriQuery): UriQuery {\n    if (tail === void 0) {\n      tail = value as UriQuery | undefined;\n      value = key!;\n      key = null;\n    } else if (key !== null) {\n      key = this.cacheKey(key);\n    }\n    if (tail === void 0) {\n      tail = UriQuery.undefined();\n    }\n    return new Uri.QueryParam(key, value as string, tail);\n  }\n\n  static from(key: string | null, value: string): UriQuery;\n  static from(params: AnyUriQuery): UriQuery;\n  static from(key: AnyUriQuery | null, value?: string): UriQuery {\n    const builder = new Uri.QueryBuilder();\n    builder.add(key as any, value as any);\n    return builder.bind();\n  }\n\n  static fromAny(query: AnyUriQuery | null | undefined): UriQuery {\n    if (query === null || query === void 0) {\n      return UriQuery.undefined();\n    } else if (query instanceof UriQuery) {\n      return query;\n    } else if (typeof query === \"object\") {\n      const builder = new Uri.QueryBuilder();\n      builder.add(query);\n      return builder.bind();\n    } else if (typeof query === \"string\") {\n      return UriQuery.parse(query);\n    } else {\n      throw new TypeError(\"\" + query);\n    }\n  }\n\n  static parse(string: string): UriQuery {\n    return Uri.standardParser().parseQueryString(string);\n  }\n\n  /** @hidden */\n  static keyCache(): HashGenCacheSet<string> {\n    if (UriQuery._keyCache === void 0) {\n      const keyCacheSize = 64;\n      UriQuery._keyCache = new HashGenCacheSet<string>(keyCacheSize);\n    }\n    return UriQuery._keyCache;\n  }\n\n  /** @hidden */\n  static cacheKey(key: string): string {\n    if (key.length <= 32) {\n      return UriQuery.keyCache().put(key);\n    } else {\n      return key;\n    }\n  }\n}\nUri.Query = UriQuery;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output, Format} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriQuery} from \"./UriQuery\";\n\n/** @hidden */\nexport class UriQueryParam extends UriQuery {\n  /** @hidden */\n  readonly _key: string | null;\n  /** @hidden */\n  _value: string;\n  /** @hidden */\n  _tail: UriQuery;\n  /** @hidden */\n  _string?: string;\n\n  constructor(key: string | null, value: string, tail: UriQuery) {\n    super();\n    this._key = key;\n    this._value = value;\n    this._tail = tail;\n  }\n\n  isDefined(): boolean {\n    return true;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n\n  head(): [string | null, string] {\n    return [this._key, this._value];\n  }\n\n  key(): string | null {\n    return this._key;\n  }\n\n  value(): string {\n    return this._value;\n  }\n\n  tail(): UriQuery {\n    return this._tail;\n  }\n\n  /** @hidden */\n  setTail(tail: UriQuery): void {\n    this._tail = tail;\n  }\n\n  /** @hidden */\n  dealias(): UriQuery {\n    return new UriQueryParam(this._key, this._value, this._tail);\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"UriQuery\").write(46/*'.'*/).write(\"parse\")\n        .write(40/*'('*/).write(34/*'\"'*/) .display(this).write(34/*'\"'*/).write(41/*')'*/);\n  }\n\n  display(output: Output): void {\n    if (this._string !== void 0) {\n      output = output.write(this._string);\n    } else {\n      super.display(output);\n    }\n  }\n\n  toString(): string {\n    if (this._string === void 0) {\n      this._string = Format.display(this);\n    }\n    return this._string;\n  }\n}\nUri.QueryParam = UriQueryParam;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Output} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {AnyUriQuery, UriQuery} from \"./UriQuery\";\n\n/** @hidden */\nexport class UriQueryUndefined extends UriQuery {\n  isDefined(): boolean {\n    return false;\n  }\n\n  isEmpty(): boolean {\n    return true;\n  }\n\n  head(): [string | null, string] {\n    throw new Error(\"Undefined Query\");\n  }\n\n  key(): string | null {\n    throw new Error(\"Undefined Query\");\n  }\n\n  value(): string {\n    throw new Error(\"Undefined Query\");\n  }\n\n  tail(): UriQuery {\n    throw new Error(\"Undefined Query\");\n  }\n\n  /** @hidden */\n  setTail(tail: UriQuery): void {\n    throw new Error(\"Undefined Query\");\n  }\n\n  /** @hidden */\n  dealias(): UriQuery {\n    return this;\n  }\n\n  updated(key: string, value: string): UriQuery {\n    return UriQuery.param(key, value, this);\n  }\n\n  removed(key: string): UriQuery {\n    return this;\n  }\n\n  appended(key: string | null, value: string): UriQuery;\n  appended(params: AnyUriQuery): UriQuery;\n  appended(key: AnyUriQuery | null, value?: string): UriQuery {\n    return UriQuery.from(key as any, value as any);\n  }\n\n  prepended(key: string | null, value: string): UriQuery;\n  prepended(params: AnyUriQuery): UriQuery;\n  prepended(key: AnyUriQuery | null, value?: string): UriQuery {\n    return UriQuery.from(key as any, value as any);\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"UriQuery\").write(46/*'.'*/).write(\"undefined\")\n        .write(40/*'('*/).write(41/*')'*/);\n  }\n\n  display(output: Output): void {\n    // nop\n  }\n\n  toString(): string {\n    return \"\";\n  }\n}\nUri.QueryUndefined = UriQueryUndefined;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {PairBuilder} from \"@swim/util\";\nimport {Uri} from \"./Uri\";\nimport {AnyUriQuery, UriQuery} from \"./UriQuery\";\n\nexport class UriQueryBuilder implements PairBuilder<string | null, string, UriQuery> {\n  /** @hidden */\n  _first: UriQuery;\n  /** @hidden */\n  _last: UriQuery | null;\n  /** @hidden */\n  _size: number;\n  /** @hidden */\n  _aliased: number;\n\n  constructor() {\n    this._first = Uri.Query.undefined();\n    this._last = null;\n    this._size = 0;\n    this._aliased = 0;\n  }\n\n  isEmpty(): boolean {\n    return this._size === 0;\n  }\n\n  add(key: string | null, value: string): void;\n  add(params: AnyUriQuery): void;\n  add(key: AnyUriQuery | null, value?: string): void {\n    if (value !== void 0) {\n      this.addParam(key as string | null, value);\n    } else if (typeof key === \"string\") {\n      this.addParam(null, key);\n    } else if (key instanceof Uri.Query) {\n      this.addQuery(key);\n    } else {\n      const params = key!;\n      for (const k in params) {\n        let key = k as string | null;\n        const value = params[k];\n        if (k.charCodeAt(0) === 36/*'$'*/) {\n          key = null;\n        }\n        this.addParam(key, value);\n      }\n    }\n  }\n\n  bind(): UriQuery {\n    this._aliased = 0;\n    return this._first;\n  }\n\n  addParam(value: string): void;\n  addParam(key: string | null, value: string): void;\n  addParam(key: string | null, value?: string): void {\n    if (value === void 0) {\n      value = key!;\n      key = null;\n    }\n    const tail = Uri.Query.param(key, value, Uri.Query.undefined());\n    const size = this._size;\n    if (size === 0) {\n      this._first = tail;\n    } else {\n      this.dealias(size - 1).setTail(tail);\n    }\n    this._last = tail;\n    this._size = size + 1;\n    this._aliased += 1;\n  }\n\n  addQuery(query: UriQuery): void {\n    if (!query.isEmpty()) {\n      let size = this._size;\n      if (size === 0) {\n        this._first = query;\n      } else {\n        this.dealias(size - 1).setTail(query);\n      }\n      size += 1;\n      do {\n        const tail = query.tail();\n        if (!tail.isEmpty()) {\n          query = tail;\n          size += 1;\n        } else {\n          break;\n        }\n      } while (true);\n      this._last = query;\n      this._size = size;\n    }\n  }\n\n  /** @hidden */\n  dealias(n: number): UriQuery {\n    let i = 0;\n    let xi = null as UriQuery | null;\n    let xs = this._first;\n    if (this._aliased <= n) {\n      while (i < this._aliased) {\n        xi = xs;\n        xs = xs.tail();\n        i += 1;\n      }\n      while (i <= n) {\n        const xn = xs.dealias();\n        if (i === 0) {\n          this._first = xn;\n        } else {\n          xi!.setTail(xn);\n        }\n        xi = xn;\n        xs = xs.tail();\n        i += 1;\n      }\n      if (i === this._size) {\n        this._last = xi;\n      }\n      this._aliased = i;\n    } else if (n === 0) {\n      xi = this._first;\n    } else if (n === this._size - 1) {\n      xi = this._last;\n    } else {\n      while (i <= n) {\n        xi = xs;\n        xs = xs.tail();\n        i += 1;\n      }\n    }\n    return xi!;\n  }\n}\nUri.QueryBuilder = UriQueryBuilder;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Comparable, HashCode, Murmur3, HashGenCacheMap} from \"@swim/util\";\nimport {Output, Format, Debug, Display} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\n\nexport type AnyUriFragment = UriFragment | string;\n\nexport class UriFragment implements Comparable<UriFragment>, HashCode, Debug, Display {\n  /** @hidden */\n  readonly _identifier: string | null;\n  /** @hidden */\n  _string?: string;\n\n  /** @hidden */\n  constructor(identifier: string | null) {\n    this._identifier = identifier;\n  }\n\n  isDefined(): boolean {\n    return this._identifier !== null;\n  }\n\n  identifier(): string | null {\n    return this._identifier;\n  }\n\n  toAny(): string | undefined {\n    return this._identifier !== null ? this._identifier : void 0;\n  }\n\n  compareTo(that: UriFragment): 0 | 1 | -1 {\n    const order = this.toString().localeCompare(that.toString());\n    return order < 0 ? -1 : order > 0 ? 1 : 0;\n  }\n\n  equals(that: unknown): boolean {\n    if (this === that) {\n      return true;\n    } else if (that instanceof UriFragment) {\n      return this._identifier === that._identifier;\n    }\n    return false;\n  }\n\n  hashCode(): number {\n    return Murmur3.hash(this._identifier);\n  }\n\n  debug(output: Output): void {\n    output = output.write(\"UriFragment\").write(46/*'.'*/);\n    if (this.isDefined()) {\n      output = output.write(\"parse\").write(40/*'('*/).write(34/*'\"'*/).display(this).write(34/*'\"'*/).write(41/*')'*/);\n    } else {\n      output = output.write(\"undefined\").write(40/*'('*/).write(41/*')'*/);\n    }\n  }\n\n  display(output: Output): void {\n    if (this._string !== void 0) {\n      output = output.write(this._string);\n    } else if (this._identifier !== null) {\n      Uri.writeFragment(this._identifier, output);\n    }\n  }\n\n  toString(): string {\n    if (this._string == null) {\n      this._string = Format.display(this);\n    }\n    return this._string;\n  }\n\n  private static _undefined?: UriFragment;\n\n  private static _cache?: HashGenCacheMap<string, UriFragment>;\n\n  static undefined(): UriFragment {\n    if (UriFragment._undefined === void 0) {\n      UriFragment._undefined = new UriFragment(null);\n    }\n    return UriFragment._undefined;\n  }\n\n  static from(identifier: string | null): UriFragment {\n    if (identifier !== null) {\n      const cache = UriFragment.cache();\n      const fragment = cache.get(identifier);\n      if (fragment) {\n        return fragment;\n      } else {\n        return cache.put(identifier, new UriFragment(identifier));\n      }\n    } else {\n      return UriFragment.undefined();\n    }\n  }\n\n  static fromAny(fragment: AnyUriFragment | null | undefined): UriFragment {\n    if (fragment === null || fragment === void 0) {\n      return UriFragment.undefined();\n    } else if (fragment instanceof UriFragment) {\n      return fragment;\n    } else if (typeof fragment === \"string\") {\n      return UriFragment.parse(fragment);\n    } else {\n      throw new TypeError(\"\" + fragment);\n    }\n  }\n\n  static parse(string: string): UriFragment {\n    return Uri.standardParser().parseFragmentString(string);\n  }\n\n  /** @hidden */\n  static cache(): HashGenCacheMap<string, UriFragment> {\n    if (UriFragment._cache === void 0) {\n      const cacheSize = 32;\n      UriFragment._cache = new HashGenCacheMap<string, UriFragment>(cacheSize);\n    }\n    return UriFragment._cache;\n  }\n}\nUri.Fragment = UriFragment;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser, Diagnostic, Unicode} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriScheme} from \"./UriScheme\";\nimport {UriAuthority} from \"./UriAuthority\";\nimport {UriUser} from \"./UriUser\";\nimport {UriHost} from \"./UriHost\";\nimport {UriPort} from \"./UriPort\";\nimport {UriPath} from \"./UriPath\";\nimport {UriPathBuilder} from \"./UriPathBuilder\";\nimport {UriQuery} from \"./UriQuery\";\nimport {UriQueryBuilder} from \"./UriQueryBuilder\";\nimport {UriFragment} from \"./UriFragment\";\nimport {UriAbsoluteParser} from \"./UriAbsoluteParser\";\nimport {UriSchemeParser} from \"./UriSchemeParser\";\nimport {UriAuthorityParser} from \"./UriAuthorityParser\";\nimport {UriUserParser} from \"./UriUserParser\";\nimport {UriHostParser} from \"./UriHostParser\";\nimport {UriHostAddressParser} from \"./UriHostAddressParser\";\nimport {UriHostLiteralParser} from \"./UriHostLiteralParser\";\nimport {UriPortParser} from \"./UriPortParser\";\nimport {UriPathParser} from \"./UriPathParser\";\nimport {UriQueryParser} from \"./UriQueryParser\";\nimport {UriFragmentParser} from \"./UriFragmentParser\";\n\nexport class UriParser {\n  absolute(scheme?: UriScheme, authority?: UriAuthority, path?: UriPath,\n           query?: UriQuery, fragment?: UriFragment): Uri {\n    return Uri.from(scheme, authority, path, query, fragment);\n  }\n\n  scheme(name: string): UriScheme {\n    return Uri.Scheme.from(name);\n  }\n\n  authority(user?: UriUser, host?: UriHost, port?: UriPort): UriAuthority {\n    return Uri.Authority.from(user, host, port);\n  }\n\n  user(username: string | null, password?: string | null): UriUser {\n    return Uri.User.from(username, password);\n  }\n\n  hostName(address: string): UriHost {\n    return Uri.Host.from(address);\n  }\n\n  hostIPv4(address: string): UriHost {\n    return Uri.Host.ipv4(address);\n  }\n\n  hostIPv6(address: string): UriHost {\n    return Uri.Host.ipv6(address);\n  }\n\n  port(number: number): UriPort {\n    return Uri.Port.from(number);\n  }\n\n  pathEmpty(): UriPath {\n    return Uri.Path.empty();\n  }\n\n  pathBuilder(): UriPathBuilder {\n    return new Uri.PathBuilder();\n  }\n\n  queryBuilder(): UriQueryBuilder {\n    return new Uri.QueryBuilder();\n  }\n\n  fragment(identifier: string | null): UriFragment {\n    return Uri.Fragment.from(identifier);\n  }\n\n  absoluteParser(): Parser<Uri> {\n    return new UriParser.AbsoluteParser(this);\n  }\n\n  parseAbsolute(input: Input): Parser<Uri> {\n    return UriParser.AbsoluteParser.parse(input, this);\n  }\n\n  parseAbsoluteString(string: string): Uri {\n    const input = Unicode.stringInput(string);\n    let parser = this.parseAbsolute(input);\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  schemeParser(): Parser<UriScheme> {\n    return new UriParser.SchemeParser(this);\n  }\n\n  parseScheme(input: Input): Parser<UriScheme> {\n    return UriParser.SchemeParser.parse(input, this);\n  }\n\n  parseSchemeString(string: string): UriScheme {\n    const input = Unicode.stringInput(string);\n    let parser = this.parseScheme(input);\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  authorityParser(): Parser<UriAuthority> {\n    return new UriParser.AuthorityParser(this);\n  }\n\n  parseAuthority(input: Input): Parser<UriAuthority> {\n    return UriParser.AuthorityParser.parse(input, this);\n  }\n\n  parseAuthorityString(string: string): UriAuthority {\n    const input = Unicode.stringInput(string);\n    let parser = this.parseAuthority(input);\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  userParser(): Parser<UriUser> {\n    return new UriParser.UserParser(this);\n  }\n\n  parseUser(input: Input): Parser<UriUser> {\n    return UriParser.UserParser.parse(input, this);\n  }\n\n  parseUserString(string: string): UriUser {\n    const input = Unicode.stringInput(string);\n    let parser = this.parseUser(input);\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  hostParser(): Parser<UriHost> {\n    return new UriParser.HostParser(this);\n  }\n\n  parseHost(input: Input): Parser<UriHost> {\n    return UriParser.HostParser.parse(input, this);\n  }\n\n  parseHostString(string: string): UriHost {\n    const input = Unicode.stringInput(string);\n    let parser = this.parseHost(input);\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  hostAddressParser(): Parser<UriHost> {\n    return new UriParser.HostAddressParser(this);\n  }\n\n  parseHostAddress(input: Input): Parser<UriHost> {\n    return UriParser.HostAddressParser.parse(input, this);\n  }\n\n  hostLiteralParser(): Parser<UriHost> {\n    return new UriParser.HostLiteralParser(this);\n  }\n\n  parseHostLiteral(input: Input): Parser<UriHost> {\n    return UriParser.HostLiteralParser.parse(input, this);\n  }\n\n  portParser(): Parser<UriPort> {\n    return new UriParser.PortParser(this);\n  }\n\n  parsePort(input: Input): Parser<UriPort> {\n    return UriParser.PortParser.parse(input, this);\n  }\n\n  parsePortString(string: string): UriPort {\n    const input = Unicode.stringInput(string);\n    let parser = this.parsePort(input);\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  pathParser(builder?: UriPathBuilder): Parser<UriPath> {\n    return new UriParser.PathParser(this, builder);\n  }\n\n  parsePath(input: Input, builder?: UriPathBuilder): Parser<UriPath> {\n    return UriParser.PathParser.parse(input, this, builder);\n  }\n\n  parsePathString(string: string): UriPath {\n    const input = Unicode.stringInput(string);\n    let parser = this.parsePath(input);\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  queryParser(builder?: UriQueryBuilder): Parser<UriQuery> {\n    return new UriParser.QueryParser(this, builder);\n  }\n\n  parseQuery(input: Input, builder?: UriQueryBuilder): Parser<UriQuery> {\n    return UriParser.QueryParser.parse(input, this, builder);\n  }\n\n  parseQueryString(string: string): UriQuery {\n    const input = Unicode.stringInput(string);\n    let parser = this.parseQuery(input);\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  fragmentParser(): Parser<UriFragment> {\n    return new UriParser.FragmentParser(this);\n  }\n\n  parseFragment(input: Input): Parser<UriFragment> {\n    return UriParser.FragmentParser.parse(input, this);\n  }\n\n  parseFragmentString(string: string): UriFragment {\n    const input = Unicode.stringInput(string);\n    let parser = this.parseFragment(input);\n    if (input.isCont() && !parser.isError()) {\n      parser = Parser.error(Diagnostic.unexpected(input));\n    }\n    return parser.bind();\n  }\n\n  // Forward type declarations\n  /** @hidden */\n  static AbsoluteParser: typeof UriAbsoluteParser; // defined by UriAbsoluteParser\n  /** @hidden */\n  static SchemeParser: typeof UriSchemeParser; // defined by UriSchemeParser\n  /** @hidden */\n  static AuthorityParser: typeof UriAuthorityParser; // defined by UriAuthorityParser\n  /** @hidden */\n  static UserParser: typeof UriUserParser; // defined by UriUserParser\n  /** @hidden */\n  static HostParser: typeof UriHostParser; // defined by UriHostParser\n  /** @hidden */\n  static HostAddressParser: typeof UriHostAddressParser; // defined by UriHostAddressParser\n  /** @hidden */\n  static HostLiteralParser: typeof UriHostLiteralParser; // defined by UriHostLiteralParser\n  /** @hidden */\n  static PortParser: typeof UriPortParser; // defined by UriPortParser\n  /** @hidden */\n  static PathParser: typeof UriPathParser; // defined by UriPathParser\n  /** @hidden */\n  static QueryParser: typeof UriQueryParser; // defined by UriQueryParser\n  /** @hidden */\n  static FragmentParser: typeof UriFragmentParser; // defined by UriFragmentParser\n}\nUri.Parser = UriParser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser, Diagnostic} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriScheme} from \"./UriScheme\";\nimport {UriAuthority} from \"./UriAuthority\";\nimport {UriPath} from \"./UriPath\";\nimport {UriQuery} from \"./UriQuery\";\nimport {UriFragment} from \"./UriFragment\";\nimport {UriParser} from \"./UriParser\";\n\n/** @hidden */\nexport class UriAbsoluteParser extends Parser<Uri> {\n  private readonly uri: UriParser;\n  private readonly schemeParser: Parser<UriScheme> | undefined;\n  private readonly authorityParser: Parser<UriAuthority> | undefined;\n  private readonly pathParser: Parser<UriPath> | undefined;\n  private readonly queryParser: Parser<UriQuery> | undefined;\n  private readonly fragmentParser: Parser<UriFragment> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(uri: UriParser, schemeParser?: Parser<UriScheme>,\n              authorityParser?: Parser<UriAuthority>, pathParser?: Parser<UriPath>,\n              queryParser?: Parser<UriQuery>, fragmentParser?: Parser<UriFragment>, step?: number) {\n    super();\n    this.uri = uri;\n    this.schemeParser = schemeParser;\n    this.authorityParser = authorityParser;\n    this.pathParser = pathParser;\n    this.queryParser = queryParser;\n    this.fragmentParser = fragmentParser;\n    this.step = step;\n  }\n\n  feed(input: Input): Parser<Uri> {\n    return UriAbsoluteParser.parse(input, this.uri, this.schemeParser, this.authorityParser,\n                                   this.pathParser, this.queryParser, this.fragmentParser, this.step);\n  }\n\n  static parse(input: Input, uri: UriParser, schemeParser?: Parser<UriScheme>,\n               authorityParser?: Parser<UriAuthority>, pathParser?: Parser<UriPath>,\n               queryParser?: Parser<UriQuery>, fragmentParser?: Parser<UriFragment>,\n               step: number = 1): Parser<Uri> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont()) {\n        const look = input.clone();\n        while (look.isCont() && (c = look.head(), Uri.isSchemeChar(c))) {\n          look.step();\n        }\n        if (look.isCont() && c === 58/*':'*/) {\n          step = 2;\n        } else {\n          step = 3;\n        }\n      } else if (input.isDone()) {\n        step = 3;\n      }\n    }\n    if (step === 2) {\n      if (!schemeParser) {\n        schemeParser = uri.parseScheme(input);\n      } else {\n        schemeParser = schemeParser.feed(input);\n      }\n      if (schemeParser.isDone()) {\n        if (input.isCont() && input.head() === 58/*':'*/) {\n          input = input.step();\n          step = 3;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(58/*':'*/, input));\n        }\n      } else if (schemeParser.isError()) {\n        return schemeParser.asError();\n      }\n    }\n    if (step === 3) {\n      if (input.isCont()) {\n        c = input.head();\n        if (c === 47/*'/'*/) {\n          input = input.step();\n          step = 4;\n        } else if (c === 63/*'?'*/) {\n          input = input.step();\n          step = 7;\n        } else if (c === 35/*'#'*/) {\n          input = input.step();\n          step = 8;\n        } else {\n          step = 6;\n        }\n      } else if (input.isDone()) {\n        return Parser.done(uri.absolute(schemeParser && schemeParser.bind()));\n      }\n    }\n    if (step === 4) {\n      if (input.isCont() && input.head() === 47/*'/'*/) {\n        input = input.step();\n        step = 5;\n      } else if (input.isCont()) {\n        const pathBuilder = uri.pathBuilder();\n        pathBuilder.addSlash();\n        pathParser = uri.parsePath(input, pathBuilder);\n        step = 6;\n      } else if (input.isDone()) {\n        return Parser.done(uri.absolute(schemeParser && schemeParser.bind(),\n                                        void 0,\n                                        Uri.Path.slash()));\n      }\n    }\n    if (step === 5) {\n      if (!authorityParser) {\n        authorityParser = uri.parseAuthority(input);\n      } else {\n        authorityParser = authorityParser.feed(input);\n      }\n      if (authorityParser.isDone()) {\n        if (input.isCont()) {\n          c = input.head();\n          if (c === 63/*'?'*/) {\n            input = input.step();\n            step = 7;\n          } else if (c === 35/*'#'*/) {\n            input = input.step();\n            step = 8;\n          } else {\n            step = 6;\n          }\n        } else if (input.isDone()) {\n          return Parser.done(uri.absolute(schemeParser && schemeParser.bind(),\n                                          authorityParser && authorityParser.bind()));\n        }\n      } else if (authorityParser.isError()) {\n        return authorityParser.asError();\n      }\n    }\n    if (step === 6) {\n      if (!pathParser) {\n        pathParser = uri.parsePath(input);\n      } else {\n        pathParser = pathParser.feed(input);\n      }\n      if (pathParser.isDone()) {\n        if (input.isCont() && input.head() === 63/*'?'*/) {\n          input = input.step();\n          step = 7;\n        } else if (input.isCont() && input.head() === 35/*'#'*/) {\n          input = input.step();\n          step = 8;\n        } else if (!input.isEmpty()) {\n          return Parser.done(uri.absolute(schemeParser && schemeParser.bind(),\n                                          authorityParser && authorityParser.bind(),\n                                          pathParser.bind()));\n        }\n      } else if (pathParser.isError()) {\n        return pathParser.asError();\n      }\n    }\n    if (step === 7) {\n      if (!queryParser) {\n        queryParser = uri.parseQuery(input);\n      } else {\n        queryParser = queryParser.feed(input);\n      }\n      if (queryParser.isDone()) {\n        if (input.isCont() && input.head() === 35/*'#'*/) {\n          input = input.step();\n          step = 8;\n        } else if (!input.isEmpty()) {\n          return Parser.done(uri.absolute(schemeParser && schemeParser.bind(),\n                                          authorityParser && authorityParser.bind(),\n                                          pathParser && pathParser.bind(),\n                                          queryParser.bind()));\n        }\n      } else if (queryParser.isError()) {\n        return queryParser.asError();\n      }\n    }\n    if (step === 8) {\n      if (!fragmentParser) {\n        fragmentParser = uri.parseFragment(input);\n      } else {\n        fragmentParser = fragmentParser.feed(input);\n      }\n      if (fragmentParser.isDone()) {\n        return Parser.done(uri.absolute(schemeParser && schemeParser.bind(),\n                                        authorityParser && authorityParser.bind(),\n                                        pathParser && pathParser.bind(),\n                                        queryParser && queryParser.bind(),\n                                        fragmentParser.bind()));\n      } else if (fragmentParser.isError()) {\n        return fragmentParser.asError();\n      }\n    }\n    return new UriAbsoluteParser(uri, schemeParser, authorityParser, pathParser,\n                                 queryParser, fragmentParser, step);\n  }\n}\nUriParser.AbsoluteParser = UriAbsoluteParser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Utf8} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriScheme} from \"./UriScheme\";\nimport {UriParser} from \"./UriParser\";\n\n/** @hidden */\nexport class UriSchemeParser extends Parser<UriScheme> {\n  private readonly uri: UriParser;\n  private readonly output: Output<string> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(uri: UriParser, output?: Output<string>, step?: number) {\n    super();\n    this.uri = uri;\n    this.output = output;\n    this.step = step;\n  }\n\n  feed(input: Input): Parser<UriScheme> {\n    return UriSchemeParser.parse(input, this.uri, this.output, this.step);\n  }\n\n  static parse(input: Input, uri: UriParser, output?: Output<string>, step: number = 1): Parser<UriScheme> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont() && (c = input.head(), Uri.isAlpha(c))) {\n        input = input.step();\n        output = output || Utf8.decodedString();\n        output = output.write(Uri.toLowerCase(c));\n        step = 2;\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(\"scheme\", input));\n      }\n    }\n    if (step === 2) {\n      while (input.isCont() && (c = input.head(), Uri.isSchemeChar(c))) {\n        input = input.step();\n        output!.write(Uri.toLowerCase(c));\n      }\n      if (!input.isEmpty()) {\n        return Parser.done(uri.scheme(output!.bind()));\n      }\n    }\n    return new UriSchemeParser(uri, output, step);\n  }\n}\nUriParser.SchemeParser = UriSchemeParser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Diagnostic, Parser} from \"@swim/codec\";\nimport {UriAuthority} from \"./UriAuthority\";\nimport {UriUser} from \"./UriUser\";\nimport {UriHost} from \"./UriHost\";\nimport {UriPort} from \"./UriPort\";\nimport {UriParser} from \"./UriParser\";\n\n/** @hidden */\nexport class UriAuthorityParser extends Parser<UriAuthority> {\n  private readonly uri: UriParser;\n  private readonly userParser: Parser<UriUser> | undefined;\n  private readonly hostParser: Parser<UriHost> | undefined;\n  private readonly portParser: Parser<UriPort> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(uri: UriParser, userParser?: Parser<UriUser>, hostParser?: Parser<UriHost>,\n              portParser?: Parser<UriPort>, step?: number) {\n    super();\n    this.uri = uri;\n    this.userParser = userParser;\n    this.hostParser = hostParser;\n    this.portParser = portParser;\n    this.step = step;\n  }\n\n  feed(input: Input): Parser<UriAuthority> {\n    return UriAuthorityParser.parse(input, this.uri, this.userParser, this.hostParser,\n                                    this.portParser, this.step);\n  }\n\n  static parse(input: Input, uri: UriParser, userParser?: Parser<UriUser>, hostParser?: Parser<UriHost>,\n               portParser?: Parser<UriPort>, step: number = 1): Parser<UriAuthority> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont()) {\n        const look = input.clone();\n        while (look.isCont() && (c = look.head(), c !== 64/*'@'*/ && c !== 47/*'/'*/)) {\n          look.step();\n        }\n        if (look.isCont() && c === 64/*'@'*/) {\n          step = 2;\n        } else {\n          step = 3;\n        }\n      } else if (input.isDone()) {\n        step = 3;\n      }\n    }\n    if (step === 2) {\n      if (!userParser) {\n        userParser = uri.parseUser(input);\n      } else {\n        userParser = userParser.feed(input);\n      }\n      if (userParser.isDone()) {\n        if (input.isCont() && input.head() === 64/*'@'*/) {\n          input = input.step();\n          step = 3;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(64/*'@'*/, input));\n        }\n      } else if (userParser.isError()) {\n        return userParser.asError();\n      }\n    }\n    if (step === 3) {\n      if (!hostParser) {\n        hostParser = uri.parseHost(input);\n      } else {\n        hostParser = hostParser.feed(input);\n      }\n      if (hostParser.isDone()) {\n        if (input.isCont() && input.head() === 58/*':'*/) {\n          input = input.step();\n          step = 4;\n        } else if (!input.isEmpty()) {\n          return Parser.done(uri.authority(userParser && userParser.bind(),\n                                           hostParser.bind()));\n        }\n      } else if (hostParser.isError()) {\n        return hostParser.asError();\n      }\n    }\n    if (step === 4) {\n      if (!portParser) {\n        portParser = uri.parsePort(input);\n      } else {\n        portParser = portParser.feed(input);\n      }\n      if (portParser.isDone()) {\n        return Parser.done(uri.authority(userParser && userParser.bind(),\n                                         hostParser!.bind(),\n                                         portParser.bind()));\n      } else if (portParser.isError()) {\n        return portParser.asError();\n      }\n    }\n    return new UriAuthorityParser(uri, userParser, hostParser, portParser, step);\n  }\n}\nUriParser.AuthorityParser = UriAuthorityParser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Base16, Utf8} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriUser} from \"./UriUser\";\nimport {UriParser} from \"./UriParser\";\n\n/** @hidden */\nexport class UriUserParser extends Parser<UriUser> {\n  private readonly uri: UriParser;\n  private readonly usernameOutput: Output<string> | undefined;\n  private readonly passwordOutput: Output<string> | undefined;\n  private readonly c1: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(uri: UriParser, usernameOutput?: Output<string>,\n              passwordOutput?: Output<string>, c1?: number, step?: number) {\n    super();\n    this.uri = uri;\n    this.usernameOutput = usernameOutput;\n    this.passwordOutput = passwordOutput;\n    this.c1 = c1;\n    this.step = step;\n  }\n\n  feed(input: Input): Parser<UriUser> {\n    return UriUserParser.parse(input, this.uri, this.usernameOutput,\n                               this.passwordOutput, this.c1, this.step);\n  }\n\n  static parse(input: Input, uri: UriParser, usernameOutput?: Output<string>,\n               passwordOutput?: Output<string>, c1: number = 0, step: number = 1): Parser<UriUser> {\n    let c = 0;\n    do {\n      if (step === 1) {\n        usernameOutput = usernameOutput || Utf8.decodedString();\n        while (input.isCont() && (c = input.head(), Uri.isUserChar(c))) {\n          input = input.step();\n          usernameOutput!.write(c);\n        }\n        if (input.isCont() && c === 58/*':'*/) {\n          input = input.step();\n          step = 4;\n        } else if (input.isCont() && c === 37/*'%'*/) {\n          input = input.step();\n          step = 2;\n        } else if (!input.isEmpty()) {\n          return Parser.done(uri.user(usernameOutput.bind()));\n        }\n      }\n      if (step === 2) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          c1 = c;\n          step = 3;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      if (step === 3) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          usernameOutput!.write((Base16.decodeDigit(c1) << 4) | Base16.decodeDigit(c));\n          c1 = 0;\n          step = 1;\n          continue;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      if (step === 4) {\n        passwordOutput = passwordOutput || Utf8.decodedString();\n        while (input.isCont() && (c = input.head(), Uri.isUserInfoChar(c))) {\n          input = input.step();\n          passwordOutput.write(c);\n        }\n        if (input.isCont() && c === 37/*'%'*/) {\n          input = input.step();\n          step = 5;\n        } else if (!input.isEmpty()) {\n          return Parser.done(uri.user(usernameOutput!.bind(), passwordOutput.bind()));\n        }\n      }\n      if (step === 5) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          c1 = c;\n          step = 6;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      if (step === 6) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          passwordOutput!.write((Base16.decodeDigit(c1) << 4) | Base16.decodeDigit(c));\n          c1 = 0;\n          step = 4;\n          continue;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      break;\n    } while (true);\n    return new UriUserParser(uri, usernameOutput, passwordOutput, c1, step);\n  }\n}\nUriParser.UserParser = UriUserParser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser} from \"@swim/codec\";\nimport {UriHost} from \"./UriHost\";\nimport {UriParser} from \"./UriParser\";\n\n/** @hidden */\nexport class UriHostParser extends Parser<UriHost> {\n  private readonly uri: UriParser;\n\n  constructor(uri: UriParser) {\n    super();\n    this.uri = uri;\n  }\n\n  feed(input: Input): Parser<UriHost> {\n    return UriHostParser.parse(input, this.uri);\n  }\n\n  static parse(input: Input, uri: UriParser): Parser<UriHost> {\n    if (input.isCont()) {\n      const c = input.head();\n      if (c === 91/*'['*/) {\n        return uri.parseHostLiteral(input);\n      } else {\n        return uri.parseHostAddress(input);\n      }\n    } else if (input.isDone()) {\n      return Parser.done(uri.hostName(\"\"));\n    }\n    return new UriHostParser(uri);\n  }\n}\nUriParser.HostParser = UriHostParser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Base10, Base16, Utf8} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriHost} from \"./UriHost\";\nimport {UriParser} from \"./UriParser\";\n\n/** @hidden */\nexport class UriHostAddressParser extends Parser<UriHost> {\n  private readonly uri: UriParser;\n  private readonly output: Output<string> | undefined;\n  private readonly c1: number | undefined;\n  private readonly x: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(uri: UriParser, output?: Output<string>, c1?: number, x?: number, step?: number) {\n    super();\n    this.uri = uri;\n    this.output = output;\n    this.c1 = c1;\n    this.x = x;\n    this.step = step;\n  }\n\n  feed(input: Input): Parser<UriHost> {\n    return UriHostAddressParser.parse(input, this.uri, this.output, this.c1, this.x, this.step);\n  }\n\n  static parse(input: Input, uri: UriParser, output?: Output<string>,\n               c1: number = 0, x: number = 0, step: number = 1): Parser<UriHost> {\n    let c = 0;\n    output = output || Utf8.decodedString();\n    while (step <= 4) {\n      while (input.isCont() && (c = input.head(), Base10.isDigit(c))) {\n        input = input.step();\n        output = output.write(c);\n        x = 10 * x + Base10.decodeDigit(c);\n      }\n      if (input.isCont()) {\n        if (c === 46/*'.'*/ && step < 4 && x <= 255) {\n          input = input.step();\n          output = output.write(c);\n          x = 0;\n          step += 1;\n        } else if (!Uri.isHostChar(c) && c !== 37/*'%'*/ && step === 4 && x <= 255) {\n          return Parser.done(uri.hostIPv4(output.bind()));\n        } else {\n          x = 0;\n          step = 5;\n          break;\n        }\n      } else if (!input.isEmpty()) {\n        if (step === 4 && x <= 255) {\n          return Parser.done(uri.hostIPv4(output.bind()));\n        } else {\n          return Parser.done(uri.hostName(output.bind()));\n        }\n      } else {\n        break;\n      }\n    }\n    do {\n      if (step === 5) {\n        while (input.isCont() && (c = input.head(), Uri.isHostChar(c))) {\n          input = input.step();\n          output!.write(Uri.toLowerCase(c));\n        }\n        if (input.isCont() && c === 37/*'%'*/) {\n          input = input.step();\n          step = 6;\n        } else if (!input.isEmpty()) {\n          return Parser.done(uri.hostName(output!.bind()));\n        }\n      }\n      if (step === 6) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          c1 = c;\n          step = 7;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      if (step === 7) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          output!.write((Base16.decodeDigit(c1) << 4) | Base16.decodeDigit(c));\n          c1 = 0;\n          step = 5;\n          continue;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      break;\n    } while (true);\n    return new UriHostAddressParser(uri, output, c1, x, step);\n  }\n}\nUriParser.HostAddressParser = UriHostAddressParser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Utf8} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriHost} from \"./UriHost\";\nimport {UriParser} from \"./UriParser\";\n\n/** @hidden */\nexport class UriHostLiteralParser extends Parser<UriHost> {\n  private readonly uri: UriParser;\n  private readonly output: Output<string> | undefined;\n  private readonly step: number | undefined;\n\n  constructor(uri: UriParser, output?: Output<string>, step?: number) {\n    super();\n    this.uri = uri;\n    this.output = output;\n    this.step = step;\n  }\n\n  feed(input: Input): Parser<UriHost> {\n    return UriHostLiteralParser.parse(input, this.uri, this.output, this.step);\n  }\n\n  static parse(input: Input, uri: UriParser, output?: Output<string>, step: number = 1): Parser<UriHost> {\n    let c = 0;\n    if (step === 1) {\n      if (input.isCont() && input.head() === 91/*'['*/) {\n        input = input.step();\n        step = 2;\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(91/*'['*/, input));\n      }\n    }\n    if (step === 2) {\n      output = output || Utf8.decodedString();\n      while (input.isCont() && (c = input.head(), Uri.isHostChar(c) || c === 58/*':'*/)) {\n        input = input.step();\n        output = output.write(Uri.toLowerCase(c));\n      }\n      if (input.isCont() && c === 93/*']'*/) {\n        input = input.step();\n        return Parser.done(uri.hostIPv6(output.bind()));\n      } else if (!input.isEmpty()) {\n        return Parser.error(Diagnostic.expected(93/*']'*/, input));\n      }\n    }\n    return new UriHostLiteralParser(uri, output, step);\n  }\n}\nUriParser.HostLiteralParser = UriHostLiteralParser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Parser, Base10} from \"@swim/codec\";\nimport {UriPort} from \"./UriPort\";\nimport {UriParser} from \"./UriParser\";\n\n/** @hidden */\nexport class UriPortParser extends Parser<UriPort> {\n  private readonly uri: UriParser;\n  private readonly number: number | undefined;\n\n  constructor(uri: UriParser, number?: number) {\n    super();\n    this.uri = uri;\n    this.number = number;\n  }\n\n  feed(input: Input): Parser<UriPort> {\n    return UriPortParser.parse(input, this.uri, this.number);\n  }\n\n  static parse(input: Input, uri: UriParser, number: number = 0): Parser<UriPort> {\n    let c = 0;\n    while (input.isCont() && (c = input.head(), Base10.isDigit(c))) {\n      input = input.step();\n      number = 10 * number + Base10.decodeDigit(c);\n    }\n    if (!input.isEmpty()) {\n      return Parser.done(uri.port(number));\n    }\n    return new UriPortParser(uri, number);\n  }\n}\nUriParser.PortParser = UriPortParser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Base16, Utf8} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriPath} from \"./UriPath\";\nimport {UriPathBuilder} from \"./UriPathBuilder\";\nimport {UriParser} from \"./UriParser\";\n\n/** @hidden */\nexport class UriPathParser extends Parser<UriPath> {\n  private readonly uri: UriParser;\n  private readonly builder: UriPathBuilder | undefined;\n  private readonly output: Output<string> | undefined;\n  private readonly c1: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(uri: UriParser, builder?: UriPathBuilder, output?: Output<string>,\n              c1?: number, step?: number) {\n    super();\n    this.uri = uri;\n    this.builder = builder;\n    this.output = output;\n    this.c1 = c1;\n    this.step = step;\n  }\n\n  feed(input: Input): Parser<UriPath> {\n    return UriPathParser.parse(input, this.uri, this.builder, this.output, this.c1, this.step);\n  }\n\n  static parse(input: Input, uri: UriParser, builder?: UriPathBuilder, output?: Output<string>,\n               c1: number = 0, step: number = 1): Parser<UriPath> {\n    let c = 0;\n    do {\n      if (step === 1) {\n        while (input.isCont() && (c = input.head(), Uri.isPathChar(c))) {\n          output = output || Utf8.decodedString();\n          input = input.step();\n          output = output.write(c);\n        }\n        if (input.isCont() && c === 47/*'/'*/) {\n          input = input.step();\n          builder = builder || uri.pathBuilder();\n          if (output) {\n            builder.addSegment(output.bind());\n            output = void 0;\n          }\n          builder.addSlash();\n          continue;\n        } else if (input.isCont() && c === 37/*'%'*/) {\n          input = input.step();\n          step = 2;\n        } else if (!input.isEmpty()) {\n          if (output) {\n            builder = builder || uri.pathBuilder();\n            builder.addSegment(output.bind());\n          }\n          if (builder) {\n            return Parser.done(builder.bind());\n          } else {\n            return Parser.done(uri.pathEmpty());\n          }\n        }\n      }\n      if (step === 2) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          c1 = c;\n          step = 3;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      if (step === 3) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          output = output || Utf8.decodedString();\n          input = input.step();\n          output = output.write((Base16.decodeDigit(c1) << 4) | Base16.decodeDigit(c));\n          c1 = 0;\n          step = 1;\n          continue;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      break;\n    } while (true);\n    return new UriPathParser(uri, builder, output, c1, step);\n  }\n}\nUriParser.PathParser = UriPathParser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Base16, Utf8} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriQuery} from \"./UriQuery\";\nimport {UriQueryBuilder} from \"./UriQueryBuilder\";\nimport {UriParser} from \"./UriParser\";\n\n/** @hidden */\nexport class UriQueryParser extends Parser<UriQuery> {\n  private readonly uri: UriParser;\n  private readonly builder: UriQueryBuilder | undefined;\n  private readonly keyOutput: Output<string> | undefined;\n  private readonly valueOutput: Output<string> | undefined;\n  private readonly c1: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(uri: UriParser, builder?: UriQueryBuilder, keyOutput?: Output<string>,\n              valueOutput?: Output<string>, c1?: number, step?: number) {\n    super();\n    this.uri = uri;\n    this.builder = builder;\n    this.keyOutput = keyOutput;\n    this.valueOutput = valueOutput;\n    this.c1 = c1;\n    this.step = step;\n  }\n\n  feed(input: Input): Parser<UriQuery> {\n    return UriQueryParser.parse(input, this.uri, this.builder, this.keyOutput,\n                                this.valueOutput, this.c1, this.step);\n  }\n\n  static parse(input: Input, uri: UriParser, builder?: UriQueryBuilder, keyOutput?: Output<string>,\n               valueOutput?: Output<string>, c1: number = 0, step: number = 1): Parser<UriQuery> {\n    let c = 0;\n    do {\n      if (step === 1) {\n        keyOutput = keyOutput || Utf8.decodedString();\n        while (input.isCont() && (c = input.head(), Uri.isParamChar(c))) {\n          input = input.step();\n          keyOutput.write(c);\n        }\n        if (input.isCont() && c === 61/*'='*/) {\n          input = input.step();\n          step = 4;\n        } else if (input.isCont() && c === 38/*'&'*/) {\n          input = input.step();\n          builder = builder || uri.queryBuilder();\n          builder.addParam(keyOutput.bind());\n          keyOutput = void 0;\n          continue;\n        } else if (input.isCont() && c === 37/*'%'*/) {\n          input = input.step();\n          step = 2;\n        } else if (!input.isEmpty()) {\n          builder = builder || uri.queryBuilder();\n          builder.addParam(keyOutput.bind());\n          return Parser.done(builder.bind());\n        }\n      }\n      if (step === 2) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          c1 = c;\n          step = 3;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      if (step === 3) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          keyOutput!.write((Base16.decodeDigit(c1) << 4) | Base16.decodeDigit(c));\n          c1 = 0;\n          step = 1;\n          continue;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      if (step === 4) {\n        valueOutput = valueOutput || Utf8.decodedString();\n        while (input.isCont() && (c = input.head(), Uri.isParamChar(c) || c === 61/*'='*/)) {\n          input = input.step();\n          valueOutput.write(c);\n        }\n        if (input.isCont() && c === 38/*'&'*/) {\n          input = input.step();\n          builder = builder || uri.queryBuilder();\n          builder.addParam(keyOutput!.bind(), valueOutput.bind());\n          keyOutput = void 0;\n          valueOutput = void 0;\n          step = 1;\n          continue;\n        } else if (input.isCont() && c === 38/*'%'*/) {\n          input = input.step();\n          step = 5;\n        } else if (!input.isEmpty()) {\n          builder = builder || uri.queryBuilder();\n          builder.addParam(keyOutput!.bind(), valueOutput.bind());\n          return Parser.done(builder.bind());\n        }\n      }\n      if (step === 5) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          c1 = c;\n          step = 6;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      if (step === 6) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          valueOutput!.write((Base16.decodeDigit(c1) << 4) | Base16.decodeDigit(c));\n          c1 = 0;\n          step = 4;\n          continue;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      break;\n    } while (true);\n    return new UriQueryParser(uri, builder, keyOutput, valueOutput, c1, step);\n  }\n}\nUriParser.QueryParser = UriQueryParser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Input, Output, Parser, Diagnostic, Base16, Utf8} from \"@swim/codec\";\nimport {Uri} from \"./Uri\";\nimport {UriFragment} from \"./UriFragment\";\nimport {UriParser} from \"./UriParser\";\n\n/** @hidden */\nexport class UriFragmentParser extends Parser<UriFragment> {\n  private readonly uri: UriParser;\n  private readonly output: Output<string> | undefined;\n  private readonly c1: number | undefined;\n  private readonly step: number | undefined;\n\n  constructor(uri: UriParser, output?: Output<string>, c1?: number, step?: number) {\n    super();\n    this.uri = uri;\n    this.output = output;\n    this.c1 = c1;\n    this.step = step;\n  }\n\n  feed(input: Input): Parser<UriFragment> {\n    return UriFragmentParser.parse(input, this.uri, this.output, this.c1, this.step);\n  }\n\n  static parse(input: Input, uri: UriParser, output?: Output<string>,\n               c1: number = 0, step: number = 1): Parser<UriFragment> {\n    let c = 0;\n    output = output || Utf8.decodedString();\n    do {\n      if (step === 1) {\n        while (input.isCont() && (c = input.head(), Uri.isFragmentChar(c))) {\n          input = input.step();\n          output = output.write(c);\n        }\n        if (input.isCont() && c === 37/*'%'*/) {\n          input = input.step();\n          step = 2;\n        } else if (!input.isEmpty()) {\n          return Parser.done(uri.fragment(output.bind()));\n        }\n      }\n      if (step === 2) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          c1 = c;\n          step = 3;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      if (step === 3) {\n        if (input.isCont() && (c = input.head(), Base16.isDigit(c))) {\n          input = input.step();\n          output = output.write((Base16.decodeDigit(c1) << 4) | Base16.decodeDigit(c));\n          c1 = 0;\n          step = 1;\n          continue;\n        } else if (!input.isEmpty()) {\n          return Parser.error(Diagnostic.expected(\"hex digit\", input));\n        }\n      }\n      break;\n    } while (true);\n    return new UriFragmentParser(uri, output, c1, step);\n  }\n}\nUriParser.FragmentParser = UriFragmentParser;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Item, Text, Form} from \"@swim/structure\";\nimport {Uri} from \"./Uri\";\n\n/** @hidden */\nexport class UriForm extends Form<Uri> {\n  /** @hidden */\n  readonly _unit: Uri | undefined;\n\n  constructor(unit?: Uri ) {\n    super();\n    this._unit = unit;\n  }\n\n  unit(): Uri | undefined;\n  unit(unit: Uri | undefined): Form<Uri>;\n  unit(unit?: Uri | undefined): Uri | undefined | Form<Uri> {\n    if (arguments.length === 0) {\n      return this._unit;\n    } else {\n      return new UriForm(unit);\n    }\n  }\n\n  mold(object: Uri, item?: Item): Item {\n    if (item === void 0) {\n      return Text.from(object.toString());\n    } else {\n      return item.concat(Text.from(object.toString()));\n    }\n  }\n\n  cast(item: Item, object?: Uri): Uri | undefined {\n    const value = item.target();\n    try {\n      const string = value.stringValue();\n      if (typeof string === \"string\") {\n        return Uri.parse(string);\n      }\n    } catch (error) {\n      // swallow\n    }\n    return void 0;\n  }\n}\nUri.Form = UriForm;\n","// Copyright 2015-2020 SWIM.AI inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HashGenCacheMap} from \"@swim/util\";\nimport {AnyUri, Uri} from \"./Uri\";\n\nexport class UriCache {\n  /** @hidden */\n  _base: Uri;\n  /** @hidden */\n  _resolveCache: HashGenCacheMap<Uri, Uri>;\n  /** @hidden */\n  _unresolveCache: HashGenCacheMap<Uri, Uri>;\n\n  constructor(base: Uri, size: number = 32) {\n    this._base = base;\n    this._resolveCache = new HashGenCacheMap(size);\n    this._unresolveCache = new HashGenCacheMap(size);\n  }\n\n  resolve(relative: AnyUri): Uri {\n    relative = Uri.fromAny(relative);\n    let absolute = this._resolveCache.get(relative);\n    if (absolute === undefined) {\n      absolute = this._base.resolve(relative);\n      this._resolveCache.put(relative, absolute);\n    }\n    return absolute;\n  }\n\n  unresolve(absolute: AnyUri): Uri {\n    absolute = Uri.fromAny(absolute);\n    let relative = this._unresolveCache.get(absolute);\n    if (relative === undefined) {\n      relative = this._base.unresolve(absolute);\n      this._unresolveCache.put(absolute, relative);\n    }\n    return relative;\n  }\n}\n"],"names":["Diagnostic","Murmur3","Format","Base16","HashGenCacheMap","HashGenCacheSet","Unicode","Parser","Utf8","Base10","Text","Form"],"mappings":"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"}