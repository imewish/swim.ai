import { Input, Output, Parser } from "@swim/codec";
import { UriQuery } from "./UriQuery";
import { UriQueryBuilder } from "./UriQueryBuilder";
import { UriParser } from "./UriParser";
export declare class UriQueryParser extends Parser<UriQuery> {
    private readonly uri;
    private readonly builder;
    private readonly keyOutput;
    private readonly valueOutput;
    private readonly c1;
    private readonly step;
    constructor(uri: UriParser, builder?: UriQueryBuilder, keyOutput?: Output<string>, valueOutput?: Output<string>, c1?: number, step?: number);
    feed(input: Input): Parser<UriQuery>;
    static parse(input: Input, uri: UriParser, builder?: UriQueryBuilder, keyOutput?: Output<string>, valueOutput?: Output<string>, c1?: number, step?: number): Parser<UriQuery>;
}
//# sourceMappingURL=UriQueryParser.d.ts.map