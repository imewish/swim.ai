import { Input, Parser } from "@swim/codec";
import { Uri } from "./Uri";
import { UriScheme } from "./UriScheme";
import { UriAuthority } from "./UriAuthority";
import { UriPath } from "./UriPath";
import { UriQuery } from "./UriQuery";
import { UriFragment } from "./UriFragment";
import { UriParser } from "./UriParser";
export declare class UriAbsoluteParser extends Parser<Uri> {
    private readonly uri;
    private readonly schemeParser;
    private readonly authorityParser;
    private readonly pathParser;
    private readonly queryParser;
    private readonly fragmentParser;
    private readonly step;
    constructor(uri: UriParser, schemeParser?: Parser<UriScheme>, authorityParser?: Parser<UriAuthority>, pathParser?: Parser<UriPath>, queryParser?: Parser<UriQuery>, fragmentParser?: Parser<UriFragment>, step?: number);
    feed(input: Input): Parser<Uri>;
    static parse(input: Input, uri: UriParser, schemeParser?: Parser<UriScheme>, authorityParser?: Parser<UriAuthority>, pathParser?: Parser<UriPath>, queryParser?: Parser<UriQuery>, fragmentParser?: Parser<UriFragment>, step?: number): Parser<Uri>;
}
//# sourceMappingURL=UriAbsoluteParser.d.ts.map