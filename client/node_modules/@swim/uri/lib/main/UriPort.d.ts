import { Comparable, HashCode, HashGenCacheMap } from "@swim/util";
import { Output, Debug, Display } from "@swim/codec";
export declare type AnyUriPort = UriPort | number | string;
export declare class UriPort implements Comparable<UriPort>, HashCode, Debug, Display {
    readonly _number: number;
    constructor(num: number);
    isDefined(): boolean;
    number(): number;
    valueOf(): number;
    toAny(): number;
    compareTo(that: UriPort): 0 | 1 | -1;
    equals(that: unknown): boolean;
    hashCode(): number;
    debug(output: Output): void;
    display(output: Output): void;
    toString(): string;
    private static _hashSeed?;
    private static _undefined?;
    private static _cache?;
    static undefined(): UriPort;
    static from(number: number): UriPort;
    static fromAny(port: AnyUriPort | null | undefined): UriPort;
    static parse(string: string): UriPort;
    static cache(): HashGenCacheMap<number, UriPort>;
}
//# sourceMappingURL=UriPort.d.ts.map