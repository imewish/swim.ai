import { __extends } from "tslib";
import { Uri } from "./Uri";
import { UriQuery } from "./UriQuery";
var UriQueryUndefined = (function (_super) {
    __extends(UriQueryUndefined, _super);
    function UriQueryUndefined() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UriQueryUndefined.prototype.isDefined = function () {
        return false;
    };
    UriQueryUndefined.prototype.isEmpty = function () {
        return true;
    };
    UriQueryUndefined.prototype.head = function () {
        throw new Error("Undefined Query");
    };
    UriQueryUndefined.prototype.key = function () {
        throw new Error("Undefined Query");
    };
    UriQueryUndefined.prototype.value = function () {
        throw new Error("Undefined Query");
    };
    UriQueryUndefined.prototype.tail = function () {
        throw new Error("Undefined Query");
    };
    UriQueryUndefined.prototype.setTail = function (tail) {
        throw new Error("Undefined Query");
    };
    UriQueryUndefined.prototype.dealias = function () {
        return this;
    };
    UriQueryUndefined.prototype.updated = function (key, value) {
        return UriQuery.param(key, value, this);
    };
    UriQueryUndefined.prototype.removed = function (key) {
        return this;
    };
    UriQueryUndefined.prototype.appended = function (key, value) {
        return UriQuery.from(key, value);
    };
    UriQueryUndefined.prototype.prepended = function (key, value) {
        return UriQuery.from(key, value);
    };
    UriQueryUndefined.prototype.debug = function (output) {
        output = output.write("UriQuery").write(46).write("undefined")
            .write(40).write(41);
    };
    UriQueryUndefined.prototype.display = function (output) {
    };
    UriQueryUndefined.prototype.toString = function () {
        return "";
    };
    return UriQueryUndefined;
}(UriQuery));
export { UriQueryUndefined };
Uri.QueryUndefined = UriQueryUndefined;
//# sourceMappingURL=UriQueryUndefined.js.map