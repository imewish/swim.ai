import { __extends } from "tslib";
import { Parser, Base10 } from "@swim/codec";
import { UriParser } from "./UriParser";
var UriPortParser = (function (_super) {
    __extends(UriPortParser, _super);
    function UriPortParser(uri, number) {
        var _this = _super.call(this) || this;
        _this.uri = uri;
        _this.number = number;
        return _this;
    }
    UriPortParser.prototype.feed = function (input) {
        return UriPortParser.parse(input, this.uri, this.number);
    };
    UriPortParser.parse = function (input, uri, number) {
        if (number === void 0) { number = 0; }
        var c = 0;
        while (input.isCont() && (c = input.head(), Base10.isDigit(c))) {
            input = input.step();
            number = 10 * number + Base10.decodeDigit(c);
        }
        if (!input.isEmpty()) {
            return Parser.done(uri.port(number));
        }
        return new UriPortParser(uri, number);
    };
    return UriPortParser;
}(Parser));
export { UriPortParser };
UriParser.PortParser = UriPortParser;
//# sourceMappingURL=UriPortParser.js.map