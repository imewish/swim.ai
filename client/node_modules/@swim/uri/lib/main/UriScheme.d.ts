import { Comparable, HashCode, HashGenCacheMap } from "@swim/util";
import { Output, Debug, Display } from "@swim/codec";
export declare type AnyUriScheme = UriScheme | string;
export declare class UriScheme implements Comparable<UriScheme>, HashCode, Debug, Display {
    readonly _name: string;
    constructor(name: string);
    isDefined(): boolean;
    name(): string;
    toAny(): string | undefined;
    compareTo(that: UriScheme): 0 | 1 | -1;
    equals(that: unknown): boolean;
    hashCode(): number;
    debug(output: Output): void;
    display(output: Output): void;
    toString(): string;
    private static _undefined?;
    private static _cache?;
    static undefined(): UriScheme;
    static from(name: string): UriScheme;
    static fromAny(scheme: AnyUriScheme | null | undefined): UriScheme;
    static parse(string: string): UriScheme;
    static cache(): HashGenCacheMap<string, UriScheme>;
}
//# sourceMappingURL=UriScheme.d.ts.map