import { HashCode } from "@swim/util";
import { Output, Debug, Display } from "@swim/codec";
export declare type AnyUriUser = UriUser | UriUserInit | string;
export interface UriUserInit {
    username?: string;
    password?: string | null;
}
export declare class UriUser implements HashCode, Debug, Display {
    readonly _username: string | null;
    readonly _password: string | null;
    constructor(username: string | null, password: string | null);
    isDefined(): boolean;
    username(): string;
    username(username: string): UriUser;
    password(): string | null;
    password(password: string | null): UriUser;
    protected copy(username: string | null, password: string | null): UriUser;
    toAny(user?: {
        username?: string;
        password?: string;
    }): {
        username?: string;
        password?: string;
    } | undefined;
    equals(that: unknown): boolean;
    hashCode(): number;
    debug(output: Output): void;
    display(output: Output): void;
    toString(): string;
    private static _hashSeed?;
    private static _undefined?;
    static undefined(): UriUser;
    static from(username: string | null, password?: string | null): UriUser;
    static fromAny(user: AnyUriUser | null | undefined): UriUser;
    static parse(string: string): UriUser;
}
//# sourceMappingURL=UriUser.d.ts.map