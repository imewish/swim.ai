import { __extends } from "tslib";
import { Parser } from "@swim/codec";
import { UriParser } from "./UriParser";
var UriHostParser = (function (_super) {
    __extends(UriHostParser, _super);
    function UriHostParser(uri) {
        var _this = _super.call(this) || this;
        _this.uri = uri;
        return _this;
    }
    UriHostParser.prototype.feed = function (input) {
        return UriHostParser.parse(input, this.uri);
    };
    UriHostParser.parse = function (input, uri) {
        if (input.isCont()) {
            var c = input.head();
            if (c === 91) {
                return uri.parseHostLiteral(input);
            }
            else {
                return uri.parseHostAddress(input);
            }
        }
        else if (input.isDone()) {
            return Parser.done(uri.hostName(""));
        }
        return new UriHostParser(uri);
    };
    return UriHostParser;
}(Parser));
export { UriHostParser };
UriParser.HostParser = UriHostParser;
//# sourceMappingURL=UriHostParser.js.map