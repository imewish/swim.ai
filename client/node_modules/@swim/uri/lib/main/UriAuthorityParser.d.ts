import { Input, Parser } from "@swim/codec";
import { UriAuthority } from "./UriAuthority";
import { UriUser } from "./UriUser";
import { UriHost } from "./UriHost";
import { UriPort } from "./UriPort";
import { UriParser } from "./UriParser";
export declare class UriAuthorityParser extends Parser<UriAuthority> {
    private readonly uri;
    private readonly userParser;
    private readonly hostParser;
    private readonly portParser;
    private readonly step;
    constructor(uri: UriParser, userParser?: Parser<UriUser>, hostParser?: Parser<UriHost>, portParser?: Parser<UriPort>, step?: number);
    feed(input: Input): Parser<UriAuthority>;
    static parse(input: Input, uri: UriParser, userParser?: Parser<UriUser>, hostParser?: Parser<UriHost>, portParser?: Parser<UriPort>, step?: number): Parser<UriAuthority>;
}
//# sourceMappingURL=UriAuthorityParser.d.ts.map