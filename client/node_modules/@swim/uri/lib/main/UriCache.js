import { HashGenCacheMap } from "@swim/util";
import { Uri } from "./Uri";
var UriCache = (function () {
    function UriCache(base, size) {
        if (size === void 0) { size = 32; }
        this._base = base;
        this._resolveCache = new HashGenCacheMap(size);
        this._unresolveCache = new HashGenCacheMap(size);
    }
    UriCache.prototype.resolve = function (relative) {
        relative = Uri.fromAny(relative);
        var absolute = this._resolveCache.get(relative);
        if (absolute === undefined) {
            absolute = this._base.resolve(relative);
            this._resolveCache.put(relative, absolute);
        }
        return absolute;
    };
    UriCache.prototype.unresolve = function (absolute) {
        absolute = Uri.fromAny(absolute);
        var relative = this._unresolveCache.get(absolute);
        if (relative === undefined) {
            relative = this._base.unresolve(absolute);
            this._unresolveCache.put(absolute, relative);
        }
        return relative;
    };
    return UriCache;
}());
export { UriCache };
//# sourceMappingURL=UriCache.js.map