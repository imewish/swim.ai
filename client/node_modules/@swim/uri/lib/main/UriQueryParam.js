import { __extends } from "tslib";
import { Format } from "@swim/codec";
import { Uri } from "./Uri";
import { UriQuery } from "./UriQuery";
var UriQueryParam = (function (_super) {
    __extends(UriQueryParam, _super);
    function UriQueryParam(key, value, tail) {
        var _this = _super.call(this) || this;
        _this._key = key;
        _this._value = value;
        _this._tail = tail;
        return _this;
    }
    UriQueryParam.prototype.isDefined = function () {
        return true;
    };
    UriQueryParam.prototype.isEmpty = function () {
        return false;
    };
    UriQueryParam.prototype.head = function () {
        return [this._key, this._value];
    };
    UriQueryParam.prototype.key = function () {
        return this._key;
    };
    UriQueryParam.prototype.value = function () {
        return this._value;
    };
    UriQueryParam.prototype.tail = function () {
        return this._tail;
    };
    UriQueryParam.prototype.setTail = function (tail) {
        this._tail = tail;
    };
    UriQueryParam.prototype.dealias = function () {
        return new UriQueryParam(this._key, this._value, this._tail);
    };
    UriQueryParam.prototype.debug = function (output) {
        output = output.write("UriQuery").write(46).write("parse")
            .write(40).write(34).display(this).write(34).write(41);
    };
    UriQueryParam.prototype.display = function (output) {
        if (this._string !== void 0) {
            output = output.write(this._string);
        }
        else {
            _super.prototype.display.call(this, output);
        }
    };
    UriQueryParam.prototype.toString = function () {
        if (this._string === void 0) {
            this._string = Format.display(this);
        }
        return this._string;
    };
    return UriQueryParam;
}(UriQuery));
export { UriQueryParam };
Uri.QueryParam = UriQueryParam;
//# sourceMappingURL=UriQueryParam.js.map