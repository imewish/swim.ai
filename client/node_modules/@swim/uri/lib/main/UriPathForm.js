import { __extends } from "tslib";
import { Text, Form } from "@swim/structure";
import { Uri } from "./Uri";
var UriPathForm = (function (_super) {
    __extends(UriPathForm, _super);
    function UriPathForm(unit) {
        var _this = _super.call(this) || this;
        _this._unit = unit;
        return _this;
    }
    UriPathForm.prototype.unit = function (unit) {
        if (arguments.length === 0) {
            return this._unit;
        }
        else {
            return new UriPathForm(unit);
        }
    };
    UriPathForm.prototype.mold = function (object, item) {
        if (item === void 0) {
            return Text.from(object.toString());
        }
        else {
            return item.concat(Text.from(object.toString()));
        }
    };
    UriPathForm.prototype.cast = function (item, object) {
        var value = item.target();
        try {
            var string = value.stringValue();
            if (typeof string === "string") {
                return Uri.Path.parse(string);
            }
        }
        catch (error) {
        }
        return void 0;
    };
    return UriPathForm;
}(Form));
export { UriPathForm };
Uri.PathForm = UriPathForm;
//# sourceMappingURL=UriPathForm.js.map